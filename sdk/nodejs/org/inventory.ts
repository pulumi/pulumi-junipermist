// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This resource manages the Org Inventory.
 *
 * It can be used to claim, unclaim, assign, unassign, reassign devices.
 *
 * ->Removing a device from the `devices` list or `inventory` map will NOT release it unless `unclaimWhenDestroyed` is set to `true`
 *
 * !> The `devices` attribute (List) is deprecated and is replaced by the `inventory` attribute (Map) as it can generate "inconsistent result after apply" errors. If this happens, it is required to force a refresh of the state to synchronise the new list.\
 * The `devices` attribute will generate inconsistent result after apply when a device other than the last one is removed from the list or when a device is added somewhere other than the end of the list
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as junipermist from "@pulumi/juniper-mist";
 *
 * const inventory = new junipermist.org.Inventory("inventory", {
 *     orgId: terraformTest.id,
 *     inventory: {
 *         CPKL2EXXXXXXXXX: {},
 *         G87JHBFXXXXXXXX: {
 *             siteId: terraformSite.id,
 *             unclaimWhenDestroyed: true,
 *         },
 *         "2c2131000000": {
 *             siteId: terraformSite.id,
 *             unclaimWhenDestroyed: true,
 *         },
 *         "2c2131000001": {
 *             unclaimWhenDestroyed: false,
 *         },
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * Using `pulumi import`, import `mist_org_inventory` with:
 *
 * Org Inventory can be imported by specifying the org_id
 *
 * ```sh
 * $ pulumi import junipermist:org/inventory:Inventory inventory_one 17b46405-3a6d-4715-8bb4-6bb6d06f316a
 * ```
 */
export class Inventory extends pulumi.CustomResource {
    /**
     * Get an existing Inventory resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: InventoryState, opts?: pulumi.CustomResourceOptions): Inventory {
        return new Inventory(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'junipermist:org/inventory:Inventory';

    /**
     * Returns true if the given object is an instance of Inventory.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Inventory {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Inventory.__pulumiType;
    }

    /**
     * Property key can be the device Claim Code or the device MAC Address:
     *   * Claim Code: used to claim the device to the Mist Organization and manage it. Format is `[0-9A-Z]{15}` (e.g `01234ABCDE56789`)
     *   * MAC Address: used to manage a device already in the Mist Organization (claimed or adopted devices). Format is `[0-9a-f]{12}` (e.g `5684dae9ac8b`)
     *
     *     >
     */
    declare public readonly inventory: pulumi.Output<{[key: string]: outputs.org.InventoryInventory}>;
    declare public readonly orgId: pulumi.Output<string>;

    /**
     * Create a Inventory resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: InventoryArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: InventoryArgs | InventoryState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as InventoryState | undefined;
            resourceInputs["inventory"] = state?.inventory;
            resourceInputs["orgId"] = state?.orgId;
        } else {
            const args = argsOrState as InventoryArgs | undefined;
            if (args?.orgId === undefined && !opts.urn) {
                throw new Error("Missing required property 'orgId'");
            }
            resourceInputs["inventory"] = args?.inventory;
            resourceInputs["orgId"] = args?.orgId;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Inventory.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Inventory resources.
 */
export interface InventoryState {
    /**
     * Property key can be the device Claim Code or the device MAC Address:
     *   * Claim Code: used to claim the device to the Mist Organization and manage it. Format is `[0-9A-Z]{15}` (e.g `01234ABCDE56789`)
     *   * MAC Address: used to manage a device already in the Mist Organization (claimed or adopted devices). Format is `[0-9a-f]{12}` (e.g `5684dae9ac8b`)
     *
     *     >
     */
    inventory?: pulumi.Input<{[key: string]: pulumi.Input<inputs.org.InventoryInventory>}>;
    orgId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Inventory resource.
 */
export interface InventoryArgs {
    /**
     * Property key can be the device Claim Code or the device MAC Address:
     *   * Claim Code: used to claim the device to the Mist Organization and manage it. Format is `[0-9A-Z]{15}` (e.g `01234ABCDE56789`)
     *   * MAC Address: used to manage a device already in the Mist Organization (claimed or adopted devices). Format is `[0-9a-f]{12}` (e.g `5684dae9ac8b`)
     *
     *     >
     */
    inventory?: pulumi.Input<{[key: string]: pulumi.Input<inputs.org.InventoryInventory>}>;
    orgId: pulumi.Input<string>;
}
