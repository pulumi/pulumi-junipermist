// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * This resource manages the NAC Endpoints (User MACs).
 *
 * NAC Endpoints (User MACs) provide a database of endpoints identified by their MAC addresses. They can be used assign each endpoint with various attributes, such as name, VLAN, role and client label.  Once an endpoint is labeled, the label name can be used to create `junipermist.org.Nactag` resource as match criteria.
 *
 * The `junipermist.org.Nactag` resource can be used to create Tags regrouping one or multiple endpoint MAC Addresses, but the use of the User MACs provides additional features:
 * * possibility to assign specific attributes, like a Name, a Radius Group, a VLAN ID, ...
 * * possibility to assign one or multiple Tags (Labels) to a User MAC
 * * improved management for large list of MAC Addresses
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as junipermist from "@pulumi/juniper-mist";
 *
 * const endpointOne = new junipermist.org.NacEndpoint("endpoint_one", {
 *     mac: "921b638445cd",
 *     labels: [
 *         "byod",
 *         "flr1",
 *     ],
 *     vlan: "30",
 *     notes: "mac address refers to Canon printers",
 *     name: "endpoint_one",
 *     radiusGroup: "VIP",
 * });
 * ```
 *
 * ## Import
 *
 * Using `pulumi import`, import `mist_org_nac_endpoint` with:
 *
 * NAC Endpoint can be imported by specifying the org_id and the nac_endpoint_id
 *
 * ```sh
 * $ pulumi import junipermist:org/nacEndpoint:NacEndpoint endpoint_one 17b46405-3a6d-4715-8bb4-6bb6d06f316a.d3c42998-9012-4859-9743-6b9bee475309
 * ```
 */
export class NacEndpoint extends pulumi.CustomResource {
    /**
     * Get an existing NacEndpoint resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: NacEndpointState, opts?: pulumi.CustomResourceOptions): NacEndpoint {
        return new NacEndpoint(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'junipermist:org/nacEndpoint:NacEndpoint';

    /**
     * Returns true if the given object is an instance of NacEndpoint.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is NacEndpoint {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === NacEndpoint.__pulumiType;
    }

    public readonly labels!: pulumi.Output<string[]>;
    /**
     * Only non-local-admin MAC is accepted
     */
    public readonly mac!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    public readonly notes!: pulumi.Output<string>;
    public readonly orgId!: pulumi.Output<string>;
    public readonly radiusGroup!: pulumi.Output<string>;
    public readonly vlan!: pulumi.Output<string>;

    /**
     * Create a NacEndpoint resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: NacEndpointArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: NacEndpointArgs | NacEndpointState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as NacEndpointState | undefined;
            resourceInputs["labels"] = state ? state.labels : undefined;
            resourceInputs["mac"] = state ? state.mac : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["notes"] = state ? state.notes : undefined;
            resourceInputs["orgId"] = state ? state.orgId : undefined;
            resourceInputs["radiusGroup"] = state ? state.radiusGroup : undefined;
            resourceInputs["vlan"] = state ? state.vlan : undefined;
        } else {
            const args = argsOrState as NacEndpointArgs | undefined;
            if ((!args || args.mac === undefined) && !opts.urn) {
                throw new Error("Missing required property 'mac'");
            }
            if ((!args || args.orgId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'orgId'");
            }
            resourceInputs["labels"] = args ? args.labels : undefined;
            resourceInputs["mac"] = args ? args.mac : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["notes"] = args ? args.notes : undefined;
            resourceInputs["orgId"] = args ? args.orgId : undefined;
            resourceInputs["radiusGroup"] = args ? args.radiusGroup : undefined;
            resourceInputs["vlan"] = args ? args.vlan : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(NacEndpoint.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering NacEndpoint resources.
 */
export interface NacEndpointState {
    labels?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Only non-local-admin MAC is accepted
     */
    mac?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    notes?: pulumi.Input<string>;
    orgId?: pulumi.Input<string>;
    radiusGroup?: pulumi.Input<string>;
    vlan?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a NacEndpoint resource.
 */
export interface NacEndpointArgs {
    labels?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Only non-local-admin MAC is accepted
     */
    mac: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    notes?: pulumi.Input<string>;
    orgId: pulumi.Input<string>;
    radiusGroup?: pulumi.Input<string>;
    vlan?: pulumi.Input<string>;
}
