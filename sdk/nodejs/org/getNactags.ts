// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of NAC Tags (Auth Policy Labels).
 *
 * The NAC Tags can be used in the NAC Rules to define the matching criteria or the returned RADIUS Attributes
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as junipermist from "@pulumi/junipermist";
 *
 * const nactags = junipermist.org.getNactags({
 *     orgId: "15fca2ac-b1a6-47cc-9953-cc6906281550",
 *     type: "match",
 *     match: "cert_issuer",
 * });
 * ```
 */
export function getNactags(args: GetNactagsArgs, opts?: pulumi.InvokeOptions): Promise<GetNactagsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("junipermist:org/getNactags:getNactags", {
        "match": args.match,
        "name": args.name,
        "orgId": args.orgId,
        "type": args.type,
    }, opts);
}

/**
 * A collection of arguments for invoking getNactags.
 */
export interface GetNactagsArgs {
    match?: string;
    name?: string;
    orgId: string;
    type?: string;
}

/**
 * A collection of values returned by getNactags.
 */
export interface GetNactagsResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly match?: string;
    readonly name?: string;
    readonly orgId: string;
    readonly orgNactags: outputs.org.GetNactagsOrgNactag[];
    readonly type?: string;
}
/**
 * This data source provides the list of NAC Tags (Auth Policy Labels).
 *
 * The NAC Tags can be used in the NAC Rules to define the matching criteria or the returned RADIUS Attributes
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as junipermist from "@pulumi/junipermist";
 *
 * const nactags = junipermist.org.getNactags({
 *     orgId: "15fca2ac-b1a6-47cc-9953-cc6906281550",
 *     type: "match",
 *     match: "cert_issuer",
 * });
 * ```
 */
export function getNactagsOutput(args: GetNactagsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetNactagsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("junipermist:org/getNactags:getNactags", {
        "match": args.match,
        "name": args.name,
        "orgId": args.orgId,
        "type": args.type,
    }, opts);
}

/**
 * A collection of arguments for invoking getNactags.
 */
export interface GetNactagsOutputArgs {
    match?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    orgId: pulumi.Input<string>;
    type?: pulumi.Input<string>;
}
