// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { ApArgs, ApState } from "./ap";
export type Ap = import("./ap").Ap;
export const Ap: typeof import("./ap").Ap = null as any;
utilities.lazyLoad(exports, ["Ap"], () => require("./ap"));

export { BaseArgs, BaseState } from "./base";
export type Base = import("./base").Base;
export const Base: typeof import("./base").Base = null as any;
utilities.lazyLoad(exports, ["Base"], () => require("./base"));

export { GatewayArgs, GatewayState } from "./gateway";
export type Gateway = import("./gateway").Gateway;
export const Gateway: typeof import("./gateway").Gateway = null as any;
utilities.lazyLoad(exports, ["Gateway"], () => require("./gateway"));

export { GatewayClusterArgs, GatewayClusterState } from "./gatewayCluster";
export type GatewayCluster = import("./gatewayCluster").GatewayCluster;
export const GatewayCluster: typeof import("./gatewayCluster").GatewayCluster = null as any;
utilities.lazyLoad(exports, ["GatewayCluster"], () => require("./gatewayCluster"));

export { GetApStatsArgs, GetApStatsResult, GetApStatsOutputArgs } from "./getApStats";
export const getApStats: typeof import("./getApStats").getApStats = null as any;
export const getApStatsOutput: typeof import("./getApStats").getApStatsOutput = null as any;
utilities.lazyLoad(exports, ["getApStats","getApStatsOutput"], () => require("./getApStats"));

export { GetGatewayStatsArgs, GetGatewayStatsResult, GetGatewayStatsOutputArgs } from "./getGatewayStats";
export const getGatewayStats: typeof import("./getGatewayStats").getGatewayStats = null as any;
export const getGatewayStatsOutput: typeof import("./getGatewayStats").getGatewayStatsOutput = null as any;
utilities.lazyLoad(exports, ["getGatewayStats","getGatewayStatsOutput"], () => require("./getGatewayStats"));

export { GetSwitchStatsArgs, GetSwitchStatsResult, GetSwitchStatsOutputArgs } from "./getSwitchStats";
export const getSwitchStats: typeof import("./getSwitchStats").getSwitchStats = null as any;
export const getSwitchStatsOutput: typeof import("./getSwitchStats").getSwitchStatsOutput = null as any;
utilities.lazyLoad(exports, ["getSwitchStats","getSwitchStatsOutput"], () => require("./getSwitchStats"));

export { GetVersionsArgs, GetVersionsResult, GetVersionsOutputArgs } from "./getVersions";
export const getVersions: typeof import("./getVersions").getVersions = null as any;
export const getVersionsOutput: typeof import("./getVersions").getVersionsOutput = null as any;
utilities.lazyLoad(exports, ["getVersions","getVersionsOutput"], () => require("./getVersions"));

export { ImageArgs, ImageState } from "./image";
export type Image = import("./image").Image;
export const Image: typeof import("./image").Image = null as any;
utilities.lazyLoad(exports, ["Image"], () => require("./image"));

export { SwitchArgs, SwitchState } from "./switch";
export type Switch = import("./switch").Switch;
export const Switch: typeof import("./switch").Switch = null as any;
utilities.lazyLoad(exports, ["Switch"], () => require("./switch"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "junipermist:device/ap:Ap":
                return new Ap(name, <any>undefined, { urn })
            case "junipermist:device/base:base":
                return new Base(name, <any>undefined, { urn })
            case "junipermist:device/gateway:Gateway":
                return new Gateway(name, <any>undefined, { urn })
            case "junipermist:device/gatewayCluster:GatewayCluster":
                return new GatewayCluster(name, <any>undefined, { urn })
            case "junipermist:device/image:Image":
                return new Image(name, <any>undefined, { urn })
            case "junipermist:device/switch:Switch":
                return new Switch(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("junipermist", "device/ap", _module)
pulumi.runtime.registerResourceModule("junipermist", "device/base", _module)
pulumi.runtime.registerResourceModule("junipermist", "device/gateway", _module)
pulumi.runtime.registerResourceModule("junipermist", "device/gatewayCluster", _module)
pulumi.runtime.registerResourceModule("junipermist", "device/image", _module)
pulumi.runtime.registerResourceModule("junipermist", "device/switch", _module)
