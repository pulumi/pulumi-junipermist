// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

// Export members:
export { GetConstAlarmsResult } from "./getConstAlarms";
export const getConstAlarms: typeof import("./getConstAlarms").getConstAlarms = null as any;
export const getConstAlarmsOutput: typeof import("./getConstAlarms").getConstAlarmsOutput = null as any;
utilities.lazyLoad(exports, ["getConstAlarms","getConstAlarmsOutput"], () => require("./getConstAlarms"));

export { GetConstAppCategoriesResult } from "./getConstAppCategories";
export const getConstAppCategories: typeof import("./getConstAppCategories").getConstAppCategories = null as any;
export const getConstAppCategoriesOutput: typeof import("./getConstAppCategories").getConstAppCategoriesOutput = null as any;
utilities.lazyLoad(exports, ["getConstAppCategories","getConstAppCategoriesOutput"], () => require("./getConstAppCategories"));

export { GetConstAppSubCategoriesResult } from "./getConstAppSubCategories";
export const getConstAppSubCategories: typeof import("./getConstAppSubCategories").getConstAppSubCategories = null as any;
export const getConstAppSubCategoriesOutput: typeof import("./getConstAppSubCategories").getConstAppSubCategoriesOutput = null as any;
utilities.lazyLoad(exports, ["getConstAppSubCategories","getConstAppSubCategoriesOutput"], () => require("./getConstAppSubCategories"));

export { GetConstApplicationsResult } from "./getConstApplications";
export const getConstApplications: typeof import("./getConstApplications").getConstApplications = null as any;
export const getConstApplicationsOutput: typeof import("./getConstApplications").getConstApplicationsOutput = null as any;
utilities.lazyLoad(exports, ["getConstApplications","getConstApplicationsOutput"], () => require("./getConstApplications"));

export { GetConstCountriesResult } from "./getConstCountries";
export const getConstCountries: typeof import("./getConstCountries").getConstCountries = null as any;
export const getConstCountriesOutput: typeof import("./getConstCountries").getConstCountriesOutput = null as any;
utilities.lazyLoad(exports, ["getConstCountries","getConstCountriesOutput"], () => require("./getConstCountries"));

export { GetConstTrafficTypesResult } from "./getConstTrafficTypes";
export const getConstTrafficTypes: typeof import("./getConstTrafficTypes").getConstTrafficTypes = null as any;
export const getConstTrafficTypesOutput: typeof import("./getConstTrafficTypes").getConstTrafficTypesOutput = null as any;
utilities.lazyLoad(exports, ["getConstTrafficTypes","getConstTrafficTypesOutput"], () => require("./getConstTrafficTypes"));

export { GetConstWebhooksResult } from "./getConstWebhooks";
export const getConstWebhooks: typeof import("./getConstWebhooks").getConstWebhooks = null as any;
export const getConstWebhooksOutput: typeof import("./getConstWebhooks").getConstWebhooksOutput = null as any;
utilities.lazyLoad(exports, ["getConstWebhooks","getConstWebhooksOutput"], () => require("./getConstWebhooks"));

export { GetSitesArgs, GetSitesResult, GetSitesOutputArgs } from "./getSites";
export const getSites: typeof import("./getSites").getSites = null as any;
export const getSitesOutput: typeof import("./getSites").getSitesOutput = null as any;
utilities.lazyLoad(exports, ["getSites","getSitesOutput"], () => require("./getSites"));

export { ProviderArgs } from "./provider";
export type Provider = import("./provider").Provider;
export const Provider: typeof import("./provider").Provider = null as any;
utilities.lazyLoad(exports, ["Provider"], () => require("./provider"));

export { UpgradeDeviceArgs, UpgradeDeviceState } from "./upgradeDevice";
export type UpgradeDevice = import("./upgradeDevice").UpgradeDevice;
export const UpgradeDevice: typeof import("./upgradeDevice").UpgradeDevice = null as any;
utilities.lazyLoad(exports, ["UpgradeDevice"], () => require("./upgradeDevice"));


// Export sub-modules:
import * as config from "./config";
import * as device from "./device";
import * as org from "./org";
import * as site from "./site";
import * as types from "./types";

export {
    config,
    device,
    org,
    site,
    types,
};

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "junipermist:index/upgradeDevice:UpgradeDevice":
                return new UpgradeDevice(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("junipermist", "index/upgradeDevice", _module)
pulumi.runtime.registerResourcePackage("junipermist", {
    version: utilities.getVersion(),
    constructProvider: (name: string, type: string, urn: string): pulumi.ProviderResource => {
        if (type !== "pulumi:providers:junipermist") {
            throw new Error(`unknown provider type ${type}`);
        }
        return new Provider(name, <any>undefined, { urn });
    },
});
