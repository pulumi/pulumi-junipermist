// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

declare var exports: any;
const __config = new pulumi.Config("junipermist");

/**
 * Enable API request/response debugging. When enabled, request and response bodies, headers, and other sensitive data may be logged. Can also be set via the `MIST_API_DEBUG` environment variable. Default: `false`.
 */
export declare const apiDebug: boolean | undefined;
Object.defineProperty(exports, "apiDebug", {
    get() {
        return __config.getObject<boolean>("apiDebug");
    },
    enumerable: true,
});

/**
 * Timeout in seconds for API requests. Set to 0 for infinite timeout. Can also be set via the `MIST_API_TIMEOUT` environment variable. Default: `10` seconds.
 */
export declare const apiTimeout: number | undefined;
Object.defineProperty(exports, "apiTimeout", {
    get() {
        return __config.getObject<number>("apiTimeout");
    },
    enumerable: true,
});

/**
 * Mist API Token for authentication. Can also be set via the `MIST_APITOKEN` environment variable. This is the recommended authentication method.
 */
export declare const apitoken: string | undefined;
Object.defineProperty(exports, "apitoken", {
    get() {
        return __config.get("apitoken");
    },
    enumerable: true,
});

/**
 * URL of the Mist Cloud (e.g., `api.mist.com`). Can also be set via the `MIST_HOST` environment variable.
 */
export declare const host: string | undefined;
Object.defineProperty(exports, "host", {
    get() {
        return __config.get("host");
    },
    enumerable: true,
});

/**
 * Mist Account password for basic authentication. Can also be set via the `MIST_PASSWORD` environment variable. Requires `username` to be set.
 */
export declare const password: string | undefined;
Object.defineProperty(exports, "password", {
    get() {
        return __config.get("password");
    },
    enumerable: true,
});

/**
 * Proxy configuration for API requests. The value may be either a complete URL or `[username:password@]host[:port]` format. Supported schemes: `http`, `https`, and `socks5`. If no scheme is provided, `http` is assumed. Can also be set via the `MIST_PROXY` environment variable.
 */
export declare const proxy: string | undefined;
Object.defineProperty(exports, "proxy", {
    get() {
        return __config.get("proxy");
    },
    enumerable: true,
});

/**
 * Mist Account username for basic authentication. Can also be set via the `MIST_USERNAME` environment variable. Requires `password` to be set and 2FA to be disabled.
 */
export declare const username: string | undefined;
Object.defineProperty(exports, "username", {
    get() {
        return __config.get("username");
    },
    enumerable: true,
});

