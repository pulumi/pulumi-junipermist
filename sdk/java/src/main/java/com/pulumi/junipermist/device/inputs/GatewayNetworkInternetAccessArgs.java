// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.junipermist.device.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.junipermist.device.inputs.GatewayNetworkInternetAccessDestinationNatArgs;
import com.pulumi.junipermist.device.inputs.GatewayNetworkInternetAccessStaticNatArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GatewayNetworkInternetAccessArgs extends com.pulumi.resources.ResourceArgs {

    public static final GatewayNetworkInternetAccessArgs Empty = new GatewayNetworkInternetAccessArgs();

    @Import(name="createSimpleServicePolicy")
    private @Nullable Output<Boolean> createSimpleServicePolicy;

    public Optional<Output<Boolean>> createSimpleServicePolicy() {
        return Optional.ofNullable(this.createSimpleServicePolicy);
    }

    /**
     * Property key can be an External IP (i.e. &#34;63.16.0.3&#34;), an External IP:Port (i.e. &#34;63.16.0.3:443&#34;), an External Port (i.e. &#34;:443&#34;), an External CIDR (i.e. &#34;63.16.0.0/30&#34;), an External CIDR:Port (i.e. &#34;63.16.0.0/30:443&#34;) or a Variable (i.e. &#34;{{myvar}}&#34;). At least one of the `internalIp` or `port` must be defined
     * 
     */
    @Import(name="destinationNat")
    private @Nullable Output<Map<String,GatewayNetworkInternetAccessDestinationNatArgs>> destinationNat;

    /**
     * @return Property key can be an External IP (i.e. &#34;63.16.0.3&#34;), an External IP:Port (i.e. &#34;63.16.0.3:443&#34;), an External Port (i.e. &#34;:443&#34;), an External CIDR (i.e. &#34;63.16.0.0/30&#34;), an External CIDR:Port (i.e. &#34;63.16.0.0/30:443&#34;) or a Variable (i.e. &#34;{{myvar}}&#34;). At least one of the `internalIp` or `port` must be defined
     * 
     */
    public Optional<Output<Map<String,GatewayNetworkInternetAccessDestinationNatArgs>>> destinationNat() {
        return Optional.ofNullable(this.destinationNat);
    }

    @Import(name="enabled")
    private @Nullable Output<Boolean> enabled;

    public Optional<Output<Boolean>> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    /**
     * By default, all access is allowed, to only allow certain traffic, make `restricted`=`true` and define service_policies
     * 
     */
    @Import(name="restricted")
    private @Nullable Output<Boolean> restricted;

    /**
     * @return By default, all access is allowed, to only allow certain traffic, make `restricted`=`true` and define service_policies
     * 
     */
    public Optional<Output<Boolean>> restricted() {
        return Optional.ofNullable(this.restricted);
    }

    /**
     * Property key may be an External IP Address (i.e. &#34;63.16.0.3&#34;), a CIDR (i.e. &#34;63.16.0.12/20&#34;) or a Variable (i.e. &#34;{{myvar}}&#34;)
     * 
     */
    @Import(name="staticNat")
    private @Nullable Output<Map<String,GatewayNetworkInternetAccessStaticNatArgs>> staticNat;

    /**
     * @return Property key may be an External IP Address (i.e. &#34;63.16.0.3&#34;), a CIDR (i.e. &#34;63.16.0.12/20&#34;) or a Variable (i.e. &#34;{{myvar}}&#34;)
     * 
     */
    public Optional<Output<Map<String,GatewayNetworkInternetAccessStaticNatArgs>>> staticNat() {
        return Optional.ofNullable(this.staticNat);
    }

    private GatewayNetworkInternetAccessArgs() {}

    private GatewayNetworkInternetAccessArgs(GatewayNetworkInternetAccessArgs $) {
        this.createSimpleServicePolicy = $.createSimpleServicePolicy;
        this.destinationNat = $.destinationNat;
        this.enabled = $.enabled;
        this.restricted = $.restricted;
        this.staticNat = $.staticNat;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GatewayNetworkInternetAccessArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GatewayNetworkInternetAccessArgs $;

        public Builder() {
            $ = new GatewayNetworkInternetAccessArgs();
        }

        public Builder(GatewayNetworkInternetAccessArgs defaults) {
            $ = new GatewayNetworkInternetAccessArgs(Objects.requireNonNull(defaults));
        }

        public Builder createSimpleServicePolicy(@Nullable Output<Boolean> createSimpleServicePolicy) {
            $.createSimpleServicePolicy = createSimpleServicePolicy;
            return this;
        }

        public Builder createSimpleServicePolicy(Boolean createSimpleServicePolicy) {
            return createSimpleServicePolicy(Output.of(createSimpleServicePolicy));
        }

        /**
         * @param destinationNat Property key can be an External IP (i.e. &#34;63.16.0.3&#34;), an External IP:Port (i.e. &#34;63.16.0.3:443&#34;), an External Port (i.e. &#34;:443&#34;), an External CIDR (i.e. &#34;63.16.0.0/30&#34;), an External CIDR:Port (i.e. &#34;63.16.0.0/30:443&#34;) or a Variable (i.e. &#34;{{myvar}}&#34;). At least one of the `internalIp` or `port` must be defined
         * 
         * @return builder
         * 
         */
        public Builder destinationNat(@Nullable Output<Map<String,GatewayNetworkInternetAccessDestinationNatArgs>> destinationNat) {
            $.destinationNat = destinationNat;
            return this;
        }

        /**
         * @param destinationNat Property key can be an External IP (i.e. &#34;63.16.0.3&#34;), an External IP:Port (i.e. &#34;63.16.0.3:443&#34;), an External Port (i.e. &#34;:443&#34;), an External CIDR (i.e. &#34;63.16.0.0/30&#34;), an External CIDR:Port (i.e. &#34;63.16.0.0/30:443&#34;) or a Variable (i.e. &#34;{{myvar}}&#34;). At least one of the `internalIp` or `port` must be defined
         * 
         * @return builder
         * 
         */
        public Builder destinationNat(Map<String,GatewayNetworkInternetAccessDestinationNatArgs> destinationNat) {
            return destinationNat(Output.of(destinationNat));
        }

        public Builder enabled(@Nullable Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        /**
         * @param restricted By default, all access is allowed, to only allow certain traffic, make `restricted`=`true` and define service_policies
         * 
         * @return builder
         * 
         */
        public Builder restricted(@Nullable Output<Boolean> restricted) {
            $.restricted = restricted;
            return this;
        }

        /**
         * @param restricted By default, all access is allowed, to only allow certain traffic, make `restricted`=`true` and define service_policies
         * 
         * @return builder
         * 
         */
        public Builder restricted(Boolean restricted) {
            return restricted(Output.of(restricted));
        }

        /**
         * @param staticNat Property key may be an External IP Address (i.e. &#34;63.16.0.3&#34;), a CIDR (i.e. &#34;63.16.0.12/20&#34;) or a Variable (i.e. &#34;{{myvar}}&#34;)
         * 
         * @return builder
         * 
         */
        public Builder staticNat(@Nullable Output<Map<String,GatewayNetworkInternetAccessStaticNatArgs>> staticNat) {
            $.staticNat = staticNat;
            return this;
        }

        /**
         * @param staticNat Property key may be an External IP Address (i.e. &#34;63.16.0.3&#34;), a CIDR (i.e. &#34;63.16.0.12/20&#34;) or a Variable (i.e. &#34;{{myvar}}&#34;)
         * 
         * @return builder
         * 
         */
        public Builder staticNat(Map<String,GatewayNetworkInternetAccessStaticNatArgs> staticNat) {
            return staticNat(Output.of(staticNat));
        }

        public GatewayNetworkInternetAccessArgs build() {
            return $;
        }
    }

}
