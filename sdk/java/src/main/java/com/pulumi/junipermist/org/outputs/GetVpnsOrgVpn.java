// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.junipermist.org.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.junipermist.org.outputs.GetVpnsOrgVpnPathSelection;
import com.pulumi.junipermist.org.outputs.GetVpnsOrgVpnPaths;
import java.lang.Double;
import java.lang.String;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetVpnsOrgVpn {
    /**
     * @return When the object has been created, in epoch
     * 
     */
    private Double createdTime;
    /**
     * @return Unique ID of the object instance in the Mist Organization
     * 
     */
    private String id;
    /**
     * @return When the object has been modified for the last time, in epoch
     * 
     */
    private Double modifiedTime;
    private String name;
    private String orgId;
    /**
     * @return Only if `type`==`hub_spoke`
     * 
     */
    private GetVpnsOrgVpnPathSelection pathSelection;
    /**
     * @return For `type`==`hub_spoke`, Property key is the VPN name. For `type`==`mesh`, Property key is the Interface name
     * 
     */
    private Map<String,GetVpnsOrgVpnPaths> paths;
    /**
     * @return enum: `hub_spoke`, `mesh`
     * 
     */
    private String type;

    private GetVpnsOrgVpn() {}
    /**
     * @return When the object has been created, in epoch
     * 
     */
    public Double createdTime() {
        return this.createdTime;
    }
    /**
     * @return Unique ID of the object instance in the Mist Organization
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return When the object has been modified for the last time, in epoch
     * 
     */
    public Double modifiedTime() {
        return this.modifiedTime;
    }
    public String name() {
        return this.name;
    }
    public String orgId() {
        return this.orgId;
    }
    /**
     * @return Only if `type`==`hub_spoke`
     * 
     */
    public GetVpnsOrgVpnPathSelection pathSelection() {
        return this.pathSelection;
    }
    /**
     * @return For `type`==`hub_spoke`, Property key is the VPN name. For `type`==`mesh`, Property key is the Interface name
     * 
     */
    public Map<String,GetVpnsOrgVpnPaths> paths() {
        return this.paths;
    }
    /**
     * @return enum: `hub_spoke`, `mesh`
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetVpnsOrgVpn defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Double createdTime;
        private String id;
        private Double modifiedTime;
        private String name;
        private String orgId;
        private GetVpnsOrgVpnPathSelection pathSelection;
        private Map<String,GetVpnsOrgVpnPaths> paths;
        private String type;
        public Builder() {}
        public Builder(GetVpnsOrgVpn defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.createdTime = defaults.createdTime;
    	      this.id = defaults.id;
    	      this.modifiedTime = defaults.modifiedTime;
    	      this.name = defaults.name;
    	      this.orgId = defaults.orgId;
    	      this.pathSelection = defaults.pathSelection;
    	      this.paths = defaults.paths;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder createdTime(Double createdTime) {
            if (createdTime == null) {
              throw new MissingRequiredPropertyException("GetVpnsOrgVpn", "createdTime");
            }
            this.createdTime = createdTime;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetVpnsOrgVpn", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder modifiedTime(Double modifiedTime) {
            if (modifiedTime == null) {
              throw new MissingRequiredPropertyException("GetVpnsOrgVpn", "modifiedTime");
            }
            this.modifiedTime = modifiedTime;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetVpnsOrgVpn", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder orgId(String orgId) {
            if (orgId == null) {
              throw new MissingRequiredPropertyException("GetVpnsOrgVpn", "orgId");
            }
            this.orgId = orgId;
            return this;
        }
        @CustomType.Setter
        public Builder pathSelection(GetVpnsOrgVpnPathSelection pathSelection) {
            if (pathSelection == null) {
              throw new MissingRequiredPropertyException("GetVpnsOrgVpn", "pathSelection");
            }
            this.pathSelection = pathSelection;
            return this;
        }
        @CustomType.Setter
        public Builder paths(Map<String,GetVpnsOrgVpnPaths> paths) {
            if (paths == null) {
              throw new MissingRequiredPropertyException("GetVpnsOrgVpn", "paths");
            }
            this.paths = paths;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("GetVpnsOrgVpn", "type");
            }
            this.type = type;
            return this;
        }
        public GetVpnsOrgVpn build() {
            final var _resultValue = new GetVpnsOrgVpn();
            _resultValue.createdTime = createdTime;
            _resultValue.id = id;
            _resultValue.modifiedTime = modifiedTime;
            _resultValue.name = name;
            _resultValue.orgId = orgId;
            _resultValue.pathSelection = pathSelection;
            _resultValue.paths = paths;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
