// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.junipermist.org.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DeviceprofileGatewayNetworkTenantsArgs extends com.pulumi.resources.ResourceArgs {

    public static final DeviceprofileGatewayNetworkTenantsArgs Empty = new DeviceprofileGatewayNetworkTenantsArgs();

    @Import(name="addresses")
    private @Nullable Output<List<String>> addresses;

    public Optional<Output<List<String>>> addresses() {
        return Optional.ofNullable(this.addresses);
    }

    private DeviceprofileGatewayNetworkTenantsArgs() {}

    private DeviceprofileGatewayNetworkTenantsArgs(DeviceprofileGatewayNetworkTenantsArgs $) {
        this.addresses = $.addresses;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DeviceprofileGatewayNetworkTenantsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DeviceprofileGatewayNetworkTenantsArgs $;

        public Builder() {
            $ = new DeviceprofileGatewayNetworkTenantsArgs();
        }

        public Builder(DeviceprofileGatewayNetworkTenantsArgs defaults) {
            $ = new DeviceprofileGatewayNetworkTenantsArgs(Objects.requireNonNull(defaults));
        }

        public Builder addresses(@Nullable Output<List<String>> addresses) {
            $.addresses = addresses;
            return this;
        }

        public Builder addresses(List<String> addresses) {
            return addresses(Output.of(addresses));
        }

        public Builder addresses(String... addresses) {
            return addresses(List.of(addresses));
        }

        public DeviceprofileGatewayNetworkTenantsArgs build() {
            return $;
        }
    }

}
