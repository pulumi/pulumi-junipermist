// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.junipermist.org.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DeviceprofileApUplinkPortConfig {
    /**
     * @return Whether to do 802.1x against uplink switch. When enaled, AP cert will be used to do EAP-TLS and the Org&#39;s CA Cert has to be provisioned at the switch
     * 
     */
    private @Nullable Boolean dot1x;
    /**
     * @return By default, WLANs are disabled when uplink is down. In some scenario, like SiteSurvey, one would want the AP to keep sending beacons.
     * 
     */
    private @Nullable Boolean keepWlansUpIfDown;

    private DeviceprofileApUplinkPortConfig() {}
    /**
     * @return Whether to do 802.1x against uplink switch. When enaled, AP cert will be used to do EAP-TLS and the Org&#39;s CA Cert has to be provisioned at the switch
     * 
     */
    public Optional<Boolean> dot1x() {
        return Optional.ofNullable(this.dot1x);
    }
    /**
     * @return By default, WLANs are disabled when uplink is down. In some scenario, like SiteSurvey, one would want the AP to keep sending beacons.
     * 
     */
    public Optional<Boolean> keepWlansUpIfDown() {
        return Optional.ofNullable(this.keepWlansUpIfDown);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DeviceprofileApUplinkPortConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean dot1x;
        private @Nullable Boolean keepWlansUpIfDown;
        public Builder() {}
        public Builder(DeviceprofileApUplinkPortConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dot1x = defaults.dot1x;
    	      this.keepWlansUpIfDown = defaults.keepWlansUpIfDown;
        }

        @CustomType.Setter
        public Builder dot1x(@Nullable Boolean dot1x) {

            this.dot1x = dot1x;
            return this;
        }
        @CustomType.Setter
        public Builder keepWlansUpIfDown(@Nullable Boolean keepWlansUpIfDown) {

            this.keepWlansUpIfDown = keepWlansUpIfDown;
            return this;
        }
        public DeviceprofileApUplinkPortConfig build() {
            final var _resultValue = new DeviceprofileApUplinkPortConfig();
            _resultValue.dot1x = dot1x;
            _resultValue.keepWlansUpIfDown = keepWlansUpIfDown;
            return _resultValue;
        }
    }
}
