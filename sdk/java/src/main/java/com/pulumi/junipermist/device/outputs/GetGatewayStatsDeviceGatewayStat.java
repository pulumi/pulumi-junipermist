// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.junipermist.device.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.junipermist.device.outputs.GetGatewayStatsDeviceGatewayStatApRedundancy;
import com.pulumi.junipermist.device.outputs.GetGatewayStatsDeviceGatewayStatArpTableStats;
import com.pulumi.junipermist.device.outputs.GetGatewayStatsDeviceGatewayStatClusterConfig;
import com.pulumi.junipermist.device.outputs.GetGatewayStatsDeviceGatewayStatClusterStat;
import com.pulumi.junipermist.device.outputs.GetGatewayStatsDeviceGatewayStatCpu2Stat;
import com.pulumi.junipermist.device.outputs.GetGatewayStatsDeviceGatewayStatCpuStat;
import com.pulumi.junipermist.device.outputs.GetGatewayStatsDeviceGatewayStatDhcpd2Stat;
import com.pulumi.junipermist.device.outputs.GetGatewayStatsDeviceGatewayStatDhcpdStat;
import com.pulumi.junipermist.device.outputs.GetGatewayStatsDeviceGatewayStatFwupdate;
import com.pulumi.junipermist.device.outputs.GetGatewayStatsDeviceGatewayStatIf2Stat;
import com.pulumi.junipermist.device.outputs.GetGatewayStatsDeviceGatewayStatIfStat;
import com.pulumi.junipermist.device.outputs.GetGatewayStatsDeviceGatewayStatIp2Stat;
import com.pulumi.junipermist.device.outputs.GetGatewayStatsDeviceGatewayStatIpStat;
import com.pulumi.junipermist.device.outputs.GetGatewayStatsDeviceGatewayStatMemory2Stat;
import com.pulumi.junipermist.device.outputs.GetGatewayStatsDeviceGatewayStatMemoryStat;
import com.pulumi.junipermist.device.outputs.GetGatewayStatsDeviceGatewayStatModule2Stat;
import com.pulumi.junipermist.device.outputs.GetGatewayStatsDeviceGatewayStatModuleStat;
import com.pulumi.junipermist.device.outputs.GetGatewayStatsDeviceGatewayStatRouteSummaryStats;
import com.pulumi.junipermist.device.outputs.GetGatewayStatsDeviceGatewayStatService2Stat;
import com.pulumi.junipermist.device.outputs.GetGatewayStatsDeviceGatewayStatServiceStat;
import com.pulumi.junipermist.device.outputs.GetGatewayStatsDeviceGatewayStatServiceStatus;
import com.pulumi.junipermist.device.outputs.GetGatewayStatsDeviceGatewayStatSpu2Stat;
import com.pulumi.junipermist.device.outputs.GetGatewayStatsDeviceGatewayStatSpuStat;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetGatewayStatsDeviceGatewayStat {
    private GetGatewayStatsDeviceGatewayStatApRedundancy apRedundancy;
    private GetGatewayStatsDeviceGatewayStatArpTableStats arpTableStats;
    private Integer certExpiry;
    private GetGatewayStatsDeviceGatewayStatClusterConfig clusterConfig;
    private GetGatewayStatsDeviceGatewayStatClusterStat clusterStat;
    private String conductorName;
    private String configStatus;
    private GetGatewayStatsDeviceGatewayStatCpu2Stat cpu2Stat;
    private GetGatewayStatsDeviceGatewayStatCpuStat cpuStat;
    private Integer createdTime;
    private String deviceprofileId;
    /**
     * @return Property key is the network name
     * 
     */
    private Map<String,GetGatewayStatsDeviceGatewayStatDhcpd2Stat> dhcpd2Stat;
    /**
     * @return Property key is the network name
     * 
     */
    private Map<String,GetGatewayStatsDeviceGatewayStatDhcpdStat> dhcpdStat;
    /**
     * @return IP address
     * 
     */
    private String extIp;
    private GetGatewayStatsDeviceGatewayStatFwupdate fwupdate;
    private Boolean hasPcap;
    /**
     * @return hostname reported by the device
     * 
     */
    private String hostname;
    /**
     * @return serial
     * 
     */
    private String id;
    /**
     * @return Property key is the interface name
     * 
     */
    private Map<String,GetGatewayStatsDeviceGatewayStatIf2Stat> if2Stat;
    /**
     * @return Property key is the interface name
     * 
     */
    private Map<String,GetGatewayStatsDeviceGatewayStatIfStat> ifStat;
    /**
     * @return IP address
     * 
     */
    private String ip;
    private GetGatewayStatsDeviceGatewayStatIp2Stat ip2Stat;
    private GetGatewayStatsDeviceGatewayStatIpStat ipStat;
    private Boolean isHa;
    /**
     * @return last seen timestamp
     * 
     */
    private Double lastSeen;
    /**
     * @return device mac
     * 
     */
    private String mac;
    /**
     * @return serial
     * 
     */
    private String mapId;
    /**
     * @return memory usage stat (for virtual chassis, memory usage of master RE)
     * 
     */
    private GetGatewayStatsDeviceGatewayStatMemory2Stat memory2Stat;
    /**
     * @return memory usage stat (for virtual chassis, memory usage of master RE)
     * 
     */
    private GetGatewayStatsDeviceGatewayStatMemoryStat memoryStat;
    /**
     * @return device model
     * 
     */
    private String model;
    private Integer modifiedTime;
    private List<GetGatewayStatsDeviceGatewayStatModule2Stat> module2Stats;
    private List<GetGatewayStatsDeviceGatewayStatModuleStat> moduleStats;
    /**
     * @return device name if configured
     * 
     */
    private String name;
    private String nodeName;
    /**
     * @return serial
     * 
     */
    private String orgId;
    private GetGatewayStatsDeviceGatewayStatRouteSummaryStats routeSummaryStats;
    /**
     * @return device name if configured
     * 
     */
    private String routerName;
    /**
     * @return serial
     * 
     */
    private String serial;
    private Map<String,GetGatewayStatsDeviceGatewayStatService2Stat> service2Stat;
    private Map<String,GetGatewayStatsDeviceGatewayStatServiceStat> serviceStat;
    private GetGatewayStatsDeviceGatewayStatServiceStatus serviceStatus;
    /**
     * @return serial
     * 
     */
    private String siteId;
    private List<GetGatewayStatsDeviceGatewayStatSpu2Stat> spu2Stats;
    private List<GetGatewayStatsDeviceGatewayStatSpuStat> spuStats;
    private String status;
    private Double uptime;
    private String version;

    private GetGatewayStatsDeviceGatewayStat() {}
    public GetGatewayStatsDeviceGatewayStatApRedundancy apRedundancy() {
        return this.apRedundancy;
    }
    public GetGatewayStatsDeviceGatewayStatArpTableStats arpTableStats() {
        return this.arpTableStats;
    }
    public Integer certExpiry() {
        return this.certExpiry;
    }
    public GetGatewayStatsDeviceGatewayStatClusterConfig clusterConfig() {
        return this.clusterConfig;
    }
    public GetGatewayStatsDeviceGatewayStatClusterStat clusterStat() {
        return this.clusterStat;
    }
    public String conductorName() {
        return this.conductorName;
    }
    public String configStatus() {
        return this.configStatus;
    }
    public GetGatewayStatsDeviceGatewayStatCpu2Stat cpu2Stat() {
        return this.cpu2Stat;
    }
    public GetGatewayStatsDeviceGatewayStatCpuStat cpuStat() {
        return this.cpuStat;
    }
    public Integer createdTime() {
        return this.createdTime;
    }
    public String deviceprofileId() {
        return this.deviceprofileId;
    }
    /**
     * @return Property key is the network name
     * 
     */
    public Map<String,GetGatewayStatsDeviceGatewayStatDhcpd2Stat> dhcpd2Stat() {
        return this.dhcpd2Stat;
    }
    /**
     * @return Property key is the network name
     * 
     */
    public Map<String,GetGatewayStatsDeviceGatewayStatDhcpdStat> dhcpdStat() {
        return this.dhcpdStat;
    }
    /**
     * @return IP address
     * 
     */
    public String extIp() {
        return this.extIp;
    }
    public GetGatewayStatsDeviceGatewayStatFwupdate fwupdate() {
        return this.fwupdate;
    }
    public Boolean hasPcap() {
        return this.hasPcap;
    }
    /**
     * @return hostname reported by the device
     * 
     */
    public String hostname() {
        return this.hostname;
    }
    /**
     * @return serial
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Property key is the interface name
     * 
     */
    public Map<String,GetGatewayStatsDeviceGatewayStatIf2Stat> if2Stat() {
        return this.if2Stat;
    }
    /**
     * @return Property key is the interface name
     * 
     */
    public Map<String,GetGatewayStatsDeviceGatewayStatIfStat> ifStat() {
        return this.ifStat;
    }
    /**
     * @return IP address
     * 
     */
    public String ip() {
        return this.ip;
    }
    public GetGatewayStatsDeviceGatewayStatIp2Stat ip2Stat() {
        return this.ip2Stat;
    }
    public GetGatewayStatsDeviceGatewayStatIpStat ipStat() {
        return this.ipStat;
    }
    public Boolean isHa() {
        return this.isHa;
    }
    /**
     * @return last seen timestamp
     * 
     */
    public Double lastSeen() {
        return this.lastSeen;
    }
    /**
     * @return device mac
     * 
     */
    public String mac() {
        return this.mac;
    }
    /**
     * @return serial
     * 
     */
    public String mapId() {
        return this.mapId;
    }
    /**
     * @return memory usage stat (for virtual chassis, memory usage of master RE)
     * 
     */
    public GetGatewayStatsDeviceGatewayStatMemory2Stat memory2Stat() {
        return this.memory2Stat;
    }
    /**
     * @return memory usage stat (for virtual chassis, memory usage of master RE)
     * 
     */
    public GetGatewayStatsDeviceGatewayStatMemoryStat memoryStat() {
        return this.memoryStat;
    }
    /**
     * @return device model
     * 
     */
    public String model() {
        return this.model;
    }
    public Integer modifiedTime() {
        return this.modifiedTime;
    }
    public List<GetGatewayStatsDeviceGatewayStatModule2Stat> module2Stats() {
        return this.module2Stats;
    }
    public List<GetGatewayStatsDeviceGatewayStatModuleStat> moduleStats() {
        return this.moduleStats;
    }
    /**
     * @return device name if configured
     * 
     */
    public String name() {
        return this.name;
    }
    public String nodeName() {
        return this.nodeName;
    }
    /**
     * @return serial
     * 
     */
    public String orgId() {
        return this.orgId;
    }
    public GetGatewayStatsDeviceGatewayStatRouteSummaryStats routeSummaryStats() {
        return this.routeSummaryStats;
    }
    /**
     * @return device name if configured
     * 
     */
    public String routerName() {
        return this.routerName;
    }
    /**
     * @return serial
     * 
     */
    public String serial() {
        return this.serial;
    }
    public Map<String,GetGatewayStatsDeviceGatewayStatService2Stat> service2Stat() {
        return this.service2Stat;
    }
    public Map<String,GetGatewayStatsDeviceGatewayStatServiceStat> serviceStat() {
        return this.serviceStat;
    }
    public GetGatewayStatsDeviceGatewayStatServiceStatus serviceStatus() {
        return this.serviceStatus;
    }
    /**
     * @return serial
     * 
     */
    public String siteId() {
        return this.siteId;
    }
    public List<GetGatewayStatsDeviceGatewayStatSpu2Stat> spu2Stats() {
        return this.spu2Stats;
    }
    public List<GetGatewayStatsDeviceGatewayStatSpuStat> spuStats() {
        return this.spuStats;
    }
    public String status() {
        return this.status;
    }
    public Double uptime() {
        return this.uptime;
    }
    public String version() {
        return this.version;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetGatewayStatsDeviceGatewayStat defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private GetGatewayStatsDeviceGatewayStatApRedundancy apRedundancy;
        private GetGatewayStatsDeviceGatewayStatArpTableStats arpTableStats;
        private Integer certExpiry;
        private GetGatewayStatsDeviceGatewayStatClusterConfig clusterConfig;
        private GetGatewayStatsDeviceGatewayStatClusterStat clusterStat;
        private String conductorName;
        private String configStatus;
        private GetGatewayStatsDeviceGatewayStatCpu2Stat cpu2Stat;
        private GetGatewayStatsDeviceGatewayStatCpuStat cpuStat;
        private Integer createdTime;
        private String deviceprofileId;
        private Map<String,GetGatewayStatsDeviceGatewayStatDhcpd2Stat> dhcpd2Stat;
        private Map<String,GetGatewayStatsDeviceGatewayStatDhcpdStat> dhcpdStat;
        private String extIp;
        private GetGatewayStatsDeviceGatewayStatFwupdate fwupdate;
        private Boolean hasPcap;
        private String hostname;
        private String id;
        private Map<String,GetGatewayStatsDeviceGatewayStatIf2Stat> if2Stat;
        private Map<String,GetGatewayStatsDeviceGatewayStatIfStat> ifStat;
        private String ip;
        private GetGatewayStatsDeviceGatewayStatIp2Stat ip2Stat;
        private GetGatewayStatsDeviceGatewayStatIpStat ipStat;
        private Boolean isHa;
        private Double lastSeen;
        private String mac;
        private String mapId;
        private GetGatewayStatsDeviceGatewayStatMemory2Stat memory2Stat;
        private GetGatewayStatsDeviceGatewayStatMemoryStat memoryStat;
        private String model;
        private Integer modifiedTime;
        private List<GetGatewayStatsDeviceGatewayStatModule2Stat> module2Stats;
        private List<GetGatewayStatsDeviceGatewayStatModuleStat> moduleStats;
        private String name;
        private String nodeName;
        private String orgId;
        private GetGatewayStatsDeviceGatewayStatRouteSummaryStats routeSummaryStats;
        private String routerName;
        private String serial;
        private Map<String,GetGatewayStatsDeviceGatewayStatService2Stat> service2Stat;
        private Map<String,GetGatewayStatsDeviceGatewayStatServiceStat> serviceStat;
        private GetGatewayStatsDeviceGatewayStatServiceStatus serviceStatus;
        private String siteId;
        private List<GetGatewayStatsDeviceGatewayStatSpu2Stat> spu2Stats;
        private List<GetGatewayStatsDeviceGatewayStatSpuStat> spuStats;
        private String status;
        private Double uptime;
        private String version;
        public Builder() {}
        public Builder(GetGatewayStatsDeviceGatewayStat defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.apRedundancy = defaults.apRedundancy;
    	      this.arpTableStats = defaults.arpTableStats;
    	      this.certExpiry = defaults.certExpiry;
    	      this.clusterConfig = defaults.clusterConfig;
    	      this.clusterStat = defaults.clusterStat;
    	      this.conductorName = defaults.conductorName;
    	      this.configStatus = defaults.configStatus;
    	      this.cpu2Stat = defaults.cpu2Stat;
    	      this.cpuStat = defaults.cpuStat;
    	      this.createdTime = defaults.createdTime;
    	      this.deviceprofileId = defaults.deviceprofileId;
    	      this.dhcpd2Stat = defaults.dhcpd2Stat;
    	      this.dhcpdStat = defaults.dhcpdStat;
    	      this.extIp = defaults.extIp;
    	      this.fwupdate = defaults.fwupdate;
    	      this.hasPcap = defaults.hasPcap;
    	      this.hostname = defaults.hostname;
    	      this.id = defaults.id;
    	      this.if2Stat = defaults.if2Stat;
    	      this.ifStat = defaults.ifStat;
    	      this.ip = defaults.ip;
    	      this.ip2Stat = defaults.ip2Stat;
    	      this.ipStat = defaults.ipStat;
    	      this.isHa = defaults.isHa;
    	      this.lastSeen = defaults.lastSeen;
    	      this.mac = defaults.mac;
    	      this.mapId = defaults.mapId;
    	      this.memory2Stat = defaults.memory2Stat;
    	      this.memoryStat = defaults.memoryStat;
    	      this.model = defaults.model;
    	      this.modifiedTime = defaults.modifiedTime;
    	      this.module2Stats = defaults.module2Stats;
    	      this.moduleStats = defaults.moduleStats;
    	      this.name = defaults.name;
    	      this.nodeName = defaults.nodeName;
    	      this.orgId = defaults.orgId;
    	      this.routeSummaryStats = defaults.routeSummaryStats;
    	      this.routerName = defaults.routerName;
    	      this.serial = defaults.serial;
    	      this.service2Stat = defaults.service2Stat;
    	      this.serviceStat = defaults.serviceStat;
    	      this.serviceStatus = defaults.serviceStatus;
    	      this.siteId = defaults.siteId;
    	      this.spu2Stats = defaults.spu2Stats;
    	      this.spuStats = defaults.spuStats;
    	      this.status = defaults.status;
    	      this.uptime = defaults.uptime;
    	      this.version = defaults.version;
        }

        @CustomType.Setter
        public Builder apRedundancy(GetGatewayStatsDeviceGatewayStatApRedundancy apRedundancy) {
            if (apRedundancy == null) {
              throw new MissingRequiredPropertyException("GetGatewayStatsDeviceGatewayStat", "apRedundancy");
            }
            this.apRedundancy = apRedundancy;
            return this;
        }
        @CustomType.Setter
        public Builder arpTableStats(GetGatewayStatsDeviceGatewayStatArpTableStats arpTableStats) {
            if (arpTableStats == null) {
              throw new MissingRequiredPropertyException("GetGatewayStatsDeviceGatewayStat", "arpTableStats");
            }
            this.arpTableStats = arpTableStats;
            return this;
        }
        @CustomType.Setter
        public Builder certExpiry(Integer certExpiry) {
            if (certExpiry == null) {
              throw new MissingRequiredPropertyException("GetGatewayStatsDeviceGatewayStat", "certExpiry");
            }
            this.certExpiry = certExpiry;
            return this;
        }
        @CustomType.Setter
        public Builder clusterConfig(GetGatewayStatsDeviceGatewayStatClusterConfig clusterConfig) {
            if (clusterConfig == null) {
              throw new MissingRequiredPropertyException("GetGatewayStatsDeviceGatewayStat", "clusterConfig");
            }
            this.clusterConfig = clusterConfig;
            return this;
        }
        @CustomType.Setter
        public Builder clusterStat(GetGatewayStatsDeviceGatewayStatClusterStat clusterStat) {
            if (clusterStat == null) {
              throw new MissingRequiredPropertyException("GetGatewayStatsDeviceGatewayStat", "clusterStat");
            }
            this.clusterStat = clusterStat;
            return this;
        }
        @CustomType.Setter
        public Builder conductorName(String conductorName) {
            if (conductorName == null) {
              throw new MissingRequiredPropertyException("GetGatewayStatsDeviceGatewayStat", "conductorName");
            }
            this.conductorName = conductorName;
            return this;
        }
        @CustomType.Setter
        public Builder configStatus(String configStatus) {
            if (configStatus == null) {
              throw new MissingRequiredPropertyException("GetGatewayStatsDeviceGatewayStat", "configStatus");
            }
            this.configStatus = configStatus;
            return this;
        }
        @CustomType.Setter
        public Builder cpu2Stat(GetGatewayStatsDeviceGatewayStatCpu2Stat cpu2Stat) {
            if (cpu2Stat == null) {
              throw new MissingRequiredPropertyException("GetGatewayStatsDeviceGatewayStat", "cpu2Stat");
            }
            this.cpu2Stat = cpu2Stat;
            return this;
        }
        @CustomType.Setter
        public Builder cpuStat(GetGatewayStatsDeviceGatewayStatCpuStat cpuStat) {
            if (cpuStat == null) {
              throw new MissingRequiredPropertyException("GetGatewayStatsDeviceGatewayStat", "cpuStat");
            }
            this.cpuStat = cpuStat;
            return this;
        }
        @CustomType.Setter
        public Builder createdTime(Integer createdTime) {
            if (createdTime == null) {
              throw new MissingRequiredPropertyException("GetGatewayStatsDeviceGatewayStat", "createdTime");
            }
            this.createdTime = createdTime;
            return this;
        }
        @CustomType.Setter
        public Builder deviceprofileId(String deviceprofileId) {
            if (deviceprofileId == null) {
              throw new MissingRequiredPropertyException("GetGatewayStatsDeviceGatewayStat", "deviceprofileId");
            }
            this.deviceprofileId = deviceprofileId;
            return this;
        }
        @CustomType.Setter
        public Builder dhcpd2Stat(Map<String,GetGatewayStatsDeviceGatewayStatDhcpd2Stat> dhcpd2Stat) {
            if (dhcpd2Stat == null) {
              throw new MissingRequiredPropertyException("GetGatewayStatsDeviceGatewayStat", "dhcpd2Stat");
            }
            this.dhcpd2Stat = dhcpd2Stat;
            return this;
        }
        @CustomType.Setter
        public Builder dhcpdStat(Map<String,GetGatewayStatsDeviceGatewayStatDhcpdStat> dhcpdStat) {
            if (dhcpdStat == null) {
              throw new MissingRequiredPropertyException("GetGatewayStatsDeviceGatewayStat", "dhcpdStat");
            }
            this.dhcpdStat = dhcpdStat;
            return this;
        }
        @CustomType.Setter
        public Builder extIp(String extIp) {
            if (extIp == null) {
              throw new MissingRequiredPropertyException("GetGatewayStatsDeviceGatewayStat", "extIp");
            }
            this.extIp = extIp;
            return this;
        }
        @CustomType.Setter
        public Builder fwupdate(GetGatewayStatsDeviceGatewayStatFwupdate fwupdate) {
            if (fwupdate == null) {
              throw new MissingRequiredPropertyException("GetGatewayStatsDeviceGatewayStat", "fwupdate");
            }
            this.fwupdate = fwupdate;
            return this;
        }
        @CustomType.Setter
        public Builder hasPcap(Boolean hasPcap) {
            if (hasPcap == null) {
              throw new MissingRequiredPropertyException("GetGatewayStatsDeviceGatewayStat", "hasPcap");
            }
            this.hasPcap = hasPcap;
            return this;
        }
        @CustomType.Setter
        public Builder hostname(String hostname) {
            if (hostname == null) {
              throw new MissingRequiredPropertyException("GetGatewayStatsDeviceGatewayStat", "hostname");
            }
            this.hostname = hostname;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetGatewayStatsDeviceGatewayStat", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder if2Stat(Map<String,GetGatewayStatsDeviceGatewayStatIf2Stat> if2Stat) {
            if (if2Stat == null) {
              throw new MissingRequiredPropertyException("GetGatewayStatsDeviceGatewayStat", "if2Stat");
            }
            this.if2Stat = if2Stat;
            return this;
        }
        @CustomType.Setter
        public Builder ifStat(Map<String,GetGatewayStatsDeviceGatewayStatIfStat> ifStat) {
            if (ifStat == null) {
              throw new MissingRequiredPropertyException("GetGatewayStatsDeviceGatewayStat", "ifStat");
            }
            this.ifStat = ifStat;
            return this;
        }
        @CustomType.Setter
        public Builder ip(String ip) {
            if (ip == null) {
              throw new MissingRequiredPropertyException("GetGatewayStatsDeviceGatewayStat", "ip");
            }
            this.ip = ip;
            return this;
        }
        @CustomType.Setter
        public Builder ip2Stat(GetGatewayStatsDeviceGatewayStatIp2Stat ip2Stat) {
            if (ip2Stat == null) {
              throw new MissingRequiredPropertyException("GetGatewayStatsDeviceGatewayStat", "ip2Stat");
            }
            this.ip2Stat = ip2Stat;
            return this;
        }
        @CustomType.Setter
        public Builder ipStat(GetGatewayStatsDeviceGatewayStatIpStat ipStat) {
            if (ipStat == null) {
              throw new MissingRequiredPropertyException("GetGatewayStatsDeviceGatewayStat", "ipStat");
            }
            this.ipStat = ipStat;
            return this;
        }
        @CustomType.Setter
        public Builder isHa(Boolean isHa) {
            if (isHa == null) {
              throw new MissingRequiredPropertyException("GetGatewayStatsDeviceGatewayStat", "isHa");
            }
            this.isHa = isHa;
            return this;
        }
        @CustomType.Setter
        public Builder lastSeen(Double lastSeen) {
            if (lastSeen == null) {
              throw new MissingRequiredPropertyException("GetGatewayStatsDeviceGatewayStat", "lastSeen");
            }
            this.lastSeen = lastSeen;
            return this;
        }
        @CustomType.Setter
        public Builder mac(String mac) {
            if (mac == null) {
              throw new MissingRequiredPropertyException("GetGatewayStatsDeviceGatewayStat", "mac");
            }
            this.mac = mac;
            return this;
        }
        @CustomType.Setter
        public Builder mapId(String mapId) {
            if (mapId == null) {
              throw new MissingRequiredPropertyException("GetGatewayStatsDeviceGatewayStat", "mapId");
            }
            this.mapId = mapId;
            return this;
        }
        @CustomType.Setter
        public Builder memory2Stat(GetGatewayStatsDeviceGatewayStatMemory2Stat memory2Stat) {
            if (memory2Stat == null) {
              throw new MissingRequiredPropertyException("GetGatewayStatsDeviceGatewayStat", "memory2Stat");
            }
            this.memory2Stat = memory2Stat;
            return this;
        }
        @CustomType.Setter
        public Builder memoryStat(GetGatewayStatsDeviceGatewayStatMemoryStat memoryStat) {
            if (memoryStat == null) {
              throw new MissingRequiredPropertyException("GetGatewayStatsDeviceGatewayStat", "memoryStat");
            }
            this.memoryStat = memoryStat;
            return this;
        }
        @CustomType.Setter
        public Builder model(String model) {
            if (model == null) {
              throw new MissingRequiredPropertyException("GetGatewayStatsDeviceGatewayStat", "model");
            }
            this.model = model;
            return this;
        }
        @CustomType.Setter
        public Builder modifiedTime(Integer modifiedTime) {
            if (modifiedTime == null) {
              throw new MissingRequiredPropertyException("GetGatewayStatsDeviceGatewayStat", "modifiedTime");
            }
            this.modifiedTime = modifiedTime;
            return this;
        }
        @CustomType.Setter
        public Builder module2Stats(List<GetGatewayStatsDeviceGatewayStatModule2Stat> module2Stats) {
            if (module2Stats == null) {
              throw new MissingRequiredPropertyException("GetGatewayStatsDeviceGatewayStat", "module2Stats");
            }
            this.module2Stats = module2Stats;
            return this;
        }
        public Builder module2Stats(GetGatewayStatsDeviceGatewayStatModule2Stat... module2Stats) {
            return module2Stats(List.of(module2Stats));
        }
        @CustomType.Setter
        public Builder moduleStats(List<GetGatewayStatsDeviceGatewayStatModuleStat> moduleStats) {
            if (moduleStats == null) {
              throw new MissingRequiredPropertyException("GetGatewayStatsDeviceGatewayStat", "moduleStats");
            }
            this.moduleStats = moduleStats;
            return this;
        }
        public Builder moduleStats(GetGatewayStatsDeviceGatewayStatModuleStat... moduleStats) {
            return moduleStats(List.of(moduleStats));
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetGatewayStatsDeviceGatewayStat", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder nodeName(String nodeName) {
            if (nodeName == null) {
              throw new MissingRequiredPropertyException("GetGatewayStatsDeviceGatewayStat", "nodeName");
            }
            this.nodeName = nodeName;
            return this;
        }
        @CustomType.Setter
        public Builder orgId(String orgId) {
            if (orgId == null) {
              throw new MissingRequiredPropertyException("GetGatewayStatsDeviceGatewayStat", "orgId");
            }
            this.orgId = orgId;
            return this;
        }
        @CustomType.Setter
        public Builder routeSummaryStats(GetGatewayStatsDeviceGatewayStatRouteSummaryStats routeSummaryStats) {
            if (routeSummaryStats == null) {
              throw new MissingRequiredPropertyException("GetGatewayStatsDeviceGatewayStat", "routeSummaryStats");
            }
            this.routeSummaryStats = routeSummaryStats;
            return this;
        }
        @CustomType.Setter
        public Builder routerName(String routerName) {
            if (routerName == null) {
              throw new MissingRequiredPropertyException("GetGatewayStatsDeviceGatewayStat", "routerName");
            }
            this.routerName = routerName;
            return this;
        }
        @CustomType.Setter
        public Builder serial(String serial) {
            if (serial == null) {
              throw new MissingRequiredPropertyException("GetGatewayStatsDeviceGatewayStat", "serial");
            }
            this.serial = serial;
            return this;
        }
        @CustomType.Setter
        public Builder service2Stat(Map<String,GetGatewayStatsDeviceGatewayStatService2Stat> service2Stat) {
            if (service2Stat == null) {
              throw new MissingRequiredPropertyException("GetGatewayStatsDeviceGatewayStat", "service2Stat");
            }
            this.service2Stat = service2Stat;
            return this;
        }
        @CustomType.Setter
        public Builder serviceStat(Map<String,GetGatewayStatsDeviceGatewayStatServiceStat> serviceStat) {
            if (serviceStat == null) {
              throw new MissingRequiredPropertyException("GetGatewayStatsDeviceGatewayStat", "serviceStat");
            }
            this.serviceStat = serviceStat;
            return this;
        }
        @CustomType.Setter
        public Builder serviceStatus(GetGatewayStatsDeviceGatewayStatServiceStatus serviceStatus) {
            if (serviceStatus == null) {
              throw new MissingRequiredPropertyException("GetGatewayStatsDeviceGatewayStat", "serviceStatus");
            }
            this.serviceStatus = serviceStatus;
            return this;
        }
        @CustomType.Setter
        public Builder siteId(String siteId) {
            if (siteId == null) {
              throw new MissingRequiredPropertyException("GetGatewayStatsDeviceGatewayStat", "siteId");
            }
            this.siteId = siteId;
            return this;
        }
        @CustomType.Setter
        public Builder spu2Stats(List<GetGatewayStatsDeviceGatewayStatSpu2Stat> spu2Stats) {
            if (spu2Stats == null) {
              throw new MissingRequiredPropertyException("GetGatewayStatsDeviceGatewayStat", "spu2Stats");
            }
            this.spu2Stats = spu2Stats;
            return this;
        }
        public Builder spu2Stats(GetGatewayStatsDeviceGatewayStatSpu2Stat... spu2Stats) {
            return spu2Stats(List.of(spu2Stats));
        }
        @CustomType.Setter
        public Builder spuStats(List<GetGatewayStatsDeviceGatewayStatSpuStat> spuStats) {
            if (spuStats == null) {
              throw new MissingRequiredPropertyException("GetGatewayStatsDeviceGatewayStat", "spuStats");
            }
            this.spuStats = spuStats;
            return this;
        }
        public Builder spuStats(GetGatewayStatsDeviceGatewayStatSpuStat... spuStats) {
            return spuStats(List.of(spuStats));
        }
        @CustomType.Setter
        public Builder status(String status) {
            if (status == null) {
              throw new MissingRequiredPropertyException("GetGatewayStatsDeviceGatewayStat", "status");
            }
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder uptime(Double uptime) {
            if (uptime == null) {
              throw new MissingRequiredPropertyException("GetGatewayStatsDeviceGatewayStat", "uptime");
            }
            this.uptime = uptime;
            return this;
        }
        @CustomType.Setter
        public Builder version(String version) {
            if (version == null) {
              throw new MissingRequiredPropertyException("GetGatewayStatsDeviceGatewayStat", "version");
            }
            this.version = version;
            return this;
        }
        public GetGatewayStatsDeviceGatewayStat build() {
            final var _resultValue = new GetGatewayStatsDeviceGatewayStat();
            _resultValue.apRedundancy = apRedundancy;
            _resultValue.arpTableStats = arpTableStats;
            _resultValue.certExpiry = certExpiry;
            _resultValue.clusterConfig = clusterConfig;
            _resultValue.clusterStat = clusterStat;
            _resultValue.conductorName = conductorName;
            _resultValue.configStatus = configStatus;
            _resultValue.cpu2Stat = cpu2Stat;
            _resultValue.cpuStat = cpuStat;
            _resultValue.createdTime = createdTime;
            _resultValue.deviceprofileId = deviceprofileId;
            _resultValue.dhcpd2Stat = dhcpd2Stat;
            _resultValue.dhcpdStat = dhcpdStat;
            _resultValue.extIp = extIp;
            _resultValue.fwupdate = fwupdate;
            _resultValue.hasPcap = hasPcap;
            _resultValue.hostname = hostname;
            _resultValue.id = id;
            _resultValue.if2Stat = if2Stat;
            _resultValue.ifStat = ifStat;
            _resultValue.ip = ip;
            _resultValue.ip2Stat = ip2Stat;
            _resultValue.ipStat = ipStat;
            _resultValue.isHa = isHa;
            _resultValue.lastSeen = lastSeen;
            _resultValue.mac = mac;
            _resultValue.mapId = mapId;
            _resultValue.memory2Stat = memory2Stat;
            _resultValue.memoryStat = memoryStat;
            _resultValue.model = model;
            _resultValue.modifiedTime = modifiedTime;
            _resultValue.module2Stats = module2Stats;
            _resultValue.moduleStats = moduleStats;
            _resultValue.name = name;
            _resultValue.nodeName = nodeName;
            _resultValue.orgId = orgId;
            _resultValue.routeSummaryStats = routeSummaryStats;
            _resultValue.routerName = routerName;
            _resultValue.serial = serial;
            _resultValue.service2Stat = service2Stat;
            _resultValue.serviceStat = serviceStat;
            _resultValue.serviceStatus = serviceStatus;
            _resultValue.siteId = siteId;
            _resultValue.spu2Stats = spu2Stats;
            _resultValue.spuStats = spuStats;
            _resultValue.status = status;
            _resultValue.uptime = uptime;
            _resultValue.version = version;
            return _resultValue;
        }
    }
}
