// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.junipermist.org.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetWebhooksArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetWebhooksArgs Empty = new GetWebhooksArgs();

    @Import(name="limit")
    private @Nullable Output<Integer> limit;

    public Optional<Output<Integer>> limit() {
        return Optional.ofNullable(this.limit);
    }

    @Import(name="orgId", required=true)
    private Output<String> orgId;

    public Output<String> orgId() {
        return this.orgId;
    }

    @Import(name="page")
    private @Nullable Output<Integer> page;

    public Optional<Output<Integer>> page() {
        return Optional.ofNullable(this.page);
    }

    private GetWebhooksArgs() {}

    private GetWebhooksArgs(GetWebhooksArgs $) {
        this.limit = $.limit;
        this.orgId = $.orgId;
        this.page = $.page;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetWebhooksArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetWebhooksArgs $;

        public Builder() {
            $ = new GetWebhooksArgs();
        }

        public Builder(GetWebhooksArgs defaults) {
            $ = new GetWebhooksArgs(Objects.requireNonNull(defaults));
        }

        public Builder limit(@Nullable Output<Integer> limit) {
            $.limit = limit;
            return this;
        }

        public Builder limit(Integer limit) {
            return limit(Output.of(limit));
        }

        public Builder orgId(Output<String> orgId) {
            $.orgId = orgId;
            return this;
        }

        public Builder orgId(String orgId) {
            return orgId(Output.of(orgId));
        }

        public Builder page(@Nullable Output<Integer> page) {
            $.page = page;
            return this;
        }

        public Builder page(Integer page) {
            return page(Output.of(page));
        }

        public GetWebhooksArgs build() {
            if ($.orgId == null) {
                throw new MissingRequiredPropertyException("GetWebhooksArgs", "orgId");
            }
            return $;
        }
    }

}
