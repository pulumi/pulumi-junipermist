// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.junipermist.device.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class SwitchNetworks {
    /**
     * @return whether to stop clients to talk to each other, default is false (when enabled, a unique isolation_vlan_id is required)
     * NOTE: this features requires uplink device to also a be Juniper device and `inter_switch_link` to be set
     * 
     */
    private @Nullable Boolean isolation;
    private @Nullable String isolationVlanId;
    /**
     * @return optional for pure switching, required when L3 / routing features are used
     * 
     */
    private @Nullable String subnet;
    private String vlanId;

    private SwitchNetworks() {}
    /**
     * @return whether to stop clients to talk to each other, default is false (when enabled, a unique isolation_vlan_id is required)
     * NOTE: this features requires uplink device to also a be Juniper device and `inter_switch_link` to be set
     * 
     */
    public Optional<Boolean> isolation() {
        return Optional.ofNullable(this.isolation);
    }
    public Optional<String> isolationVlanId() {
        return Optional.ofNullable(this.isolationVlanId);
    }
    /**
     * @return optional for pure switching, required when L3 / routing features are used
     * 
     */
    public Optional<String> subnet() {
        return Optional.ofNullable(this.subnet);
    }
    public String vlanId() {
        return this.vlanId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SwitchNetworks defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean isolation;
        private @Nullable String isolationVlanId;
        private @Nullable String subnet;
        private String vlanId;
        public Builder() {}
        public Builder(SwitchNetworks defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.isolation = defaults.isolation;
    	      this.isolationVlanId = defaults.isolationVlanId;
    	      this.subnet = defaults.subnet;
    	      this.vlanId = defaults.vlanId;
        }

        @CustomType.Setter
        public Builder isolation(@Nullable Boolean isolation) {

            this.isolation = isolation;
            return this;
        }
        @CustomType.Setter
        public Builder isolationVlanId(@Nullable String isolationVlanId) {

            this.isolationVlanId = isolationVlanId;
            return this;
        }
        @CustomType.Setter
        public Builder subnet(@Nullable String subnet) {

            this.subnet = subnet;
            return this;
        }
        @CustomType.Setter
        public Builder vlanId(String vlanId) {
            if (vlanId == null) {
              throw new MissingRequiredPropertyException("SwitchNetworks", "vlanId");
            }
            this.vlanId = vlanId;
            return this;
        }
        public SwitchNetworks build() {
            final var _resultValue = new SwitchNetworks();
            _resultValue.isolation = isolation;
            _resultValue.isolationVlanId = isolationVlanId;
            _resultValue.subnet = subnet;
            _resultValue.vlanId = vlanId;
            return _resultValue;
        }
    }
}
