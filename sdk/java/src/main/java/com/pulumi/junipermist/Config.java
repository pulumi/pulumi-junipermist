// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.junipermist;

import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.String;
import java.util.Optional;

public final class Config {

    private static final com.pulumi.Config config = com.pulumi.Config.of("junipermist");
/**
 * Enable API request/response debugging. When enabled, request and response bodies, headers, and other sensitive data may be logged. Can also be set via the `MIST_API_DEBUG` environment variable. Default: `false`.
 * 
 */
    public Optional<Boolean> apiDebug() {
        return Codegen.booleanProp("apiDebug").config(config).get();
    }
/**
 * Timeout in seconds for API requests. Set to 0 for infinite timeout. Can also be set via the `MIST_API_TIMEOUT` environment variable. Default: `10` seconds.
 * 
 */
    public Optional<Double> apiTimeout() {
        return Codegen.doubleProp("apiTimeout").config(config).get();
    }
/**
 * Mist API Token for authentication. Can also be set via the `MIST_APITOKEN` environment variable. This is the recommended authentication method.
 * 
 */
    public Optional<String> apitoken() {
        return Codegen.stringProp("apitoken").config(config).get();
    }
/**
 * URL of the Mist Cloud (e.g., `api.mist.com`). Can also be set via the `MIST_HOST` environment variable.
 * 
 */
    public Optional<String> host() {
        return Codegen.stringProp("host").config(config).get();
    }
/**
 * Mist Account password for basic authentication. Can also be set via the `MIST_PASSWORD` environment variable. Requires `username` to be set.
 * 
 */
    public Optional<String> password() {
        return Codegen.stringProp("password").config(config).get();
    }
/**
 * Proxy configuration for API requests. The value may be either a complete URL or `[username:password{@literal @}]host[:port]` format. Supported schemes: `http`, `https`, and `socks5`. If no scheme is provided, `http` is assumed. Can also be set via the `MIST_PROXY` environment variable.
 * 
 */
    public Optional<String> proxy() {
        return Codegen.stringProp("proxy").config(config).get();
    }
/**
 * Mist Account username for basic authentication. Can also be set via the `MIST_USERNAME` environment variable. Requires `password` to be set and 2FA to be disabled.
 * 
 */
    public Optional<String> username() {
        return Codegen.stringProp("username").config(config).get();
    }
}
