// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.junipermist.device.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.junipermist.device.outputs.SwitchSwitchMgmtProtectRe;
import com.pulumi.junipermist.device.outputs.SwitchSwitchMgmtTacacs;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class SwitchSwitchMgmt {
    private @Nullable Integer configRevert;
    /**
     * @return restrict inbound-traffic to host
     * when enabled, all traffic that is not essential to our operation will be dropped
     * e.g. ntp / dns / traffic to mist will be allowed by default, if dhcpd is enabled, we&#39;ll make sure it works
     * 
     */
    private @Nullable SwitchSwitchMgmtProtectRe protectRe;
    private @Nullable String rootPassword;
    private @Nullable SwitchSwitchMgmtTacacs tacacs;

    private SwitchSwitchMgmt() {}
    public Optional<Integer> configRevert() {
        return Optional.ofNullable(this.configRevert);
    }
    /**
     * @return restrict inbound-traffic to host
     * when enabled, all traffic that is not essential to our operation will be dropped
     * e.g. ntp / dns / traffic to mist will be allowed by default, if dhcpd is enabled, we&#39;ll make sure it works
     * 
     */
    public Optional<SwitchSwitchMgmtProtectRe> protectRe() {
        return Optional.ofNullable(this.protectRe);
    }
    public Optional<String> rootPassword() {
        return Optional.ofNullable(this.rootPassword);
    }
    public Optional<SwitchSwitchMgmtTacacs> tacacs() {
        return Optional.ofNullable(this.tacacs);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SwitchSwitchMgmt defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer configRevert;
        private @Nullable SwitchSwitchMgmtProtectRe protectRe;
        private @Nullable String rootPassword;
        private @Nullable SwitchSwitchMgmtTacacs tacacs;
        public Builder() {}
        public Builder(SwitchSwitchMgmt defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.configRevert = defaults.configRevert;
    	      this.protectRe = defaults.protectRe;
    	      this.rootPassword = defaults.rootPassword;
    	      this.tacacs = defaults.tacacs;
        }

        @CustomType.Setter
        public Builder configRevert(@Nullable Integer configRevert) {

            this.configRevert = configRevert;
            return this;
        }
        @CustomType.Setter
        public Builder protectRe(@Nullable SwitchSwitchMgmtProtectRe protectRe) {

            this.protectRe = protectRe;
            return this;
        }
        @CustomType.Setter
        public Builder rootPassword(@Nullable String rootPassword) {

            this.rootPassword = rootPassword;
            return this;
        }
        @CustomType.Setter
        public Builder tacacs(@Nullable SwitchSwitchMgmtTacacs tacacs) {

            this.tacacs = tacacs;
            return this;
        }
        public SwitchSwitchMgmt build() {
            final var _resultValue = new SwitchSwitchMgmt();
            _resultValue.configRevert = configRevert;
            _resultValue.protectRe = protectRe;
            _resultValue.rootPassword = rootPassword;
            _resultValue.tacacs = tacacs;
            return _resultValue;
        }
    }
}
