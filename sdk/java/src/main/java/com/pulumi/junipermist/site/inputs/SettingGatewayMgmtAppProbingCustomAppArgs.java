// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.junipermist.site.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SettingGatewayMgmtAppProbingCustomAppArgs extends com.pulumi.resources.ResourceArgs {

    public static final SettingGatewayMgmtAppProbingCustomAppArgs Empty = new SettingGatewayMgmtAppProbingCustomAppArgs();

    /**
     * if `protocol`==`icmp`
     * 
     */
    @Import(name="address")
    private @Nullable Output<String> address;

    /**
     * @return if `protocol`==`icmp`
     * 
     */
    public Optional<Output<String>> address() {
        return Optional.ofNullable(this.address);
    }

    @Import(name="appType")
    private @Nullable Output<String> appType;

    public Optional<Output<String>> appType() {
        return Optional.ofNullable(this.appType);
    }

    /**
     * if `protocol`==`http`
     * 
     */
    @Import(name="hostnames")
    private @Nullable Output<List<String>> hostnames;

    /**
     * @return if `protocol`==`http`
     * 
     */
    public Optional<Output<List<String>>> hostnames() {
        return Optional.ofNullable(this.hostnames);
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="network")
    private @Nullable Output<String> network;

    public Optional<Output<String>> network() {
        return Optional.ofNullable(this.network);
    }

    /**
     * enum: `http`, `udp`
     * 
     */
    @Import(name="protocol")
    private @Nullable Output<String> protocol;

    /**
     * @return enum: `http`, `udp`
     * 
     */
    public Optional<Output<String>> protocol() {
        return Optional.ofNullable(this.protocol);
    }

    /**
     * if `protocol`==`http`
     * 
     */
    @Import(name="url")
    private @Nullable Output<String> url;

    /**
     * @return if `protocol`==`http`
     * 
     */
    public Optional<Output<String>> url() {
        return Optional.ofNullable(this.url);
    }

    @Import(name="vrf")
    private @Nullable Output<String> vrf;

    public Optional<Output<String>> vrf() {
        return Optional.ofNullable(this.vrf);
    }

    private SettingGatewayMgmtAppProbingCustomAppArgs() {}

    private SettingGatewayMgmtAppProbingCustomAppArgs(SettingGatewayMgmtAppProbingCustomAppArgs $) {
        this.address = $.address;
        this.appType = $.appType;
        this.hostnames = $.hostnames;
        this.name = $.name;
        this.network = $.network;
        this.protocol = $.protocol;
        this.url = $.url;
        this.vrf = $.vrf;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SettingGatewayMgmtAppProbingCustomAppArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SettingGatewayMgmtAppProbingCustomAppArgs $;

        public Builder() {
            $ = new SettingGatewayMgmtAppProbingCustomAppArgs();
        }

        public Builder(SettingGatewayMgmtAppProbingCustomAppArgs defaults) {
            $ = new SettingGatewayMgmtAppProbingCustomAppArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param address if `protocol`==`icmp`
         * 
         * @return builder
         * 
         */
        public Builder address(@Nullable Output<String> address) {
            $.address = address;
            return this;
        }

        /**
         * @param address if `protocol`==`icmp`
         * 
         * @return builder
         * 
         */
        public Builder address(String address) {
            return address(Output.of(address));
        }

        public Builder appType(@Nullable Output<String> appType) {
            $.appType = appType;
            return this;
        }

        public Builder appType(String appType) {
            return appType(Output.of(appType));
        }

        /**
         * @param hostnames if `protocol`==`http`
         * 
         * @return builder
         * 
         */
        public Builder hostnames(@Nullable Output<List<String>> hostnames) {
            $.hostnames = hostnames;
            return this;
        }

        /**
         * @param hostnames if `protocol`==`http`
         * 
         * @return builder
         * 
         */
        public Builder hostnames(List<String> hostnames) {
            return hostnames(Output.of(hostnames));
        }

        /**
         * @param hostnames if `protocol`==`http`
         * 
         * @return builder
         * 
         */
        public Builder hostnames(String... hostnames) {
            return hostnames(List.of(hostnames));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder network(@Nullable Output<String> network) {
            $.network = network;
            return this;
        }

        public Builder network(String network) {
            return network(Output.of(network));
        }

        /**
         * @param protocol enum: `http`, `udp`
         * 
         * @return builder
         * 
         */
        public Builder protocol(@Nullable Output<String> protocol) {
            $.protocol = protocol;
            return this;
        }

        /**
         * @param protocol enum: `http`, `udp`
         * 
         * @return builder
         * 
         */
        public Builder protocol(String protocol) {
            return protocol(Output.of(protocol));
        }

        /**
         * @param url if `protocol`==`http`
         * 
         * @return builder
         * 
         */
        public Builder url(@Nullable Output<String> url) {
            $.url = url;
            return this;
        }

        /**
         * @param url if `protocol`==`http`
         * 
         * @return builder
         * 
         */
        public Builder url(String url) {
            return url(Output.of(url));
        }

        public Builder vrf(@Nullable Output<String> vrf) {
            $.vrf = vrf;
            return this;
        }

        public Builder vrf(String vrf) {
            return vrf(Output.of(vrf));
        }

        public SettingGatewayMgmtAppProbingCustomAppArgs build() {
            return $;
        }
    }

}
