// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.junipermist.org.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetInventoryOrgInventory {
    /**
     * @return only if `type`==`switch` or `type`==`gateway`
     * whether the switch/gateway is adopted
     * 
     */
    private Boolean adopted;
    /**
     * @return device claim code
     * 
     */
    private String claimCode;
    /**
     * @return whether the device is connected
     * 
     */
    private Boolean connected;
    /**
     * @return deviceprofile id if assigned, null if not assigned
     * 
     */
    private String deviceprofileId;
    /**
     * @return hostname reported by the device
     * 
     */
    private String hostname;
    /**
     * @return device hardware revision number
     * 
     */
    private String hwRev;
    /**
     * @return device id
     * 
     */
    private String id;
    private Boolean jsi;
    /**
     * @return device MAC address
     * 
     */
    private String mac;
    /**
     * @return device model
     * 
     */
    private String model;
    /**
     * @return device name if configured
     * 
     */
    private String name;
    private String orgId;
    /**
     * @return device serial
     * 
     */
    private String serial;
    /**
     * @return Site ID where the device is assigned to
     * 
     */
    private String siteId;
    /**
     * @return device stock keeping unit
     * 
     */
    private String sku;
    /**
     * @return enum: `ap`, `gateway`, `switch`
     * 
     */
    private String type;
    /**
     * @return if `type`==`switch` and device part of a Virtual Chassis, MAC Address of the Virtual Chassis. if `type`==`gateway` and device part of a Clust, MAC Address of the Cluster
     * 
     */
    private String vcMac;

    private GetInventoryOrgInventory() {}
    /**
     * @return only if `type`==`switch` or `type`==`gateway`
     * whether the switch/gateway is adopted
     * 
     */
    public Boolean adopted() {
        return this.adopted;
    }
    /**
     * @return device claim code
     * 
     */
    public String claimCode() {
        return this.claimCode;
    }
    /**
     * @return whether the device is connected
     * 
     */
    public Boolean connected() {
        return this.connected;
    }
    /**
     * @return deviceprofile id if assigned, null if not assigned
     * 
     */
    public String deviceprofileId() {
        return this.deviceprofileId;
    }
    /**
     * @return hostname reported by the device
     * 
     */
    public String hostname() {
        return this.hostname;
    }
    /**
     * @return device hardware revision number
     * 
     */
    public String hwRev() {
        return this.hwRev;
    }
    /**
     * @return device id
     * 
     */
    public String id() {
        return this.id;
    }
    public Boolean jsi() {
        return this.jsi;
    }
    /**
     * @return device MAC address
     * 
     */
    public String mac() {
        return this.mac;
    }
    /**
     * @return device model
     * 
     */
    public String model() {
        return this.model;
    }
    /**
     * @return device name if configured
     * 
     */
    public String name() {
        return this.name;
    }
    public String orgId() {
        return this.orgId;
    }
    /**
     * @return device serial
     * 
     */
    public String serial() {
        return this.serial;
    }
    /**
     * @return Site ID where the device is assigned to
     * 
     */
    public String siteId() {
        return this.siteId;
    }
    /**
     * @return device stock keeping unit
     * 
     */
    public String sku() {
        return this.sku;
    }
    /**
     * @return enum: `ap`, `gateway`, `switch`
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return if `type`==`switch` and device part of a Virtual Chassis, MAC Address of the Virtual Chassis. if `type`==`gateway` and device part of a Clust, MAC Address of the Cluster
     * 
     */
    public String vcMac() {
        return this.vcMac;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetInventoryOrgInventory defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean adopted;
        private String claimCode;
        private Boolean connected;
        private String deviceprofileId;
        private String hostname;
        private String hwRev;
        private String id;
        private Boolean jsi;
        private String mac;
        private String model;
        private String name;
        private String orgId;
        private String serial;
        private String siteId;
        private String sku;
        private String type;
        private String vcMac;
        public Builder() {}
        public Builder(GetInventoryOrgInventory defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.adopted = defaults.adopted;
    	      this.claimCode = defaults.claimCode;
    	      this.connected = defaults.connected;
    	      this.deviceprofileId = defaults.deviceprofileId;
    	      this.hostname = defaults.hostname;
    	      this.hwRev = defaults.hwRev;
    	      this.id = defaults.id;
    	      this.jsi = defaults.jsi;
    	      this.mac = defaults.mac;
    	      this.model = defaults.model;
    	      this.name = defaults.name;
    	      this.orgId = defaults.orgId;
    	      this.serial = defaults.serial;
    	      this.siteId = defaults.siteId;
    	      this.sku = defaults.sku;
    	      this.type = defaults.type;
    	      this.vcMac = defaults.vcMac;
        }

        @CustomType.Setter
        public Builder adopted(Boolean adopted) {
            if (adopted == null) {
              throw new MissingRequiredPropertyException("GetInventoryOrgInventory", "adopted");
            }
            this.adopted = adopted;
            return this;
        }
        @CustomType.Setter
        public Builder claimCode(String claimCode) {
            if (claimCode == null) {
              throw new MissingRequiredPropertyException("GetInventoryOrgInventory", "claimCode");
            }
            this.claimCode = claimCode;
            return this;
        }
        @CustomType.Setter
        public Builder connected(Boolean connected) {
            if (connected == null) {
              throw new MissingRequiredPropertyException("GetInventoryOrgInventory", "connected");
            }
            this.connected = connected;
            return this;
        }
        @CustomType.Setter
        public Builder deviceprofileId(String deviceprofileId) {
            if (deviceprofileId == null) {
              throw new MissingRequiredPropertyException("GetInventoryOrgInventory", "deviceprofileId");
            }
            this.deviceprofileId = deviceprofileId;
            return this;
        }
        @CustomType.Setter
        public Builder hostname(String hostname) {
            if (hostname == null) {
              throw new MissingRequiredPropertyException("GetInventoryOrgInventory", "hostname");
            }
            this.hostname = hostname;
            return this;
        }
        @CustomType.Setter
        public Builder hwRev(String hwRev) {
            if (hwRev == null) {
              throw new MissingRequiredPropertyException("GetInventoryOrgInventory", "hwRev");
            }
            this.hwRev = hwRev;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetInventoryOrgInventory", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder jsi(Boolean jsi) {
            if (jsi == null) {
              throw new MissingRequiredPropertyException("GetInventoryOrgInventory", "jsi");
            }
            this.jsi = jsi;
            return this;
        }
        @CustomType.Setter
        public Builder mac(String mac) {
            if (mac == null) {
              throw new MissingRequiredPropertyException("GetInventoryOrgInventory", "mac");
            }
            this.mac = mac;
            return this;
        }
        @CustomType.Setter
        public Builder model(String model) {
            if (model == null) {
              throw new MissingRequiredPropertyException("GetInventoryOrgInventory", "model");
            }
            this.model = model;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetInventoryOrgInventory", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder orgId(String orgId) {
            if (orgId == null) {
              throw new MissingRequiredPropertyException("GetInventoryOrgInventory", "orgId");
            }
            this.orgId = orgId;
            return this;
        }
        @CustomType.Setter
        public Builder serial(String serial) {
            if (serial == null) {
              throw new MissingRequiredPropertyException("GetInventoryOrgInventory", "serial");
            }
            this.serial = serial;
            return this;
        }
        @CustomType.Setter
        public Builder siteId(String siteId) {
            if (siteId == null) {
              throw new MissingRequiredPropertyException("GetInventoryOrgInventory", "siteId");
            }
            this.siteId = siteId;
            return this;
        }
        @CustomType.Setter
        public Builder sku(String sku) {
            if (sku == null) {
              throw new MissingRequiredPropertyException("GetInventoryOrgInventory", "sku");
            }
            this.sku = sku;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("GetInventoryOrgInventory", "type");
            }
            this.type = type;
            return this;
        }
        @CustomType.Setter
        public Builder vcMac(String vcMac) {
            if (vcMac == null) {
              throw new MissingRequiredPropertyException("GetInventoryOrgInventory", "vcMac");
            }
            this.vcMac = vcMac;
            return this;
        }
        public GetInventoryOrgInventory build() {
            final var _resultValue = new GetInventoryOrgInventory();
            _resultValue.adopted = adopted;
            _resultValue.claimCode = claimCode;
            _resultValue.connected = connected;
            _resultValue.deviceprofileId = deviceprofileId;
            _resultValue.hostname = hostname;
            _resultValue.hwRev = hwRev;
            _resultValue.id = id;
            _resultValue.jsi = jsi;
            _resultValue.mac = mac;
            _resultValue.model = model;
            _resultValue.name = name;
            _resultValue.orgId = orgId;
            _resultValue.serial = serial;
            _resultValue.siteId = siteId;
            _resultValue.sku = sku;
            _resultValue.type = type;
            _resultValue.vcMac = vcMac;
            return _resultValue;
        }
    }
}
