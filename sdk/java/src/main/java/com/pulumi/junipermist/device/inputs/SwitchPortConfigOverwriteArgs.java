// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.junipermist.device.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SwitchPortConfigOverwriteArgs extends com.pulumi.resources.ResourceArgs {

    public static final SwitchPortConfigOverwriteArgs Empty = new SwitchPortConfigOverwriteArgs();

    @Import(name="description")
    private @Nullable Output<String> description;

    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Whether the port is disabled
     * 
     */
    @Import(name="disabled")
    private @Nullable Output<Boolean> disabled;

    /**
     * @return Whether the port is disabled
     * 
     */
    public Optional<Output<Boolean>> disabled() {
        return Optional.ofNullable(this.disabled);
    }

    /**
     * Link connection mode. enum: `auto`, `full`, `half`
     * 
     */
    @Import(name="duplex")
    private @Nullable Output<String> duplex;

    /**
     * @return Link connection mode. enum: `auto`, `full`, `half`
     * 
     */
    public Optional<Output<String>> duplex() {
        return Optional.ofNullable(this.duplex);
    }

    @Import(name="macLimit")
    private @Nullable Output<String> macLimit;

    public Optional<Output<String>> macLimit() {
        return Optional.ofNullable(this.macLimit);
    }

    /**
     * Whether PoE capabilities are disabled for a port
     * 
     */
    @Import(name="poeDisabled")
    private @Nullable Output<Boolean> poeDisabled;

    /**
     * @return Whether PoE capabilities are disabled for a port
     * 
     */
    public Optional<Output<Boolean>> poeDisabled() {
        return Optional.ofNullable(this.poeDisabled);
    }

    /**
     * Native network/vlan for untagged traffic
     * 
     */
    @Import(name="portNetwork")
    private @Nullable Output<String> portNetwork;

    /**
     * @return Native network/vlan for untagged traffic
     * 
     */
    public Optional<Output<String>> portNetwork() {
        return Optional.ofNullable(this.portNetwork);
    }

    /**
     * Port Speed, default is auto to automatically negotiate speed enum: `100m`, `10m`, `1g`, `2.5g`, `5g`, `10g`, `25g`, `40g`, `100g`,`auto`
     * 
     */
    @Import(name="speed")
    private @Nullable Output<String> speed;

    /**
     * @return Port Speed, default is auto to automatically negotiate speed enum: `100m`, `10m`, `1g`, `2.5g`, `5g`, `10g`, `25g`, `40g`, `100g`,`auto`
     * 
     */
    public Optional<Output<String>> speed() {
        return Optional.ofNullable(this.speed);
    }

    private SwitchPortConfigOverwriteArgs() {}

    private SwitchPortConfigOverwriteArgs(SwitchPortConfigOverwriteArgs $) {
        this.description = $.description;
        this.disabled = $.disabled;
        this.duplex = $.duplex;
        this.macLimit = $.macLimit;
        this.poeDisabled = $.poeDisabled;
        this.portNetwork = $.portNetwork;
        this.speed = $.speed;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SwitchPortConfigOverwriteArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SwitchPortConfigOverwriteArgs $;

        public Builder() {
            $ = new SwitchPortConfigOverwriteArgs();
        }

        public Builder(SwitchPortConfigOverwriteArgs defaults) {
            $ = new SwitchPortConfigOverwriteArgs(Objects.requireNonNull(defaults));
        }

        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param disabled Whether the port is disabled
         * 
         * @return builder
         * 
         */
        public Builder disabled(@Nullable Output<Boolean> disabled) {
            $.disabled = disabled;
            return this;
        }

        /**
         * @param disabled Whether the port is disabled
         * 
         * @return builder
         * 
         */
        public Builder disabled(Boolean disabled) {
            return disabled(Output.of(disabled));
        }

        /**
         * @param duplex Link connection mode. enum: `auto`, `full`, `half`
         * 
         * @return builder
         * 
         */
        public Builder duplex(@Nullable Output<String> duplex) {
            $.duplex = duplex;
            return this;
        }

        /**
         * @param duplex Link connection mode. enum: `auto`, `full`, `half`
         * 
         * @return builder
         * 
         */
        public Builder duplex(String duplex) {
            return duplex(Output.of(duplex));
        }

        public Builder macLimit(@Nullable Output<String> macLimit) {
            $.macLimit = macLimit;
            return this;
        }

        public Builder macLimit(String macLimit) {
            return macLimit(Output.of(macLimit));
        }

        /**
         * @param poeDisabled Whether PoE capabilities are disabled for a port
         * 
         * @return builder
         * 
         */
        public Builder poeDisabled(@Nullable Output<Boolean> poeDisabled) {
            $.poeDisabled = poeDisabled;
            return this;
        }

        /**
         * @param poeDisabled Whether PoE capabilities are disabled for a port
         * 
         * @return builder
         * 
         */
        public Builder poeDisabled(Boolean poeDisabled) {
            return poeDisabled(Output.of(poeDisabled));
        }

        /**
         * @param portNetwork Native network/vlan for untagged traffic
         * 
         * @return builder
         * 
         */
        public Builder portNetwork(@Nullable Output<String> portNetwork) {
            $.portNetwork = portNetwork;
            return this;
        }

        /**
         * @param portNetwork Native network/vlan for untagged traffic
         * 
         * @return builder
         * 
         */
        public Builder portNetwork(String portNetwork) {
            return portNetwork(Output.of(portNetwork));
        }

        /**
         * @param speed Port Speed, default is auto to automatically negotiate speed enum: `100m`, `10m`, `1g`, `2.5g`, `5g`, `10g`, `25g`, `40g`, `100g`,`auto`
         * 
         * @return builder
         * 
         */
        public Builder speed(@Nullable Output<String> speed) {
            $.speed = speed;
            return this;
        }

        /**
         * @param speed Port Speed, default is auto to automatically negotiate speed enum: `100m`, `10m`, `1g`, `2.5g`, `5g`, `10g`, `25g`, `40g`, `100g`,`auto`
         * 
         * @return builder
         * 
         */
        public Builder speed(String speed) {
            return speed(Output.of(speed));
        }

        public SwitchPortConfigOverwriteArgs build() {
            return $;
        }
    }

}
