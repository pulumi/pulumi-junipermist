// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.junipermist.site.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class SettingZoneOccupancyAlert {
    /**
     * @return List of email addresses to send email notifications when the alert threshold is reached
     * 
     */
    private @Nullable List<String> emailNotifiers;
    /**
     * @return Indicate whether zone occupancy alert is enabled for the site
     * 
     */
    private @Nullable Boolean enabled;
    /**
     * @return Sending zone-occupancy-alert webhook message only if a zone stays non-compliant (i.e. actual occupancy &gt; occupancy_limit) for a minimum duration specified in the threshold, in minutes
     * 
     */
    private @Nullable Integer threshold;

    private SettingZoneOccupancyAlert() {}
    /**
     * @return List of email addresses to send email notifications when the alert threshold is reached
     * 
     */
    public List<String> emailNotifiers() {
        return this.emailNotifiers == null ? List.of() : this.emailNotifiers;
    }
    /**
     * @return Indicate whether zone occupancy alert is enabled for the site
     * 
     */
    public Optional<Boolean> enabled() {
        return Optional.ofNullable(this.enabled);
    }
    /**
     * @return Sending zone-occupancy-alert webhook message only if a zone stays non-compliant (i.e. actual occupancy &gt; occupancy_limit) for a minimum duration specified in the threshold, in minutes
     * 
     */
    public Optional<Integer> threshold() {
        return Optional.ofNullable(this.threshold);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SettingZoneOccupancyAlert defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<String> emailNotifiers;
        private @Nullable Boolean enabled;
        private @Nullable Integer threshold;
        public Builder() {}
        public Builder(SettingZoneOccupancyAlert defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.emailNotifiers = defaults.emailNotifiers;
    	      this.enabled = defaults.enabled;
    	      this.threshold = defaults.threshold;
        }

        @CustomType.Setter
        public Builder emailNotifiers(@Nullable List<String> emailNotifiers) {

            this.emailNotifiers = emailNotifiers;
            return this;
        }
        public Builder emailNotifiers(String... emailNotifiers) {
            return emailNotifiers(List.of(emailNotifiers));
        }
        @CustomType.Setter
        public Builder enabled(@Nullable Boolean enabled) {

            this.enabled = enabled;
            return this;
        }
        @CustomType.Setter
        public Builder threshold(@Nullable Integer threshold) {

            this.threshold = threshold;
            return this;
        }
        public SettingZoneOccupancyAlert build() {
            final var _resultValue = new SettingZoneOccupancyAlert();
            _resultValue.emailNotifiers = emailNotifiers;
            _resultValue.enabled = enabled;
            _resultValue.threshold = threshold;
            return _resultValue;
        }
    }
}
