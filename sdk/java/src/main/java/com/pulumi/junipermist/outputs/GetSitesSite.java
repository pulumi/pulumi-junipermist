// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.junipermist.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.junipermist.outputs.GetSitesSiteLatlng;
import java.lang.Double;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetSitesSite {
    /**
     * @return full address of the site
     * 
     */
    private String address;
    /**
     * @return Alarm Template ID, this takes precedence over the Org-level alarmtemplate_id
     * 
     */
    private String alarmtemplateId;
    /**
     * @return AP Template ID, used by APs
     * 
     */
    private String aptemplateId;
    /**
     * @return country code for the site (for AP config generation), in two-character
     * 
     */
    private String countryCode;
    private Double createdTime;
    /**
     * @return Gateway Template ID, used by gateways
     * 
     */
    private String gatewaytemplateId;
    private String id;
    private GetSitesSiteLatlng latlng;
    private Double modifiedTime;
    private String name;
    /**
     * @return Network Template ID, this takes precedence over Site Settings
     * 
     */
    private String networktemplateId;
    /**
     * @return optional, any notes about the site
     * 
     */
    private String notes;
    private String orgId;
    /**
     * @return RF Template ID, this takes precedence over Site Settings
     * 
     */
    private String rftemplateId;
    /**
     * @return SecPolicy ID
     * 
     */
    private String secpolicyId;
    /**
     * @return sitegroups this site belongs to
     * 
     */
    private List<String> sitegroupIds;
    /**
     * @return Site Template ID
     * 
     */
    private String sitetemplateId;
    /**
     * @return Timezone the site is at
     * 
     */
    private String timezone;

    private GetSitesSite() {}
    /**
     * @return full address of the site
     * 
     */
    public String address() {
        return this.address;
    }
    /**
     * @return Alarm Template ID, this takes precedence over the Org-level alarmtemplate_id
     * 
     */
    public String alarmtemplateId() {
        return this.alarmtemplateId;
    }
    /**
     * @return AP Template ID, used by APs
     * 
     */
    public String aptemplateId() {
        return this.aptemplateId;
    }
    /**
     * @return country code for the site (for AP config generation), in two-character
     * 
     */
    public String countryCode() {
        return this.countryCode;
    }
    public Double createdTime() {
        return this.createdTime;
    }
    /**
     * @return Gateway Template ID, used by gateways
     * 
     */
    public String gatewaytemplateId() {
        return this.gatewaytemplateId;
    }
    public String id() {
        return this.id;
    }
    public GetSitesSiteLatlng latlng() {
        return this.latlng;
    }
    public Double modifiedTime() {
        return this.modifiedTime;
    }
    public String name() {
        return this.name;
    }
    /**
     * @return Network Template ID, this takes precedence over Site Settings
     * 
     */
    public String networktemplateId() {
        return this.networktemplateId;
    }
    /**
     * @return optional, any notes about the site
     * 
     */
    public String notes() {
        return this.notes;
    }
    public String orgId() {
        return this.orgId;
    }
    /**
     * @return RF Template ID, this takes precedence over Site Settings
     * 
     */
    public String rftemplateId() {
        return this.rftemplateId;
    }
    /**
     * @return SecPolicy ID
     * 
     */
    public String secpolicyId() {
        return this.secpolicyId;
    }
    /**
     * @return sitegroups this site belongs to
     * 
     */
    public List<String> sitegroupIds() {
        return this.sitegroupIds;
    }
    /**
     * @return Site Template ID
     * 
     */
    public String sitetemplateId() {
        return this.sitetemplateId;
    }
    /**
     * @return Timezone the site is at
     * 
     */
    public String timezone() {
        return this.timezone;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSitesSite defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String address;
        private String alarmtemplateId;
        private String aptemplateId;
        private String countryCode;
        private Double createdTime;
        private String gatewaytemplateId;
        private String id;
        private GetSitesSiteLatlng latlng;
        private Double modifiedTime;
        private String name;
        private String networktemplateId;
        private String notes;
        private String orgId;
        private String rftemplateId;
        private String secpolicyId;
        private List<String> sitegroupIds;
        private String sitetemplateId;
        private String timezone;
        public Builder() {}
        public Builder(GetSitesSite defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.address = defaults.address;
    	      this.alarmtemplateId = defaults.alarmtemplateId;
    	      this.aptemplateId = defaults.aptemplateId;
    	      this.countryCode = defaults.countryCode;
    	      this.createdTime = defaults.createdTime;
    	      this.gatewaytemplateId = defaults.gatewaytemplateId;
    	      this.id = defaults.id;
    	      this.latlng = defaults.latlng;
    	      this.modifiedTime = defaults.modifiedTime;
    	      this.name = defaults.name;
    	      this.networktemplateId = defaults.networktemplateId;
    	      this.notes = defaults.notes;
    	      this.orgId = defaults.orgId;
    	      this.rftemplateId = defaults.rftemplateId;
    	      this.secpolicyId = defaults.secpolicyId;
    	      this.sitegroupIds = defaults.sitegroupIds;
    	      this.sitetemplateId = defaults.sitetemplateId;
    	      this.timezone = defaults.timezone;
        }

        @CustomType.Setter
        public Builder address(String address) {
            if (address == null) {
              throw new MissingRequiredPropertyException("GetSitesSite", "address");
            }
            this.address = address;
            return this;
        }
        @CustomType.Setter
        public Builder alarmtemplateId(String alarmtemplateId) {
            if (alarmtemplateId == null) {
              throw new MissingRequiredPropertyException("GetSitesSite", "alarmtemplateId");
            }
            this.alarmtemplateId = alarmtemplateId;
            return this;
        }
        @CustomType.Setter
        public Builder aptemplateId(String aptemplateId) {
            if (aptemplateId == null) {
              throw new MissingRequiredPropertyException("GetSitesSite", "aptemplateId");
            }
            this.aptemplateId = aptemplateId;
            return this;
        }
        @CustomType.Setter
        public Builder countryCode(String countryCode) {
            if (countryCode == null) {
              throw new MissingRequiredPropertyException("GetSitesSite", "countryCode");
            }
            this.countryCode = countryCode;
            return this;
        }
        @CustomType.Setter
        public Builder createdTime(Double createdTime) {
            if (createdTime == null) {
              throw new MissingRequiredPropertyException("GetSitesSite", "createdTime");
            }
            this.createdTime = createdTime;
            return this;
        }
        @CustomType.Setter
        public Builder gatewaytemplateId(String gatewaytemplateId) {
            if (gatewaytemplateId == null) {
              throw new MissingRequiredPropertyException("GetSitesSite", "gatewaytemplateId");
            }
            this.gatewaytemplateId = gatewaytemplateId;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetSitesSite", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder latlng(GetSitesSiteLatlng latlng) {
            if (latlng == null) {
              throw new MissingRequiredPropertyException("GetSitesSite", "latlng");
            }
            this.latlng = latlng;
            return this;
        }
        @CustomType.Setter
        public Builder modifiedTime(Double modifiedTime) {
            if (modifiedTime == null) {
              throw new MissingRequiredPropertyException("GetSitesSite", "modifiedTime");
            }
            this.modifiedTime = modifiedTime;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetSitesSite", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder networktemplateId(String networktemplateId) {
            if (networktemplateId == null) {
              throw new MissingRequiredPropertyException("GetSitesSite", "networktemplateId");
            }
            this.networktemplateId = networktemplateId;
            return this;
        }
        @CustomType.Setter
        public Builder notes(String notes) {
            if (notes == null) {
              throw new MissingRequiredPropertyException("GetSitesSite", "notes");
            }
            this.notes = notes;
            return this;
        }
        @CustomType.Setter
        public Builder orgId(String orgId) {
            if (orgId == null) {
              throw new MissingRequiredPropertyException("GetSitesSite", "orgId");
            }
            this.orgId = orgId;
            return this;
        }
        @CustomType.Setter
        public Builder rftemplateId(String rftemplateId) {
            if (rftemplateId == null) {
              throw new MissingRequiredPropertyException("GetSitesSite", "rftemplateId");
            }
            this.rftemplateId = rftemplateId;
            return this;
        }
        @CustomType.Setter
        public Builder secpolicyId(String secpolicyId) {
            if (secpolicyId == null) {
              throw new MissingRequiredPropertyException("GetSitesSite", "secpolicyId");
            }
            this.secpolicyId = secpolicyId;
            return this;
        }
        @CustomType.Setter
        public Builder sitegroupIds(List<String> sitegroupIds) {
            if (sitegroupIds == null) {
              throw new MissingRequiredPropertyException("GetSitesSite", "sitegroupIds");
            }
            this.sitegroupIds = sitegroupIds;
            return this;
        }
        public Builder sitegroupIds(String... sitegroupIds) {
            return sitegroupIds(List.of(sitegroupIds));
        }
        @CustomType.Setter
        public Builder sitetemplateId(String sitetemplateId) {
            if (sitetemplateId == null) {
              throw new MissingRequiredPropertyException("GetSitesSite", "sitetemplateId");
            }
            this.sitetemplateId = sitetemplateId;
            return this;
        }
        @CustomType.Setter
        public Builder timezone(String timezone) {
            if (timezone == null) {
              throw new MissingRequiredPropertyException("GetSitesSite", "timezone");
            }
            this.timezone = timezone;
            return this;
        }
        public GetSitesSite build() {
            final var _resultValue = new GetSitesSite();
            _resultValue.address = address;
            _resultValue.alarmtemplateId = alarmtemplateId;
            _resultValue.aptemplateId = aptemplateId;
            _resultValue.countryCode = countryCode;
            _resultValue.createdTime = createdTime;
            _resultValue.gatewaytemplateId = gatewaytemplateId;
            _resultValue.id = id;
            _resultValue.latlng = latlng;
            _resultValue.modifiedTime = modifiedTime;
            _resultValue.name = name;
            _resultValue.networktemplateId = networktemplateId;
            _resultValue.notes = notes;
            _resultValue.orgId = orgId;
            _resultValue.rftemplateId = rftemplateId;
            _resultValue.secpolicyId = secpolicyId;
            _resultValue.sitegroupIds = sitegroupIds;
            _resultValue.sitetemplateId = sitetemplateId;
            _resultValue.timezone = timezone;
            return _resultValue;
        }
    }
}
