// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.junipermist.device.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetApStatsDeviceApStatFwupdate {
    private Integer progress;
    private String status;
    private Integer statusId;
    private Double timestamp;
    private Boolean willRetry;

    private GetApStatsDeviceApStatFwupdate() {}
    public Integer progress() {
        return this.progress;
    }
    public String status() {
        return this.status;
    }
    public Integer statusId() {
        return this.statusId;
    }
    public Double timestamp() {
        return this.timestamp;
    }
    public Boolean willRetry() {
        return this.willRetry;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetApStatsDeviceApStatFwupdate defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer progress;
        private String status;
        private Integer statusId;
        private Double timestamp;
        private Boolean willRetry;
        public Builder() {}
        public Builder(GetApStatsDeviceApStatFwupdate defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.progress = defaults.progress;
    	      this.status = defaults.status;
    	      this.statusId = defaults.statusId;
    	      this.timestamp = defaults.timestamp;
    	      this.willRetry = defaults.willRetry;
        }

        @CustomType.Setter
        public Builder progress(Integer progress) {
            if (progress == null) {
              throw new MissingRequiredPropertyException("GetApStatsDeviceApStatFwupdate", "progress");
            }
            this.progress = progress;
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            if (status == null) {
              throw new MissingRequiredPropertyException("GetApStatsDeviceApStatFwupdate", "status");
            }
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder statusId(Integer statusId) {
            if (statusId == null) {
              throw new MissingRequiredPropertyException("GetApStatsDeviceApStatFwupdate", "statusId");
            }
            this.statusId = statusId;
            return this;
        }
        @CustomType.Setter
        public Builder timestamp(Double timestamp) {
            if (timestamp == null) {
              throw new MissingRequiredPropertyException("GetApStatsDeviceApStatFwupdate", "timestamp");
            }
            this.timestamp = timestamp;
            return this;
        }
        @CustomType.Setter
        public Builder willRetry(Boolean willRetry) {
            if (willRetry == null) {
              throw new MissingRequiredPropertyException("GetApStatsDeviceApStatFwupdate", "willRetry");
            }
            this.willRetry = willRetry;
            return this;
        }
        public GetApStatsDeviceApStatFwupdate build() {
            final var _resultValue = new GetApStatsDeviceApStatFwupdate();
            _resultValue.progress = progress;
            _resultValue.status = status;
            _resultValue.statusId = statusId;
            _resultValue.timestamp = timestamp;
            _resultValue.willRetry = willRetry;
            return _resultValue;
        }
    }
}
