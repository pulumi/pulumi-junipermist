// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.junipermist.org.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DeviceprofileGatewayTunnelConfigsIpsecProposalArgs extends com.pulumi.resources.ResourceArgs {

    public static final DeviceprofileGatewayTunnelConfigsIpsecProposalArgs Empty = new DeviceprofileGatewayTunnelConfigsIpsecProposalArgs();

    /**
     * enum: `md5`, `sha1`, `sha2`
     * 
     */
    @Import(name="authAlgo")
    private @Nullable Output<String> authAlgo;

    /**
     * @return enum: `md5`, `sha1`, `sha2`
     * 
     */
    public Optional<Output<String>> authAlgo() {
        return Optional.ofNullable(this.authAlgo);
    }

    /**
     * Only if `provider`== `custom-ipsec`. enum:
     *   * 1
     *   * 2 (1024-bit)
     *   * 5
     *   * 14 (default, 2048-bit)
     *   * 15 (3072-bit)
     *   * 16 (4096-bit)
     *   * 19 (256-bit ECP)
     *   * 20 (384-bit ECP)
     *   * 21 (521-bit ECP)
     *   * 24 (2048-bit ECP)
     * 
     */
    @Import(name="dhGroup")
    private @Nullable Output<String> dhGroup;

    /**
     * @return Only if `provider`== `custom-ipsec`. enum:
     *   * 1
     *   * 2 (1024-bit)
     *   * 5
     *   * 14 (default, 2048-bit)
     *   * 15 (3072-bit)
     *   * 16 (4096-bit)
     *   * 19 (256-bit ECP)
     *   * 20 (384-bit ECP)
     *   * 21 (521-bit ECP)
     *   * 24 (2048-bit ECP)
     * 
     */
    public Optional<Output<String>> dhGroup() {
        return Optional.ofNullable(this.dhGroup);
    }

    /**
     * enum: `3des`, `aes128`, `aes256`, `aes_gcm128`, `aes_gcm256`
     * 
     */
    @Import(name="encAlgo")
    private @Nullable Output<String> encAlgo;

    /**
     * @return enum: `3des`, `aes128`, `aes256`, `aes_gcm128`, `aes_gcm256`
     * 
     */
    public Optional<Output<String>> encAlgo() {
        return Optional.ofNullable(this.encAlgo);
    }

    private DeviceprofileGatewayTunnelConfigsIpsecProposalArgs() {}

    private DeviceprofileGatewayTunnelConfigsIpsecProposalArgs(DeviceprofileGatewayTunnelConfigsIpsecProposalArgs $) {
        this.authAlgo = $.authAlgo;
        this.dhGroup = $.dhGroup;
        this.encAlgo = $.encAlgo;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DeviceprofileGatewayTunnelConfigsIpsecProposalArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DeviceprofileGatewayTunnelConfigsIpsecProposalArgs $;

        public Builder() {
            $ = new DeviceprofileGatewayTunnelConfigsIpsecProposalArgs();
        }

        public Builder(DeviceprofileGatewayTunnelConfigsIpsecProposalArgs defaults) {
            $ = new DeviceprofileGatewayTunnelConfigsIpsecProposalArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param authAlgo enum: `md5`, `sha1`, `sha2`
         * 
         * @return builder
         * 
         */
        public Builder authAlgo(@Nullable Output<String> authAlgo) {
            $.authAlgo = authAlgo;
            return this;
        }

        /**
         * @param authAlgo enum: `md5`, `sha1`, `sha2`
         * 
         * @return builder
         * 
         */
        public Builder authAlgo(String authAlgo) {
            return authAlgo(Output.of(authAlgo));
        }

        /**
         * @param dhGroup Only if `provider`== `custom-ipsec`. enum:
         *   * 1
         *   * 2 (1024-bit)
         *   * 5
         *   * 14 (default, 2048-bit)
         *   * 15 (3072-bit)
         *   * 16 (4096-bit)
         *   * 19 (256-bit ECP)
         *   * 20 (384-bit ECP)
         *   * 21 (521-bit ECP)
         *   * 24 (2048-bit ECP)
         * 
         * @return builder
         * 
         */
        public Builder dhGroup(@Nullable Output<String> dhGroup) {
            $.dhGroup = dhGroup;
            return this;
        }

        /**
         * @param dhGroup Only if `provider`== `custom-ipsec`. enum:
         *   * 1
         *   * 2 (1024-bit)
         *   * 5
         *   * 14 (default, 2048-bit)
         *   * 15 (3072-bit)
         *   * 16 (4096-bit)
         *   * 19 (256-bit ECP)
         *   * 20 (384-bit ECP)
         *   * 21 (521-bit ECP)
         *   * 24 (2048-bit ECP)
         * 
         * @return builder
         * 
         */
        public Builder dhGroup(String dhGroup) {
            return dhGroup(Output.of(dhGroup));
        }

        /**
         * @param encAlgo enum: `3des`, `aes128`, `aes256`, `aes_gcm128`, `aes_gcm256`
         * 
         * @return builder
         * 
         */
        public Builder encAlgo(@Nullable Output<String> encAlgo) {
            $.encAlgo = encAlgo;
            return this;
        }

        /**
         * @param encAlgo enum: `3des`, `aes128`, `aes256`, `aes_gcm128`, `aes_gcm256`
         * 
         * @return builder
         * 
         */
        public Builder encAlgo(String encAlgo) {
            return encAlgo(Output.of(encAlgo));
        }

        public DeviceprofileGatewayTunnelConfigsIpsecProposalArgs build() {
            return $;
        }
    }

}
