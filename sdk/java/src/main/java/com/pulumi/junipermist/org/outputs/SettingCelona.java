// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.junipermist.org.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class SettingCelona {
    private String apiKey;
    private String apiPrefix;

    private SettingCelona() {}
    public String apiKey() {
        return this.apiKey;
    }
    public String apiPrefix() {
        return this.apiPrefix;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SettingCelona defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String apiKey;
        private String apiPrefix;
        public Builder() {}
        public Builder(SettingCelona defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.apiKey = defaults.apiKey;
    	      this.apiPrefix = defaults.apiPrefix;
        }

        @CustomType.Setter
        public Builder apiKey(String apiKey) {
            if (apiKey == null) {
              throw new MissingRequiredPropertyException("SettingCelona", "apiKey");
            }
            this.apiKey = apiKey;
            return this;
        }
        @CustomType.Setter
        public Builder apiPrefix(String apiPrefix) {
            if (apiPrefix == null) {
              throw new MissingRequiredPropertyException("SettingCelona", "apiPrefix");
            }
            this.apiPrefix = apiPrefix;
            return this;
        }
        public SettingCelona build() {
            final var _resultValue = new SettingCelona();
            _resultValue.apiKey = apiKey;
            _resultValue.apiPrefix = apiPrefix;
            return _resultValue;
        }
    }
}
