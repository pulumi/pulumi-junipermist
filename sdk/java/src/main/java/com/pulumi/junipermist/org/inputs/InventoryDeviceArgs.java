// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.junipermist.org.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class InventoryDeviceArgs extends com.pulumi.resources.ResourceArgs {

    public static final InventoryDeviceArgs Empty = new InventoryDeviceArgs();

    /**
     * Device Claim Code. Required for claimed devices. Removing an adopted device from the list will release it
     * 
     */
    @Import(name="claimCode")
    private @Nullable Output<String> claimCode;

    /**
     * @return Device Claim Code. Required for claimed devices. Removing an adopted device from the list will release it
     * 
     */
    public Optional<Output<String>> claimCode() {
        return Optional.ofNullable(this.claimCode);
    }

    /**
     * Device Hostname
     * 
     */
    @Import(name="hostname")
    private @Nullable Output<String> hostname;

    /**
     * @return Device Hostname
     * 
     */
    public Optional<Output<String>> hostname() {
        return Optional.ofNullable(this.hostname);
    }

    /**
     * Mist Device ID
     * 
     */
    @Import(name="id")
    private @Nullable Output<String> id;

    /**
     * @return Mist Device ID
     * 
     */
    public Optional<Output<String>> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * Device MAC address. Required to assign adopted devices to site. Removing an adopted device from the list will not release it, but will unassign it from the site. Cannot be specified when `claim_code` is used
     * 
     */
    @Import(name="mac")
    private @Nullable Output<String> mac;

    /**
     * @return Device MAC address. Required to assign adopted devices to site. Removing an adopted device from the list will not release it, but will unassign it from the site. Cannot be specified when `claim_code` is used
     * 
     */
    public Optional<Output<String>> mac() {
        return Optional.ofNullable(this.mac);
    }

    /**
     * Device model
     * 
     */
    @Import(name="model")
    private @Nullable Output<String> model;

    /**
     * @return Device model
     * 
     */
    public Optional<Output<String>> model() {
        return Optional.ofNullable(this.model);
    }

    @Import(name="orgId")
    private @Nullable Output<String> orgId;

    public Optional<Output<String>> orgId() {
        return Optional.ofNullable(this.orgId);
    }

    /**
     * Device serial
     * 
     */
    @Import(name="serial")
    private @Nullable Output<String> serial;

    /**
     * @return Device serial
     * 
     */
    public Optional<Output<String>> serial() {
        return Optional.ofNullable(this.serial);
    }

    /**
     * Site ID. Used to assign device to a Site
     * 
     */
    @Import(name="siteId")
    private @Nullable Output<String> siteId;

    /**
     * @return Site ID. Used to assign device to a Site
     * 
     */
    public Optional<Output<String>> siteId() {
        return Optional.ofNullable(this.siteId);
    }

    @Import(name="type")
    private @Nullable Output<String> type;

    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    /**
     * Virtual Chassis MAC Address
     * 
     */
    @Import(name="vcMac")
    private @Nullable Output<String> vcMac;

    /**
     * @return Virtual Chassis MAC Address
     * 
     */
    public Optional<Output<String>> vcMac() {
        return Optional.ofNullable(this.vcMac);
    }

    private InventoryDeviceArgs() {}

    private InventoryDeviceArgs(InventoryDeviceArgs $) {
        this.claimCode = $.claimCode;
        this.hostname = $.hostname;
        this.id = $.id;
        this.mac = $.mac;
        this.model = $.model;
        this.orgId = $.orgId;
        this.serial = $.serial;
        this.siteId = $.siteId;
        this.type = $.type;
        this.vcMac = $.vcMac;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InventoryDeviceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InventoryDeviceArgs $;

        public Builder() {
            $ = new InventoryDeviceArgs();
        }

        public Builder(InventoryDeviceArgs defaults) {
            $ = new InventoryDeviceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param claimCode Device Claim Code. Required for claimed devices. Removing an adopted device from the list will release it
         * 
         * @return builder
         * 
         */
        public Builder claimCode(@Nullable Output<String> claimCode) {
            $.claimCode = claimCode;
            return this;
        }

        /**
         * @param claimCode Device Claim Code. Required for claimed devices. Removing an adopted device from the list will release it
         * 
         * @return builder
         * 
         */
        public Builder claimCode(String claimCode) {
            return claimCode(Output.of(claimCode));
        }

        /**
         * @param hostname Device Hostname
         * 
         * @return builder
         * 
         */
        public Builder hostname(@Nullable Output<String> hostname) {
            $.hostname = hostname;
            return this;
        }

        /**
         * @param hostname Device Hostname
         * 
         * @return builder
         * 
         */
        public Builder hostname(String hostname) {
            return hostname(Output.of(hostname));
        }

        /**
         * @param id Mist Device ID
         * 
         * @return builder
         * 
         */
        public Builder id(@Nullable Output<String> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id Mist Device ID
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            return id(Output.of(id));
        }

        /**
         * @param mac Device MAC address. Required to assign adopted devices to site. Removing an adopted device from the list will not release it, but will unassign it from the site. Cannot be specified when `claim_code` is used
         * 
         * @return builder
         * 
         */
        public Builder mac(@Nullable Output<String> mac) {
            $.mac = mac;
            return this;
        }

        /**
         * @param mac Device MAC address. Required to assign adopted devices to site. Removing an adopted device from the list will not release it, but will unassign it from the site. Cannot be specified when `claim_code` is used
         * 
         * @return builder
         * 
         */
        public Builder mac(String mac) {
            return mac(Output.of(mac));
        }

        /**
         * @param model Device model
         * 
         * @return builder
         * 
         */
        public Builder model(@Nullable Output<String> model) {
            $.model = model;
            return this;
        }

        /**
         * @param model Device model
         * 
         * @return builder
         * 
         */
        public Builder model(String model) {
            return model(Output.of(model));
        }

        public Builder orgId(@Nullable Output<String> orgId) {
            $.orgId = orgId;
            return this;
        }

        public Builder orgId(String orgId) {
            return orgId(Output.of(orgId));
        }

        /**
         * @param serial Device serial
         * 
         * @return builder
         * 
         */
        public Builder serial(@Nullable Output<String> serial) {
            $.serial = serial;
            return this;
        }

        /**
         * @param serial Device serial
         * 
         * @return builder
         * 
         */
        public Builder serial(String serial) {
            return serial(Output.of(serial));
        }

        /**
         * @param siteId Site ID. Used to assign device to a Site
         * 
         * @return builder
         * 
         */
        public Builder siteId(@Nullable Output<String> siteId) {
            $.siteId = siteId;
            return this;
        }

        /**
         * @param siteId Site ID. Used to assign device to a Site
         * 
         * @return builder
         * 
         */
        public Builder siteId(String siteId) {
            return siteId(Output.of(siteId));
        }

        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        public Builder type(String type) {
            return type(Output.of(type));
        }

        /**
         * @param vcMac Virtual Chassis MAC Address
         * 
         * @return builder
         * 
         */
        public Builder vcMac(@Nullable Output<String> vcMac) {
            $.vcMac = vcMac;
            return this;
        }

        /**
         * @param vcMac Virtual Chassis MAC Address
         * 
         * @return builder
         * 
         */
        public Builder vcMac(String vcMac) {
            return vcMac(Output.of(vcMac));
        }

        public InventoryDeviceArgs build() {
            return $;
        }
    }

}
