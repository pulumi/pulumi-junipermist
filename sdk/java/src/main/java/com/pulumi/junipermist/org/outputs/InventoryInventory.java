// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.junipermist.org.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class InventoryInventory {
    /**
     * @return device claim code
     * 
     */
    private @Nullable String claimCode;
    /**
     * @return deviceprofile id if assigned, null if not assigned
     * 
     */
    private @Nullable String deviceprofileId;
    /**
     * @return hostname reported by the device
     * 
     */
    private @Nullable String hostname;
    /**
     * @return device id
     * 
     */
    private @Nullable String id;
    /**
     * @return device MAC address
     * 
     */
    private @Nullable String mac;
    /**
     * @return device model
     * 
     */
    private @Nullable String model;
    private @Nullable String orgId;
    /**
     * @return device serial
     * 
     */
    private @Nullable String serial;
    /**
     * @return Site ID. Used to assign device to a Site
     * 
     */
    private @Nullable String siteId;
    /**
     * @return enum: `ap`, `gateway`, `switch`
     * 
     */
    private @Nullable String type;
    /**
     * @return Unclaim the device from the Mist Organization when removed from the provider inventory. Default is `false`
     * 
     */
    private @Nullable Boolean unclaimWhenDestroyed;
    /**
     * @return if `type`==`switch` and device part of a Virtual Chassis, MAC Address of the Virtual Chassis. if `type`==`gateway` and device part of a Cluster, MAC Address of the Cluster
     * 
     */
    private @Nullable String vcMac;

    private InventoryInventory() {}
    /**
     * @return device claim code
     * 
     */
    public Optional<String> claimCode() {
        return Optional.ofNullable(this.claimCode);
    }
    /**
     * @return deviceprofile id if assigned, null if not assigned
     * 
     */
    public Optional<String> deviceprofileId() {
        return Optional.ofNullable(this.deviceprofileId);
    }
    /**
     * @return hostname reported by the device
     * 
     */
    public Optional<String> hostname() {
        return Optional.ofNullable(this.hostname);
    }
    /**
     * @return device id
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return device MAC address
     * 
     */
    public Optional<String> mac() {
        return Optional.ofNullable(this.mac);
    }
    /**
     * @return device model
     * 
     */
    public Optional<String> model() {
        return Optional.ofNullable(this.model);
    }
    public Optional<String> orgId() {
        return Optional.ofNullable(this.orgId);
    }
    /**
     * @return device serial
     * 
     */
    public Optional<String> serial() {
        return Optional.ofNullable(this.serial);
    }
    /**
     * @return Site ID. Used to assign device to a Site
     * 
     */
    public Optional<String> siteId() {
        return Optional.ofNullable(this.siteId);
    }
    /**
     * @return enum: `ap`, `gateway`, `switch`
     * 
     */
    public Optional<String> type() {
        return Optional.ofNullable(this.type);
    }
    /**
     * @return Unclaim the device from the Mist Organization when removed from the provider inventory. Default is `false`
     * 
     */
    public Optional<Boolean> unclaimWhenDestroyed() {
        return Optional.ofNullable(this.unclaimWhenDestroyed);
    }
    /**
     * @return if `type`==`switch` and device part of a Virtual Chassis, MAC Address of the Virtual Chassis. if `type`==`gateway` and device part of a Cluster, MAC Address of the Cluster
     * 
     */
    public Optional<String> vcMac() {
        return Optional.ofNullable(this.vcMac);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(InventoryInventory defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String claimCode;
        private @Nullable String deviceprofileId;
        private @Nullable String hostname;
        private @Nullable String id;
        private @Nullable String mac;
        private @Nullable String model;
        private @Nullable String orgId;
        private @Nullable String serial;
        private @Nullable String siteId;
        private @Nullable String type;
        private @Nullable Boolean unclaimWhenDestroyed;
        private @Nullable String vcMac;
        public Builder() {}
        public Builder(InventoryInventory defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.claimCode = defaults.claimCode;
    	      this.deviceprofileId = defaults.deviceprofileId;
    	      this.hostname = defaults.hostname;
    	      this.id = defaults.id;
    	      this.mac = defaults.mac;
    	      this.model = defaults.model;
    	      this.orgId = defaults.orgId;
    	      this.serial = defaults.serial;
    	      this.siteId = defaults.siteId;
    	      this.type = defaults.type;
    	      this.unclaimWhenDestroyed = defaults.unclaimWhenDestroyed;
    	      this.vcMac = defaults.vcMac;
        }

        @CustomType.Setter
        public Builder claimCode(@Nullable String claimCode) {

            this.claimCode = claimCode;
            return this;
        }
        @CustomType.Setter
        public Builder deviceprofileId(@Nullable String deviceprofileId) {

            this.deviceprofileId = deviceprofileId;
            return this;
        }
        @CustomType.Setter
        public Builder hostname(@Nullable String hostname) {

            this.hostname = hostname;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {

            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder mac(@Nullable String mac) {

            this.mac = mac;
            return this;
        }
        @CustomType.Setter
        public Builder model(@Nullable String model) {

            this.model = model;
            return this;
        }
        @CustomType.Setter
        public Builder orgId(@Nullable String orgId) {

            this.orgId = orgId;
            return this;
        }
        @CustomType.Setter
        public Builder serial(@Nullable String serial) {

            this.serial = serial;
            return this;
        }
        @CustomType.Setter
        public Builder siteId(@Nullable String siteId) {

            this.siteId = siteId;
            return this;
        }
        @CustomType.Setter
        public Builder type(@Nullable String type) {

            this.type = type;
            return this;
        }
        @CustomType.Setter
        public Builder unclaimWhenDestroyed(@Nullable Boolean unclaimWhenDestroyed) {

            this.unclaimWhenDestroyed = unclaimWhenDestroyed;
            return this;
        }
        @CustomType.Setter
        public Builder vcMac(@Nullable String vcMac) {

            this.vcMac = vcMac;
            return this;
        }
        public InventoryInventory build() {
            final var _resultValue = new InventoryInventory();
            _resultValue.claimCode = claimCode;
            _resultValue.deviceprofileId = deviceprofileId;
            _resultValue.hostname = hostname;
            _resultValue.id = id;
            _resultValue.mac = mac;
            _resultValue.model = model;
            _resultValue.orgId = orgId;
            _resultValue.serial = serial;
            _resultValue.siteId = siteId;
            _resultValue.type = type;
            _resultValue.unclaimWhenDestroyed = unclaimWhenDestroyed;
            _resultValue.vcMac = vcMac;
            return _resultValue;
        }
    }
}
