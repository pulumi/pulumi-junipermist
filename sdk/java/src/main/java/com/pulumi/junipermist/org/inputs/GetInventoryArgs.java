// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.junipermist.org.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetInventoryArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetInventoryArgs Empty = new GetInventoryArgs();

    /**
     * MAC address
     * 
     */
    @Import(name="mac")
    private @Nullable Output<String> mac;

    /**
     * @return MAC address
     * 
     */
    public Optional<Output<String>> mac() {
        return Optional.ofNullable(this.mac);
    }

    /**
     * device model
     * 
     */
    @Import(name="model")
    private @Nullable Output<String> model;

    /**
     * @return device model
     * 
     */
    public Optional<Output<String>> model() {
        return Optional.ofNullable(this.model);
    }

    @Import(name="orgId", required=true)
    private Output<String> orgId;

    public Output<String> orgId() {
        return this.orgId;
    }

    /**
     * device serial
     * 
     */
    @Import(name="serial")
    private @Nullable Output<String> serial;

    /**
     * @return device serial
     * 
     */
    public Optional<Output<String>> serial() {
        return Optional.ofNullable(this.serial);
    }

    /**
     * site id if assigned, null if not assigned
     * 
     */
    @Import(name="siteId")
    private @Nullable Output<String> siteId;

    /**
     * @return site id if assigned, null if not assigned
     * 
     */
    public Optional<Output<String>> siteId() {
        return Optional.ofNullable(this.siteId);
    }

    /**
     * to display Unassigned devices
     * 
     */
    @Import(name="unassigned")
    private @Nullable Output<Boolean> unassigned;

    /**
     * @return to display Unassigned devices
     * 
     */
    public Optional<Output<Boolean>> unassigned() {
        return Optional.ofNullable(this.unassigned);
    }

    /**
     * To display Virtual Chassis members
     * 
     */
    @Import(name="vc")
    private @Nullable Output<Boolean> vc;

    /**
     * @return To display Virtual Chassis members
     * 
     */
    public Optional<Output<Boolean>> vc() {
        return Optional.ofNullable(this.vc);
    }

    /**
     * Virtual Chassis MAC Address
     * 
     */
    @Import(name="vcMac")
    private @Nullable Output<String> vcMac;

    /**
     * @return Virtual Chassis MAC Address
     * 
     */
    public Optional<Output<String>> vcMac() {
        return Optional.ofNullable(this.vcMac);
    }

    private GetInventoryArgs() {}

    private GetInventoryArgs(GetInventoryArgs $) {
        this.mac = $.mac;
        this.model = $.model;
        this.orgId = $.orgId;
        this.serial = $.serial;
        this.siteId = $.siteId;
        this.unassigned = $.unassigned;
        this.vc = $.vc;
        this.vcMac = $.vcMac;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetInventoryArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetInventoryArgs $;

        public Builder() {
            $ = new GetInventoryArgs();
        }

        public Builder(GetInventoryArgs defaults) {
            $ = new GetInventoryArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param mac MAC address
         * 
         * @return builder
         * 
         */
        public Builder mac(@Nullable Output<String> mac) {
            $.mac = mac;
            return this;
        }

        /**
         * @param mac MAC address
         * 
         * @return builder
         * 
         */
        public Builder mac(String mac) {
            return mac(Output.of(mac));
        }

        /**
         * @param model device model
         * 
         * @return builder
         * 
         */
        public Builder model(@Nullable Output<String> model) {
            $.model = model;
            return this;
        }

        /**
         * @param model device model
         * 
         * @return builder
         * 
         */
        public Builder model(String model) {
            return model(Output.of(model));
        }

        public Builder orgId(Output<String> orgId) {
            $.orgId = orgId;
            return this;
        }

        public Builder orgId(String orgId) {
            return orgId(Output.of(orgId));
        }

        /**
         * @param serial device serial
         * 
         * @return builder
         * 
         */
        public Builder serial(@Nullable Output<String> serial) {
            $.serial = serial;
            return this;
        }

        /**
         * @param serial device serial
         * 
         * @return builder
         * 
         */
        public Builder serial(String serial) {
            return serial(Output.of(serial));
        }

        /**
         * @param siteId site id if assigned, null if not assigned
         * 
         * @return builder
         * 
         */
        public Builder siteId(@Nullable Output<String> siteId) {
            $.siteId = siteId;
            return this;
        }

        /**
         * @param siteId site id if assigned, null if not assigned
         * 
         * @return builder
         * 
         */
        public Builder siteId(String siteId) {
            return siteId(Output.of(siteId));
        }

        /**
         * @param unassigned to display Unassigned devices
         * 
         * @return builder
         * 
         */
        public Builder unassigned(@Nullable Output<Boolean> unassigned) {
            $.unassigned = unassigned;
            return this;
        }

        /**
         * @param unassigned to display Unassigned devices
         * 
         * @return builder
         * 
         */
        public Builder unassigned(Boolean unassigned) {
            return unassigned(Output.of(unassigned));
        }

        /**
         * @param vc To display Virtual Chassis members
         * 
         * @return builder
         * 
         */
        public Builder vc(@Nullable Output<Boolean> vc) {
            $.vc = vc;
            return this;
        }

        /**
         * @param vc To display Virtual Chassis members
         * 
         * @return builder
         * 
         */
        public Builder vc(Boolean vc) {
            return vc(Output.of(vc));
        }

        /**
         * @param vcMac Virtual Chassis MAC Address
         * 
         * @return builder
         * 
         */
        public Builder vcMac(@Nullable Output<String> vcMac) {
            $.vcMac = vcMac;
            return this;
        }

        /**
         * @param vcMac Virtual Chassis MAC Address
         * 
         * @return builder
         * 
         */
        public Builder vcMac(String vcMac) {
            return vcMac(Output.of(vcMac));
        }

        public GetInventoryArgs build() {
            if ($.orgId == null) {
                throw new MissingRequiredPropertyException("GetInventoryArgs", "orgId");
            }
            return $;
        }
    }

}
