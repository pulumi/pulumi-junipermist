// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.junipermist.site.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetWlansSiteWlanAppQosOther {
    private Integer dscp;
    private String dstSubnet;
    private String portRanges;
    private String protocol;
    private String srcSubnet;

    private GetWlansSiteWlanAppQosOther() {}
    public Integer dscp() {
        return this.dscp;
    }
    public String dstSubnet() {
        return this.dstSubnet;
    }
    public String portRanges() {
        return this.portRanges;
    }
    public String protocol() {
        return this.protocol;
    }
    public String srcSubnet() {
        return this.srcSubnet;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetWlansSiteWlanAppQosOther defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer dscp;
        private String dstSubnet;
        private String portRanges;
        private String protocol;
        private String srcSubnet;
        public Builder() {}
        public Builder(GetWlansSiteWlanAppQosOther defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dscp = defaults.dscp;
    	      this.dstSubnet = defaults.dstSubnet;
    	      this.portRanges = defaults.portRanges;
    	      this.protocol = defaults.protocol;
    	      this.srcSubnet = defaults.srcSubnet;
        }

        @CustomType.Setter
        public Builder dscp(Integer dscp) {
            if (dscp == null) {
              throw new MissingRequiredPropertyException("GetWlansSiteWlanAppQosOther", "dscp");
            }
            this.dscp = dscp;
            return this;
        }
        @CustomType.Setter
        public Builder dstSubnet(String dstSubnet) {
            if (dstSubnet == null) {
              throw new MissingRequiredPropertyException("GetWlansSiteWlanAppQosOther", "dstSubnet");
            }
            this.dstSubnet = dstSubnet;
            return this;
        }
        @CustomType.Setter
        public Builder portRanges(String portRanges) {
            if (portRanges == null) {
              throw new MissingRequiredPropertyException("GetWlansSiteWlanAppQosOther", "portRanges");
            }
            this.portRanges = portRanges;
            return this;
        }
        @CustomType.Setter
        public Builder protocol(String protocol) {
            if (protocol == null) {
              throw new MissingRequiredPropertyException("GetWlansSiteWlanAppQosOther", "protocol");
            }
            this.protocol = protocol;
            return this;
        }
        @CustomType.Setter
        public Builder srcSubnet(String srcSubnet) {
            if (srcSubnet == null) {
              throw new MissingRequiredPropertyException("GetWlansSiteWlanAppQosOther", "srcSubnet");
            }
            this.srcSubnet = srcSubnet;
            return this;
        }
        public GetWlansSiteWlanAppQosOther build() {
            final var _resultValue = new GetWlansSiteWlanAppQosOther();
            _resultValue.dscp = dscp;
            _resultValue.dstSubnet = dstSubnet;
            _resultValue.portRanges = portRanges;
            _resultValue.protocol = protocol;
            _resultValue.srcSubnet = srcSubnet;
            return _resultValue;
        }
    }
}
