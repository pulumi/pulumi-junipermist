// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.junipermist.org.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SettingSwitchAutoUpgradeArgs extends com.pulumi.resources.ResourceArgs {

    public static final SettingSwitchAutoUpgradeArgs Empty = new SettingSwitchAutoUpgradeArgs();

    /**
     * Custom version to be used. The Property Key is the switch hardware and the property value is the firmware version
     * 
     */
    @Import(name="customVersions")
    private @Nullable Output<Map<String,String>> customVersions;

    /**
     * @return Custom version to be used. The Property Key is the switch hardware and the property value is the firmware version
     * 
     */
    public Optional<Output<Map<String,String>>> customVersions() {
        return Optional.ofNullable(this.customVersions);
    }

    /**
     * Enable auto upgrade for the switch
     * 
     */
    @Import(name="enabled")
    private @Nullable Output<Boolean> enabled;

    /**
     * @return Enable auto upgrade for the switch
     * 
     */
    public Optional<Output<Boolean>> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    /**
     * Enable snapshot during the upgrade process
     * 
     */
    @Import(name="snapshot")
    private @Nullable Output<Boolean> snapshot;

    /**
     * @return Enable snapshot during the upgrade process
     * 
     */
    public Optional<Output<Boolean>> snapshot() {
        return Optional.ofNullable(this.snapshot);
    }

    private SettingSwitchAutoUpgradeArgs() {}

    private SettingSwitchAutoUpgradeArgs(SettingSwitchAutoUpgradeArgs $) {
        this.customVersions = $.customVersions;
        this.enabled = $.enabled;
        this.snapshot = $.snapshot;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SettingSwitchAutoUpgradeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SettingSwitchAutoUpgradeArgs $;

        public Builder() {
            $ = new SettingSwitchAutoUpgradeArgs();
        }

        public Builder(SettingSwitchAutoUpgradeArgs defaults) {
            $ = new SettingSwitchAutoUpgradeArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param customVersions Custom version to be used. The Property Key is the switch hardware and the property value is the firmware version
         * 
         * @return builder
         * 
         */
        public Builder customVersions(@Nullable Output<Map<String,String>> customVersions) {
            $.customVersions = customVersions;
            return this;
        }

        /**
         * @param customVersions Custom version to be used. The Property Key is the switch hardware and the property value is the firmware version
         * 
         * @return builder
         * 
         */
        public Builder customVersions(Map<String,String> customVersions) {
            return customVersions(Output.of(customVersions));
        }

        /**
         * @param enabled Enable auto upgrade for the switch
         * 
         * @return builder
         * 
         */
        public Builder enabled(@Nullable Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param enabled Enable auto upgrade for the switch
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        /**
         * @param snapshot Enable snapshot during the upgrade process
         * 
         * @return builder
         * 
         */
        public Builder snapshot(@Nullable Output<Boolean> snapshot) {
            $.snapshot = snapshot;
            return this;
        }

        /**
         * @param snapshot Enable snapshot during the upgrade process
         * 
         * @return builder
         * 
         */
        public Builder snapshot(Boolean snapshot) {
            return snapshot(Output.of(snapshot));
        }

        public SettingSwitchAutoUpgradeArgs build() {
            return $;
        }
    }

}
