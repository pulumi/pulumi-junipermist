// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.junipermist.org.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class WlanQos {
    /**
     * @return enum: `background`, `best_effort`, `video`, `voice`
     * 
     */
    private @Nullable String class_;
    /**
     * @return Whether to overwrite QoS
     * 
     */
    private @Nullable Boolean overwrite;

    private WlanQos() {}
    /**
     * @return enum: `background`, `best_effort`, `video`, `voice`
     * 
     */
    public Optional<String> class_() {
        return Optional.ofNullable(this.class_);
    }
    /**
     * @return Whether to overwrite QoS
     * 
     */
    public Optional<Boolean> overwrite() {
        return Optional.ofNullable(this.overwrite);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(WlanQos defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String class_;
        private @Nullable Boolean overwrite;
        public Builder() {}
        public Builder(WlanQos defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.class_ = defaults.class_;
    	      this.overwrite = defaults.overwrite;
        }

        @CustomType.Setter("class")
        public Builder class_(@Nullable String class_) {

            this.class_ = class_;
            return this;
        }
        @CustomType.Setter
        public Builder overwrite(@Nullable Boolean overwrite) {

            this.overwrite = overwrite;
            return this;
        }
        public WlanQos build() {
            final var _resultValue = new WlanQos();
            _resultValue.class_ = class_;
            _resultValue.overwrite = overwrite;
            return _resultValue;
        }
    }
}
