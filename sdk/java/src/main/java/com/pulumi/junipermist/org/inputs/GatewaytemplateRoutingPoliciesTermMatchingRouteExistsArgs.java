// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.junipermist.org.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GatewaytemplateRoutingPoliciesTermMatchingRouteExistsArgs extends com.pulumi.resources.ResourceArgs {

    public static final GatewaytemplateRoutingPoliciesTermMatchingRouteExistsArgs Empty = new GatewaytemplateRoutingPoliciesTermMatchingRouteExistsArgs();

    @Import(name="route")
    private @Nullable Output<String> route;

    public Optional<Output<String>> route() {
        return Optional.ofNullable(this.route);
    }

    /**
     * Name of the vrf instance, it can also be the name of the VPN or wan if they
     * 
     */
    @Import(name="vrfName")
    private @Nullable Output<String> vrfName;

    /**
     * @return Name of the vrf instance, it can also be the name of the VPN or wan if they
     * 
     */
    public Optional<Output<String>> vrfName() {
        return Optional.ofNullable(this.vrfName);
    }

    private GatewaytemplateRoutingPoliciesTermMatchingRouteExistsArgs() {}

    private GatewaytemplateRoutingPoliciesTermMatchingRouteExistsArgs(GatewaytemplateRoutingPoliciesTermMatchingRouteExistsArgs $) {
        this.route = $.route;
        this.vrfName = $.vrfName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GatewaytemplateRoutingPoliciesTermMatchingRouteExistsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GatewaytemplateRoutingPoliciesTermMatchingRouteExistsArgs $;

        public Builder() {
            $ = new GatewaytemplateRoutingPoliciesTermMatchingRouteExistsArgs();
        }

        public Builder(GatewaytemplateRoutingPoliciesTermMatchingRouteExistsArgs defaults) {
            $ = new GatewaytemplateRoutingPoliciesTermMatchingRouteExistsArgs(Objects.requireNonNull(defaults));
        }

        public Builder route(@Nullable Output<String> route) {
            $.route = route;
            return this;
        }

        public Builder route(String route) {
            return route(Output.of(route));
        }

        /**
         * @param vrfName Name of the vrf instance, it can also be the name of the VPN or wan if they
         * 
         * @return builder
         * 
         */
        public Builder vrfName(@Nullable Output<String> vrfName) {
            $.vrfName = vrfName;
            return this;
        }

        /**
         * @param vrfName Name of the vrf instance, it can also be the name of the VPN or wan if they
         * 
         * @return builder
         * 
         */
        public Builder vrfName(String vrfName) {
            return vrfName(Output.of(vrfName));
        }

        public GatewaytemplateRoutingPoliciesTermMatchingRouteExistsArgs build() {
            return $;
        }
    }

}
