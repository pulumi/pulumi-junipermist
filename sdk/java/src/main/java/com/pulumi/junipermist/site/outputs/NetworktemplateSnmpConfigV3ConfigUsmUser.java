// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.junipermist.site.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class NetworktemplateSnmpConfigV3ConfigUsmUser {
    /**
     * @return Not required if `authentication_type`==`authentication_none`. Include alphabetic, numeric, and special characters, but it cannot include control characters.
     * 
     */
    private @Nullable String authenticationPassword;
    /**
     * @return sha224, sha256, sha384, sha512 are supported in 21.1 and newer release. enum: `authentication_md5`, `authentication_none`, `authentication_sha`, `authentication_sha224`, `authentication_sha256`, `authentication_sha384`, `authentication_sha512`
     * 
     */
    private @Nullable String authenticationType;
    /**
     * @return Not required if `encryption_type`==`privacy-none`. Include alphabetic, numeric, and special characters, but it cannot include control characters
     * 
     */
    private @Nullable String encryptionPassword;
    /**
     * @return enum: `privacy-3des`, `privacy-aes128`, `privacy-des`, `privacy-none`
     * 
     */
    private @Nullable String encryptionType;
    private @Nullable String name;

    private NetworktemplateSnmpConfigV3ConfigUsmUser() {}
    /**
     * @return Not required if `authentication_type`==`authentication_none`. Include alphabetic, numeric, and special characters, but it cannot include control characters.
     * 
     */
    public Optional<String> authenticationPassword() {
        return Optional.ofNullable(this.authenticationPassword);
    }
    /**
     * @return sha224, sha256, sha384, sha512 are supported in 21.1 and newer release. enum: `authentication_md5`, `authentication_none`, `authentication_sha`, `authentication_sha224`, `authentication_sha256`, `authentication_sha384`, `authentication_sha512`
     * 
     */
    public Optional<String> authenticationType() {
        return Optional.ofNullable(this.authenticationType);
    }
    /**
     * @return Not required if `encryption_type`==`privacy-none`. Include alphabetic, numeric, and special characters, but it cannot include control characters
     * 
     */
    public Optional<String> encryptionPassword() {
        return Optional.ofNullable(this.encryptionPassword);
    }
    /**
     * @return enum: `privacy-3des`, `privacy-aes128`, `privacy-des`, `privacy-none`
     * 
     */
    public Optional<String> encryptionType() {
        return Optional.ofNullable(this.encryptionType);
    }
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(NetworktemplateSnmpConfigV3ConfigUsmUser defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String authenticationPassword;
        private @Nullable String authenticationType;
        private @Nullable String encryptionPassword;
        private @Nullable String encryptionType;
        private @Nullable String name;
        public Builder() {}
        public Builder(NetworktemplateSnmpConfigV3ConfigUsmUser defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.authenticationPassword = defaults.authenticationPassword;
    	      this.authenticationType = defaults.authenticationType;
    	      this.encryptionPassword = defaults.encryptionPassword;
    	      this.encryptionType = defaults.encryptionType;
    	      this.name = defaults.name;
        }

        @CustomType.Setter
        public Builder authenticationPassword(@Nullable String authenticationPassword) {

            this.authenticationPassword = authenticationPassword;
            return this;
        }
        @CustomType.Setter
        public Builder authenticationType(@Nullable String authenticationType) {

            this.authenticationType = authenticationType;
            return this;
        }
        @CustomType.Setter
        public Builder encryptionPassword(@Nullable String encryptionPassword) {

            this.encryptionPassword = encryptionPassword;
            return this;
        }
        @CustomType.Setter
        public Builder encryptionType(@Nullable String encryptionType) {

            this.encryptionType = encryptionType;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {

            this.name = name;
            return this;
        }
        public NetworktemplateSnmpConfigV3ConfigUsmUser build() {
            final var _resultValue = new NetworktemplateSnmpConfigV3ConfigUsmUser();
            _resultValue.authenticationPassword = authenticationPassword;
            _resultValue.authenticationType = authenticationType;
            _resultValue.encryptionPassword = encryptionPassword;
            _resultValue.encryptionType = encryptionType;
            _resultValue.name = name;
            return _resultValue;
        }
    }
}
