// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.junipermist.org.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.junipermist.org.outputs.DeviceprofileGatewayTunnelConfigsAutoProvision;
import com.pulumi.junipermist.org.outputs.DeviceprofileGatewayTunnelConfigsIkeProposal;
import com.pulumi.junipermist.org.outputs.DeviceprofileGatewayTunnelConfigsIpsecProposal;
import com.pulumi.junipermist.org.outputs.DeviceprofileGatewayTunnelConfigsPrimary;
import com.pulumi.junipermist.org.outputs.DeviceprofileGatewayTunnelConfigsProbe;
import com.pulumi.junipermist.org.outputs.DeviceprofileGatewayTunnelConfigsSecondary;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DeviceprofileGatewayTunnelConfigs {
    /**
     * @return Auto Provisioning configuration for the tunne. This takes precedence over the `primary` and `secondary` nodes.
     * 
     */
    private @Nullable DeviceprofileGatewayTunnelConfigsAutoProvision autoProvision;
    /**
     * @return Only if `provider`==`custom-ipsec`. Must be between 180 and 86400
     * 
     */
    private @Nullable Integer ikeLifetime;
    /**
     * @return Only if `provider`==`custom-ipsec`. enum: `aggressive`, `main`
     * 
     */
    private @Nullable String ikeMode;
    /**
     * @return If `provider`==`custom-ipsec`
     * 
     */
    private @Nullable List<DeviceprofileGatewayTunnelConfigsIkeProposal> ikeProposals;
    /**
     * @return Only if `provider`==`custom-ipsec`. Must be between 180 and 86400
     * 
     */
    private @Nullable Integer ipsecLifetime;
    /**
     * @return Only if  `provider`==`custom-ipsec`
     * 
     */
    private @Nullable List<DeviceprofileGatewayTunnelConfigsIpsecProposal> ipsecProposals;
    /**
     * @return Required if `provider`==`zscaler-ipsec`, `provider`==`jse-ipsec` or `provider`==`custom-ipsec`
     * 
     */
    private @Nullable String localId;
    /**
     * @return Required if `provider`==`zscaler-gre`, `provider`==`jse-ipsec`. enum: `active-active`, `active-standby`
     * 
     */
    private @Nullable String mode;
    /**
     * @return If `provider`==`custom-ipsec` or `provider`==`prisma-ipsec`, networks reachable via this tunnel
     * 
     */
    private @Nullable List<String> networks;
    /**
     * @return Only if `provider`==`zscaler-ipsec`, `provider`==`jse-ipsec` or `provider`==`custom-ipsec`
     * 
     */
    private @Nullable DeviceprofileGatewayTunnelConfigsPrimary primary;
    /**
     * @return Only if `provider`==`custom-ipsec`
     * 
     */
    private @Nullable DeviceprofileGatewayTunnelConfigsProbe probe;
    /**
     * @return Only if `provider`==`custom-ipsec`. enum: `gre`, `ipsec`
     * 
     */
    private @Nullable String protocol;
    /**
     * @return Only if `auto_provision.enabled`==`false`. enum: `custom-ipsec`, `custom-gre`, `jse-ipsec`, `prisma-ipsec`, `zscaler-gre`, `zscaler-ipsec`
     * 
     */
    private @Nullable String provider;
    /**
     * @return Required if `provider`==`zscaler-ipsec`, `provider`==`jse-ipsec` or `provider`==`custom-ipsec`
     * 
     */
    private @Nullable String psk;
    /**
     * @return Only if `provider`==`zscaler-ipsec`, `provider`==`jse-ipsec` or `provider`==`custom-ipsec`
     * 
     */
    private @Nullable DeviceprofileGatewayTunnelConfigsSecondary secondary;
    /**
     * @return Only if `provider`==`custom-gre` or `provider`==`custom-ipsec`. enum: `1`, `2`
     * 
     */
    private @Nullable String version;

    private DeviceprofileGatewayTunnelConfigs() {}
    /**
     * @return Auto Provisioning configuration for the tunne. This takes precedence over the `primary` and `secondary` nodes.
     * 
     */
    public Optional<DeviceprofileGatewayTunnelConfigsAutoProvision> autoProvision() {
        return Optional.ofNullable(this.autoProvision);
    }
    /**
     * @return Only if `provider`==`custom-ipsec`. Must be between 180 and 86400
     * 
     */
    public Optional<Integer> ikeLifetime() {
        return Optional.ofNullable(this.ikeLifetime);
    }
    /**
     * @return Only if `provider`==`custom-ipsec`. enum: `aggressive`, `main`
     * 
     */
    public Optional<String> ikeMode() {
        return Optional.ofNullable(this.ikeMode);
    }
    /**
     * @return If `provider`==`custom-ipsec`
     * 
     */
    public List<DeviceprofileGatewayTunnelConfigsIkeProposal> ikeProposals() {
        return this.ikeProposals == null ? List.of() : this.ikeProposals;
    }
    /**
     * @return Only if `provider`==`custom-ipsec`. Must be between 180 and 86400
     * 
     */
    public Optional<Integer> ipsecLifetime() {
        return Optional.ofNullable(this.ipsecLifetime);
    }
    /**
     * @return Only if  `provider`==`custom-ipsec`
     * 
     */
    public List<DeviceprofileGatewayTunnelConfigsIpsecProposal> ipsecProposals() {
        return this.ipsecProposals == null ? List.of() : this.ipsecProposals;
    }
    /**
     * @return Required if `provider`==`zscaler-ipsec`, `provider`==`jse-ipsec` or `provider`==`custom-ipsec`
     * 
     */
    public Optional<String> localId() {
        return Optional.ofNullable(this.localId);
    }
    /**
     * @return Required if `provider`==`zscaler-gre`, `provider`==`jse-ipsec`. enum: `active-active`, `active-standby`
     * 
     */
    public Optional<String> mode() {
        return Optional.ofNullable(this.mode);
    }
    /**
     * @return If `provider`==`custom-ipsec` or `provider`==`prisma-ipsec`, networks reachable via this tunnel
     * 
     */
    public List<String> networks() {
        return this.networks == null ? List.of() : this.networks;
    }
    /**
     * @return Only if `provider`==`zscaler-ipsec`, `provider`==`jse-ipsec` or `provider`==`custom-ipsec`
     * 
     */
    public Optional<DeviceprofileGatewayTunnelConfigsPrimary> primary() {
        return Optional.ofNullable(this.primary);
    }
    /**
     * @return Only if `provider`==`custom-ipsec`
     * 
     */
    public Optional<DeviceprofileGatewayTunnelConfigsProbe> probe() {
        return Optional.ofNullable(this.probe);
    }
    /**
     * @return Only if `provider`==`custom-ipsec`. enum: `gre`, `ipsec`
     * 
     */
    public Optional<String> protocol() {
        return Optional.ofNullable(this.protocol);
    }
    /**
     * @return Only if `auto_provision.enabled`==`false`. enum: `custom-ipsec`, `custom-gre`, `jse-ipsec`, `prisma-ipsec`, `zscaler-gre`, `zscaler-ipsec`
     * 
     */
    public Optional<String> provider() {
        return Optional.ofNullable(this.provider);
    }
    /**
     * @return Required if `provider`==`zscaler-ipsec`, `provider`==`jse-ipsec` or `provider`==`custom-ipsec`
     * 
     */
    public Optional<String> psk() {
        return Optional.ofNullable(this.psk);
    }
    /**
     * @return Only if `provider`==`zscaler-ipsec`, `provider`==`jse-ipsec` or `provider`==`custom-ipsec`
     * 
     */
    public Optional<DeviceprofileGatewayTunnelConfigsSecondary> secondary() {
        return Optional.ofNullable(this.secondary);
    }
    /**
     * @return Only if `provider`==`custom-gre` or `provider`==`custom-ipsec`. enum: `1`, `2`
     * 
     */
    public Optional<String> version() {
        return Optional.ofNullable(this.version);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DeviceprofileGatewayTunnelConfigs defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable DeviceprofileGatewayTunnelConfigsAutoProvision autoProvision;
        private @Nullable Integer ikeLifetime;
        private @Nullable String ikeMode;
        private @Nullable List<DeviceprofileGatewayTunnelConfigsIkeProposal> ikeProposals;
        private @Nullable Integer ipsecLifetime;
        private @Nullable List<DeviceprofileGatewayTunnelConfigsIpsecProposal> ipsecProposals;
        private @Nullable String localId;
        private @Nullable String mode;
        private @Nullable List<String> networks;
        private @Nullable DeviceprofileGatewayTunnelConfigsPrimary primary;
        private @Nullable DeviceprofileGatewayTunnelConfigsProbe probe;
        private @Nullable String protocol;
        private @Nullable String provider;
        private @Nullable String psk;
        private @Nullable DeviceprofileGatewayTunnelConfigsSecondary secondary;
        private @Nullable String version;
        public Builder() {}
        public Builder(DeviceprofileGatewayTunnelConfigs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.autoProvision = defaults.autoProvision;
    	      this.ikeLifetime = defaults.ikeLifetime;
    	      this.ikeMode = defaults.ikeMode;
    	      this.ikeProposals = defaults.ikeProposals;
    	      this.ipsecLifetime = defaults.ipsecLifetime;
    	      this.ipsecProposals = defaults.ipsecProposals;
    	      this.localId = defaults.localId;
    	      this.mode = defaults.mode;
    	      this.networks = defaults.networks;
    	      this.primary = defaults.primary;
    	      this.probe = defaults.probe;
    	      this.protocol = defaults.protocol;
    	      this.provider = defaults.provider;
    	      this.psk = defaults.psk;
    	      this.secondary = defaults.secondary;
    	      this.version = defaults.version;
        }

        @CustomType.Setter
        public Builder autoProvision(@Nullable DeviceprofileGatewayTunnelConfigsAutoProvision autoProvision) {

            this.autoProvision = autoProvision;
            return this;
        }
        @CustomType.Setter
        public Builder ikeLifetime(@Nullable Integer ikeLifetime) {

            this.ikeLifetime = ikeLifetime;
            return this;
        }
        @CustomType.Setter
        public Builder ikeMode(@Nullable String ikeMode) {

            this.ikeMode = ikeMode;
            return this;
        }
        @CustomType.Setter
        public Builder ikeProposals(@Nullable List<DeviceprofileGatewayTunnelConfigsIkeProposal> ikeProposals) {

            this.ikeProposals = ikeProposals;
            return this;
        }
        public Builder ikeProposals(DeviceprofileGatewayTunnelConfigsIkeProposal... ikeProposals) {
            return ikeProposals(List.of(ikeProposals));
        }
        @CustomType.Setter
        public Builder ipsecLifetime(@Nullable Integer ipsecLifetime) {

            this.ipsecLifetime = ipsecLifetime;
            return this;
        }
        @CustomType.Setter
        public Builder ipsecProposals(@Nullable List<DeviceprofileGatewayTunnelConfigsIpsecProposal> ipsecProposals) {

            this.ipsecProposals = ipsecProposals;
            return this;
        }
        public Builder ipsecProposals(DeviceprofileGatewayTunnelConfigsIpsecProposal... ipsecProposals) {
            return ipsecProposals(List.of(ipsecProposals));
        }
        @CustomType.Setter
        public Builder localId(@Nullable String localId) {

            this.localId = localId;
            return this;
        }
        @CustomType.Setter
        public Builder mode(@Nullable String mode) {

            this.mode = mode;
            return this;
        }
        @CustomType.Setter
        public Builder networks(@Nullable List<String> networks) {

            this.networks = networks;
            return this;
        }
        public Builder networks(String... networks) {
            return networks(List.of(networks));
        }
        @CustomType.Setter
        public Builder primary(@Nullable DeviceprofileGatewayTunnelConfigsPrimary primary) {

            this.primary = primary;
            return this;
        }
        @CustomType.Setter
        public Builder probe(@Nullable DeviceprofileGatewayTunnelConfigsProbe probe) {

            this.probe = probe;
            return this;
        }
        @CustomType.Setter
        public Builder protocol(@Nullable String protocol) {

            this.protocol = protocol;
            return this;
        }
        @CustomType.Setter
        public Builder provider(@Nullable String provider) {

            this.provider = provider;
            return this;
        }
        @CustomType.Setter
        public Builder psk(@Nullable String psk) {

            this.psk = psk;
            return this;
        }
        @CustomType.Setter
        public Builder secondary(@Nullable DeviceprofileGatewayTunnelConfigsSecondary secondary) {

            this.secondary = secondary;
            return this;
        }
        @CustomType.Setter
        public Builder version(@Nullable String version) {

            this.version = version;
            return this;
        }
        public DeviceprofileGatewayTunnelConfigs build() {
            final var _resultValue = new DeviceprofileGatewayTunnelConfigs();
            _resultValue.autoProvision = autoProvision;
            _resultValue.ikeLifetime = ikeLifetime;
            _resultValue.ikeMode = ikeMode;
            _resultValue.ikeProposals = ikeProposals;
            _resultValue.ipsecLifetime = ipsecLifetime;
            _resultValue.ipsecProposals = ipsecProposals;
            _resultValue.localId = localId;
            _resultValue.mode = mode;
            _resultValue.networks = networks;
            _resultValue.primary = primary;
            _resultValue.probe = probe;
            _resultValue.protocol = protocol;
            _resultValue.provider = provider;
            _resultValue.psk = psk;
            _resultValue.secondary = secondary;
            _resultValue.version = version;
            return _resultValue;
        }
    }
}
