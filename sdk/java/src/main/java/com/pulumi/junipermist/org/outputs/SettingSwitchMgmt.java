// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.junipermist.org.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class SettingSwitchMgmt {
    /**
     * @return If the field is set in both site/setting and org/setting, the value from site/setting will be used.
     * 
     */
    private @Nullable Integer apAffinityThreshold;
    /**
     * @return If `false`, only the configuration generated by Mist is cleaned up during the configuration process. If `true`, all the existing configuration will be removed.
     * 
     */
    private @Nullable Boolean removeExistingConfigs;

    private SettingSwitchMgmt() {}
    /**
     * @return If the field is set in both site/setting and org/setting, the value from site/setting will be used.
     * 
     */
    public Optional<Integer> apAffinityThreshold() {
        return Optional.ofNullable(this.apAffinityThreshold);
    }
    /**
     * @return If `false`, only the configuration generated by Mist is cleaned up during the configuration process. If `true`, all the existing configuration will be removed.
     * 
     */
    public Optional<Boolean> removeExistingConfigs() {
        return Optional.ofNullable(this.removeExistingConfigs);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SettingSwitchMgmt defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer apAffinityThreshold;
        private @Nullable Boolean removeExistingConfigs;
        public Builder() {}
        public Builder(SettingSwitchMgmt defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.apAffinityThreshold = defaults.apAffinityThreshold;
    	      this.removeExistingConfigs = defaults.removeExistingConfigs;
        }

        @CustomType.Setter
        public Builder apAffinityThreshold(@Nullable Integer apAffinityThreshold) {

            this.apAffinityThreshold = apAffinityThreshold;
            return this;
        }
        @CustomType.Setter
        public Builder removeExistingConfigs(@Nullable Boolean removeExistingConfigs) {

            this.removeExistingConfigs = removeExistingConfigs;
            return this;
        }
        public SettingSwitchMgmt build() {
            final var _resultValue = new SettingSwitchMgmt();
            _resultValue.apAffinityThreshold = apAffinityThreshold;
            _resultValue.removeExistingConfigs = removeExistingConfigs;
            return _resultValue;
        }
    }
}
