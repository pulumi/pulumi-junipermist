// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.junipermist.site.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.junipermist.site.outputs.SettingConfigPushPolicyPushWindow;
import java.lang.Boolean;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class SettingConfigPushPolicy {
    /**
     * @return Stop any new config from being pushed to the device
     * 
     */
    private @Nullable Boolean noPush;
    /**
     * @return If enabled, new config will only be pushed to device within the specified time window
     * 
     */
    private @Nullable SettingConfigPushPolicyPushWindow pushWindow;

    private SettingConfigPushPolicy() {}
    /**
     * @return Stop any new config from being pushed to the device
     * 
     */
    public Optional<Boolean> noPush() {
        return Optional.ofNullable(this.noPush);
    }
    /**
     * @return If enabled, new config will only be pushed to device within the specified time window
     * 
     */
    public Optional<SettingConfigPushPolicyPushWindow> pushWindow() {
        return Optional.ofNullable(this.pushWindow);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SettingConfigPushPolicy defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean noPush;
        private @Nullable SettingConfigPushPolicyPushWindow pushWindow;
        public Builder() {}
        public Builder(SettingConfigPushPolicy defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.noPush = defaults.noPush;
    	      this.pushWindow = defaults.pushWindow;
        }

        @CustomType.Setter
        public Builder noPush(@Nullable Boolean noPush) {

            this.noPush = noPush;
            return this;
        }
        @CustomType.Setter
        public Builder pushWindow(@Nullable SettingConfigPushPolicyPushWindow pushWindow) {

            this.pushWindow = pushWindow;
            return this;
        }
        public SettingConfigPushPolicy build() {
            final var _resultValue = new SettingConfigPushPolicy();
            _resultValue.noPush = noPush;
            _resultValue.pushWindow = pushWindow;
            return _resultValue;
        }
    }
}
