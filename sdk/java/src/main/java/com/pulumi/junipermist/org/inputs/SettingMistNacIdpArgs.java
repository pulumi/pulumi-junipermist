// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.junipermist.org.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SettingMistNacIdpArgs extends com.pulumi.resources.ResourceArgs {

    public static final SettingMistNacIdpArgs Empty = new SettingMistNacIdpArgs();

    /**
     * When the IDP of mxedge_proxy type, exclude the following realms from proxying in addition to other valid home realms in this org
     * 
     */
    @Import(name="excludeRealms")
    private @Nullable Output<List<String>> excludeRealms;

    /**
     * @return When the IDP of mxedge_proxy type, exclude the following realms from proxying in addition to other valid home realms in this org
     * 
     */
    public Optional<Output<List<String>>> excludeRealms() {
        return Optional.ofNullable(this.excludeRealms);
    }

    /**
     * ID of the `mist_nacidp`
     * 
     */
    @Import(name="id", required=true)
    private Output<String> id;

    /**
     * @return ID of the `mist_nacidp`
     * 
     */
    public Output<String> id() {
        return this.id;
    }

    /**
     * Which realm should trigger this IDP. User Realm is extracted from:
     *   * Username-AVP (`mist.com` from john{@literal @}mist.com)
     *   * Cert CN
     * 
     */
    @Import(name="userRealms", required=true)
    private Output<List<String>> userRealms;

    /**
     * @return Which realm should trigger this IDP. User Realm is extracted from:
     *   * Username-AVP (`mist.com` from john{@literal @}mist.com)
     *   * Cert CN
     * 
     */
    public Output<List<String>> userRealms() {
        return this.userRealms;
    }

    private SettingMistNacIdpArgs() {}

    private SettingMistNacIdpArgs(SettingMistNacIdpArgs $) {
        this.excludeRealms = $.excludeRealms;
        this.id = $.id;
        this.userRealms = $.userRealms;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SettingMistNacIdpArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SettingMistNacIdpArgs $;

        public Builder() {
            $ = new SettingMistNacIdpArgs();
        }

        public Builder(SettingMistNacIdpArgs defaults) {
            $ = new SettingMistNacIdpArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param excludeRealms When the IDP of mxedge_proxy type, exclude the following realms from proxying in addition to other valid home realms in this org
         * 
         * @return builder
         * 
         */
        public Builder excludeRealms(@Nullable Output<List<String>> excludeRealms) {
            $.excludeRealms = excludeRealms;
            return this;
        }

        /**
         * @param excludeRealms When the IDP of mxedge_proxy type, exclude the following realms from proxying in addition to other valid home realms in this org
         * 
         * @return builder
         * 
         */
        public Builder excludeRealms(List<String> excludeRealms) {
            return excludeRealms(Output.of(excludeRealms));
        }

        /**
         * @param excludeRealms When the IDP of mxedge_proxy type, exclude the following realms from proxying in addition to other valid home realms in this org
         * 
         * @return builder
         * 
         */
        public Builder excludeRealms(String... excludeRealms) {
            return excludeRealms(List.of(excludeRealms));
        }

        /**
         * @param id ID of the `mist_nacidp`
         * 
         * @return builder
         * 
         */
        public Builder id(Output<String> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id ID of the `mist_nacidp`
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            return id(Output.of(id));
        }

        /**
         * @param userRealms Which realm should trigger this IDP. User Realm is extracted from:
         *   * Username-AVP (`mist.com` from john{@literal @}mist.com)
         *   * Cert CN
         * 
         * @return builder
         * 
         */
        public Builder userRealms(Output<List<String>> userRealms) {
            $.userRealms = userRealms;
            return this;
        }

        /**
         * @param userRealms Which realm should trigger this IDP. User Realm is extracted from:
         *   * Username-AVP (`mist.com` from john{@literal @}mist.com)
         *   * Cert CN
         * 
         * @return builder
         * 
         */
        public Builder userRealms(List<String> userRealms) {
            return userRealms(Output.of(userRealms));
        }

        /**
         * @param userRealms Which realm should trigger this IDP. User Realm is extracted from:
         *   * Username-AVP (`mist.com` from john{@literal @}mist.com)
         *   * Cert CN
         * 
         * @return builder
         * 
         */
        public Builder userRealms(String... userRealms) {
            return userRealms(List.of(userRealms));
        }

        public SettingMistNacIdpArgs build() {
            if ($.id == null) {
                throw new MissingRequiredPropertyException("SettingMistNacIdpArgs", "id");
            }
            if ($.userRealms == null) {
                throw new MissingRequiredPropertyException("SettingMistNacIdpArgs", "userRealms");
            }
            return $;
        }
    }

}
