// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.junipermist.site.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class SettingRtsa {
    private @Nullable Boolean appWaking;
    private @Nullable Boolean disableDeadReckoning;
    private @Nullable Boolean disablePressureSensor;
    private @Nullable Boolean enabled;
    /**
     * @return Asset tracking related
     * 
     */
    private @Nullable Boolean trackAsset;

    private SettingRtsa() {}
    public Optional<Boolean> appWaking() {
        return Optional.ofNullable(this.appWaking);
    }
    public Optional<Boolean> disableDeadReckoning() {
        return Optional.ofNullable(this.disableDeadReckoning);
    }
    public Optional<Boolean> disablePressureSensor() {
        return Optional.ofNullable(this.disablePressureSensor);
    }
    public Optional<Boolean> enabled() {
        return Optional.ofNullable(this.enabled);
    }
    /**
     * @return Asset tracking related
     * 
     */
    public Optional<Boolean> trackAsset() {
        return Optional.ofNullable(this.trackAsset);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SettingRtsa defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean appWaking;
        private @Nullable Boolean disableDeadReckoning;
        private @Nullable Boolean disablePressureSensor;
        private @Nullable Boolean enabled;
        private @Nullable Boolean trackAsset;
        public Builder() {}
        public Builder(SettingRtsa defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.appWaking = defaults.appWaking;
    	      this.disableDeadReckoning = defaults.disableDeadReckoning;
    	      this.disablePressureSensor = defaults.disablePressureSensor;
    	      this.enabled = defaults.enabled;
    	      this.trackAsset = defaults.trackAsset;
        }

        @CustomType.Setter
        public Builder appWaking(@Nullable Boolean appWaking) {

            this.appWaking = appWaking;
            return this;
        }
        @CustomType.Setter
        public Builder disableDeadReckoning(@Nullable Boolean disableDeadReckoning) {

            this.disableDeadReckoning = disableDeadReckoning;
            return this;
        }
        @CustomType.Setter
        public Builder disablePressureSensor(@Nullable Boolean disablePressureSensor) {

            this.disablePressureSensor = disablePressureSensor;
            return this;
        }
        @CustomType.Setter
        public Builder enabled(@Nullable Boolean enabled) {

            this.enabled = enabled;
            return this;
        }
        @CustomType.Setter
        public Builder trackAsset(@Nullable Boolean trackAsset) {

            this.trackAsset = trackAsset;
            return this;
        }
        public SettingRtsa build() {
            final var _resultValue = new SettingRtsa();
            _resultValue.appWaking = appWaking;
            _resultValue.disableDeadReckoning = disableDeadReckoning;
            _resultValue.disablePressureSensor = disablePressureSensor;
            _resultValue.enabled = enabled;
            _resultValue.trackAsset = trackAsset;
            return _resultValue;
        }
    }
}
