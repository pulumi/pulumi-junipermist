// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.junipermist.org.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.junipermist.org.inputs.NetworktemplateSwitchMatchingRuleIpConfigArgs;
import com.pulumi.junipermist.org.inputs.NetworktemplateSwitchMatchingRuleOobIpConfigArgs;
import com.pulumi.junipermist.org.inputs.NetworktemplateSwitchMatchingRulePortConfigArgs;
import com.pulumi.junipermist.org.inputs.NetworktemplateSwitchMatchingRulePortMirroringArgs;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class NetworktemplateSwitchMatchingRuleArgs extends com.pulumi.resources.ResourceArgs {

    public static final NetworktemplateSwitchMatchingRuleArgs Empty = new NetworktemplateSwitchMatchingRuleArgs();

    /**
     * additional CLI commands to append to the generated Junos config
     * 
     * **Note**: no check is done
     * 
     */
    @Import(name="additionalConfigCmds")
    private @Nullable Output<List<String>> additionalConfigCmds;

    /**
     * @return additional CLI commands to append to the generated Junos config
     * 
     * **Note**: no check is done
     * 
     */
    public Optional<Output<List<String>>> additionalConfigCmds() {
        return Optional.ofNullable(this.additionalConfigCmds);
    }

    /**
     * In-Band Management interface configuration
     * 
     */
    @Import(name="ipConfig")
    private @Nullable Output<NetworktemplateSwitchMatchingRuleIpConfigArgs> ipConfig;

    /**
     * @return In-Band Management interface configuration
     * 
     */
    public Optional<Output<NetworktemplateSwitchMatchingRuleIpConfigArgs>> ipConfig() {
        return Optional.ofNullable(this.ipConfig);
    }

    /**
     * role to match
     * 
     */
    @Import(name="matchRole")
    private @Nullable Output<String> matchRole;

    /**
     * @return role to match
     * 
     */
    public Optional<Output<String>> matchRole() {
        return Optional.ofNullable(this.matchRole);
    }

    /**
     * &#39;property key define the type of matching, value is the string to match. e.g: `match_name[0:3]`, `match_name[2:6]`, `match_model`,  `match_model[0-6]`
     * 
     */
    @Import(name="matchType")
    private @Nullable Output<String> matchType;

    /**
     * @return &#39;property key define the type of matching, value is the string to match. e.g: `match_name[0:3]`, `match_name[2:6]`, `match_model`,  `match_model[0-6]`
     * 
     */
    public Optional<Output<String>> matchType() {
        return Optional.ofNullable(this.matchType);
    }

    @Import(name="matchValue")
    private @Nullable Output<String> matchValue;

    public Optional<Output<String>> matchValue() {
        return Optional.ofNullable(this.matchValue);
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Out-of-Band Management interface configuration
     * 
     */
    @Import(name="oobIpConfig")
    private @Nullable Output<NetworktemplateSwitchMatchingRuleOobIpConfigArgs> oobIpConfig;

    /**
     * @return Out-of-Band Management interface configuration
     * 
     */
    public Optional<Output<NetworktemplateSwitchMatchingRuleOobIpConfigArgs>> oobIpConfig() {
        return Optional.ofNullable(this.oobIpConfig);
    }

    /**
     * Propery key is the interface name or interface range
     * 
     */
    @Import(name="portConfig")
    private @Nullable Output<Map<String,NetworktemplateSwitchMatchingRulePortConfigArgs>> portConfig;

    /**
     * @return Propery key is the interface name or interface range
     * 
     */
    public Optional<Output<Map<String,NetworktemplateSwitchMatchingRulePortConfigArgs>>> portConfig() {
        return Optional.ofNullable(this.portConfig);
    }

    /**
     * Property key is the port mirroring instance name
     * port_mirroring can be added under device/site settings. It takes interface and ports as input for ingress, interface as input for egress and can take interface and port as output. A maximum 4 port mirrorings is allowed
     * 
     */
    @Import(name="portMirroring")
    private @Nullable Output<Map<String,NetworktemplateSwitchMatchingRulePortMirroringArgs>> portMirroring;

    /**
     * @return Property key is the port mirroring instance name
     * port_mirroring can be added under device/site settings. It takes interface and ports as input for ingress, interface as input for egress and can take interface and port as output. A maximum 4 port mirrorings is allowed
     * 
     */
    public Optional<Output<Map<String,NetworktemplateSwitchMatchingRulePortMirroringArgs>>> portMirroring() {
        return Optional.ofNullable(this.portMirroring);
    }

    private NetworktemplateSwitchMatchingRuleArgs() {}

    private NetworktemplateSwitchMatchingRuleArgs(NetworktemplateSwitchMatchingRuleArgs $) {
        this.additionalConfigCmds = $.additionalConfigCmds;
        this.ipConfig = $.ipConfig;
        this.matchRole = $.matchRole;
        this.matchType = $.matchType;
        this.matchValue = $.matchValue;
        this.name = $.name;
        this.oobIpConfig = $.oobIpConfig;
        this.portConfig = $.portConfig;
        this.portMirroring = $.portMirroring;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NetworktemplateSwitchMatchingRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NetworktemplateSwitchMatchingRuleArgs $;

        public Builder() {
            $ = new NetworktemplateSwitchMatchingRuleArgs();
        }

        public Builder(NetworktemplateSwitchMatchingRuleArgs defaults) {
            $ = new NetworktemplateSwitchMatchingRuleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param additionalConfigCmds additional CLI commands to append to the generated Junos config
         * 
         * **Note**: no check is done
         * 
         * @return builder
         * 
         */
        public Builder additionalConfigCmds(@Nullable Output<List<String>> additionalConfigCmds) {
            $.additionalConfigCmds = additionalConfigCmds;
            return this;
        }

        /**
         * @param additionalConfigCmds additional CLI commands to append to the generated Junos config
         * 
         * **Note**: no check is done
         * 
         * @return builder
         * 
         */
        public Builder additionalConfigCmds(List<String> additionalConfigCmds) {
            return additionalConfigCmds(Output.of(additionalConfigCmds));
        }

        /**
         * @param additionalConfigCmds additional CLI commands to append to the generated Junos config
         * 
         * **Note**: no check is done
         * 
         * @return builder
         * 
         */
        public Builder additionalConfigCmds(String... additionalConfigCmds) {
            return additionalConfigCmds(List.of(additionalConfigCmds));
        }

        /**
         * @param ipConfig In-Band Management interface configuration
         * 
         * @return builder
         * 
         */
        public Builder ipConfig(@Nullable Output<NetworktemplateSwitchMatchingRuleIpConfigArgs> ipConfig) {
            $.ipConfig = ipConfig;
            return this;
        }

        /**
         * @param ipConfig In-Band Management interface configuration
         * 
         * @return builder
         * 
         */
        public Builder ipConfig(NetworktemplateSwitchMatchingRuleIpConfigArgs ipConfig) {
            return ipConfig(Output.of(ipConfig));
        }

        /**
         * @param matchRole role to match
         * 
         * @return builder
         * 
         */
        public Builder matchRole(@Nullable Output<String> matchRole) {
            $.matchRole = matchRole;
            return this;
        }

        /**
         * @param matchRole role to match
         * 
         * @return builder
         * 
         */
        public Builder matchRole(String matchRole) {
            return matchRole(Output.of(matchRole));
        }

        /**
         * @param matchType &#39;property key define the type of matching, value is the string to match. e.g: `match_name[0:3]`, `match_name[2:6]`, `match_model`,  `match_model[0-6]`
         * 
         * @return builder
         * 
         */
        public Builder matchType(@Nullable Output<String> matchType) {
            $.matchType = matchType;
            return this;
        }

        /**
         * @param matchType &#39;property key define the type of matching, value is the string to match. e.g: `match_name[0:3]`, `match_name[2:6]`, `match_model`,  `match_model[0-6]`
         * 
         * @return builder
         * 
         */
        public Builder matchType(String matchType) {
            return matchType(Output.of(matchType));
        }

        public Builder matchValue(@Nullable Output<String> matchValue) {
            $.matchValue = matchValue;
            return this;
        }

        public Builder matchValue(String matchValue) {
            return matchValue(Output.of(matchValue));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param oobIpConfig Out-of-Band Management interface configuration
         * 
         * @return builder
         * 
         */
        public Builder oobIpConfig(@Nullable Output<NetworktemplateSwitchMatchingRuleOobIpConfigArgs> oobIpConfig) {
            $.oobIpConfig = oobIpConfig;
            return this;
        }

        /**
         * @param oobIpConfig Out-of-Band Management interface configuration
         * 
         * @return builder
         * 
         */
        public Builder oobIpConfig(NetworktemplateSwitchMatchingRuleOobIpConfigArgs oobIpConfig) {
            return oobIpConfig(Output.of(oobIpConfig));
        }

        /**
         * @param portConfig Propery key is the interface name or interface range
         * 
         * @return builder
         * 
         */
        public Builder portConfig(@Nullable Output<Map<String,NetworktemplateSwitchMatchingRulePortConfigArgs>> portConfig) {
            $.portConfig = portConfig;
            return this;
        }

        /**
         * @param portConfig Propery key is the interface name or interface range
         * 
         * @return builder
         * 
         */
        public Builder portConfig(Map<String,NetworktemplateSwitchMatchingRulePortConfigArgs> portConfig) {
            return portConfig(Output.of(portConfig));
        }

        /**
         * @param portMirroring Property key is the port mirroring instance name
         * port_mirroring can be added under device/site settings. It takes interface and ports as input for ingress, interface as input for egress and can take interface and port as output. A maximum 4 port mirrorings is allowed
         * 
         * @return builder
         * 
         */
        public Builder portMirroring(@Nullable Output<Map<String,NetworktemplateSwitchMatchingRulePortMirroringArgs>> portMirroring) {
            $.portMirroring = portMirroring;
            return this;
        }

        /**
         * @param portMirroring Property key is the port mirroring instance name
         * port_mirroring can be added under device/site settings. It takes interface and ports as input for ingress, interface as input for egress and can take interface and port as output. A maximum 4 port mirrorings is allowed
         * 
         * @return builder
         * 
         */
        public Builder portMirroring(Map<String,NetworktemplateSwitchMatchingRulePortMirroringArgs> portMirroring) {
            return portMirroring(Output.of(portMirroring));
        }

        public NetworktemplateSwitchMatchingRuleArgs build() {
            return $;
        }
    }

}
