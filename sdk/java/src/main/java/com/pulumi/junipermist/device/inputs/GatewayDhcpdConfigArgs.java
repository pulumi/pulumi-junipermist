// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.junipermist.device.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.junipermist.device.inputs.GatewayDhcpdConfigConfigArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GatewayDhcpdConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final GatewayDhcpdConfigArgs Empty = new GatewayDhcpdConfigArgs();

    /**
     * Property key is the network name
     * 
     */
    @Import(name="config")
    private @Nullable Output<Map<String,GatewayDhcpdConfigConfigArgs>> config;

    /**
     * @return Property key is the network name
     * 
     */
    public Optional<Output<Map<String,GatewayDhcpdConfigConfigArgs>>> config() {
        return Optional.ofNullable(this.config);
    }

    /**
     * If set to `false`, disable the DHCP server
     * 
     */
    @Import(name="enabled")
    private @Nullable Output<Boolean> enabled;

    /**
     * @return If set to `false`, disable the DHCP server
     * 
     */
    public Optional<Output<Boolean>> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    private GatewayDhcpdConfigArgs() {}

    private GatewayDhcpdConfigArgs(GatewayDhcpdConfigArgs $) {
        this.config = $.config;
        this.enabled = $.enabled;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GatewayDhcpdConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GatewayDhcpdConfigArgs $;

        public Builder() {
            $ = new GatewayDhcpdConfigArgs();
        }

        public Builder(GatewayDhcpdConfigArgs defaults) {
            $ = new GatewayDhcpdConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param config Property key is the network name
         * 
         * @return builder
         * 
         */
        public Builder config(@Nullable Output<Map<String,GatewayDhcpdConfigConfigArgs>> config) {
            $.config = config;
            return this;
        }

        /**
         * @param config Property key is the network name
         * 
         * @return builder
         * 
         */
        public Builder config(Map<String,GatewayDhcpdConfigConfigArgs> config) {
            return config(Output.of(config));
        }

        /**
         * @param enabled If set to `false`, disable the DHCP server
         * 
         * @return builder
         * 
         */
        public Builder enabled(@Nullable Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param enabled If set to `false`, disable the DHCP server
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        public GatewayDhcpdConfigArgs build() {
            return $;
        }
    }

}
