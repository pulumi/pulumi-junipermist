// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.junipermist.org.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.junipermist.org.outputs.GetInventoryOrgInventory;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetInventoryResult {
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return MAC address
     * 
     */
    private @Nullable String mac;
    /**
     * @return Device model
     * 
     */
    private @Nullable String model;
    private String orgId;
    private List<GetInventoryOrgInventory> orgInventories;
    /**
     * @return Device serial
     * 
     */
    private @Nullable String serial;
    /**
     * @return Site id if assigned, null if not assigned
     * 
     */
    private @Nullable String siteId;
    /**
     * @return enum: `ap`, `gateway`, `switch`
     * 
     */
    private @Nullable String type;
    /**
     * @return To display Unassigned devices
     * 
     */
    private @Nullable Boolean unassigned;
    /**
     * @return To display Virtual Chassis members
     * 
     */
    private @Nullable Boolean vc;
    /**
     * @return Virtual Chassis MAC Address
     * 
     */
    private @Nullable String vcMac;

    private GetInventoryResult() {}
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return MAC address
     * 
     */
    public Optional<String> mac() {
        return Optional.ofNullable(this.mac);
    }
    /**
     * @return Device model
     * 
     */
    public Optional<String> model() {
        return Optional.ofNullable(this.model);
    }
    public String orgId() {
        return this.orgId;
    }
    public List<GetInventoryOrgInventory> orgInventories() {
        return this.orgInventories;
    }
    /**
     * @return Device serial
     * 
     */
    public Optional<String> serial() {
        return Optional.ofNullable(this.serial);
    }
    /**
     * @return Site id if assigned, null if not assigned
     * 
     */
    public Optional<String> siteId() {
        return Optional.ofNullable(this.siteId);
    }
    /**
     * @return enum: `ap`, `gateway`, `switch`
     * 
     */
    public Optional<String> type() {
        return Optional.ofNullable(this.type);
    }
    /**
     * @return To display Unassigned devices
     * 
     */
    public Optional<Boolean> unassigned() {
        return Optional.ofNullable(this.unassigned);
    }
    /**
     * @return To display Virtual Chassis members
     * 
     */
    public Optional<Boolean> vc() {
        return Optional.ofNullable(this.vc);
    }
    /**
     * @return Virtual Chassis MAC Address
     * 
     */
    public Optional<String> vcMac() {
        return Optional.ofNullable(this.vcMac);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetInventoryResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String id;
        private @Nullable String mac;
        private @Nullable String model;
        private String orgId;
        private List<GetInventoryOrgInventory> orgInventories;
        private @Nullable String serial;
        private @Nullable String siteId;
        private @Nullable String type;
        private @Nullable Boolean unassigned;
        private @Nullable Boolean vc;
        private @Nullable String vcMac;
        public Builder() {}
        public Builder(GetInventoryResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.mac = defaults.mac;
    	      this.model = defaults.model;
    	      this.orgId = defaults.orgId;
    	      this.orgInventories = defaults.orgInventories;
    	      this.serial = defaults.serial;
    	      this.siteId = defaults.siteId;
    	      this.type = defaults.type;
    	      this.unassigned = defaults.unassigned;
    	      this.vc = defaults.vc;
    	      this.vcMac = defaults.vcMac;
        }

        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetInventoryResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder mac(@Nullable String mac) {

            this.mac = mac;
            return this;
        }
        @CustomType.Setter
        public Builder model(@Nullable String model) {

            this.model = model;
            return this;
        }
        @CustomType.Setter
        public Builder orgId(String orgId) {
            if (orgId == null) {
              throw new MissingRequiredPropertyException("GetInventoryResult", "orgId");
            }
            this.orgId = orgId;
            return this;
        }
        @CustomType.Setter
        public Builder orgInventories(List<GetInventoryOrgInventory> orgInventories) {
            if (orgInventories == null) {
              throw new MissingRequiredPropertyException("GetInventoryResult", "orgInventories");
            }
            this.orgInventories = orgInventories;
            return this;
        }
        public Builder orgInventories(GetInventoryOrgInventory... orgInventories) {
            return orgInventories(List.of(orgInventories));
        }
        @CustomType.Setter
        public Builder serial(@Nullable String serial) {

            this.serial = serial;
            return this;
        }
        @CustomType.Setter
        public Builder siteId(@Nullable String siteId) {

            this.siteId = siteId;
            return this;
        }
        @CustomType.Setter
        public Builder type(@Nullable String type) {

            this.type = type;
            return this;
        }
        @CustomType.Setter
        public Builder unassigned(@Nullable Boolean unassigned) {

            this.unassigned = unassigned;
            return this;
        }
        @CustomType.Setter
        public Builder vc(@Nullable Boolean vc) {

            this.vc = vc;
            return this;
        }
        @CustomType.Setter
        public Builder vcMac(@Nullable String vcMac) {

            this.vcMac = vcMac;
            return this;
        }
        public GetInventoryResult build() {
            final var _resultValue = new GetInventoryResult();
            _resultValue.id = id;
            _resultValue.mac = mac;
            _resultValue.model = model;
            _resultValue.orgId = orgId;
            _resultValue.orgInventories = orgInventories;
            _resultValue.serial = serial;
            _resultValue.siteId = siteId;
            _resultValue.type = type;
            _resultValue.unassigned = unassigned;
            _resultValue.vc = vc;
            _resultValue.vcMac = vcMac;
            return _resultValue;
        }
    }
}
