// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.junipermist.device.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.junipermist.device.outputs.GetVersionsDeviceVersion;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetVersionsResult {
    private List<GetVersionsDeviceVersion> deviceVersions;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return Fetch version for device model, use/combine with `type` as needed (for switch and gateway devices)
     * 
     */
    private String model;
    private String orgId;
    /**
     * @return enum: `ap`, `gateway`, `switch`
     * 
     */
    private String type;

    private GetVersionsResult() {}
    public List<GetVersionsDeviceVersion> deviceVersions() {
        return this.deviceVersions;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Fetch version for device model, use/combine with `type` as needed (for switch and gateway devices)
     * 
     */
    public String model() {
        return this.model;
    }
    public String orgId() {
        return this.orgId;
    }
    /**
     * @return enum: `ap`, `gateway`, `switch`
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetVersionsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetVersionsDeviceVersion> deviceVersions;
        private String id;
        private String model;
        private String orgId;
        private String type;
        public Builder() {}
        public Builder(GetVersionsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.deviceVersions = defaults.deviceVersions;
    	      this.id = defaults.id;
    	      this.model = defaults.model;
    	      this.orgId = defaults.orgId;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder deviceVersions(List<GetVersionsDeviceVersion> deviceVersions) {
            if (deviceVersions == null) {
              throw new MissingRequiredPropertyException("GetVersionsResult", "deviceVersions");
            }
            this.deviceVersions = deviceVersions;
            return this;
        }
        public Builder deviceVersions(GetVersionsDeviceVersion... deviceVersions) {
            return deviceVersions(List.of(deviceVersions));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetVersionsResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder model(String model) {
            if (model == null) {
              throw new MissingRequiredPropertyException("GetVersionsResult", "model");
            }
            this.model = model;
            return this;
        }
        @CustomType.Setter
        public Builder orgId(String orgId) {
            if (orgId == null) {
              throw new MissingRequiredPropertyException("GetVersionsResult", "orgId");
            }
            this.orgId = orgId;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("GetVersionsResult", "type");
            }
            this.type = type;
            return this;
        }
        public GetVersionsResult build() {
            final var _resultValue = new GetVersionsResult();
            _resultValue.deviceVersions = deviceVersions;
            _resultValue.id = id;
            _resultValue.model = model;
            _resultValue.orgId = orgId;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
