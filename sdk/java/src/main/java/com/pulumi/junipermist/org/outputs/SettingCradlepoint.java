// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.junipermist.org.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class SettingCradlepoint {
    private String cpApiId;
    private String cpApiKey;
    private String ecmApiId;
    private String ecmApiKey;

    private SettingCradlepoint() {}
    public String cpApiId() {
        return this.cpApiId;
    }
    public String cpApiKey() {
        return this.cpApiKey;
    }
    public String ecmApiId() {
        return this.ecmApiId;
    }
    public String ecmApiKey() {
        return this.ecmApiKey;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SettingCradlepoint defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String cpApiId;
        private String cpApiKey;
        private String ecmApiId;
        private String ecmApiKey;
        public Builder() {}
        public Builder(SettingCradlepoint defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cpApiId = defaults.cpApiId;
    	      this.cpApiKey = defaults.cpApiKey;
    	      this.ecmApiId = defaults.ecmApiId;
    	      this.ecmApiKey = defaults.ecmApiKey;
        }

        @CustomType.Setter
        public Builder cpApiId(String cpApiId) {
            if (cpApiId == null) {
              throw new MissingRequiredPropertyException("SettingCradlepoint", "cpApiId");
            }
            this.cpApiId = cpApiId;
            return this;
        }
        @CustomType.Setter
        public Builder cpApiKey(String cpApiKey) {
            if (cpApiKey == null) {
              throw new MissingRequiredPropertyException("SettingCradlepoint", "cpApiKey");
            }
            this.cpApiKey = cpApiKey;
            return this;
        }
        @CustomType.Setter
        public Builder ecmApiId(String ecmApiId) {
            if (ecmApiId == null) {
              throw new MissingRequiredPropertyException("SettingCradlepoint", "ecmApiId");
            }
            this.ecmApiId = ecmApiId;
            return this;
        }
        @CustomType.Setter
        public Builder ecmApiKey(String ecmApiKey) {
            if (ecmApiKey == null) {
              throw new MissingRequiredPropertyException("SettingCradlepoint", "ecmApiKey");
            }
            this.ecmApiKey = ecmApiKey;
            return this;
        }
        public SettingCradlepoint build() {
            final var _resultValue = new SettingCradlepoint();
            _resultValue.cpApiId = cpApiId;
            _resultValue.cpApiKey = cpApiKey;
            _resultValue.ecmApiId = ecmApiId;
            _resultValue.ecmApiKey = ecmApiKey;
            return _resultValue;
        }
    }
}
