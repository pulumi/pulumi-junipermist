// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.junipermist.org;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.junipermist.org.inputs.AlarmtemplateDeliveryArgs;
import com.pulumi.junipermist.org.inputs.AlarmtemplateRulesArgs;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AlarmtemplateArgs extends com.pulumi.resources.ResourceArgs {

    public static final AlarmtemplateArgs Empty = new AlarmtemplateArgs();

    /**
     * Delivery object to configure the alarm delivery
     * 
     */
    @Import(name="delivery", required=true)
    private Output<AlarmtemplateDeliveryArgs> delivery;

    /**
     * @return Delivery object to configure the alarm delivery
     * 
     */
    public Output<AlarmtemplateDeliveryArgs> delivery() {
        return this.delivery;
    }

    /**
     * Some string to name the alarm template
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Some string to name the alarm template
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="orgId", required=true)
    private Output<String> orgId;

    public Output<String> orgId() {
        return this.orgId;
    }

    /**
     * Alarm Rules object to configure the individual alarm keys/types. Property key is the alarm name (list available with the `junipermist.getConstAlarms` data source).
     * 
     */
    @Import(name="rules", required=true)
    private Output<Map<String,AlarmtemplateRulesArgs>> rules;

    /**
     * @return Alarm Rules object to configure the individual alarm keys/types. Property key is the alarm name (list available with the `junipermist.getConstAlarms` data source).
     * 
     */
    public Output<Map<String,AlarmtemplateRulesArgs>> rules() {
        return this.rules;
    }

    private AlarmtemplateArgs() {}

    private AlarmtemplateArgs(AlarmtemplateArgs $) {
        this.delivery = $.delivery;
        this.name = $.name;
        this.orgId = $.orgId;
        this.rules = $.rules;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AlarmtemplateArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AlarmtemplateArgs $;

        public Builder() {
            $ = new AlarmtemplateArgs();
        }

        public Builder(AlarmtemplateArgs defaults) {
            $ = new AlarmtemplateArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param delivery Delivery object to configure the alarm delivery
         * 
         * @return builder
         * 
         */
        public Builder delivery(Output<AlarmtemplateDeliveryArgs> delivery) {
            $.delivery = delivery;
            return this;
        }

        /**
         * @param delivery Delivery object to configure the alarm delivery
         * 
         * @return builder
         * 
         */
        public Builder delivery(AlarmtemplateDeliveryArgs delivery) {
            return delivery(Output.of(delivery));
        }

        /**
         * @param name Some string to name the alarm template
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Some string to name the alarm template
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder orgId(Output<String> orgId) {
            $.orgId = orgId;
            return this;
        }

        public Builder orgId(String orgId) {
            return orgId(Output.of(orgId));
        }

        /**
         * @param rules Alarm Rules object to configure the individual alarm keys/types. Property key is the alarm name (list available with the `junipermist.getConstAlarms` data source).
         * 
         * @return builder
         * 
         */
        public Builder rules(Output<Map<String,AlarmtemplateRulesArgs>> rules) {
            $.rules = rules;
            return this;
        }

        /**
         * @param rules Alarm Rules object to configure the individual alarm keys/types. Property key is the alarm name (list available with the `junipermist.getConstAlarms` data source).
         * 
         * @return builder
         * 
         */
        public Builder rules(Map<String,AlarmtemplateRulesArgs> rules) {
            return rules(Output.of(rules));
        }

        public AlarmtemplateArgs build() {
            if ($.delivery == null) {
                throw new MissingRequiredPropertyException("AlarmtemplateArgs", "delivery");
            }
            if ($.orgId == null) {
                throw new MissingRequiredPropertyException("AlarmtemplateArgs", "orgId");
            }
            if ($.rules == null) {
                throw new MissingRequiredPropertyException("AlarmtemplateArgs", "rules");
            }
            return $;
        }
    }

}
