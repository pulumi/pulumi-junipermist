// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.junipermist.org;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.junipermist.Utilities;
import com.pulumi.junipermist.org.RftemplateArgs;
import com.pulumi.junipermist.org.inputs.RftemplateState;
import com.pulumi.junipermist.org.outputs.RftemplateBand24;
import com.pulumi.junipermist.org.outputs.RftemplateBand5;
import com.pulumi.junipermist.org.outputs.RftemplateBand5On24Radio;
import com.pulumi.junipermist.org.outputs.RftemplateBand6;
import com.pulumi.junipermist.org.outputs.RftemplateModelSpecific;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * This resource manages the RF Templates.
 * 
 * The RF Templates can be used to define Wireless Access Points radio configuration, and can be assigned to the sites
 * 
 * ## Example Usage
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.junipermist.org.Rftemplate;
 * import com.pulumi.junipermist.org.RftemplateArgs;
 * import com.pulumi.junipermist.org.inputs.RftemplateBand5Args;
 * import com.pulumi.junipermist.org.inputs.RftemplateBand6Args;
 * import com.pulumi.junipermist.org.inputs.RftemplateBand24Args;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var rftemplateOne = new Rftemplate("rftemplateOne", RftemplateArgs.builder()
 *             .name("rftemplate_one")
 *             .orgId(terraformTest.id())
 *             .band24Usage("auto")
 *             .band5(RftemplateBand5Args.builder()
 *                 .ant_gain(2)
 *                 .power(8)
 *                 .channels(                
 *                     60,
 *                     104,
 *                     132)
 *                 .bandwidth(20)
 *                 .build())
 *             .band6(RftemplateBand6Args.builder()
 *                 .ant_gain(2)
 *                 .power(8)
 *                 .build())
 *             .band24(RftemplateBand24Args.builder()
 *                 .ant_gain(1)
 *                 .allow_rrm_disable(true)
 *                 .power_min(18)
 *                 .power_max(18)
 *                 .bandwidth(20)
 *                 .build())
 *             .antGain5(2)
 *             .antGain6(2)
 *             .antGain24(1)
 *             .countryCode("FR")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 * ## Import
 * 
 * Using `pulumi import`, import `mist_org_rftemplate` with:
 * 
 * Org RF Template can be imported by specifying the org_id and the rftemplate_id
 * 
 * ```sh
 * $ pulumi import junipermist:org/rftemplate:Rftemplate rftemplate_one 17b46405-3a6d-4715-8bb4-6bb6d06f316a.d3c42998-9012-4859-9743-6b9bee475309
 * ```
 * 
 */
@ResourceType(type="junipermist:org/rftemplate:Rftemplate")
public class Rftemplate extends com.pulumi.resources.CustomResource {
    @Export(name="antGain24", refs={Integer.class}, tree="[0]")
    private Output<Integer> antGain24;

    public Output<Integer> antGain24() {
        return this.antGain24;
    }
    @Export(name="antGain5", refs={Integer.class}, tree="[0]")
    private Output<Integer> antGain5;

    public Output<Integer> antGain5() {
        return this.antGain5;
    }
    @Export(name="antGain6", refs={Integer.class}, tree="[0]")
    private Output<Integer> antGain6;

    public Output<Integer> antGain6() {
        return this.antGain6;
    }
    /**
     * Radio Band AP settings
     * 
     */
    @Export(name="band24", refs={RftemplateBand24.class}, tree="[0]")
    private Output</* @Nullable */ RftemplateBand24> band24;

    /**
     * @return Radio Band AP settings
     * 
     */
    public Output<Optional<RftemplateBand24>> band24() {
        return Codegen.optional(this.band24);
    }
    /**
     * enum: `24`, `5`, `6`, `auto`
     * 
     */
    @Export(name="band24Usage", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> band24Usage;

    /**
     * @return enum: `24`, `5`, `6`, `auto`
     * 
     */
    public Output<Optional<String>> band24Usage() {
        return Codegen.optional(this.band24Usage);
    }
    /**
     * Radio Band AP settings
     * 
     */
    @Export(name="band5", refs={RftemplateBand5.class}, tree="[0]")
    private Output</* @Nullable */ RftemplateBand5> band5;

    /**
     * @return Radio Band AP settings
     * 
     */
    public Output<Optional<RftemplateBand5>> band5() {
        return Codegen.optional(this.band5);
    }
    /**
     * Radio Band AP settings
     * 
     */
    @Export(name="band5On24Radio", refs={RftemplateBand5On24Radio.class}, tree="[0]")
    private Output</* @Nullable */ RftemplateBand5On24Radio> band5On24Radio;

    /**
     * @return Radio Band AP settings
     * 
     */
    public Output<Optional<RftemplateBand5On24Radio>> band5On24Radio() {
        return Codegen.optional(this.band5On24Radio);
    }
    /**
     * Radio Band AP settings
     * 
     */
    @Export(name="band6", refs={RftemplateBand6.class}, tree="[0]")
    private Output</* @Nullable */ RftemplateBand6> band6;

    /**
     * @return Radio Band AP settings
     * 
     */
    public Output<Optional<RftemplateBand6>> band6() {
        return Codegen.optional(this.band6);
    }
    /**
     * Optional, country code to use. If specified, this gets applied to all sites using the RF Template
     * 
     */
    @Export(name="countryCode", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> countryCode;

    /**
     * @return Optional, country code to use. If specified, this gets applied to all sites using the RF Template
     * 
     */
    public Output<Optional<String>> countryCode() {
        return Codegen.optional(this.countryCode);
    }
    /**
     * overwrites for a specific model. If a band is specified, it will shadow the default. Property key is the model name (e.g. &#34;AP63&#34;)
     * 
     */
    @Export(name="modelSpecific", refs={Map.class,String.class,RftemplateModelSpecific.class}, tree="[0,1,2]")
    private Output</* @Nullable */ Map<String,RftemplateModelSpecific>> modelSpecific;

    /**
     * @return overwrites for a specific model. If a band is specified, it will shadow the default. Property key is the model name (e.g. &#34;AP63&#34;)
     * 
     */
    public Output<Optional<Map<String,RftemplateModelSpecific>>> modelSpecific() {
        return Codegen.optional(this.modelSpecific);
    }
    /**
     * The name of the RF template
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name of the RF template
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    @Export(name="orgId", refs={String.class}, tree="[0]")
    private Output<String> orgId;

    public Output<String> orgId() {
        return this.orgId;
    }
    /**
     * Whether scanning radio is enabled
     * 
     */
    @Export(name="scanningEnabled", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> scanningEnabled;

    /**
     * @return Whether scanning radio is enabled
     * 
     */
    public Output<Optional<Boolean>> scanningEnabled() {
        return Codegen.optional(this.scanningEnabled);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Rftemplate(java.lang.String name) {
        this(name, RftemplateArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Rftemplate(java.lang.String name, RftemplateArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Rftemplate(java.lang.String name, RftemplateArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("junipermist:org/rftemplate:Rftemplate", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private Rftemplate(java.lang.String name, Output<java.lang.String> id, @Nullable RftemplateState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("junipermist:org/rftemplate:Rftemplate", name, state, makeResourceOptions(options, id), false);
    }

    private static RftemplateArgs makeArgs(RftemplateArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? RftemplateArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .pluginDownloadURL("github://api.github.com/pulumi/pulumi-junipermist")
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Rftemplate get(java.lang.String name, Output<java.lang.String> id, @Nullable RftemplateState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Rftemplate(name, id, state, options);
    }
}
