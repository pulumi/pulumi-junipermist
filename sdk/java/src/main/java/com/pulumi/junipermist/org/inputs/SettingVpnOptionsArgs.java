// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.junipermist.org.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SettingVpnOptionsArgs extends com.pulumi.resources.ResourceArgs {

    public static final SettingVpnOptionsArgs Empty = new SettingVpnOptionsArgs();

    @Import(name="asBase")
    private @Nullable Output<Integer> asBase;

    public Optional<Output<Integer>> asBase() {
        return Optional.ofNullable(this.asBase);
    }

    /**
     * requiring /12 or bigger to support 16 private IPs for 65535 gateways
     * 
     */
    @Import(name="stSubnet")
    private @Nullable Output<String> stSubnet;

    /**
     * @return requiring /12 or bigger to support 16 private IPs for 65535 gateways
     * 
     */
    public Optional<Output<String>> stSubnet() {
        return Optional.ofNullable(this.stSubnet);
    }

    private SettingVpnOptionsArgs() {}

    private SettingVpnOptionsArgs(SettingVpnOptionsArgs $) {
        this.asBase = $.asBase;
        this.stSubnet = $.stSubnet;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SettingVpnOptionsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SettingVpnOptionsArgs $;

        public Builder() {
            $ = new SettingVpnOptionsArgs();
        }

        public Builder(SettingVpnOptionsArgs defaults) {
            $ = new SettingVpnOptionsArgs(Objects.requireNonNull(defaults));
        }

        public Builder asBase(@Nullable Output<Integer> asBase) {
            $.asBase = asBase;
            return this;
        }

        public Builder asBase(Integer asBase) {
            return asBase(Output.of(asBase));
        }

        /**
         * @param stSubnet requiring /12 or bigger to support 16 private IPs for 65535 gateways
         * 
         * @return builder
         * 
         */
        public Builder stSubnet(@Nullable Output<String> stSubnet) {
            $.stSubnet = stSubnet;
            return this;
        }

        /**
         * @param stSubnet requiring /12 or bigger to support 16 private IPs for 65535 gateways
         * 
         * @return builder
         * 
         */
        public Builder stSubnet(String stSubnet) {
            return stSubnet(Output.of(stSubnet));
        }

        public SettingVpnOptionsArgs build() {
            return $;
        }
    }

}
