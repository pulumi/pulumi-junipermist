// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.junipermist.org.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DeviceprofileGatewayRoutingPoliciesTermActions {
    private @Nullable Boolean accept;
    private @Nullable List<String> addCommunities;
    /**
     * @return For SSR, hub decides how VRF routes are leaked on spoke
     * 
     */
    private @Nullable List<String> addTargetVrfs;
    /**
     * @return When used as export policy, optional
     * 
     */
    private @Nullable List<String> communities;
    /**
     * @return When used as export policy, optional. To exclude certain AS
     * 
     */
    private @Nullable List<String> excludeAsPaths;
    private @Nullable List<String> excludeCommunities;
    /**
     * @return When used as export policy, optional
     * 
     */
    private @Nullable List<String> exportCommunities;
    /**
     * @return Optional, for an import policy, localPreference can be changed
     * 
     */
    private @Nullable String localPreference;
    /**
     * @return When used as export policy, optional. By default, the local AS will be prepended, to change it
     * 
     */
    private @Nullable List<String> prependAsPaths;

    private DeviceprofileGatewayRoutingPoliciesTermActions() {}
    public Optional<Boolean> accept() {
        return Optional.ofNullable(this.accept);
    }
    public List<String> addCommunities() {
        return this.addCommunities == null ? List.of() : this.addCommunities;
    }
    /**
     * @return For SSR, hub decides how VRF routes are leaked on spoke
     * 
     */
    public List<String> addTargetVrfs() {
        return this.addTargetVrfs == null ? List.of() : this.addTargetVrfs;
    }
    /**
     * @return When used as export policy, optional
     * 
     */
    public List<String> communities() {
        return this.communities == null ? List.of() : this.communities;
    }
    /**
     * @return When used as export policy, optional. To exclude certain AS
     * 
     */
    public List<String> excludeAsPaths() {
        return this.excludeAsPaths == null ? List.of() : this.excludeAsPaths;
    }
    public List<String> excludeCommunities() {
        return this.excludeCommunities == null ? List.of() : this.excludeCommunities;
    }
    /**
     * @return When used as export policy, optional
     * 
     */
    public List<String> exportCommunities() {
        return this.exportCommunities == null ? List.of() : this.exportCommunities;
    }
    /**
     * @return Optional, for an import policy, localPreference can be changed
     * 
     */
    public Optional<String> localPreference() {
        return Optional.ofNullable(this.localPreference);
    }
    /**
     * @return When used as export policy, optional. By default, the local AS will be prepended, to change it
     * 
     */
    public List<String> prependAsPaths() {
        return this.prependAsPaths == null ? List.of() : this.prependAsPaths;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DeviceprofileGatewayRoutingPoliciesTermActions defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean accept;
        private @Nullable List<String> addCommunities;
        private @Nullable List<String> addTargetVrfs;
        private @Nullable List<String> communities;
        private @Nullable List<String> excludeAsPaths;
        private @Nullable List<String> excludeCommunities;
        private @Nullable List<String> exportCommunities;
        private @Nullable String localPreference;
        private @Nullable List<String> prependAsPaths;
        public Builder() {}
        public Builder(DeviceprofileGatewayRoutingPoliciesTermActions defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accept = defaults.accept;
    	      this.addCommunities = defaults.addCommunities;
    	      this.addTargetVrfs = defaults.addTargetVrfs;
    	      this.communities = defaults.communities;
    	      this.excludeAsPaths = defaults.excludeAsPaths;
    	      this.excludeCommunities = defaults.excludeCommunities;
    	      this.exportCommunities = defaults.exportCommunities;
    	      this.localPreference = defaults.localPreference;
    	      this.prependAsPaths = defaults.prependAsPaths;
        }

        @CustomType.Setter
        public Builder accept(@Nullable Boolean accept) {

            this.accept = accept;
            return this;
        }
        @CustomType.Setter
        public Builder addCommunities(@Nullable List<String> addCommunities) {

            this.addCommunities = addCommunities;
            return this;
        }
        public Builder addCommunities(String... addCommunities) {
            return addCommunities(List.of(addCommunities));
        }
        @CustomType.Setter
        public Builder addTargetVrfs(@Nullable List<String> addTargetVrfs) {

            this.addTargetVrfs = addTargetVrfs;
            return this;
        }
        public Builder addTargetVrfs(String... addTargetVrfs) {
            return addTargetVrfs(List.of(addTargetVrfs));
        }
        @CustomType.Setter
        public Builder communities(@Nullable List<String> communities) {

            this.communities = communities;
            return this;
        }
        public Builder communities(String... communities) {
            return communities(List.of(communities));
        }
        @CustomType.Setter
        public Builder excludeAsPaths(@Nullable List<String> excludeAsPaths) {

            this.excludeAsPaths = excludeAsPaths;
            return this;
        }
        public Builder excludeAsPaths(String... excludeAsPaths) {
            return excludeAsPaths(List.of(excludeAsPaths));
        }
        @CustomType.Setter
        public Builder excludeCommunities(@Nullable List<String> excludeCommunities) {

            this.excludeCommunities = excludeCommunities;
            return this;
        }
        public Builder excludeCommunities(String... excludeCommunities) {
            return excludeCommunities(List.of(excludeCommunities));
        }
        @CustomType.Setter
        public Builder exportCommunities(@Nullable List<String> exportCommunities) {

            this.exportCommunities = exportCommunities;
            return this;
        }
        public Builder exportCommunities(String... exportCommunities) {
            return exportCommunities(List.of(exportCommunities));
        }
        @CustomType.Setter
        public Builder localPreference(@Nullable String localPreference) {

            this.localPreference = localPreference;
            return this;
        }
        @CustomType.Setter
        public Builder prependAsPaths(@Nullable List<String> prependAsPaths) {

            this.prependAsPaths = prependAsPaths;
            return this;
        }
        public Builder prependAsPaths(String... prependAsPaths) {
            return prependAsPaths(List.of(prependAsPaths));
        }
        public DeviceprofileGatewayRoutingPoliciesTermActions build() {
            final var _resultValue = new DeviceprofileGatewayRoutingPoliciesTermActions();
            _resultValue.accept = accept;
            _resultValue.addCommunities = addCommunities;
            _resultValue.addTargetVrfs = addTargetVrfs;
            _resultValue.communities = communities;
            _resultValue.excludeAsPaths = excludeAsPaths;
            _resultValue.excludeCommunities = excludeCommunities;
            _resultValue.exportCommunities = exportCommunities;
            _resultValue.localPreference = localPreference;
            _resultValue.prependAsPaths = prependAsPaths;
            return _resultValue;
        }
    }
}
