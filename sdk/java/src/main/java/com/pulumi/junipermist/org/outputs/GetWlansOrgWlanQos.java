// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.junipermist.org.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetWlansOrgWlanQos {
    /**
     * @return enum: `background`, `best_effort`, `video`, `voice`
     * 
     */
    private String class_;
    /**
     * @return Whether to overwrite QoS
     * 
     */
    private Boolean overwrite;

    private GetWlansOrgWlanQos() {}
    /**
     * @return enum: `background`, `best_effort`, `video`, `voice`
     * 
     */
    public String class_() {
        return this.class_;
    }
    /**
     * @return Whether to overwrite QoS
     * 
     */
    public Boolean overwrite() {
        return this.overwrite;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetWlansOrgWlanQos defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String class_;
        private Boolean overwrite;
        public Builder() {}
        public Builder(GetWlansOrgWlanQos defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.class_ = defaults.class_;
    	      this.overwrite = defaults.overwrite;
        }

        @CustomType.Setter("class")
        public Builder class_(String class_) {
            if (class_ == null) {
              throw new MissingRequiredPropertyException("GetWlansOrgWlanQos", "class_");
            }
            this.class_ = class_;
            return this;
        }
        @CustomType.Setter
        public Builder overwrite(Boolean overwrite) {
            if (overwrite == null) {
              throw new MissingRequiredPropertyException("GetWlansOrgWlanQos", "overwrite");
            }
            this.overwrite = overwrite;
            return this;
        }
        public GetWlansOrgWlanQos build() {
            final var _resultValue = new GetWlansOrgWlanQos();
            _resultValue.class_ = class_;
            _resultValue.overwrite = overwrite;
            return _resultValue;
        }
    }
}
