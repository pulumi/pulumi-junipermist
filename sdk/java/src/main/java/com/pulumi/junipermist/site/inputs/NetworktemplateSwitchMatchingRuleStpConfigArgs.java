// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.junipermist.site.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class NetworktemplateSwitchMatchingRuleStpConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final NetworktemplateSwitchMatchingRuleStpConfigArgs Empty = new NetworktemplateSwitchMatchingRuleStpConfigArgs();

    /**
     * Switch STP priority. Range [0, 4k, 8k.. 60k] in steps of 4k. Bridge priority applies to both VSTP and RSTP.
     * 
     */
    @Import(name="bridgePriority")
    private @Nullable Output<String> bridgePriority;

    /**
     * @return Switch STP priority. Range [0, 4k, 8k.. 60k] in steps of 4k. Bridge priority applies to both VSTP and RSTP.
     * 
     */
    public Optional<Output<String>> bridgePriority() {
        return Optional.ofNullable(this.bridgePriority);
    }

    private NetworktemplateSwitchMatchingRuleStpConfigArgs() {}

    private NetworktemplateSwitchMatchingRuleStpConfigArgs(NetworktemplateSwitchMatchingRuleStpConfigArgs $) {
        this.bridgePriority = $.bridgePriority;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NetworktemplateSwitchMatchingRuleStpConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NetworktemplateSwitchMatchingRuleStpConfigArgs $;

        public Builder() {
            $ = new NetworktemplateSwitchMatchingRuleStpConfigArgs();
        }

        public Builder(NetworktemplateSwitchMatchingRuleStpConfigArgs defaults) {
            $ = new NetworktemplateSwitchMatchingRuleStpConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param bridgePriority Switch STP priority. Range [0, 4k, 8k.. 60k] in steps of 4k. Bridge priority applies to both VSTP and RSTP.
         * 
         * @return builder
         * 
         */
        public Builder bridgePriority(@Nullable Output<String> bridgePriority) {
            $.bridgePriority = bridgePriority;
            return this;
        }

        /**
         * @param bridgePriority Switch STP priority. Range [0, 4k, 8k.. 60k] in steps of 4k. Bridge priority applies to both VSTP and RSTP.
         * 
         * @return builder
         * 
         */
        public Builder bridgePriority(String bridgePriority) {
            return bridgePriority(Output.of(bridgePriority));
        }

        public NetworktemplateSwitchMatchingRuleStpConfigArgs build() {
            return $;
        }
    }

}
