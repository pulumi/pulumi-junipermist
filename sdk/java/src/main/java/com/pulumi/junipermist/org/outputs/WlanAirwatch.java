// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.junipermist.org.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class WlanAirwatch {
    /**
     * @return API Key
     * 
     */
    private String apiKey;
    /**
     * @return console URL
     * 
     */
    private String consoleUrl;
    private @Nullable Boolean enabled;
    /**
     * @return password
     * 
     */
    private String password;
    /**
     * @return username
     * 
     */
    private String username;

    private WlanAirwatch() {}
    /**
     * @return API Key
     * 
     */
    public String apiKey() {
        return this.apiKey;
    }
    /**
     * @return console URL
     * 
     */
    public String consoleUrl() {
        return this.consoleUrl;
    }
    public Optional<Boolean> enabled() {
        return Optional.ofNullable(this.enabled);
    }
    /**
     * @return password
     * 
     */
    public String password() {
        return this.password;
    }
    /**
     * @return username
     * 
     */
    public String username() {
        return this.username;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(WlanAirwatch defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String apiKey;
        private String consoleUrl;
        private @Nullable Boolean enabled;
        private String password;
        private String username;
        public Builder() {}
        public Builder(WlanAirwatch defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.apiKey = defaults.apiKey;
    	      this.consoleUrl = defaults.consoleUrl;
    	      this.enabled = defaults.enabled;
    	      this.password = defaults.password;
    	      this.username = defaults.username;
        }

        @CustomType.Setter
        public Builder apiKey(String apiKey) {
            if (apiKey == null) {
              throw new MissingRequiredPropertyException("WlanAirwatch", "apiKey");
            }
            this.apiKey = apiKey;
            return this;
        }
        @CustomType.Setter
        public Builder consoleUrl(String consoleUrl) {
            if (consoleUrl == null) {
              throw new MissingRequiredPropertyException("WlanAirwatch", "consoleUrl");
            }
            this.consoleUrl = consoleUrl;
            return this;
        }
        @CustomType.Setter
        public Builder enabled(@Nullable Boolean enabled) {

            this.enabled = enabled;
            return this;
        }
        @CustomType.Setter
        public Builder password(String password) {
            if (password == null) {
              throw new MissingRequiredPropertyException("WlanAirwatch", "password");
            }
            this.password = password;
            return this;
        }
        @CustomType.Setter
        public Builder username(String username) {
            if (username == null) {
              throw new MissingRequiredPropertyException("WlanAirwatch", "username");
            }
            this.username = username;
            return this;
        }
        public WlanAirwatch build() {
            final var _resultValue = new WlanAirwatch();
            _resultValue.apiKey = apiKey;
            _resultValue.consoleUrl = consoleUrl;
            _resultValue.enabled = enabled;
            _resultValue.password = password;
            _resultValue.username = username;
            return _resultValue;
        }
    }
}
