// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.junipermist.org.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class SettingVpnOptions {
    private @Nullable Integer asBase;
    /**
     * @return requiring /12 or bigger to support 16 private IPs for 65535 gateways
     * 
     */
    private @Nullable String stSubnet;

    private SettingVpnOptions() {}
    public Optional<Integer> asBase() {
        return Optional.ofNullable(this.asBase);
    }
    /**
     * @return requiring /12 or bigger to support 16 private IPs for 65535 gateways
     * 
     */
    public Optional<String> stSubnet() {
        return Optional.ofNullable(this.stSubnet);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SettingVpnOptions defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer asBase;
        private @Nullable String stSubnet;
        public Builder() {}
        public Builder(SettingVpnOptions defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.asBase = defaults.asBase;
    	      this.stSubnet = defaults.stSubnet;
        }

        @CustomType.Setter
        public Builder asBase(@Nullable Integer asBase) {

            this.asBase = asBase;
            return this;
        }
        @CustomType.Setter
        public Builder stSubnet(@Nullable String stSubnet) {

            this.stSubnet = stSubnet;
            return this;
        }
        public SettingVpnOptions build() {
            final var _resultValue = new SettingVpnOptions();
            _resultValue.asBase = asBase;
            _resultValue.stSubnet = stSubnet;
            return _resultValue;
        }
    }
}
