// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.junipermist.device.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.util.Objects;

@CustomType
public final class GetApStatsDeviceApStatPortStat {
    private Boolean fullDuplex;
    /**
     * @return Amount of traffic received since connection
     * 
     */
    private Integer rxBytes;
    private Integer rxErrors;
    private Integer rxPeakBps;
    /**
     * @return Amount of packets received since connection
     * 
     */
    private Integer rxPkts;
    private Integer speed;
    /**
     * @return Amount of traffic sent since connection
     * 
     */
    private Integer txBytes;
    private Integer txPeakBps;
    /**
     * @return Amount of packets sent since connection
     * 
     */
    private Integer txPkts;
    private Boolean up;

    private GetApStatsDeviceApStatPortStat() {}
    public Boolean fullDuplex() {
        return this.fullDuplex;
    }
    /**
     * @return Amount of traffic received since connection
     * 
     */
    public Integer rxBytes() {
        return this.rxBytes;
    }
    public Integer rxErrors() {
        return this.rxErrors;
    }
    public Integer rxPeakBps() {
        return this.rxPeakBps;
    }
    /**
     * @return Amount of packets received since connection
     * 
     */
    public Integer rxPkts() {
        return this.rxPkts;
    }
    public Integer speed() {
        return this.speed;
    }
    /**
     * @return Amount of traffic sent since connection
     * 
     */
    public Integer txBytes() {
        return this.txBytes;
    }
    public Integer txPeakBps() {
        return this.txPeakBps;
    }
    /**
     * @return Amount of packets sent since connection
     * 
     */
    public Integer txPkts() {
        return this.txPkts;
    }
    public Boolean up() {
        return this.up;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetApStatsDeviceApStatPortStat defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean fullDuplex;
        private Integer rxBytes;
        private Integer rxErrors;
        private Integer rxPeakBps;
        private Integer rxPkts;
        private Integer speed;
        private Integer txBytes;
        private Integer txPeakBps;
        private Integer txPkts;
        private Boolean up;
        public Builder() {}
        public Builder(GetApStatsDeviceApStatPortStat defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.fullDuplex = defaults.fullDuplex;
    	      this.rxBytes = defaults.rxBytes;
    	      this.rxErrors = defaults.rxErrors;
    	      this.rxPeakBps = defaults.rxPeakBps;
    	      this.rxPkts = defaults.rxPkts;
    	      this.speed = defaults.speed;
    	      this.txBytes = defaults.txBytes;
    	      this.txPeakBps = defaults.txPeakBps;
    	      this.txPkts = defaults.txPkts;
    	      this.up = defaults.up;
        }

        @CustomType.Setter
        public Builder fullDuplex(Boolean fullDuplex) {
            if (fullDuplex == null) {
              throw new MissingRequiredPropertyException("GetApStatsDeviceApStatPortStat", "fullDuplex");
            }
            this.fullDuplex = fullDuplex;
            return this;
        }
        @CustomType.Setter
        public Builder rxBytes(Integer rxBytes) {
            if (rxBytes == null) {
              throw new MissingRequiredPropertyException("GetApStatsDeviceApStatPortStat", "rxBytes");
            }
            this.rxBytes = rxBytes;
            return this;
        }
        @CustomType.Setter
        public Builder rxErrors(Integer rxErrors) {
            if (rxErrors == null) {
              throw new MissingRequiredPropertyException("GetApStatsDeviceApStatPortStat", "rxErrors");
            }
            this.rxErrors = rxErrors;
            return this;
        }
        @CustomType.Setter
        public Builder rxPeakBps(Integer rxPeakBps) {
            if (rxPeakBps == null) {
              throw new MissingRequiredPropertyException("GetApStatsDeviceApStatPortStat", "rxPeakBps");
            }
            this.rxPeakBps = rxPeakBps;
            return this;
        }
        @CustomType.Setter
        public Builder rxPkts(Integer rxPkts) {
            if (rxPkts == null) {
              throw new MissingRequiredPropertyException("GetApStatsDeviceApStatPortStat", "rxPkts");
            }
            this.rxPkts = rxPkts;
            return this;
        }
        @CustomType.Setter
        public Builder speed(Integer speed) {
            if (speed == null) {
              throw new MissingRequiredPropertyException("GetApStatsDeviceApStatPortStat", "speed");
            }
            this.speed = speed;
            return this;
        }
        @CustomType.Setter
        public Builder txBytes(Integer txBytes) {
            if (txBytes == null) {
              throw new MissingRequiredPropertyException("GetApStatsDeviceApStatPortStat", "txBytes");
            }
            this.txBytes = txBytes;
            return this;
        }
        @CustomType.Setter
        public Builder txPeakBps(Integer txPeakBps) {
            if (txPeakBps == null) {
              throw new MissingRequiredPropertyException("GetApStatsDeviceApStatPortStat", "txPeakBps");
            }
            this.txPeakBps = txPeakBps;
            return this;
        }
        @CustomType.Setter
        public Builder txPkts(Integer txPkts) {
            if (txPkts == null) {
              throw new MissingRequiredPropertyException("GetApStatsDeviceApStatPortStat", "txPkts");
            }
            this.txPkts = txPkts;
            return this;
        }
        @CustomType.Setter
        public Builder up(Boolean up) {
            if (up == null) {
              throw new MissingRequiredPropertyException("GetApStatsDeviceApStatPortStat", "up");
            }
            this.up = up;
            return this;
        }
        public GetApStatsDeviceApStatPortStat build() {
            final var _resultValue = new GetApStatsDeviceApStatPortStat();
            _resultValue.fullDuplex = fullDuplex;
            _resultValue.rxBytes = rxBytes;
            _resultValue.rxErrors = rxErrors;
            _resultValue.rxPeakBps = rxPeakBps;
            _resultValue.rxPkts = rxPkts;
            _resultValue.speed = speed;
            _resultValue.txBytes = txBytes;
            _resultValue.txPeakBps = txPeakBps;
            _resultValue.txPkts = txPkts;
            _resultValue.up = up;
            return _resultValue;
        }
    }
}
