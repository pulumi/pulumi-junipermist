// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.junipermist.device.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GatewayTunnelProviderOptionsZscalerSubLocationArgs extends com.pulumi.resources.ResourceArgs {

    public static final GatewayTunnelProviderOptionsZscalerSubLocationArgs Empty = new GatewayTunnelProviderOptionsZscalerSubLocationArgs();

    @Import(name="aupAcceptanceRequired")
    private @Nullable Output<Boolean> aupAcceptanceRequired;

    public Optional<Output<Boolean>> aupAcceptanceRequired() {
        return Optional.ofNullable(this.aupAcceptanceRequired);
    }

    /**
     * days before AUP is requested again
     * 
     */
    @Import(name="aupExpire")
    private @Nullable Output<Integer> aupExpire;

    /**
     * @return days before AUP is requested again
     * 
     */
    public Optional<Output<Integer>> aupExpire() {
        return Optional.ofNullable(this.aupExpire);
    }

    /**
     * proxy HTTPs traffic, requiring Zscaler cert to be installed in browser
     * 
     */
    @Import(name="aupSslProxy")
    private @Nullable Output<Boolean> aupSslProxy;

    /**
     * @return proxy HTTPs traffic, requiring Zscaler cert to be installed in browser
     * 
     */
    public Optional<Output<Boolean>> aupSslProxy() {
        return Optional.ofNullable(this.aupSslProxy);
    }

    /**
     * the download bandwidth cap of the link, in Mbps
     * 
     */
    @Import(name="downloadMbps")
    private @Nullable Output<Integer> downloadMbps;

    /**
     * @return the download bandwidth cap of the link, in Mbps
     * 
     */
    public Optional<Output<Integer>> downloadMbps() {
        return Optional.ofNullable(this.downloadMbps);
    }

    /**
     * if `use_xff`==`true`, display Acceptable Use Policy (AUP)
     * 
     */
    @Import(name="enableAup")
    private @Nullable Output<Boolean> enableAup;

    /**
     * @return if `use_xff`==`true`, display Acceptable Use Policy (AUP)
     * 
     */
    public Optional<Output<Boolean>> enableAup() {
        return Optional.ofNullable(this.enableAup);
    }

    /**
     * when `enforce_authentication`==`false`, display caution notification for non-authenticated users
     * 
     */
    @Import(name="enableCaution")
    private @Nullable Output<Boolean> enableCaution;

    /**
     * @return when `enforce_authentication`==`false`, display caution notification for non-authenticated users
     * 
     */
    public Optional<Output<Boolean>> enableCaution() {
        return Optional.ofNullable(this.enableCaution);
    }

    @Import(name="enforceAuthentication")
    private @Nullable Output<Boolean> enforceAuthentication;

    public Optional<Output<Boolean>> enforceAuthentication() {
        return Optional.ofNullable(this.enforceAuthentication);
    }

    @Import(name="subnets")
    private @Nullable Output<List<String>> subnets;

    public Optional<Output<List<String>>> subnets() {
        return Optional.ofNullable(this.subnets);
    }

    /**
     * the download bandwidth cap of the link, in Mbps
     * 
     */
    @Import(name="uploadMbps")
    private @Nullable Output<Integer> uploadMbps;

    /**
     * @return the download bandwidth cap of the link, in Mbps
     * 
     */
    public Optional<Output<Integer>> uploadMbps() {
        return Optional.ofNullable(this.uploadMbps);
    }

    private GatewayTunnelProviderOptionsZscalerSubLocationArgs() {}

    private GatewayTunnelProviderOptionsZscalerSubLocationArgs(GatewayTunnelProviderOptionsZscalerSubLocationArgs $) {
        this.aupAcceptanceRequired = $.aupAcceptanceRequired;
        this.aupExpire = $.aupExpire;
        this.aupSslProxy = $.aupSslProxy;
        this.downloadMbps = $.downloadMbps;
        this.enableAup = $.enableAup;
        this.enableCaution = $.enableCaution;
        this.enforceAuthentication = $.enforceAuthentication;
        this.subnets = $.subnets;
        this.uploadMbps = $.uploadMbps;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GatewayTunnelProviderOptionsZscalerSubLocationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GatewayTunnelProviderOptionsZscalerSubLocationArgs $;

        public Builder() {
            $ = new GatewayTunnelProviderOptionsZscalerSubLocationArgs();
        }

        public Builder(GatewayTunnelProviderOptionsZscalerSubLocationArgs defaults) {
            $ = new GatewayTunnelProviderOptionsZscalerSubLocationArgs(Objects.requireNonNull(defaults));
        }

        public Builder aupAcceptanceRequired(@Nullable Output<Boolean> aupAcceptanceRequired) {
            $.aupAcceptanceRequired = aupAcceptanceRequired;
            return this;
        }

        public Builder aupAcceptanceRequired(Boolean aupAcceptanceRequired) {
            return aupAcceptanceRequired(Output.of(aupAcceptanceRequired));
        }

        /**
         * @param aupExpire days before AUP is requested again
         * 
         * @return builder
         * 
         */
        public Builder aupExpire(@Nullable Output<Integer> aupExpire) {
            $.aupExpire = aupExpire;
            return this;
        }

        /**
         * @param aupExpire days before AUP is requested again
         * 
         * @return builder
         * 
         */
        public Builder aupExpire(Integer aupExpire) {
            return aupExpire(Output.of(aupExpire));
        }

        /**
         * @param aupSslProxy proxy HTTPs traffic, requiring Zscaler cert to be installed in browser
         * 
         * @return builder
         * 
         */
        public Builder aupSslProxy(@Nullable Output<Boolean> aupSslProxy) {
            $.aupSslProxy = aupSslProxy;
            return this;
        }

        /**
         * @param aupSslProxy proxy HTTPs traffic, requiring Zscaler cert to be installed in browser
         * 
         * @return builder
         * 
         */
        public Builder aupSslProxy(Boolean aupSslProxy) {
            return aupSslProxy(Output.of(aupSslProxy));
        }

        /**
         * @param downloadMbps the download bandwidth cap of the link, in Mbps
         * 
         * @return builder
         * 
         */
        public Builder downloadMbps(@Nullable Output<Integer> downloadMbps) {
            $.downloadMbps = downloadMbps;
            return this;
        }

        /**
         * @param downloadMbps the download bandwidth cap of the link, in Mbps
         * 
         * @return builder
         * 
         */
        public Builder downloadMbps(Integer downloadMbps) {
            return downloadMbps(Output.of(downloadMbps));
        }

        /**
         * @param enableAup if `use_xff`==`true`, display Acceptable Use Policy (AUP)
         * 
         * @return builder
         * 
         */
        public Builder enableAup(@Nullable Output<Boolean> enableAup) {
            $.enableAup = enableAup;
            return this;
        }

        /**
         * @param enableAup if `use_xff`==`true`, display Acceptable Use Policy (AUP)
         * 
         * @return builder
         * 
         */
        public Builder enableAup(Boolean enableAup) {
            return enableAup(Output.of(enableAup));
        }

        /**
         * @param enableCaution when `enforce_authentication`==`false`, display caution notification for non-authenticated users
         * 
         * @return builder
         * 
         */
        public Builder enableCaution(@Nullable Output<Boolean> enableCaution) {
            $.enableCaution = enableCaution;
            return this;
        }

        /**
         * @param enableCaution when `enforce_authentication`==`false`, display caution notification for non-authenticated users
         * 
         * @return builder
         * 
         */
        public Builder enableCaution(Boolean enableCaution) {
            return enableCaution(Output.of(enableCaution));
        }

        public Builder enforceAuthentication(@Nullable Output<Boolean> enforceAuthentication) {
            $.enforceAuthentication = enforceAuthentication;
            return this;
        }

        public Builder enforceAuthentication(Boolean enforceAuthentication) {
            return enforceAuthentication(Output.of(enforceAuthentication));
        }

        public Builder subnets(@Nullable Output<List<String>> subnets) {
            $.subnets = subnets;
            return this;
        }

        public Builder subnets(List<String> subnets) {
            return subnets(Output.of(subnets));
        }

        public Builder subnets(String... subnets) {
            return subnets(List.of(subnets));
        }

        /**
         * @param uploadMbps the download bandwidth cap of the link, in Mbps
         * 
         * @return builder
         * 
         */
        public Builder uploadMbps(@Nullable Output<Integer> uploadMbps) {
            $.uploadMbps = uploadMbps;
            return this;
        }

        /**
         * @param uploadMbps the download bandwidth cap of the link, in Mbps
         * 
         * @return builder
         * 
         */
        public Builder uploadMbps(Integer uploadMbps) {
            return uploadMbps(Output.of(uploadMbps));
        }

        public GatewayTunnelProviderOptionsZscalerSubLocationArgs build() {
            return $;
        }
    }

}
