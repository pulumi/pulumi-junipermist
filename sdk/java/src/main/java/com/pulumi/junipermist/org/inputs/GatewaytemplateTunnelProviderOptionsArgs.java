// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.junipermist.org.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.junipermist.org.inputs.GatewaytemplateTunnelProviderOptionsJseArgs;
import com.pulumi.junipermist.org.inputs.GatewaytemplateTunnelProviderOptionsZscalerArgs;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GatewaytemplateTunnelProviderOptionsArgs extends com.pulumi.resources.ResourceArgs {

    public static final GatewaytemplateTunnelProviderOptionsArgs Empty = new GatewaytemplateTunnelProviderOptionsArgs();

    /**
     * For jse-ipsec, this allows provisioning of adequate resource on JSE. Make sure adequate licenses are added
     * 
     */
    @Import(name="jse")
    private @Nullable Output<GatewaytemplateTunnelProviderOptionsJseArgs> jse;

    /**
     * @return For jse-ipsec, this allows provisioning of adequate resource on JSE. Make sure adequate licenses are added
     * 
     */
    public Optional<Output<GatewaytemplateTunnelProviderOptionsJseArgs>> jse() {
        return Optional.ofNullable(this.jse);
    }

    /**
     * For zscaler-ipsec and zscaler-gre
     * 
     */
    @Import(name="zscaler")
    private @Nullable Output<GatewaytemplateTunnelProviderOptionsZscalerArgs> zscaler;

    /**
     * @return For zscaler-ipsec and zscaler-gre
     * 
     */
    public Optional<Output<GatewaytemplateTunnelProviderOptionsZscalerArgs>> zscaler() {
        return Optional.ofNullable(this.zscaler);
    }

    private GatewaytemplateTunnelProviderOptionsArgs() {}

    private GatewaytemplateTunnelProviderOptionsArgs(GatewaytemplateTunnelProviderOptionsArgs $) {
        this.jse = $.jse;
        this.zscaler = $.zscaler;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GatewaytemplateTunnelProviderOptionsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GatewaytemplateTunnelProviderOptionsArgs $;

        public Builder() {
            $ = new GatewaytemplateTunnelProviderOptionsArgs();
        }

        public Builder(GatewaytemplateTunnelProviderOptionsArgs defaults) {
            $ = new GatewaytemplateTunnelProviderOptionsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param jse For jse-ipsec, this allows provisioning of adequate resource on JSE. Make sure adequate licenses are added
         * 
         * @return builder
         * 
         */
        public Builder jse(@Nullable Output<GatewaytemplateTunnelProviderOptionsJseArgs> jse) {
            $.jse = jse;
            return this;
        }

        /**
         * @param jse For jse-ipsec, this allows provisioning of adequate resource on JSE. Make sure adequate licenses are added
         * 
         * @return builder
         * 
         */
        public Builder jse(GatewaytemplateTunnelProviderOptionsJseArgs jse) {
            return jse(Output.of(jse));
        }

        /**
         * @param zscaler For zscaler-ipsec and zscaler-gre
         * 
         * @return builder
         * 
         */
        public Builder zscaler(@Nullable Output<GatewaytemplateTunnelProviderOptionsZscalerArgs> zscaler) {
            $.zscaler = zscaler;
            return this;
        }

        /**
         * @param zscaler For zscaler-ipsec and zscaler-gre
         * 
         * @return builder
         * 
         */
        public Builder zscaler(GatewaytemplateTunnelProviderOptionsZscalerArgs zscaler) {
            return zscaler(Output.of(zscaler));
        }

        public GatewaytemplateTunnelProviderOptionsArgs build() {
            return $;
        }
    }

}
