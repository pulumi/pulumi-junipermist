// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.junipermist.device.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Double;
import java.util.Objects;

@CustomType
public final class GetApStatsDeviceApStatAutoPlacementInfoProbabilitySurface {
    /**
     * @return The radius representing placement uncertainty, measured in pixels
     * 
     */
    private Double radius;
    /**
     * @return The radius representing placement uncertainty, measured in meters
     * 
     */
    private Double radiusM;
    /**
     * @return Y-coordinate of the potential placement’s center, measured in pixels
     * 
     */
    private Double x;

    private GetApStatsDeviceApStatAutoPlacementInfoProbabilitySurface() {}
    /**
     * @return The radius representing placement uncertainty, measured in pixels
     * 
     */
    public Double radius() {
        return this.radius;
    }
    /**
     * @return The radius representing placement uncertainty, measured in meters
     * 
     */
    public Double radiusM() {
        return this.radiusM;
    }
    /**
     * @return Y-coordinate of the potential placement’s center, measured in pixels
     * 
     */
    public Double x() {
        return this.x;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetApStatsDeviceApStatAutoPlacementInfoProbabilitySurface defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Double radius;
        private Double radiusM;
        private Double x;
        public Builder() {}
        public Builder(GetApStatsDeviceApStatAutoPlacementInfoProbabilitySurface defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.radius = defaults.radius;
    	      this.radiusM = defaults.radiusM;
    	      this.x = defaults.x;
        }

        @CustomType.Setter
        public Builder radius(Double radius) {
            if (radius == null) {
              throw new MissingRequiredPropertyException("GetApStatsDeviceApStatAutoPlacementInfoProbabilitySurface", "radius");
            }
            this.radius = radius;
            return this;
        }
        @CustomType.Setter
        public Builder radiusM(Double radiusM) {
            if (radiusM == null) {
              throw new MissingRequiredPropertyException("GetApStatsDeviceApStatAutoPlacementInfoProbabilitySurface", "radiusM");
            }
            this.radiusM = radiusM;
            return this;
        }
        @CustomType.Setter
        public Builder x(Double x) {
            if (x == null) {
              throw new MissingRequiredPropertyException("GetApStatsDeviceApStatAutoPlacementInfoProbabilitySurface", "x");
            }
            this.x = x;
            return this;
        }
        public GetApStatsDeviceApStatAutoPlacementInfoProbabilitySurface build() {
            final var _resultValue = new GetApStatsDeviceApStatAutoPlacementInfoProbabilitySurface();
            _resultValue.radius = radius;
            _resultValue.radiusM = radiusM;
            _resultValue.x = x;
            return _resultValue;
        }
    }
}
