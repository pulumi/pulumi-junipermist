// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.junipermist.org.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DeviceprofileApIpConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final DeviceprofileApIpConfigArgs Empty = new DeviceprofileApIpConfigArgs();

    /**
     * if `type`==`static`
     * 
     */
    @Import(name="dns")
    private @Nullable Output<List<String>> dns;

    /**
     * @return if `type`==`static`
     * 
     */
    public Optional<Output<List<String>>> dns() {
        return Optional.ofNullable(this.dns);
    }

    /**
     * required if `type`==`static`
     * 
     */
    @Import(name="dnsSuffixes")
    private @Nullable Output<List<String>> dnsSuffixes;

    /**
     * @return required if `type`==`static`
     * 
     */
    public Optional<Output<List<String>>> dnsSuffixes() {
        return Optional.ofNullable(this.dnsSuffixes);
    }

    /**
     * required if `type`==`static`
     * 
     */
    @Import(name="gateway")
    private @Nullable Output<String> gateway;

    /**
     * @return required if `type`==`static`
     * 
     */
    public Optional<Output<String>> gateway() {
        return Optional.ofNullable(this.gateway);
    }

    @Import(name="gateway6")
    private @Nullable Output<String> gateway6;

    public Optional<Output<String>> gateway6() {
        return Optional.ofNullable(this.gateway6);
    }

    /**
     * required if `type`==`static`
     * 
     */
    @Import(name="ip")
    private @Nullable Output<String> ip;

    /**
     * @return required if `type`==`static`
     * 
     */
    public Optional<Output<String>> ip() {
        return Optional.ofNullable(this.ip);
    }

    @Import(name="ip6")
    private @Nullable Output<String> ip6;

    public Optional<Output<String>> ip6() {
        return Optional.ofNullable(this.ip6);
    }

    @Import(name="mtu")
    private @Nullable Output<Integer> mtu;

    public Optional<Output<Integer>> mtu() {
        return Optional.ofNullable(this.mtu);
    }

    /**
     * required if `type`==`static`
     * 
     */
    @Import(name="netmask")
    private @Nullable Output<String> netmask;

    /**
     * @return required if `type`==`static`
     * 
     */
    public Optional<Output<String>> netmask() {
        return Optional.ofNullable(this.netmask);
    }

    @Import(name="netmask6")
    private @Nullable Output<String> netmask6;

    public Optional<Output<String>> netmask6() {
        return Optional.ofNullable(this.netmask6);
    }

    /**
     * enum: `dhcp`, `static`
     * 
     */
    @Import(name="type")
    private @Nullable Output<String> type;

    /**
     * @return enum: `dhcp`, `static`
     * 
     */
    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    /**
     * enum: `autoconf`, `dhcp`, `disabled`, `static`
     * 
     */
    @Import(name="type6")
    private @Nullable Output<String> type6;

    /**
     * @return enum: `autoconf`, `dhcp`, `disabled`, `static`
     * 
     */
    public Optional<Output<String>> type6() {
        return Optional.ofNullable(this.type6);
    }

    /**
     * management vlan id, default is 1 (untagged)
     * 
     */
    @Import(name="vlanId")
    private @Nullable Output<Integer> vlanId;

    /**
     * @return management vlan id, default is 1 (untagged)
     * 
     */
    public Optional<Output<Integer>> vlanId() {
        return Optional.ofNullable(this.vlanId);
    }

    private DeviceprofileApIpConfigArgs() {}

    private DeviceprofileApIpConfigArgs(DeviceprofileApIpConfigArgs $) {
        this.dns = $.dns;
        this.dnsSuffixes = $.dnsSuffixes;
        this.gateway = $.gateway;
        this.gateway6 = $.gateway6;
        this.ip = $.ip;
        this.ip6 = $.ip6;
        this.mtu = $.mtu;
        this.netmask = $.netmask;
        this.netmask6 = $.netmask6;
        this.type = $.type;
        this.type6 = $.type6;
        this.vlanId = $.vlanId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DeviceprofileApIpConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DeviceprofileApIpConfigArgs $;

        public Builder() {
            $ = new DeviceprofileApIpConfigArgs();
        }

        public Builder(DeviceprofileApIpConfigArgs defaults) {
            $ = new DeviceprofileApIpConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param dns if `type`==`static`
         * 
         * @return builder
         * 
         */
        public Builder dns(@Nullable Output<List<String>> dns) {
            $.dns = dns;
            return this;
        }

        /**
         * @param dns if `type`==`static`
         * 
         * @return builder
         * 
         */
        public Builder dns(List<String> dns) {
            return dns(Output.of(dns));
        }

        /**
         * @param dns if `type`==`static`
         * 
         * @return builder
         * 
         */
        public Builder dns(String... dns) {
            return dns(List.of(dns));
        }

        /**
         * @param dnsSuffixes required if `type`==`static`
         * 
         * @return builder
         * 
         */
        public Builder dnsSuffixes(@Nullable Output<List<String>> dnsSuffixes) {
            $.dnsSuffixes = dnsSuffixes;
            return this;
        }

        /**
         * @param dnsSuffixes required if `type`==`static`
         * 
         * @return builder
         * 
         */
        public Builder dnsSuffixes(List<String> dnsSuffixes) {
            return dnsSuffixes(Output.of(dnsSuffixes));
        }

        /**
         * @param dnsSuffixes required if `type`==`static`
         * 
         * @return builder
         * 
         */
        public Builder dnsSuffixes(String... dnsSuffixes) {
            return dnsSuffixes(List.of(dnsSuffixes));
        }

        /**
         * @param gateway required if `type`==`static`
         * 
         * @return builder
         * 
         */
        public Builder gateway(@Nullable Output<String> gateway) {
            $.gateway = gateway;
            return this;
        }

        /**
         * @param gateway required if `type`==`static`
         * 
         * @return builder
         * 
         */
        public Builder gateway(String gateway) {
            return gateway(Output.of(gateway));
        }

        public Builder gateway6(@Nullable Output<String> gateway6) {
            $.gateway6 = gateway6;
            return this;
        }

        public Builder gateway6(String gateway6) {
            return gateway6(Output.of(gateway6));
        }

        /**
         * @param ip required if `type`==`static`
         * 
         * @return builder
         * 
         */
        public Builder ip(@Nullable Output<String> ip) {
            $.ip = ip;
            return this;
        }

        /**
         * @param ip required if `type`==`static`
         * 
         * @return builder
         * 
         */
        public Builder ip(String ip) {
            return ip(Output.of(ip));
        }

        public Builder ip6(@Nullable Output<String> ip6) {
            $.ip6 = ip6;
            return this;
        }

        public Builder ip6(String ip6) {
            return ip6(Output.of(ip6));
        }

        public Builder mtu(@Nullable Output<Integer> mtu) {
            $.mtu = mtu;
            return this;
        }

        public Builder mtu(Integer mtu) {
            return mtu(Output.of(mtu));
        }

        /**
         * @param netmask required if `type`==`static`
         * 
         * @return builder
         * 
         */
        public Builder netmask(@Nullable Output<String> netmask) {
            $.netmask = netmask;
            return this;
        }

        /**
         * @param netmask required if `type`==`static`
         * 
         * @return builder
         * 
         */
        public Builder netmask(String netmask) {
            return netmask(Output.of(netmask));
        }

        public Builder netmask6(@Nullable Output<String> netmask6) {
            $.netmask6 = netmask6;
            return this;
        }

        public Builder netmask6(String netmask6) {
            return netmask6(Output.of(netmask6));
        }

        /**
         * @param type enum: `dhcp`, `static`
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type enum: `dhcp`, `static`
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        /**
         * @param type6 enum: `autoconf`, `dhcp`, `disabled`, `static`
         * 
         * @return builder
         * 
         */
        public Builder type6(@Nullable Output<String> type6) {
            $.type6 = type6;
            return this;
        }

        /**
         * @param type6 enum: `autoconf`, `dhcp`, `disabled`, `static`
         * 
         * @return builder
         * 
         */
        public Builder type6(String type6) {
            return type6(Output.of(type6));
        }

        /**
         * @param vlanId management vlan id, default is 1 (untagged)
         * 
         * @return builder
         * 
         */
        public Builder vlanId(@Nullable Output<Integer> vlanId) {
            $.vlanId = vlanId;
            return this;
        }

        /**
         * @param vlanId management vlan id, default is 1 (untagged)
         * 
         * @return builder
         * 
         */
        public Builder vlanId(Integer vlanId) {
            return vlanId(Output.of(vlanId));
        }

        public DeviceprofileApIpConfigArgs build() {
            return $;
        }
    }

}
