// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.junipermist.site.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.junipermist.site.inputs.SettingConfigPushPolicyPushWindowArgs;
import java.lang.Boolean;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SettingConfigPushPolicyArgs extends com.pulumi.resources.ResourceArgs {

    public static final SettingConfigPushPolicyArgs Empty = new SettingConfigPushPolicyArgs();

    /**
     * Stop any new config from being pushed to the device
     * 
     */
    @Import(name="noPush")
    private @Nullable Output<Boolean> noPush;

    /**
     * @return Stop any new config from being pushed to the device
     * 
     */
    public Optional<Output<Boolean>> noPush() {
        return Optional.ofNullable(this.noPush);
    }

    /**
     * If enabled, new config will only be pushed to device within the specified time window
     * 
     */
    @Import(name="pushWindow")
    private @Nullable Output<SettingConfigPushPolicyPushWindowArgs> pushWindow;

    /**
     * @return If enabled, new config will only be pushed to device within the specified time window
     * 
     */
    public Optional<Output<SettingConfigPushPolicyPushWindowArgs>> pushWindow() {
        return Optional.ofNullable(this.pushWindow);
    }

    private SettingConfigPushPolicyArgs() {}

    private SettingConfigPushPolicyArgs(SettingConfigPushPolicyArgs $) {
        this.noPush = $.noPush;
        this.pushWindow = $.pushWindow;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SettingConfigPushPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SettingConfigPushPolicyArgs $;

        public Builder() {
            $ = new SettingConfigPushPolicyArgs();
        }

        public Builder(SettingConfigPushPolicyArgs defaults) {
            $ = new SettingConfigPushPolicyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param noPush Stop any new config from being pushed to the device
         * 
         * @return builder
         * 
         */
        public Builder noPush(@Nullable Output<Boolean> noPush) {
            $.noPush = noPush;
            return this;
        }

        /**
         * @param noPush Stop any new config from being pushed to the device
         * 
         * @return builder
         * 
         */
        public Builder noPush(Boolean noPush) {
            return noPush(Output.of(noPush));
        }

        /**
         * @param pushWindow If enabled, new config will only be pushed to device within the specified time window
         * 
         * @return builder
         * 
         */
        public Builder pushWindow(@Nullable Output<SettingConfigPushPolicyPushWindowArgs> pushWindow) {
            $.pushWindow = pushWindow;
            return this;
        }

        /**
         * @param pushWindow If enabled, new config will only be pushed to device within the specified time window
         * 
         * @return builder
         * 
         */
        public Builder pushWindow(SettingConfigPushPolicyPushWindowArgs pushWindow) {
            return pushWindow(Output.of(pushWindow));
        }

        public SettingConfigPushPolicyArgs build() {
            return $;
        }
    }

}
