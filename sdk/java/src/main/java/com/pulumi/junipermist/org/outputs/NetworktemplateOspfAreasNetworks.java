// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.junipermist.org.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class NetworktemplateOspfAreasNetworks {
    /**
     * @return Required if `authType`==`md5`. Property key is the key number
     * 
     */
    private @Nullable Map<String,String> authKeys;
    /**
     * @return Required if `authType`==`password`, the password, max length is 8
     * 
     */
    private @Nullable String authPassword;
    /**
     * @return auth type. enum: `md5`, `none`, `password`
     * 
     */
    private @Nullable String authType;
    private @Nullable Integer bfdMinimumInterval;
    private @Nullable Integer deadInterval;
    private @Nullable String exportPolicy;
    private @Nullable Integer helloInterval;
    private @Nullable String importPolicy;
    /**
     * @return interface type (nbma = non-broadcast multi-access). enum: `broadcast`, `nbma`, `p2mp`, `p2p`
     * 
     */
    private @Nullable String interfaceType;
    private @Nullable Integer metric;
    /**
     * @return By default, we&#39;ll re-advertise all learned OSPF routes toward overlay
     * 
     */
    private @Nullable Boolean noReadvertiseToOverlay;
    /**
     * @return Whether to send OSPF-Hello
     * 
     */
    private @Nullable Boolean passive;

    private NetworktemplateOspfAreasNetworks() {}
    /**
     * @return Required if `authType`==`md5`. Property key is the key number
     * 
     */
    public Map<String,String> authKeys() {
        return this.authKeys == null ? Map.of() : this.authKeys;
    }
    /**
     * @return Required if `authType`==`password`, the password, max length is 8
     * 
     */
    public Optional<String> authPassword() {
        return Optional.ofNullable(this.authPassword);
    }
    /**
     * @return auth type. enum: `md5`, `none`, `password`
     * 
     */
    public Optional<String> authType() {
        return Optional.ofNullable(this.authType);
    }
    public Optional<Integer> bfdMinimumInterval() {
        return Optional.ofNullable(this.bfdMinimumInterval);
    }
    public Optional<Integer> deadInterval() {
        return Optional.ofNullable(this.deadInterval);
    }
    public Optional<String> exportPolicy() {
        return Optional.ofNullable(this.exportPolicy);
    }
    public Optional<Integer> helloInterval() {
        return Optional.ofNullable(this.helloInterval);
    }
    public Optional<String> importPolicy() {
        return Optional.ofNullable(this.importPolicy);
    }
    /**
     * @return interface type (nbma = non-broadcast multi-access). enum: `broadcast`, `nbma`, `p2mp`, `p2p`
     * 
     */
    public Optional<String> interfaceType() {
        return Optional.ofNullable(this.interfaceType);
    }
    public Optional<Integer> metric() {
        return Optional.ofNullable(this.metric);
    }
    /**
     * @return By default, we&#39;ll re-advertise all learned OSPF routes toward overlay
     * 
     */
    public Optional<Boolean> noReadvertiseToOverlay() {
        return Optional.ofNullable(this.noReadvertiseToOverlay);
    }
    /**
     * @return Whether to send OSPF-Hello
     * 
     */
    public Optional<Boolean> passive() {
        return Optional.ofNullable(this.passive);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(NetworktemplateOspfAreasNetworks defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Map<String,String> authKeys;
        private @Nullable String authPassword;
        private @Nullable String authType;
        private @Nullable Integer bfdMinimumInterval;
        private @Nullable Integer deadInterval;
        private @Nullable String exportPolicy;
        private @Nullable Integer helloInterval;
        private @Nullable String importPolicy;
        private @Nullable String interfaceType;
        private @Nullable Integer metric;
        private @Nullable Boolean noReadvertiseToOverlay;
        private @Nullable Boolean passive;
        public Builder() {}
        public Builder(NetworktemplateOspfAreasNetworks defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.authKeys = defaults.authKeys;
    	      this.authPassword = defaults.authPassword;
    	      this.authType = defaults.authType;
    	      this.bfdMinimumInterval = defaults.bfdMinimumInterval;
    	      this.deadInterval = defaults.deadInterval;
    	      this.exportPolicy = defaults.exportPolicy;
    	      this.helloInterval = defaults.helloInterval;
    	      this.importPolicy = defaults.importPolicy;
    	      this.interfaceType = defaults.interfaceType;
    	      this.metric = defaults.metric;
    	      this.noReadvertiseToOverlay = defaults.noReadvertiseToOverlay;
    	      this.passive = defaults.passive;
        }

        @CustomType.Setter
        public Builder authKeys(@Nullable Map<String,String> authKeys) {

            this.authKeys = authKeys;
            return this;
        }
        @CustomType.Setter
        public Builder authPassword(@Nullable String authPassword) {

            this.authPassword = authPassword;
            return this;
        }
        @CustomType.Setter
        public Builder authType(@Nullable String authType) {

            this.authType = authType;
            return this;
        }
        @CustomType.Setter
        public Builder bfdMinimumInterval(@Nullable Integer bfdMinimumInterval) {

            this.bfdMinimumInterval = bfdMinimumInterval;
            return this;
        }
        @CustomType.Setter
        public Builder deadInterval(@Nullable Integer deadInterval) {

            this.deadInterval = deadInterval;
            return this;
        }
        @CustomType.Setter
        public Builder exportPolicy(@Nullable String exportPolicy) {

            this.exportPolicy = exportPolicy;
            return this;
        }
        @CustomType.Setter
        public Builder helloInterval(@Nullable Integer helloInterval) {

            this.helloInterval = helloInterval;
            return this;
        }
        @CustomType.Setter
        public Builder importPolicy(@Nullable String importPolicy) {

            this.importPolicy = importPolicy;
            return this;
        }
        @CustomType.Setter
        public Builder interfaceType(@Nullable String interfaceType) {

            this.interfaceType = interfaceType;
            return this;
        }
        @CustomType.Setter
        public Builder metric(@Nullable Integer metric) {

            this.metric = metric;
            return this;
        }
        @CustomType.Setter
        public Builder noReadvertiseToOverlay(@Nullable Boolean noReadvertiseToOverlay) {

            this.noReadvertiseToOverlay = noReadvertiseToOverlay;
            return this;
        }
        @CustomType.Setter
        public Builder passive(@Nullable Boolean passive) {

            this.passive = passive;
            return this;
        }
        public NetworktemplateOspfAreasNetworks build() {
            final var _resultValue = new NetworktemplateOspfAreasNetworks();
            _resultValue.authKeys = authKeys;
            _resultValue.authPassword = authPassword;
            _resultValue.authType = authType;
            _resultValue.bfdMinimumInterval = bfdMinimumInterval;
            _resultValue.deadInterval = deadInterval;
            _resultValue.exportPolicy = exportPolicy;
            _resultValue.helloInterval = helloInterval;
            _resultValue.importPolicy = importPolicy;
            _resultValue.interfaceType = interfaceType;
            _resultValue.metric = metric;
            _resultValue.noReadvertiseToOverlay = noReadvertiseToOverlay;
            _resultValue.passive = passive;
            return _resultValue;
        }
    }
}
