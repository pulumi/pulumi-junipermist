// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.junipermist.org.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetNetworksOrgNetworkInternetAccessStaticNat {
    /**
     * @return The Static NAT destination IP Address. Must be an IP Address (i.e. &#34;192.168.70.3&#34;) or a Variable (i.e. &#34;{{myvar}}&#34;)
     * 
     */
    private String internalIp;
    private String name;
    /**
     * @return SRX Only. If not set, we configure the nat policies against all WAN ports for simplicity. Can be a Variable (i.e. &#34;{{myvar}}&#34;)
     * 
     */
    private String wanName;

    private GetNetworksOrgNetworkInternetAccessStaticNat() {}
    /**
     * @return The Static NAT destination IP Address. Must be an IP Address (i.e. &#34;192.168.70.3&#34;) or a Variable (i.e. &#34;{{myvar}}&#34;)
     * 
     */
    public String internalIp() {
        return this.internalIp;
    }
    public String name() {
        return this.name;
    }
    /**
     * @return SRX Only. If not set, we configure the nat policies against all WAN ports for simplicity. Can be a Variable (i.e. &#34;{{myvar}}&#34;)
     * 
     */
    public String wanName() {
        return this.wanName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetNetworksOrgNetworkInternetAccessStaticNat defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String internalIp;
        private String name;
        private String wanName;
        public Builder() {}
        public Builder(GetNetworksOrgNetworkInternetAccessStaticNat defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.internalIp = defaults.internalIp;
    	      this.name = defaults.name;
    	      this.wanName = defaults.wanName;
        }

        @CustomType.Setter
        public Builder internalIp(String internalIp) {
            if (internalIp == null) {
              throw new MissingRequiredPropertyException("GetNetworksOrgNetworkInternetAccessStaticNat", "internalIp");
            }
            this.internalIp = internalIp;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetNetworksOrgNetworkInternetAccessStaticNat", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder wanName(String wanName) {
            if (wanName == null) {
              throw new MissingRequiredPropertyException("GetNetworksOrgNetworkInternetAccessStaticNat", "wanName");
            }
            this.wanName = wanName;
            return this;
        }
        public GetNetworksOrgNetworkInternetAccessStaticNat build() {
            final var _resultValue = new GetNetworksOrgNetworkInternetAccessStaticNat();
            _resultValue.internalIp = internalIp;
            _resultValue.name = name;
            _resultValue.wanName = wanName;
            return _resultValue;
        }
    }
}
