// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.junipermist.site.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class SettingSyntheticTestCustomProbes {
    /**
     * @return enum: `auto`, `high`, `low`
     * 
     */
    private @Nullable String aggressiveness;
    /**
     * @return If `type`==`icmp` or `type`==`tcp`, Host to be used for the custom probe
     * 
     */
    private @Nullable String host;
    /**
     * @return If `type`==`tcp`, Port to be used for the custom probe
     * 
     */
    private @Nullable Integer port;
    /**
     * @return In milliseconds
     * 
     */
    private @Nullable Integer threshold;
    /**
     * @return enum: `curl`, `icmp`, `tcp`
     * 
     */
    private @Nullable String type;
    /**
     * @return If `type`==`curl`, URL to be used for the custom probe, can be url or IP
     * 
     */
    private @Nullable String url;

    private SettingSyntheticTestCustomProbes() {}
    /**
     * @return enum: `auto`, `high`, `low`
     * 
     */
    public Optional<String> aggressiveness() {
        return Optional.ofNullable(this.aggressiveness);
    }
    /**
     * @return If `type`==`icmp` or `type`==`tcp`, Host to be used for the custom probe
     * 
     */
    public Optional<String> host() {
        return Optional.ofNullable(this.host);
    }
    /**
     * @return If `type`==`tcp`, Port to be used for the custom probe
     * 
     */
    public Optional<Integer> port() {
        return Optional.ofNullable(this.port);
    }
    /**
     * @return In milliseconds
     * 
     */
    public Optional<Integer> threshold() {
        return Optional.ofNullable(this.threshold);
    }
    /**
     * @return enum: `curl`, `icmp`, `tcp`
     * 
     */
    public Optional<String> type() {
        return Optional.ofNullable(this.type);
    }
    /**
     * @return If `type`==`curl`, URL to be used for the custom probe, can be url or IP
     * 
     */
    public Optional<String> url() {
        return Optional.ofNullable(this.url);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SettingSyntheticTestCustomProbes defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String aggressiveness;
        private @Nullable String host;
        private @Nullable Integer port;
        private @Nullable Integer threshold;
        private @Nullable String type;
        private @Nullable String url;
        public Builder() {}
        public Builder(SettingSyntheticTestCustomProbes defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.aggressiveness = defaults.aggressiveness;
    	      this.host = defaults.host;
    	      this.port = defaults.port;
    	      this.threshold = defaults.threshold;
    	      this.type = defaults.type;
    	      this.url = defaults.url;
        }

        @CustomType.Setter
        public Builder aggressiveness(@Nullable String aggressiveness) {

            this.aggressiveness = aggressiveness;
            return this;
        }
        @CustomType.Setter
        public Builder host(@Nullable String host) {

            this.host = host;
            return this;
        }
        @CustomType.Setter
        public Builder port(@Nullable Integer port) {

            this.port = port;
            return this;
        }
        @CustomType.Setter
        public Builder threshold(@Nullable Integer threshold) {

            this.threshold = threshold;
            return this;
        }
        @CustomType.Setter
        public Builder type(@Nullable String type) {

            this.type = type;
            return this;
        }
        @CustomType.Setter
        public Builder url(@Nullable String url) {

            this.url = url;
            return this;
        }
        public SettingSyntheticTestCustomProbes build() {
            final var _resultValue = new SettingSyntheticTestCustomProbes();
            _resultValue.aggressiveness = aggressiveness;
            _resultValue.host = host;
            _resultValue.port = port;
            _resultValue.threshold = threshold;
            _resultValue.type = type;
            _resultValue.url = url;
            return _resultValue;
        }
    }
}
