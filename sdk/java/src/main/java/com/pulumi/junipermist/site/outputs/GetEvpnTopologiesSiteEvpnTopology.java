// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.junipermist.site.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.junipermist.site.outputs.GetEvpnTopologiesSiteEvpnTopologyEvpnOptions;
import java.lang.Double;
import java.lang.String;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetEvpnTopologiesSiteEvpnTopology {
    /**
     * @return When the object has been created, in epoch
     * 
     */
    private Double createdTime;
    /**
     * @return EVPN Options
     * 
     */
    private GetEvpnTopologiesSiteEvpnTopologyEvpnOptions evpnOptions;
    /**
     * @return Unique ID of the object instance in the Mist Organization
     * 
     */
    private String id;
    /**
     * @return When the object has been modified for the last time, in epoch
     * 
     */
    private Double modifiedTime;
    private String name;
    /**
     * @return Property key is the pod number
     * 
     */
    private Map<String,String> podNames;
    private String siteId;

    private GetEvpnTopologiesSiteEvpnTopology() {}
    /**
     * @return When the object has been created, in epoch
     * 
     */
    public Double createdTime() {
        return this.createdTime;
    }
    /**
     * @return EVPN Options
     * 
     */
    public GetEvpnTopologiesSiteEvpnTopologyEvpnOptions evpnOptions() {
        return this.evpnOptions;
    }
    /**
     * @return Unique ID of the object instance in the Mist Organization
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return When the object has been modified for the last time, in epoch
     * 
     */
    public Double modifiedTime() {
        return this.modifiedTime;
    }
    public String name() {
        return this.name;
    }
    /**
     * @return Property key is the pod number
     * 
     */
    public Map<String,String> podNames() {
        return this.podNames;
    }
    public String siteId() {
        return this.siteId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetEvpnTopologiesSiteEvpnTopology defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Double createdTime;
        private GetEvpnTopologiesSiteEvpnTopologyEvpnOptions evpnOptions;
        private String id;
        private Double modifiedTime;
        private String name;
        private Map<String,String> podNames;
        private String siteId;
        public Builder() {}
        public Builder(GetEvpnTopologiesSiteEvpnTopology defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.createdTime = defaults.createdTime;
    	      this.evpnOptions = defaults.evpnOptions;
    	      this.id = defaults.id;
    	      this.modifiedTime = defaults.modifiedTime;
    	      this.name = defaults.name;
    	      this.podNames = defaults.podNames;
    	      this.siteId = defaults.siteId;
        }

        @CustomType.Setter
        public Builder createdTime(Double createdTime) {
            if (createdTime == null) {
              throw new MissingRequiredPropertyException("GetEvpnTopologiesSiteEvpnTopology", "createdTime");
            }
            this.createdTime = createdTime;
            return this;
        }
        @CustomType.Setter
        public Builder evpnOptions(GetEvpnTopologiesSiteEvpnTopologyEvpnOptions evpnOptions) {
            if (evpnOptions == null) {
              throw new MissingRequiredPropertyException("GetEvpnTopologiesSiteEvpnTopology", "evpnOptions");
            }
            this.evpnOptions = evpnOptions;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetEvpnTopologiesSiteEvpnTopology", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder modifiedTime(Double modifiedTime) {
            if (modifiedTime == null) {
              throw new MissingRequiredPropertyException("GetEvpnTopologiesSiteEvpnTopology", "modifiedTime");
            }
            this.modifiedTime = modifiedTime;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetEvpnTopologiesSiteEvpnTopology", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder podNames(Map<String,String> podNames) {
            if (podNames == null) {
              throw new MissingRequiredPropertyException("GetEvpnTopologiesSiteEvpnTopology", "podNames");
            }
            this.podNames = podNames;
            return this;
        }
        @CustomType.Setter
        public Builder siteId(String siteId) {
            if (siteId == null) {
              throw new MissingRequiredPropertyException("GetEvpnTopologiesSiteEvpnTopology", "siteId");
            }
            this.siteId = siteId;
            return this;
        }
        public GetEvpnTopologiesSiteEvpnTopology build() {
            final var _resultValue = new GetEvpnTopologiesSiteEvpnTopology();
            _resultValue.createdTime = createdTime;
            _resultValue.evpnOptions = evpnOptions;
            _resultValue.id = id;
            _resultValue.modifiedTime = modifiedTime;
            _resultValue.name = name;
            _resultValue.podNames = podNames;
            _resultValue.siteId = siteId;
            return _resultValue;
        }
    }
}
