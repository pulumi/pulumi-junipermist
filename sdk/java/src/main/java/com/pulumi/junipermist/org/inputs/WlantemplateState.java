// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.junipermist.org.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.junipermist.org.inputs.WlantemplateAppliesArgs;
import com.pulumi.junipermist.org.inputs.WlantemplateExceptionsArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class WlantemplateState extends com.pulumi.resources.ResourceArgs {

    public static final WlantemplateState Empty = new WlantemplateState();

    /**
     * where this template should be applied to, can be org*id, site*ids, sitegroup_ids
     * 
     */
    @Import(name="applies")
    private @Nullable Output<WlantemplateAppliesArgs> applies;

    /**
     * @return where this template should be applied to, can be org*id, site*ids, sitegroup_ids
     * 
     */
    public Optional<Output<WlantemplateAppliesArgs>> applies() {
        return Optional.ofNullable(this.applies);
    }

    /**
     * list of Device Profile ids
     * 
     */
    @Import(name="deviceprofileIds")
    private @Nullable Output<List<String>> deviceprofileIds;

    /**
     * @return list of Device Profile ids
     * 
     */
    public Optional<Output<List<String>>> deviceprofileIds() {
        return Optional.ofNullable(this.deviceprofileIds);
    }

    /**
     * where this template should not be applied to (takes precedence)
     * 
     */
    @Import(name="exceptions")
    private @Nullable Output<WlantemplateExceptionsArgs> exceptions;

    /**
     * @return where this template should not be applied to (takes precedence)
     * 
     */
    public Optional<Output<WlantemplateExceptionsArgs>> exceptions() {
        return Optional.ofNullable(this.exceptions);
    }

    /**
     * whether to further filter by Device Profile
     * 
     */
    @Import(name="filterByDeviceprofile")
    private @Nullable Output<Boolean> filterByDeviceprofile;

    /**
     * @return whether to further filter by Device Profile
     * 
     */
    public Optional<Output<Boolean>> filterByDeviceprofile() {
        return Optional.ofNullable(this.filterByDeviceprofile);
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="orgId")
    private @Nullable Output<String> orgId;

    public Optional<Output<String>> orgId() {
        return Optional.ofNullable(this.orgId);
    }

    private WlantemplateState() {}

    private WlantemplateState(WlantemplateState $) {
        this.applies = $.applies;
        this.deviceprofileIds = $.deviceprofileIds;
        this.exceptions = $.exceptions;
        this.filterByDeviceprofile = $.filterByDeviceprofile;
        this.name = $.name;
        this.orgId = $.orgId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WlantemplateState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WlantemplateState $;

        public Builder() {
            $ = new WlantemplateState();
        }

        public Builder(WlantemplateState defaults) {
            $ = new WlantemplateState(Objects.requireNonNull(defaults));
        }

        /**
         * @param applies where this template should be applied to, can be org*id, site*ids, sitegroup_ids
         * 
         * @return builder
         * 
         */
        public Builder applies(@Nullable Output<WlantemplateAppliesArgs> applies) {
            $.applies = applies;
            return this;
        }

        /**
         * @param applies where this template should be applied to, can be org*id, site*ids, sitegroup_ids
         * 
         * @return builder
         * 
         */
        public Builder applies(WlantemplateAppliesArgs applies) {
            return applies(Output.of(applies));
        }

        /**
         * @param deviceprofileIds list of Device Profile ids
         * 
         * @return builder
         * 
         */
        public Builder deviceprofileIds(@Nullable Output<List<String>> deviceprofileIds) {
            $.deviceprofileIds = deviceprofileIds;
            return this;
        }

        /**
         * @param deviceprofileIds list of Device Profile ids
         * 
         * @return builder
         * 
         */
        public Builder deviceprofileIds(List<String> deviceprofileIds) {
            return deviceprofileIds(Output.of(deviceprofileIds));
        }

        /**
         * @param deviceprofileIds list of Device Profile ids
         * 
         * @return builder
         * 
         */
        public Builder deviceprofileIds(String... deviceprofileIds) {
            return deviceprofileIds(List.of(deviceprofileIds));
        }

        /**
         * @param exceptions where this template should not be applied to (takes precedence)
         * 
         * @return builder
         * 
         */
        public Builder exceptions(@Nullable Output<WlantemplateExceptionsArgs> exceptions) {
            $.exceptions = exceptions;
            return this;
        }

        /**
         * @param exceptions where this template should not be applied to (takes precedence)
         * 
         * @return builder
         * 
         */
        public Builder exceptions(WlantemplateExceptionsArgs exceptions) {
            return exceptions(Output.of(exceptions));
        }

        /**
         * @param filterByDeviceprofile whether to further filter by Device Profile
         * 
         * @return builder
         * 
         */
        public Builder filterByDeviceprofile(@Nullable Output<Boolean> filterByDeviceprofile) {
            $.filterByDeviceprofile = filterByDeviceprofile;
            return this;
        }

        /**
         * @param filterByDeviceprofile whether to further filter by Device Profile
         * 
         * @return builder
         * 
         */
        public Builder filterByDeviceprofile(Boolean filterByDeviceprofile) {
            return filterByDeviceprofile(Output.of(filterByDeviceprofile));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder orgId(@Nullable Output<String> orgId) {
            $.orgId = orgId;
            return this;
        }

        public Builder orgId(String orgId) {
            return orgId(Output.of(orgId));
        }

        public WlantemplateState build() {
            return $;
        }
    }

}
