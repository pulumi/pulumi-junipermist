// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.junipermist.device.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.junipermist.device.outputs.SwitchRemoteSyslogServerContent;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class SwitchRemoteSyslogServer {
    private @Nullable List<SwitchRemoteSyslogServerContent> contents;
    private @Nullable Boolean explicitPriority;
    /**
     * @return enum: `any`, `authorization`, `change-log`, `config`, `conflict-log`, `daemon`, `dfc`, `external`, `firewall`, `ftp`, `interactive-commands`, `kernel`, `ntp`, `pfe`, `security`, `user`
     * 
     */
    private @Nullable String facility;
    private @Nullable String host;
    private @Nullable String match;
    private @Nullable String port;
    /**
     * @return enum: `tcp`, `udp`
     * 
     */
    private @Nullable String protocol;
    private @Nullable String routingInstance;
    /**
     * @return Name of the server
     * 
     */
    private @Nullable String serverName;
    /**
     * @return enum: `alert`, `any`, `critical`, `emergency`, `error`, `info`, `notice`, `warning`
     * 
     */
    private @Nullable String severity;
    /**
     * @return If source_address is configured, will use the vlan firstly otherwise use source_ip
     * 
     */
    private @Nullable String sourceAddress;
    private @Nullable Boolean structuredData;
    private @Nullable String tag;

    private SwitchRemoteSyslogServer() {}
    public List<SwitchRemoteSyslogServerContent> contents() {
        return this.contents == null ? List.of() : this.contents;
    }
    public Optional<Boolean> explicitPriority() {
        return Optional.ofNullable(this.explicitPriority);
    }
    /**
     * @return enum: `any`, `authorization`, `change-log`, `config`, `conflict-log`, `daemon`, `dfc`, `external`, `firewall`, `ftp`, `interactive-commands`, `kernel`, `ntp`, `pfe`, `security`, `user`
     * 
     */
    public Optional<String> facility() {
        return Optional.ofNullable(this.facility);
    }
    public Optional<String> host() {
        return Optional.ofNullable(this.host);
    }
    public Optional<String> match() {
        return Optional.ofNullable(this.match);
    }
    public Optional<String> port() {
        return Optional.ofNullable(this.port);
    }
    /**
     * @return enum: `tcp`, `udp`
     * 
     */
    public Optional<String> protocol() {
        return Optional.ofNullable(this.protocol);
    }
    public Optional<String> routingInstance() {
        return Optional.ofNullable(this.routingInstance);
    }
    /**
     * @return Name of the server
     * 
     */
    public Optional<String> serverName() {
        return Optional.ofNullable(this.serverName);
    }
    /**
     * @return enum: `alert`, `any`, `critical`, `emergency`, `error`, `info`, `notice`, `warning`
     * 
     */
    public Optional<String> severity() {
        return Optional.ofNullable(this.severity);
    }
    /**
     * @return If source_address is configured, will use the vlan firstly otherwise use source_ip
     * 
     */
    public Optional<String> sourceAddress() {
        return Optional.ofNullable(this.sourceAddress);
    }
    public Optional<Boolean> structuredData() {
        return Optional.ofNullable(this.structuredData);
    }
    public Optional<String> tag() {
        return Optional.ofNullable(this.tag);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SwitchRemoteSyslogServer defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<SwitchRemoteSyslogServerContent> contents;
        private @Nullable Boolean explicitPriority;
        private @Nullable String facility;
        private @Nullable String host;
        private @Nullable String match;
        private @Nullable String port;
        private @Nullable String protocol;
        private @Nullable String routingInstance;
        private @Nullable String serverName;
        private @Nullable String severity;
        private @Nullable String sourceAddress;
        private @Nullable Boolean structuredData;
        private @Nullable String tag;
        public Builder() {}
        public Builder(SwitchRemoteSyslogServer defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.contents = defaults.contents;
    	      this.explicitPriority = defaults.explicitPriority;
    	      this.facility = defaults.facility;
    	      this.host = defaults.host;
    	      this.match = defaults.match;
    	      this.port = defaults.port;
    	      this.protocol = defaults.protocol;
    	      this.routingInstance = defaults.routingInstance;
    	      this.serverName = defaults.serverName;
    	      this.severity = defaults.severity;
    	      this.sourceAddress = defaults.sourceAddress;
    	      this.structuredData = defaults.structuredData;
    	      this.tag = defaults.tag;
        }

        @CustomType.Setter
        public Builder contents(@Nullable List<SwitchRemoteSyslogServerContent> contents) {

            this.contents = contents;
            return this;
        }
        public Builder contents(SwitchRemoteSyslogServerContent... contents) {
            return contents(List.of(contents));
        }
        @CustomType.Setter
        public Builder explicitPriority(@Nullable Boolean explicitPriority) {

            this.explicitPriority = explicitPriority;
            return this;
        }
        @CustomType.Setter
        public Builder facility(@Nullable String facility) {

            this.facility = facility;
            return this;
        }
        @CustomType.Setter
        public Builder host(@Nullable String host) {

            this.host = host;
            return this;
        }
        @CustomType.Setter
        public Builder match(@Nullable String match) {

            this.match = match;
            return this;
        }
        @CustomType.Setter
        public Builder port(@Nullable String port) {

            this.port = port;
            return this;
        }
        @CustomType.Setter
        public Builder protocol(@Nullable String protocol) {

            this.protocol = protocol;
            return this;
        }
        @CustomType.Setter
        public Builder routingInstance(@Nullable String routingInstance) {

            this.routingInstance = routingInstance;
            return this;
        }
        @CustomType.Setter
        public Builder serverName(@Nullable String serverName) {

            this.serverName = serverName;
            return this;
        }
        @CustomType.Setter
        public Builder severity(@Nullable String severity) {

            this.severity = severity;
            return this;
        }
        @CustomType.Setter
        public Builder sourceAddress(@Nullable String sourceAddress) {

            this.sourceAddress = sourceAddress;
            return this;
        }
        @CustomType.Setter
        public Builder structuredData(@Nullable Boolean structuredData) {

            this.structuredData = structuredData;
            return this;
        }
        @CustomType.Setter
        public Builder tag(@Nullable String tag) {

            this.tag = tag;
            return this;
        }
        public SwitchRemoteSyslogServer build() {
            final var _resultValue = new SwitchRemoteSyslogServer();
            _resultValue.contents = contents;
            _resultValue.explicitPriority = explicitPriority;
            _resultValue.facility = facility;
            _resultValue.host = host;
            _resultValue.match = match;
            _resultValue.port = port;
            _resultValue.protocol = protocol;
            _resultValue.routingInstance = routingInstance;
            _resultValue.serverName = serverName;
            _resultValue.severity = severity;
            _resultValue.sourceAddress = sourceAddress;
            _resultValue.structuredData = structuredData;
            _resultValue.tag = tag;
            return _resultValue;
        }
    }
}
