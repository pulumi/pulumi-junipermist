// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.junipermist.org.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SettingSyntheticTestCustomProbesArgs extends com.pulumi.resources.ResourceArgs {

    public static final SettingSyntheticTestCustomProbesArgs Empty = new SettingSyntheticTestCustomProbesArgs();

    /**
     * enum: `auto`, `high`, `low`
     * 
     */
    @Import(name="aggressiveness")
    private @Nullable Output<String> aggressiveness;

    /**
     * @return enum: `auto`, `high`, `low`
     * 
     */
    public Optional<Output<String>> aggressiveness() {
        return Optional.ofNullable(this.aggressiveness);
    }

    /**
     * If `type`==`icmp` or `type`==`tcp`, Host to be used for the custom probe
     * 
     */
    @Import(name="host")
    private @Nullable Output<String> host;

    /**
     * @return If `type`==`icmp` or `type`==`tcp`, Host to be used for the custom probe
     * 
     */
    public Optional<Output<String>> host() {
        return Optional.ofNullable(this.host);
    }

    /**
     * If `type`==`tcp`, Port to be used for the custom probe
     * 
     */
    @Import(name="port")
    private @Nullable Output<Integer> port;

    /**
     * @return If `type`==`tcp`, Port to be used for the custom probe
     * 
     */
    public Optional<Output<Integer>> port() {
        return Optional.ofNullable(this.port);
    }

    /**
     * In milliseconds
     * 
     */
    @Import(name="threshold")
    private @Nullable Output<Integer> threshold;

    /**
     * @return In milliseconds
     * 
     */
    public Optional<Output<Integer>> threshold() {
        return Optional.ofNullable(this.threshold);
    }

    /**
     * enum: `curl`, `icmp`, `tcp`
     * 
     */
    @Import(name="type")
    private @Nullable Output<String> type;

    /**
     * @return enum: `curl`, `icmp`, `tcp`
     * 
     */
    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    /**
     * If `type`==`curl`, URL to be used for the custom probe, can be url or IP
     * 
     */
    @Import(name="url")
    private @Nullable Output<String> url;

    /**
     * @return If `type`==`curl`, URL to be used for the custom probe, can be url or IP
     * 
     */
    public Optional<Output<String>> url() {
        return Optional.ofNullable(this.url);
    }

    private SettingSyntheticTestCustomProbesArgs() {}

    private SettingSyntheticTestCustomProbesArgs(SettingSyntheticTestCustomProbesArgs $) {
        this.aggressiveness = $.aggressiveness;
        this.host = $.host;
        this.port = $.port;
        this.threshold = $.threshold;
        this.type = $.type;
        this.url = $.url;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SettingSyntheticTestCustomProbesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SettingSyntheticTestCustomProbesArgs $;

        public Builder() {
            $ = new SettingSyntheticTestCustomProbesArgs();
        }

        public Builder(SettingSyntheticTestCustomProbesArgs defaults) {
            $ = new SettingSyntheticTestCustomProbesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param aggressiveness enum: `auto`, `high`, `low`
         * 
         * @return builder
         * 
         */
        public Builder aggressiveness(@Nullable Output<String> aggressiveness) {
            $.aggressiveness = aggressiveness;
            return this;
        }

        /**
         * @param aggressiveness enum: `auto`, `high`, `low`
         * 
         * @return builder
         * 
         */
        public Builder aggressiveness(String aggressiveness) {
            return aggressiveness(Output.of(aggressiveness));
        }

        /**
         * @param host If `type`==`icmp` or `type`==`tcp`, Host to be used for the custom probe
         * 
         * @return builder
         * 
         */
        public Builder host(@Nullable Output<String> host) {
            $.host = host;
            return this;
        }

        /**
         * @param host If `type`==`icmp` or `type`==`tcp`, Host to be used for the custom probe
         * 
         * @return builder
         * 
         */
        public Builder host(String host) {
            return host(Output.of(host));
        }

        /**
         * @param port If `type`==`tcp`, Port to be used for the custom probe
         * 
         * @return builder
         * 
         */
        public Builder port(@Nullable Output<Integer> port) {
            $.port = port;
            return this;
        }

        /**
         * @param port If `type`==`tcp`, Port to be used for the custom probe
         * 
         * @return builder
         * 
         */
        public Builder port(Integer port) {
            return port(Output.of(port));
        }

        /**
         * @param threshold In milliseconds
         * 
         * @return builder
         * 
         */
        public Builder threshold(@Nullable Output<Integer> threshold) {
            $.threshold = threshold;
            return this;
        }

        /**
         * @param threshold In milliseconds
         * 
         * @return builder
         * 
         */
        public Builder threshold(Integer threshold) {
            return threshold(Output.of(threshold));
        }

        /**
         * @param type enum: `curl`, `icmp`, `tcp`
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type enum: `curl`, `icmp`, `tcp`
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        /**
         * @param url If `type`==`curl`, URL to be used for the custom probe, can be url or IP
         * 
         * @return builder
         * 
         */
        public Builder url(@Nullable Output<String> url) {
            $.url = url;
            return this;
        }

        /**
         * @param url If `type`==`curl`, URL to be used for the custom probe, can be url or IP
         * 
         * @return builder
         * 
         */
        public Builder url(String url) {
            return url(Output.of(url));
        }

        public SettingSyntheticTestCustomProbesArgs build() {
            return $;
        }
    }

}
