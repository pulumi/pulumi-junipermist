// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.junipermist.device.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.junipermist.device.outputs.SwitchOspfConfigAreas;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class SwitchOspfConfig {
    /**
     * @return Property key is the area name. Defines the OSPF areas configured on the switch.
     * 
     */
    private @Nullable Map<String,SwitchOspfConfigAreas> areas;
    /**
     * @return Enable OSPF on the switch
     * 
     */
    private @Nullable Boolean enabled;
    /**
     * @return optional, for basic scenario, `import_policy` can be specified and can be applied to all networks in all areas if not explicitly specified
     * 
     */
    private @Nullable String exportPolicy;
    /**
     * @return optional, for basic scenario, `import_policy` can be specified and can be applied to all networks in all areas if not explicitly specified
     * 
     */
    private @Nullable String importPolicy;
    private @Nullable String referenceBandwidth;

    private SwitchOspfConfig() {}
    /**
     * @return Property key is the area name. Defines the OSPF areas configured on the switch.
     * 
     */
    public Map<String,SwitchOspfConfigAreas> areas() {
        return this.areas == null ? Map.of() : this.areas;
    }
    /**
     * @return Enable OSPF on the switch
     * 
     */
    public Optional<Boolean> enabled() {
        return Optional.ofNullable(this.enabled);
    }
    /**
     * @return optional, for basic scenario, `import_policy` can be specified and can be applied to all networks in all areas if not explicitly specified
     * 
     */
    public Optional<String> exportPolicy() {
        return Optional.ofNullable(this.exportPolicy);
    }
    /**
     * @return optional, for basic scenario, `import_policy` can be specified and can be applied to all networks in all areas if not explicitly specified
     * 
     */
    public Optional<String> importPolicy() {
        return Optional.ofNullable(this.importPolicy);
    }
    public Optional<String> referenceBandwidth() {
        return Optional.ofNullable(this.referenceBandwidth);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SwitchOspfConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Map<String,SwitchOspfConfigAreas> areas;
        private @Nullable Boolean enabled;
        private @Nullable String exportPolicy;
        private @Nullable String importPolicy;
        private @Nullable String referenceBandwidth;
        public Builder() {}
        public Builder(SwitchOspfConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.areas = defaults.areas;
    	      this.enabled = defaults.enabled;
    	      this.exportPolicy = defaults.exportPolicy;
    	      this.importPolicy = defaults.importPolicy;
    	      this.referenceBandwidth = defaults.referenceBandwidth;
        }

        @CustomType.Setter
        public Builder areas(@Nullable Map<String,SwitchOspfConfigAreas> areas) {

            this.areas = areas;
            return this;
        }
        @CustomType.Setter
        public Builder enabled(@Nullable Boolean enabled) {

            this.enabled = enabled;
            return this;
        }
        @CustomType.Setter
        public Builder exportPolicy(@Nullable String exportPolicy) {

            this.exportPolicy = exportPolicy;
            return this;
        }
        @CustomType.Setter
        public Builder importPolicy(@Nullable String importPolicy) {

            this.importPolicy = importPolicy;
            return this;
        }
        @CustomType.Setter
        public Builder referenceBandwidth(@Nullable String referenceBandwidth) {

            this.referenceBandwidth = referenceBandwidth;
            return this;
        }
        public SwitchOspfConfig build() {
            final var _resultValue = new SwitchOspfConfig();
            _resultValue.areas = areas;
            _resultValue.enabled = enabled;
            _resultValue.exportPolicy = exportPolicy;
            _resultValue.importPolicy = importPolicy;
            _resultValue.referenceBandwidth = referenceBandwidth;
            return _resultValue;
        }
    }
}
