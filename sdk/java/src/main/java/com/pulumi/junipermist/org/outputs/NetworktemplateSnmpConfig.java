// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.junipermist.org.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.junipermist.org.outputs.NetworktemplateSnmpConfigClientList;
import com.pulumi.junipermist.org.outputs.NetworktemplateSnmpConfigTrapGroup;
import com.pulumi.junipermist.org.outputs.NetworktemplateSnmpConfigV2cConfig;
import com.pulumi.junipermist.org.outputs.NetworktemplateSnmpConfigV3Config;
import com.pulumi.junipermist.org.outputs.NetworktemplateSnmpConfigView;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class NetworktemplateSnmpConfig {
    private @Nullable List<NetworktemplateSnmpConfigClientList> clientLists;
    private @Nullable String contact;
    private @Nullable String description;
    private @Nullable Boolean enabled;
    private @Nullable String engineId;
    /**
     * @return enum: `local`, `useMacAddress`
     * 
     */
    private @Nullable String engineIdType;
    private @Nullable String location;
    private @Nullable String name;
    private @Nullable String network;
    private @Nullable List<NetworktemplateSnmpConfigTrapGroup> trapGroups;
    private @Nullable List<NetworktemplateSnmpConfigV2cConfig> v2cConfigs;
    private @Nullable NetworktemplateSnmpConfigV3Config v3Config;
    private @Nullable List<NetworktemplateSnmpConfigView> views;

    private NetworktemplateSnmpConfig() {}
    public List<NetworktemplateSnmpConfigClientList> clientLists() {
        return this.clientLists == null ? List.of() : this.clientLists;
    }
    public Optional<String> contact() {
        return Optional.ofNullable(this.contact);
    }
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    public Optional<Boolean> enabled() {
        return Optional.ofNullable(this.enabled);
    }
    public Optional<String> engineId() {
        return Optional.ofNullable(this.engineId);
    }
    /**
     * @return enum: `local`, `useMacAddress`
     * 
     */
    public Optional<String> engineIdType() {
        return Optional.ofNullable(this.engineIdType);
    }
    public Optional<String> location() {
        return Optional.ofNullable(this.location);
    }
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    public Optional<String> network() {
        return Optional.ofNullable(this.network);
    }
    public List<NetworktemplateSnmpConfigTrapGroup> trapGroups() {
        return this.trapGroups == null ? List.of() : this.trapGroups;
    }
    public List<NetworktemplateSnmpConfigV2cConfig> v2cConfigs() {
        return this.v2cConfigs == null ? List.of() : this.v2cConfigs;
    }
    public Optional<NetworktemplateSnmpConfigV3Config> v3Config() {
        return Optional.ofNullable(this.v3Config);
    }
    public List<NetworktemplateSnmpConfigView> views() {
        return this.views == null ? List.of() : this.views;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(NetworktemplateSnmpConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<NetworktemplateSnmpConfigClientList> clientLists;
        private @Nullable String contact;
        private @Nullable String description;
        private @Nullable Boolean enabled;
        private @Nullable String engineId;
        private @Nullable String engineIdType;
        private @Nullable String location;
        private @Nullable String name;
        private @Nullable String network;
        private @Nullable List<NetworktemplateSnmpConfigTrapGroup> trapGroups;
        private @Nullable List<NetworktemplateSnmpConfigV2cConfig> v2cConfigs;
        private @Nullable NetworktemplateSnmpConfigV3Config v3Config;
        private @Nullable List<NetworktemplateSnmpConfigView> views;
        public Builder() {}
        public Builder(NetworktemplateSnmpConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.clientLists = defaults.clientLists;
    	      this.contact = defaults.contact;
    	      this.description = defaults.description;
    	      this.enabled = defaults.enabled;
    	      this.engineId = defaults.engineId;
    	      this.engineIdType = defaults.engineIdType;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.network = defaults.network;
    	      this.trapGroups = defaults.trapGroups;
    	      this.v2cConfigs = defaults.v2cConfigs;
    	      this.v3Config = defaults.v3Config;
    	      this.views = defaults.views;
        }

        @CustomType.Setter
        public Builder clientLists(@Nullable List<NetworktemplateSnmpConfigClientList> clientLists) {

            this.clientLists = clientLists;
            return this;
        }
        public Builder clientLists(NetworktemplateSnmpConfigClientList... clientLists) {
            return clientLists(List.of(clientLists));
        }
        @CustomType.Setter
        public Builder contact(@Nullable String contact) {

            this.contact = contact;
            return this;
        }
        @CustomType.Setter
        public Builder description(@Nullable String description) {

            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder enabled(@Nullable Boolean enabled) {

            this.enabled = enabled;
            return this;
        }
        @CustomType.Setter
        public Builder engineId(@Nullable String engineId) {

            this.engineId = engineId;
            return this;
        }
        @CustomType.Setter
        public Builder engineIdType(@Nullable String engineIdType) {

            this.engineIdType = engineIdType;
            return this;
        }
        @CustomType.Setter
        public Builder location(@Nullable String location) {

            this.location = location;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {

            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder network(@Nullable String network) {

            this.network = network;
            return this;
        }
        @CustomType.Setter
        public Builder trapGroups(@Nullable List<NetworktemplateSnmpConfigTrapGroup> trapGroups) {

            this.trapGroups = trapGroups;
            return this;
        }
        public Builder trapGroups(NetworktemplateSnmpConfigTrapGroup... trapGroups) {
            return trapGroups(List.of(trapGroups));
        }
        @CustomType.Setter
        public Builder v2cConfigs(@Nullable List<NetworktemplateSnmpConfigV2cConfig> v2cConfigs) {

            this.v2cConfigs = v2cConfigs;
            return this;
        }
        public Builder v2cConfigs(NetworktemplateSnmpConfigV2cConfig... v2cConfigs) {
            return v2cConfigs(List.of(v2cConfigs));
        }
        @CustomType.Setter
        public Builder v3Config(@Nullable NetworktemplateSnmpConfigV3Config v3Config) {

            this.v3Config = v3Config;
            return this;
        }
        @CustomType.Setter
        public Builder views(@Nullable List<NetworktemplateSnmpConfigView> views) {

            this.views = views;
            return this;
        }
        public Builder views(NetworktemplateSnmpConfigView... views) {
            return views(List.of(views));
        }
        public NetworktemplateSnmpConfig build() {
            final var _resultValue = new NetworktemplateSnmpConfig();
            _resultValue.clientLists = clientLists;
            _resultValue.contact = contact;
            _resultValue.description = description;
            _resultValue.enabled = enabled;
            _resultValue.engineId = engineId;
            _resultValue.engineIdType = engineIdType;
            _resultValue.location = location;
            _resultValue.name = name;
            _resultValue.network = network;
            _resultValue.trapGroups = trapGroups;
            _resultValue.v2cConfigs = v2cConfigs;
            _resultValue.v3Config = v3Config;
            _resultValue.views = views;
            return _resultValue;
        }
    }
}
