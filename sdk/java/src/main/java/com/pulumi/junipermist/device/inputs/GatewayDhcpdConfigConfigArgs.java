// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.junipermist.device.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.junipermist.device.inputs.GatewayDhcpdConfigConfigFixedBindingsArgs;
import com.pulumi.junipermist.device.inputs.GatewayDhcpdConfigConfigOptionsArgs;
import com.pulumi.junipermist.device.inputs.GatewayDhcpdConfigConfigVendorEncapulatedArgs;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GatewayDhcpdConfigConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final GatewayDhcpdConfigConfigArgs Empty = new GatewayDhcpdConfigConfigArgs();

    /**
     * if `type`==`local` - optional, if not defined, system one will be used
     * 
     */
    @Import(name="dnsServers")
    private @Nullable Output<List<String>> dnsServers;

    /**
     * @return if `type`==`local` - optional, if not defined, system one will be used
     * 
     */
    public Optional<Output<List<String>>> dnsServers() {
        return Optional.ofNullable(this.dnsServers);
    }

    /**
     * if `type`==`local` - optional, if not defined, system one will be used
     * 
     */
    @Import(name="dnsSuffixes")
    private @Nullable Output<List<String>> dnsSuffixes;

    /**
     * @return if `type`==`local` - optional, if not defined, system one will be used
     * 
     */
    public Optional<Output<List<String>>> dnsSuffixes() {
        return Optional.ofNullable(this.dnsSuffixes);
    }

    /**
     * Property key is the MAC Address. Format is `[0-9a-f]{12}` (e.g &#34;5684dae9ac8b&#34;)
     * 
     */
    @Import(name="fixedBindings")
    private @Nullable Output<Map<String,GatewayDhcpdConfigConfigFixedBindingsArgs>> fixedBindings;

    /**
     * @return Property key is the MAC Address. Format is `[0-9a-f]{12}` (e.g &#34;5684dae9ac8b&#34;)
     * 
     */
    public Optional<Output<Map<String,GatewayDhcpdConfigConfigFixedBindingsArgs>>> fixedBindings() {
        return Optional.ofNullable(this.fixedBindings);
    }

    /**
     * if `type`==`local` - optional, `ip` will be used if not provided
     * 
     */
    @Import(name="gateway")
    private @Nullable Output<String> gateway;

    /**
     * @return if `type`==`local` - optional, `ip` will be used if not provided
     * 
     */
    public Optional<Output<String>> gateway() {
        return Optional.ofNullable(this.gateway);
    }

    /**
     * if `type`==`local`
     * 
     */
    @Import(name="ipEnd")
    private @Nullable Output<String> ipEnd;

    /**
     * @return if `type`==`local`
     * 
     */
    public Optional<Output<String>> ipEnd() {
        return Optional.ofNullable(this.ipEnd);
    }

    /**
     * if `type6`==`local`
     * 
     */
    @Import(name="ipEnd6")
    private @Nullable Output<String> ipEnd6;

    /**
     * @return if `type6`==`local`
     * 
     */
    public Optional<Output<String>> ipEnd6() {
        return Optional.ofNullable(this.ipEnd6);
    }

    /**
     * if `type`==`local`
     * 
     */
    @Import(name="ipStart")
    private @Nullable Output<String> ipStart;

    /**
     * @return if `type`==`local`
     * 
     */
    public Optional<Output<String>> ipStart() {
        return Optional.ofNullable(this.ipStart);
    }

    /**
     * if `type6`==`local`
     * 
     */
    @Import(name="ipStart6")
    private @Nullable Output<String> ipStart6;

    /**
     * @return if `type6`==`local`
     * 
     */
    public Optional<Output<String>> ipStart6() {
        return Optional.ofNullable(this.ipStart6);
    }

    /**
     * in seconds, lease time has to be between 3600 [1hr] - 604800 [1 week], default is 86400 [1 day]
     * 
     */
    @Import(name="leaseTime")
    private @Nullable Output<Integer> leaseTime;

    /**
     * @return in seconds, lease time has to be between 3600 [1hr] - 604800 [1 week], default is 86400 [1 day]
     * 
     */
    public Optional<Output<Integer>> leaseTime() {
        return Optional.ofNullable(this.leaseTime);
    }

    /**
     * Property key is the DHCP option number
     * 
     */
    @Import(name="options")
    private @Nullable Output<Map<String,GatewayDhcpdConfigConfigOptionsArgs>> options;

    /**
     * @return Property key is the DHCP option number
     * 
     */
    public Optional<Output<Map<String,GatewayDhcpdConfigConfigOptionsArgs>>> options() {
        return Optional.ofNullable(this.options);
    }

    /**
     * `server_id_override`==`true` means the device, when acts as DHCP relay and forwards DHCP responses from DHCP server to clients,
     * should overwrite the Sever Identifier option (i.e. DHCP option 54) in DHCP responses with its own IP address.
     * 
     */
    @Import(name="serverIdOverride")
    private @Nullable Output<Boolean> serverIdOverride;

    /**
     * @return `server_id_override`==`true` means the device, when acts as DHCP relay and forwards DHCP responses from DHCP server to clients,
     * should overwrite the Sever Identifier option (i.e. DHCP option 54) in DHCP responses with its own IP address.
     * 
     */
    public Optional<Output<Boolean>> serverIdOverride() {
        return Optional.ofNullable(this.serverIdOverride);
    }

    /**
     * if `type`==`relay`
     * 
     */
    @Import(name="servers")
    private @Nullable Output<List<String>> servers;

    /**
     * @return if `type`==`relay`
     * 
     */
    public Optional<Output<List<String>>> servers() {
        return Optional.ofNullable(this.servers);
    }

    /**
     * if `type6`==`relay`
     * 
     */
    @Import(name="servers6s")
    private @Nullable Output<List<String>> servers6s;

    /**
     * @return if `type6`==`relay`
     * 
     */
    public Optional<Output<List<String>>> servers6s() {
        return Optional.ofNullable(this.servers6s);
    }

    /**
     * enum: `local` (DHCP Server), `none`, `relay` (DHCP Relay)
     * 
     */
    @Import(name="type")
    private @Nullable Output<String> type;

    /**
     * @return enum: `local` (DHCP Server), `none`, `relay` (DHCP Relay)
     * 
     */
    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    /**
     * enum: `local` (DHCP Server), `none`, `relay` (DHCP Relay)
     * 
     */
    @Import(name="type6")
    private @Nullable Output<String> type6;

    /**
     * @return enum: `local` (DHCP Server), `none`, `relay` (DHCP Relay)
     * 
     */
    public Optional<Output<String>> type6() {
        return Optional.ofNullable(this.type6);
    }

    /**
     * Property key is &lt;enterprise number&gt;:&lt;sub option code&gt;, with
     *   * enterprise number: 1-65535 (https://www.iana.org/assignments/enterprise-numbers/enterprise-numbers)
     *   * sub option code: 1-255, sub-option code&#39;
     * 
     */
    @Import(name="vendorEncapulated")
    private @Nullable Output<Map<String,GatewayDhcpdConfigConfigVendorEncapulatedArgs>> vendorEncapulated;

    /**
     * @return Property key is &lt;enterprise number&gt;:&lt;sub option code&gt;, with
     *   * enterprise number: 1-65535 (https://www.iana.org/assignments/enterprise-numbers/enterprise-numbers)
     *   * sub option code: 1-255, sub-option code&#39;
     * 
     */
    public Optional<Output<Map<String,GatewayDhcpdConfigConfigVendorEncapulatedArgs>>> vendorEncapulated() {
        return Optional.ofNullable(this.vendorEncapulated);
    }

    private GatewayDhcpdConfigConfigArgs() {}

    private GatewayDhcpdConfigConfigArgs(GatewayDhcpdConfigConfigArgs $) {
        this.dnsServers = $.dnsServers;
        this.dnsSuffixes = $.dnsSuffixes;
        this.fixedBindings = $.fixedBindings;
        this.gateway = $.gateway;
        this.ipEnd = $.ipEnd;
        this.ipEnd6 = $.ipEnd6;
        this.ipStart = $.ipStart;
        this.ipStart6 = $.ipStart6;
        this.leaseTime = $.leaseTime;
        this.options = $.options;
        this.serverIdOverride = $.serverIdOverride;
        this.servers = $.servers;
        this.servers6s = $.servers6s;
        this.type = $.type;
        this.type6 = $.type6;
        this.vendorEncapulated = $.vendorEncapulated;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GatewayDhcpdConfigConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GatewayDhcpdConfigConfigArgs $;

        public Builder() {
            $ = new GatewayDhcpdConfigConfigArgs();
        }

        public Builder(GatewayDhcpdConfigConfigArgs defaults) {
            $ = new GatewayDhcpdConfigConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param dnsServers if `type`==`local` - optional, if not defined, system one will be used
         * 
         * @return builder
         * 
         */
        public Builder dnsServers(@Nullable Output<List<String>> dnsServers) {
            $.dnsServers = dnsServers;
            return this;
        }

        /**
         * @param dnsServers if `type`==`local` - optional, if not defined, system one will be used
         * 
         * @return builder
         * 
         */
        public Builder dnsServers(List<String> dnsServers) {
            return dnsServers(Output.of(dnsServers));
        }

        /**
         * @param dnsServers if `type`==`local` - optional, if not defined, system one will be used
         * 
         * @return builder
         * 
         */
        public Builder dnsServers(String... dnsServers) {
            return dnsServers(List.of(dnsServers));
        }

        /**
         * @param dnsSuffixes if `type`==`local` - optional, if not defined, system one will be used
         * 
         * @return builder
         * 
         */
        public Builder dnsSuffixes(@Nullable Output<List<String>> dnsSuffixes) {
            $.dnsSuffixes = dnsSuffixes;
            return this;
        }

        /**
         * @param dnsSuffixes if `type`==`local` - optional, if not defined, system one will be used
         * 
         * @return builder
         * 
         */
        public Builder dnsSuffixes(List<String> dnsSuffixes) {
            return dnsSuffixes(Output.of(dnsSuffixes));
        }

        /**
         * @param dnsSuffixes if `type`==`local` - optional, if not defined, system one will be used
         * 
         * @return builder
         * 
         */
        public Builder dnsSuffixes(String... dnsSuffixes) {
            return dnsSuffixes(List.of(dnsSuffixes));
        }

        /**
         * @param fixedBindings Property key is the MAC Address. Format is `[0-9a-f]{12}` (e.g &#34;5684dae9ac8b&#34;)
         * 
         * @return builder
         * 
         */
        public Builder fixedBindings(@Nullable Output<Map<String,GatewayDhcpdConfigConfigFixedBindingsArgs>> fixedBindings) {
            $.fixedBindings = fixedBindings;
            return this;
        }

        /**
         * @param fixedBindings Property key is the MAC Address. Format is `[0-9a-f]{12}` (e.g &#34;5684dae9ac8b&#34;)
         * 
         * @return builder
         * 
         */
        public Builder fixedBindings(Map<String,GatewayDhcpdConfigConfigFixedBindingsArgs> fixedBindings) {
            return fixedBindings(Output.of(fixedBindings));
        }

        /**
         * @param gateway if `type`==`local` - optional, `ip` will be used if not provided
         * 
         * @return builder
         * 
         */
        public Builder gateway(@Nullable Output<String> gateway) {
            $.gateway = gateway;
            return this;
        }

        /**
         * @param gateway if `type`==`local` - optional, `ip` will be used if not provided
         * 
         * @return builder
         * 
         */
        public Builder gateway(String gateway) {
            return gateway(Output.of(gateway));
        }

        /**
         * @param ipEnd if `type`==`local`
         * 
         * @return builder
         * 
         */
        public Builder ipEnd(@Nullable Output<String> ipEnd) {
            $.ipEnd = ipEnd;
            return this;
        }

        /**
         * @param ipEnd if `type`==`local`
         * 
         * @return builder
         * 
         */
        public Builder ipEnd(String ipEnd) {
            return ipEnd(Output.of(ipEnd));
        }

        /**
         * @param ipEnd6 if `type6`==`local`
         * 
         * @return builder
         * 
         */
        public Builder ipEnd6(@Nullable Output<String> ipEnd6) {
            $.ipEnd6 = ipEnd6;
            return this;
        }

        /**
         * @param ipEnd6 if `type6`==`local`
         * 
         * @return builder
         * 
         */
        public Builder ipEnd6(String ipEnd6) {
            return ipEnd6(Output.of(ipEnd6));
        }

        /**
         * @param ipStart if `type`==`local`
         * 
         * @return builder
         * 
         */
        public Builder ipStart(@Nullable Output<String> ipStart) {
            $.ipStart = ipStart;
            return this;
        }

        /**
         * @param ipStart if `type`==`local`
         * 
         * @return builder
         * 
         */
        public Builder ipStart(String ipStart) {
            return ipStart(Output.of(ipStart));
        }

        /**
         * @param ipStart6 if `type6`==`local`
         * 
         * @return builder
         * 
         */
        public Builder ipStart6(@Nullable Output<String> ipStart6) {
            $.ipStart6 = ipStart6;
            return this;
        }

        /**
         * @param ipStart6 if `type6`==`local`
         * 
         * @return builder
         * 
         */
        public Builder ipStart6(String ipStart6) {
            return ipStart6(Output.of(ipStart6));
        }

        /**
         * @param leaseTime in seconds, lease time has to be between 3600 [1hr] - 604800 [1 week], default is 86400 [1 day]
         * 
         * @return builder
         * 
         */
        public Builder leaseTime(@Nullable Output<Integer> leaseTime) {
            $.leaseTime = leaseTime;
            return this;
        }

        /**
         * @param leaseTime in seconds, lease time has to be between 3600 [1hr] - 604800 [1 week], default is 86400 [1 day]
         * 
         * @return builder
         * 
         */
        public Builder leaseTime(Integer leaseTime) {
            return leaseTime(Output.of(leaseTime));
        }

        /**
         * @param options Property key is the DHCP option number
         * 
         * @return builder
         * 
         */
        public Builder options(@Nullable Output<Map<String,GatewayDhcpdConfigConfigOptionsArgs>> options) {
            $.options = options;
            return this;
        }

        /**
         * @param options Property key is the DHCP option number
         * 
         * @return builder
         * 
         */
        public Builder options(Map<String,GatewayDhcpdConfigConfigOptionsArgs> options) {
            return options(Output.of(options));
        }

        /**
         * @param serverIdOverride `server_id_override`==`true` means the device, when acts as DHCP relay and forwards DHCP responses from DHCP server to clients,
         * should overwrite the Sever Identifier option (i.e. DHCP option 54) in DHCP responses with its own IP address.
         * 
         * @return builder
         * 
         */
        public Builder serverIdOverride(@Nullable Output<Boolean> serverIdOverride) {
            $.serverIdOverride = serverIdOverride;
            return this;
        }

        /**
         * @param serverIdOverride `server_id_override`==`true` means the device, when acts as DHCP relay and forwards DHCP responses from DHCP server to clients,
         * should overwrite the Sever Identifier option (i.e. DHCP option 54) in DHCP responses with its own IP address.
         * 
         * @return builder
         * 
         */
        public Builder serverIdOverride(Boolean serverIdOverride) {
            return serverIdOverride(Output.of(serverIdOverride));
        }

        /**
         * @param servers if `type`==`relay`
         * 
         * @return builder
         * 
         */
        public Builder servers(@Nullable Output<List<String>> servers) {
            $.servers = servers;
            return this;
        }

        /**
         * @param servers if `type`==`relay`
         * 
         * @return builder
         * 
         */
        public Builder servers(List<String> servers) {
            return servers(Output.of(servers));
        }

        /**
         * @param servers if `type`==`relay`
         * 
         * @return builder
         * 
         */
        public Builder servers(String... servers) {
            return servers(List.of(servers));
        }

        /**
         * @param servers6s if `type6`==`relay`
         * 
         * @return builder
         * 
         */
        public Builder servers6s(@Nullable Output<List<String>> servers6s) {
            $.servers6s = servers6s;
            return this;
        }

        /**
         * @param servers6s if `type6`==`relay`
         * 
         * @return builder
         * 
         */
        public Builder servers6s(List<String> servers6s) {
            return servers6s(Output.of(servers6s));
        }

        /**
         * @param servers6s if `type6`==`relay`
         * 
         * @return builder
         * 
         */
        public Builder servers6s(String... servers6s) {
            return servers6s(List.of(servers6s));
        }

        /**
         * @param type enum: `local` (DHCP Server), `none`, `relay` (DHCP Relay)
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type enum: `local` (DHCP Server), `none`, `relay` (DHCP Relay)
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        /**
         * @param type6 enum: `local` (DHCP Server), `none`, `relay` (DHCP Relay)
         * 
         * @return builder
         * 
         */
        public Builder type6(@Nullable Output<String> type6) {
            $.type6 = type6;
            return this;
        }

        /**
         * @param type6 enum: `local` (DHCP Server), `none`, `relay` (DHCP Relay)
         * 
         * @return builder
         * 
         */
        public Builder type6(String type6) {
            return type6(Output.of(type6));
        }

        /**
         * @param vendorEncapulated Property key is &lt;enterprise number&gt;:&lt;sub option code&gt;, with
         *   * enterprise number: 1-65535 (https://www.iana.org/assignments/enterprise-numbers/enterprise-numbers)
         *   * sub option code: 1-255, sub-option code&#39;
         * 
         * @return builder
         * 
         */
        public Builder vendorEncapulated(@Nullable Output<Map<String,GatewayDhcpdConfigConfigVendorEncapulatedArgs>> vendorEncapulated) {
            $.vendorEncapulated = vendorEncapulated;
            return this;
        }

        /**
         * @param vendorEncapulated Property key is &lt;enterprise number&gt;:&lt;sub option code&gt;, with
         *   * enterprise number: 1-65535 (https://www.iana.org/assignments/enterprise-numbers/enterprise-numbers)
         *   * sub option code: 1-255, sub-option code&#39;
         * 
         * @return builder
         * 
         */
        public Builder vendorEncapulated(Map<String,GatewayDhcpdConfigConfigVendorEncapulatedArgs> vendorEncapulated) {
            return vendorEncapulated(Output.of(vendorEncapulated));
        }

        public GatewayDhcpdConfigConfigArgs build() {
            return $;
        }
    }

}
