// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.junipermist.device.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ImageState extends com.pulumi.resources.ResourceArgs {

    public static final ImageState Empty = new ImageState();

    @Import(name="deviceId")
    private @Nullable Output<String> deviceId;

    public Optional<Output<String>> deviceId() {
        return Optional.ofNullable(this.deviceId);
    }

    /**
     * path to the device image file to upload. File must be a `jpeg`, `jpg` or `png` image`
     * 
     */
    @Import(name="file")
    private @Nullable Output<String> file;

    /**
     * @return path to the device image file to upload. File must be a `jpeg`, `jpg` or `png` image`
     * 
     */
    public Optional<Output<String>> file() {
        return Optional.ofNullable(this.file);
    }

    @Import(name="imageNumber")
    private @Nullable Output<Integer> imageNumber;

    public Optional<Output<Integer>> imageNumber() {
        return Optional.ofNullable(this.imageNumber);
    }

    @Import(name="siteId")
    private @Nullable Output<String> siteId;

    public Optional<Output<String>> siteId() {
        return Optional.ofNullable(this.siteId);
    }

    private ImageState() {}

    private ImageState(ImageState $) {
        this.deviceId = $.deviceId;
        this.file = $.file;
        this.imageNumber = $.imageNumber;
        this.siteId = $.siteId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ImageState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ImageState $;

        public Builder() {
            $ = new ImageState();
        }

        public Builder(ImageState defaults) {
            $ = new ImageState(Objects.requireNonNull(defaults));
        }

        public Builder deviceId(@Nullable Output<String> deviceId) {
            $.deviceId = deviceId;
            return this;
        }

        public Builder deviceId(String deviceId) {
            return deviceId(Output.of(deviceId));
        }

        /**
         * @param file path to the device image file to upload. File must be a `jpeg`, `jpg` or `png` image`
         * 
         * @return builder
         * 
         */
        public Builder file(@Nullable Output<String> file) {
            $.file = file;
            return this;
        }

        /**
         * @param file path to the device image file to upload. File must be a `jpeg`, `jpg` or `png` image`
         * 
         * @return builder
         * 
         */
        public Builder file(String file) {
            return file(Output.of(file));
        }

        public Builder imageNumber(@Nullable Output<Integer> imageNumber) {
            $.imageNumber = imageNumber;
            return this;
        }

        public Builder imageNumber(Integer imageNumber) {
            return imageNumber(Output.of(imageNumber));
        }

        public Builder siteId(@Nullable Output<String> siteId) {
            $.siteId = siteId;
            return this;
        }

        public Builder siteId(String siteId) {
            return siteId(Output.of(siteId));
        }

        public ImageState build() {
            return $;
        }
    }

}
