# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

import types

__config__ = pulumi.Config('junipermist')


class _ExportableConfig(types.ModuleType):
    @_builtins.property
    def api_debug(self) -> Optional[bool]:
        """
        Enable API request/response debugging. When enabled, request and response bodies, headers, and other sensitive data may be logged. Can also be set via the `MIST_API_DEBUG` environment variable. Default: `false`.
        """
        return __config__.get_bool('apiDebug')

    @_builtins.property
    def api_timeout(self) -> Optional[float]:
        """
        Timeout in seconds for API requests. Set to 0 for infinite timeout. Can also be set via the `MIST_API_TIMEOUT` environment variable. Default: `10` seconds.
        """
        return __config__.get_float('apiTimeout')

    @_builtins.property
    def apitoken(self) -> Optional[str]:
        """
        Mist API Token for authentication. Can also be set via the `MIST_APITOKEN` environment variable. This is the recommended authentication method.
        """
        return __config__.get('apitoken')

    @_builtins.property
    def host(self) -> Optional[str]:
        """
        URL of the Mist Cloud (e.g., `api.mist.com`). Can also be set via the `MIST_HOST` environment variable.
        """
        return __config__.get('host')

    @_builtins.property
    def password(self) -> Optional[str]:
        """
        Mist Account password for basic authentication. Can also be set via the `MIST_PASSWORD` environment variable. Requires `username` to be set.
        """
        return __config__.get('password')

    @_builtins.property
    def proxy(self) -> Optional[str]:
        """
        Proxy configuration for API requests. The value may be either a complete URL or `[username:password@]host[:port]` format. Supported schemes: `http`, `https`, and `socks5`. If no scheme is provided, `http` is assumed. Can also be set via the `MIST_PROXY` environment variable.
        """
        return __config__.get('proxy')

    @_builtins.property
    def username(self) -> Optional[str]:
        """
        Mist Account username for basic authentication. Can also be set via the `MIST_USERNAME` environment variable. Requires `password` to be set and 2FA to be disabled.
        """
        return __config__.get('username')

