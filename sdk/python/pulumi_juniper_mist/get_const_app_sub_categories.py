# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities
from . import outputs

__all__ = [
    'GetConstAppSubCategoriesResult',
    'AwaitableGetConstAppSubCategoriesResult',
    'get_const_app_sub_categories',
    'get_const_app_sub_categories_output',
]

@pulumi.output_type
class GetConstAppSubCategoriesResult:
    """
    A collection of values returned by getConstAppSubCategories.
    """
    def __init__(__self__, const_app_sub_categories=None, id=None):
        if const_app_sub_categories and not isinstance(const_app_sub_categories, list):
            raise TypeError("Expected argument 'const_app_sub_categories' to be a list")
        pulumi.set(__self__, "const_app_sub_categories", const_app_sub_categories)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)

    @property
    @pulumi.getter(name="constAppSubCategories")
    def const_app_sub_categories(self) -> Sequence['outputs.GetConstAppSubCategoriesConstAppSubCategoryResult']:
        return pulumi.get(self, "const_app_sub_categories")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")


class AwaitableGetConstAppSubCategoriesResult(GetConstAppSubCategoriesResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetConstAppSubCategoriesResult(
            const_app_sub_categories=self.const_app_sub_categories,
            id=self.id)


def get_const_app_sub_categories(opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetConstAppSubCategoriesResult:
    """
    This data source provides the of ConstAppSubCategories.
    This information can be used as `app_subcategories` in the `org.Service` resource

    ## Example Usage

    ```python
    import pulumi
    import pulumi_junipermist as junipermist

    list_of_app_sub_categories = junipermist.get_const_app_sub_categories()
    ```
    """
    __args__ = dict()
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('junipermist:index/getConstAppSubCategories:getConstAppSubCategories', __args__, opts=opts, typ=GetConstAppSubCategoriesResult).value

    return AwaitableGetConstAppSubCategoriesResult(
        const_app_sub_categories=pulumi.get(__ret__, 'const_app_sub_categories'),
        id=pulumi.get(__ret__, 'id'))
def get_const_app_sub_categories_output(opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetConstAppSubCategoriesResult]:
    """
    This data source provides the of ConstAppSubCategories.
    This information can be used as `app_subcategories` in the `org.Service` resource

    ## Example Usage

    ```python
    import pulumi
    import pulumi_junipermist as junipermist

    list_of_app_sub_categories = junipermist.get_const_app_sub_categories()
    ```
    """
    __args__ = dict()
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('junipermist:index/getConstAppSubCategories:getConstAppSubCategories', __args__, opts=opts, typ=GetConstAppSubCategoriesResult)
    return __ret__.apply(lambda __response__: GetConstAppSubCategoriesResult(
        const_app_sub_categories=pulumi.get(__response__, 'const_app_sub_categories'),
        id=pulumi.get(__response__, 'id')))
