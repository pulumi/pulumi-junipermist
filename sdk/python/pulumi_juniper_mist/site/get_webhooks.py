# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs

__all__ = [
    'GetWebhooksResult',
    'AwaitableGetWebhooksResult',
    'get_webhooks',
    'get_webhooks_output',
]

@pulumi.output_type
class GetWebhooksResult:
    """
    A collection of values returned by getWebhooks.
    """
    def __init__(__self__, id=None, site_id=None, site_webhooks=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if site_id and not isinstance(site_id, str):
            raise TypeError("Expected argument 'site_id' to be a str")
        pulumi.set(__self__, "site_id", site_id)
        if site_webhooks and not isinstance(site_webhooks, list):
            raise TypeError("Expected argument 'site_webhooks' to be a list")
        pulumi.set(__self__, "site_webhooks", site_webhooks)

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="siteId")
    def site_id(self) -> str:
        return pulumi.get(self, "site_id")

    @property
    @pulumi.getter(name="siteWebhooks")
    def site_webhooks(self) -> Sequence['outputs.GetWebhooksSiteWebhookResult']:
        return pulumi.get(self, "site_webhooks")


class AwaitableGetWebhooksResult(GetWebhooksResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetWebhooksResult(
            id=self.id,
            site_id=self.site_id,
            site_webhooks=self.site_webhooks)


def get_webhooks(site_id: Optional[str] = None,
                 opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetWebhooksResult:
    """
    This data source provides the list of Site Webhooks.

    A Site Webhook is a configuration that allows real-time events and data from a specific site to be pushed to a provided url.\\
    It enables the collection of information about various topics such as device events, alarms, audits, client sessions and location updates at the site level.\\
    The Webhook can be set up and customized using the Mist API, allowing users to receive and analyze specific data from a particular site.
    """
    __args__ = dict()
    __args__['siteId'] = site_id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('junipermist:site/getWebhooks:getWebhooks', __args__, opts=opts, typ=GetWebhooksResult).value

    return AwaitableGetWebhooksResult(
        id=pulumi.get(__ret__, 'id'),
        site_id=pulumi.get(__ret__, 'site_id'),
        site_webhooks=pulumi.get(__ret__, 'site_webhooks'))
def get_webhooks_output(site_id: Optional[pulumi.Input[str]] = None,
                        opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetWebhooksResult]:
    """
    This data source provides the list of Site Webhooks.

    A Site Webhook is a configuration that allows real-time events and data from a specific site to be pushed to a provided url.\\
    It enables the collection of information about various topics such as device events, alarms, audits, client sessions and location updates at the site level.\\
    The Webhook can be set up and customized using the Mist API, allowing users to receive and analyze specific data from a particular site.
    """
    __args__ = dict()
    __args__['siteId'] = site_id
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('junipermist:site/getWebhooks:getWebhooks', __args__, opts=opts, typ=GetWebhooksResult)
    return __ret__.apply(lambda __response__: GetWebhooksResult(
        id=pulumi.get(__response__, 'id'),
        site_id=pulumi.get(__response__, 'site_id'),
        site_webhooks=pulumi.get(__response__, 'site_webhooks')))
