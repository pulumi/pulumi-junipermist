# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities
from . import outputs

__all__ = [
    'GetConstTrafficTypesResult',
    'AwaitableGetConstTrafficTypesResult',
    'get_const_traffic_types',
    'get_const_traffic_types_output',
]

@pulumi.output_type
class GetConstTrafficTypesResult:
    """
    A collection of values returned by getConstTrafficTypes.
    """
    def __init__(__self__, const_traffic_types=None, id=None):
        if const_traffic_types and not isinstance(const_traffic_types, list):
            raise TypeError("Expected argument 'const_traffic_types' to be a list")
        pulumi.set(__self__, "const_traffic_types", const_traffic_types)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)

    @property
    @pulumi.getter(name="constTrafficTypes")
    def const_traffic_types(self) -> Sequence['outputs.GetConstTrafficTypesConstTrafficTypeResult']:
        return pulumi.get(self, "const_traffic_types")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")


class AwaitableGetConstTrafficTypesResult(GetConstTrafficTypesResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetConstTrafficTypesResult(
            const_traffic_types=self.const_traffic_types,
            id=self.id)


def get_const_traffic_types(opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetConstTrafficTypesResult:
    """
    This data source provides the of ConstTrafficTypes.This information can be used to define the Country in the RF templates (`org.Rftemplate`)

    ## Example Usage

    ```python
    import pulumi
    import pulumi_junipermist as junipermist

    list_of_traffic_types = junipermist.get_const_traffic_types()
    ```
    """
    __args__ = dict()
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('junipermist:index/getConstTrafficTypes:getConstTrafficTypes', __args__, opts=opts, typ=GetConstTrafficTypesResult).value

    return AwaitableGetConstTrafficTypesResult(
        const_traffic_types=pulumi.get(__ret__, 'const_traffic_types'),
        id=pulumi.get(__ret__, 'id'))


@_utilities.lift_output_func(get_const_traffic_types)
def get_const_traffic_types_output(opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetConstTrafficTypesResult]:
    """
    This data source provides the of ConstTrafficTypes.This information can be used to define the Country in the RF templates (`org.Rftemplate`)

    ## Example Usage

    ```python
    import pulumi
    import pulumi_junipermist as junipermist

    list_of_traffic_types = junipermist.get_const_traffic_types()
    ```
    """
    ...
