# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs

__all__ = [
    'GetAlarmtemplatesResult',
    'AwaitableGetAlarmtemplatesResult',
    'get_alarmtemplates',
    'get_alarmtemplates_output',
]

@pulumi.output_type
class GetAlarmtemplatesResult:
    """
    A collection of values returned by getAlarmtemplates.
    """
    def __init__(__self__, id=None, org_alarmtemplates=None, org_id=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if org_alarmtemplates and not isinstance(org_alarmtemplates, list):
            raise TypeError("Expected argument 'org_alarmtemplates' to be a list")
        pulumi.set(__self__, "org_alarmtemplates", org_alarmtemplates)
        if org_id and not isinstance(org_id, str):
            raise TypeError("Expected argument 'org_id' to be a str")
        pulumi.set(__self__, "org_id", org_id)

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="orgAlarmtemplates")
    def org_alarmtemplates(self) -> Sequence['outputs.GetAlarmtemplatesOrgAlarmtemplateResult']:
        return pulumi.get(self, "org_alarmtemplates")

    @property
    @pulumi.getter(name="orgId")
    def org_id(self) -> str:
        return pulumi.get(self, "org_id")


class AwaitableGetAlarmtemplatesResult(GetAlarmtemplatesResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetAlarmtemplatesResult(
            id=self.id,
            org_alarmtemplates=self.org_alarmtemplates,
            org_id=self.org_id)


def get_alarmtemplates(org_id: Optional[str] = None,
                       opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetAlarmtemplatesResult:
    """
    This data source provides the list of Alarm Templates.

    An Alarm Template is a set of Alarm Rules that could be applied to one or more sites (while each site can only pick one Alarm Template), or to the whole org.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_junipermist as junipermist

    alarmtemplates = junipermist.org.get_alarmtemplates(org_id="15fca2ac-b1a6-47cc-9953-cc6906281550")
    ```
    """
    __args__ = dict()
    __args__['orgId'] = org_id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('junipermist:org/getAlarmtemplates:getAlarmtemplates', __args__, opts=opts, typ=GetAlarmtemplatesResult).value

    return AwaitableGetAlarmtemplatesResult(
        id=pulumi.get(__ret__, 'id'),
        org_alarmtemplates=pulumi.get(__ret__, 'org_alarmtemplates'),
        org_id=pulumi.get(__ret__, 'org_id'))
def get_alarmtemplates_output(org_id: Optional[pulumi.Input[str]] = None,
                              opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetAlarmtemplatesResult]:
    """
    This data source provides the list of Alarm Templates.

    An Alarm Template is a set of Alarm Rules that could be applied to one or more sites (while each site can only pick one Alarm Template), or to the whole org.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_junipermist as junipermist

    alarmtemplates = junipermist.org.get_alarmtemplates(org_id="15fca2ac-b1a6-47cc-9953-cc6906281550")
    ```
    """
    __args__ = dict()
    __args__['orgId'] = org_id
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('junipermist:org/getAlarmtemplates:getAlarmtemplates', __args__, opts=opts, typ=GetAlarmtemplatesResult)
    return __ret__.apply(lambda __response__: GetAlarmtemplatesResult(
        id=pulumi.get(__response__, 'id'),
        org_alarmtemplates=pulumi.get(__response__, 'org_alarmtemplates'),
        org_id=pulumi.get(__response__, 'org_id')))
