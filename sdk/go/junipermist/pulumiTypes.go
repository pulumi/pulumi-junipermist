// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package junipermist

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-junipermist/sdk/go/junipermist/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type UpgradeDeviceFwupdate struct {
	Progress *int `pulumi:"progress"`
	// enum: `inprogress`, `failed`, `upgraded`, `success`, `scheduled`, `error`
	Status   *string `pulumi:"status"`
	StatusId *int    `pulumi:"statusId"`
	// Epoch (seconds)
	Timestamp *float64 `pulumi:"timestamp"`
	WillRetry *bool    `pulumi:"willRetry"`
}

// UpgradeDeviceFwupdateInput is an input type that accepts UpgradeDeviceFwupdateArgs and UpgradeDeviceFwupdateOutput values.
// You can construct a concrete instance of `UpgradeDeviceFwupdateInput` via:
//
//	UpgradeDeviceFwupdateArgs{...}
type UpgradeDeviceFwupdateInput interface {
	pulumi.Input

	ToUpgradeDeviceFwupdateOutput() UpgradeDeviceFwupdateOutput
	ToUpgradeDeviceFwupdateOutputWithContext(context.Context) UpgradeDeviceFwupdateOutput
}

type UpgradeDeviceFwupdateArgs struct {
	Progress pulumi.IntPtrInput `pulumi:"progress"`
	// enum: `inprogress`, `failed`, `upgraded`, `success`, `scheduled`, `error`
	Status   pulumi.StringPtrInput `pulumi:"status"`
	StatusId pulumi.IntPtrInput    `pulumi:"statusId"`
	// Epoch (seconds)
	Timestamp pulumi.Float64PtrInput `pulumi:"timestamp"`
	WillRetry pulumi.BoolPtrInput    `pulumi:"willRetry"`
}

func (UpgradeDeviceFwupdateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UpgradeDeviceFwupdate)(nil)).Elem()
}

func (i UpgradeDeviceFwupdateArgs) ToUpgradeDeviceFwupdateOutput() UpgradeDeviceFwupdateOutput {
	return i.ToUpgradeDeviceFwupdateOutputWithContext(context.Background())
}

func (i UpgradeDeviceFwupdateArgs) ToUpgradeDeviceFwupdateOutputWithContext(ctx context.Context) UpgradeDeviceFwupdateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UpgradeDeviceFwupdateOutput)
}

func (i UpgradeDeviceFwupdateArgs) ToUpgradeDeviceFwupdatePtrOutput() UpgradeDeviceFwupdatePtrOutput {
	return i.ToUpgradeDeviceFwupdatePtrOutputWithContext(context.Background())
}

func (i UpgradeDeviceFwupdateArgs) ToUpgradeDeviceFwupdatePtrOutputWithContext(ctx context.Context) UpgradeDeviceFwupdatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UpgradeDeviceFwupdateOutput).ToUpgradeDeviceFwupdatePtrOutputWithContext(ctx)
}

// UpgradeDeviceFwupdatePtrInput is an input type that accepts UpgradeDeviceFwupdateArgs, UpgradeDeviceFwupdatePtr and UpgradeDeviceFwupdatePtrOutput values.
// You can construct a concrete instance of `UpgradeDeviceFwupdatePtrInput` via:
//
//	        UpgradeDeviceFwupdateArgs{...}
//
//	or:
//
//	        nil
type UpgradeDeviceFwupdatePtrInput interface {
	pulumi.Input

	ToUpgradeDeviceFwupdatePtrOutput() UpgradeDeviceFwupdatePtrOutput
	ToUpgradeDeviceFwupdatePtrOutputWithContext(context.Context) UpgradeDeviceFwupdatePtrOutput
}

type upgradeDeviceFwupdatePtrType UpgradeDeviceFwupdateArgs

func UpgradeDeviceFwupdatePtr(v *UpgradeDeviceFwupdateArgs) UpgradeDeviceFwupdatePtrInput {
	return (*upgradeDeviceFwupdatePtrType)(v)
}

func (*upgradeDeviceFwupdatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UpgradeDeviceFwupdate)(nil)).Elem()
}

func (i *upgradeDeviceFwupdatePtrType) ToUpgradeDeviceFwupdatePtrOutput() UpgradeDeviceFwupdatePtrOutput {
	return i.ToUpgradeDeviceFwupdatePtrOutputWithContext(context.Background())
}

func (i *upgradeDeviceFwupdatePtrType) ToUpgradeDeviceFwupdatePtrOutputWithContext(ctx context.Context) UpgradeDeviceFwupdatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UpgradeDeviceFwupdatePtrOutput)
}

type UpgradeDeviceFwupdateOutput struct{ *pulumi.OutputState }

func (UpgradeDeviceFwupdateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UpgradeDeviceFwupdate)(nil)).Elem()
}

func (o UpgradeDeviceFwupdateOutput) ToUpgradeDeviceFwupdateOutput() UpgradeDeviceFwupdateOutput {
	return o
}

func (o UpgradeDeviceFwupdateOutput) ToUpgradeDeviceFwupdateOutputWithContext(ctx context.Context) UpgradeDeviceFwupdateOutput {
	return o
}

func (o UpgradeDeviceFwupdateOutput) ToUpgradeDeviceFwupdatePtrOutput() UpgradeDeviceFwupdatePtrOutput {
	return o.ToUpgradeDeviceFwupdatePtrOutputWithContext(context.Background())
}

func (o UpgradeDeviceFwupdateOutput) ToUpgradeDeviceFwupdatePtrOutputWithContext(ctx context.Context) UpgradeDeviceFwupdatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UpgradeDeviceFwupdate) *UpgradeDeviceFwupdate {
		return &v
	}).(UpgradeDeviceFwupdatePtrOutput)
}

func (o UpgradeDeviceFwupdateOutput) Progress() pulumi.IntPtrOutput {
	return o.ApplyT(func(v UpgradeDeviceFwupdate) *int { return v.Progress }).(pulumi.IntPtrOutput)
}

// enum: `inprogress`, `failed`, `upgraded`, `success`, `scheduled`, `error`
func (o UpgradeDeviceFwupdateOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UpgradeDeviceFwupdate) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func (o UpgradeDeviceFwupdateOutput) StatusId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v UpgradeDeviceFwupdate) *int { return v.StatusId }).(pulumi.IntPtrOutput)
}

// Epoch (seconds)
func (o UpgradeDeviceFwupdateOutput) Timestamp() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v UpgradeDeviceFwupdate) *float64 { return v.Timestamp }).(pulumi.Float64PtrOutput)
}

func (o UpgradeDeviceFwupdateOutput) WillRetry() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v UpgradeDeviceFwupdate) *bool { return v.WillRetry }).(pulumi.BoolPtrOutput)
}

type UpgradeDeviceFwupdatePtrOutput struct{ *pulumi.OutputState }

func (UpgradeDeviceFwupdatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UpgradeDeviceFwupdate)(nil)).Elem()
}

func (o UpgradeDeviceFwupdatePtrOutput) ToUpgradeDeviceFwupdatePtrOutput() UpgradeDeviceFwupdatePtrOutput {
	return o
}

func (o UpgradeDeviceFwupdatePtrOutput) ToUpgradeDeviceFwupdatePtrOutputWithContext(ctx context.Context) UpgradeDeviceFwupdatePtrOutput {
	return o
}

func (o UpgradeDeviceFwupdatePtrOutput) Elem() UpgradeDeviceFwupdateOutput {
	return o.ApplyT(func(v *UpgradeDeviceFwupdate) UpgradeDeviceFwupdate {
		if v != nil {
			return *v
		}
		var ret UpgradeDeviceFwupdate
		return ret
	}).(UpgradeDeviceFwupdateOutput)
}

func (o UpgradeDeviceFwupdatePtrOutput) Progress() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *UpgradeDeviceFwupdate) *int {
		if v == nil {
			return nil
		}
		return v.Progress
	}).(pulumi.IntPtrOutput)
}

// enum: `inprogress`, `failed`, `upgraded`, `success`, `scheduled`, `error`
func (o UpgradeDeviceFwupdatePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UpgradeDeviceFwupdate) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

func (o UpgradeDeviceFwupdatePtrOutput) StatusId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *UpgradeDeviceFwupdate) *int {
		if v == nil {
			return nil
		}
		return v.StatusId
	}).(pulumi.IntPtrOutput)
}

// Epoch (seconds)
func (o UpgradeDeviceFwupdatePtrOutput) Timestamp() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *UpgradeDeviceFwupdate) *float64 {
		if v == nil {
			return nil
		}
		return v.Timestamp
	}).(pulumi.Float64PtrOutput)
}

func (o UpgradeDeviceFwupdatePtrOutput) WillRetry() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *UpgradeDeviceFwupdate) *bool {
		if v == nil {
			return nil
		}
		return v.WillRetry
	}).(pulumi.BoolPtrOutput)
}

type GetConstAlarmsConstAlarm struct {
	// Description of the alarm type
	Display string `pulumi:"display"`
	// Group to which the alarm belongs
	Group string `pulumi:"group"`
	// Key name of the alarm type
	Key string `pulumi:"key"`
	// Severity of the alarm
	Severity string `pulumi:"severity"`
}

// GetConstAlarmsConstAlarmInput is an input type that accepts GetConstAlarmsConstAlarmArgs and GetConstAlarmsConstAlarmOutput values.
// You can construct a concrete instance of `GetConstAlarmsConstAlarmInput` via:
//
//	GetConstAlarmsConstAlarmArgs{...}
type GetConstAlarmsConstAlarmInput interface {
	pulumi.Input

	ToGetConstAlarmsConstAlarmOutput() GetConstAlarmsConstAlarmOutput
	ToGetConstAlarmsConstAlarmOutputWithContext(context.Context) GetConstAlarmsConstAlarmOutput
}

type GetConstAlarmsConstAlarmArgs struct {
	// Description of the alarm type
	Display pulumi.StringInput `pulumi:"display"`
	// Group to which the alarm belongs
	Group pulumi.StringInput `pulumi:"group"`
	// Key name of the alarm type
	Key pulumi.StringInput `pulumi:"key"`
	// Severity of the alarm
	Severity pulumi.StringInput `pulumi:"severity"`
}

func (GetConstAlarmsConstAlarmArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConstAlarmsConstAlarm)(nil)).Elem()
}

func (i GetConstAlarmsConstAlarmArgs) ToGetConstAlarmsConstAlarmOutput() GetConstAlarmsConstAlarmOutput {
	return i.ToGetConstAlarmsConstAlarmOutputWithContext(context.Background())
}

func (i GetConstAlarmsConstAlarmArgs) ToGetConstAlarmsConstAlarmOutputWithContext(ctx context.Context) GetConstAlarmsConstAlarmOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConstAlarmsConstAlarmOutput)
}

// GetConstAlarmsConstAlarmArrayInput is an input type that accepts GetConstAlarmsConstAlarmArray and GetConstAlarmsConstAlarmArrayOutput values.
// You can construct a concrete instance of `GetConstAlarmsConstAlarmArrayInput` via:
//
//	GetConstAlarmsConstAlarmArray{ GetConstAlarmsConstAlarmArgs{...} }
type GetConstAlarmsConstAlarmArrayInput interface {
	pulumi.Input

	ToGetConstAlarmsConstAlarmArrayOutput() GetConstAlarmsConstAlarmArrayOutput
	ToGetConstAlarmsConstAlarmArrayOutputWithContext(context.Context) GetConstAlarmsConstAlarmArrayOutput
}

type GetConstAlarmsConstAlarmArray []GetConstAlarmsConstAlarmInput

func (GetConstAlarmsConstAlarmArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConstAlarmsConstAlarm)(nil)).Elem()
}

func (i GetConstAlarmsConstAlarmArray) ToGetConstAlarmsConstAlarmArrayOutput() GetConstAlarmsConstAlarmArrayOutput {
	return i.ToGetConstAlarmsConstAlarmArrayOutputWithContext(context.Background())
}

func (i GetConstAlarmsConstAlarmArray) ToGetConstAlarmsConstAlarmArrayOutputWithContext(ctx context.Context) GetConstAlarmsConstAlarmArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConstAlarmsConstAlarmArrayOutput)
}

type GetConstAlarmsConstAlarmOutput struct{ *pulumi.OutputState }

func (GetConstAlarmsConstAlarmOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConstAlarmsConstAlarm)(nil)).Elem()
}

func (o GetConstAlarmsConstAlarmOutput) ToGetConstAlarmsConstAlarmOutput() GetConstAlarmsConstAlarmOutput {
	return o
}

func (o GetConstAlarmsConstAlarmOutput) ToGetConstAlarmsConstAlarmOutputWithContext(ctx context.Context) GetConstAlarmsConstAlarmOutput {
	return o
}

// Description of the alarm type
func (o GetConstAlarmsConstAlarmOutput) Display() pulumi.StringOutput {
	return o.ApplyT(func(v GetConstAlarmsConstAlarm) string { return v.Display }).(pulumi.StringOutput)
}

// Group to which the alarm belongs
func (o GetConstAlarmsConstAlarmOutput) Group() pulumi.StringOutput {
	return o.ApplyT(func(v GetConstAlarmsConstAlarm) string { return v.Group }).(pulumi.StringOutput)
}

// Key name of the alarm type
func (o GetConstAlarmsConstAlarmOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetConstAlarmsConstAlarm) string { return v.Key }).(pulumi.StringOutput)
}

// Severity of the alarm
func (o GetConstAlarmsConstAlarmOutput) Severity() pulumi.StringOutput {
	return o.ApplyT(func(v GetConstAlarmsConstAlarm) string { return v.Severity }).(pulumi.StringOutput)
}

type GetConstAlarmsConstAlarmArrayOutput struct{ *pulumi.OutputState }

func (GetConstAlarmsConstAlarmArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConstAlarmsConstAlarm)(nil)).Elem()
}

func (o GetConstAlarmsConstAlarmArrayOutput) ToGetConstAlarmsConstAlarmArrayOutput() GetConstAlarmsConstAlarmArrayOutput {
	return o
}

func (o GetConstAlarmsConstAlarmArrayOutput) ToGetConstAlarmsConstAlarmArrayOutputWithContext(ctx context.Context) GetConstAlarmsConstAlarmArrayOutput {
	return o
}

func (o GetConstAlarmsConstAlarmArrayOutput) Index(i pulumi.IntInput) GetConstAlarmsConstAlarmOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConstAlarmsConstAlarm {
		return vs[0].([]GetConstAlarmsConstAlarm)[vs[1].(int)]
	}).(GetConstAlarmsConstAlarmOutput)
}

type GetConstAppCategoriesConstAppCategory struct {
	// Description of the app category
	Display string                                       `pulumi:"display"`
	Filters GetConstAppCategoriesConstAppCategoryFilters `pulumi:"filters"`
	// List of other App Categories contained by this one
	Includes []string `pulumi:"includes"`
	// Key name of the app category
	Key string `pulumi:"key"`
}

// GetConstAppCategoriesConstAppCategoryInput is an input type that accepts GetConstAppCategoriesConstAppCategoryArgs and GetConstAppCategoriesConstAppCategoryOutput values.
// You can construct a concrete instance of `GetConstAppCategoriesConstAppCategoryInput` via:
//
//	GetConstAppCategoriesConstAppCategoryArgs{...}
type GetConstAppCategoriesConstAppCategoryInput interface {
	pulumi.Input

	ToGetConstAppCategoriesConstAppCategoryOutput() GetConstAppCategoriesConstAppCategoryOutput
	ToGetConstAppCategoriesConstAppCategoryOutputWithContext(context.Context) GetConstAppCategoriesConstAppCategoryOutput
}

type GetConstAppCategoriesConstAppCategoryArgs struct {
	// Description of the app category
	Display pulumi.StringInput                                `pulumi:"display"`
	Filters GetConstAppCategoriesConstAppCategoryFiltersInput `pulumi:"filters"`
	// List of other App Categories contained by this one
	Includes pulumi.StringArrayInput `pulumi:"includes"`
	// Key name of the app category
	Key pulumi.StringInput `pulumi:"key"`
}

func (GetConstAppCategoriesConstAppCategoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConstAppCategoriesConstAppCategory)(nil)).Elem()
}

func (i GetConstAppCategoriesConstAppCategoryArgs) ToGetConstAppCategoriesConstAppCategoryOutput() GetConstAppCategoriesConstAppCategoryOutput {
	return i.ToGetConstAppCategoriesConstAppCategoryOutputWithContext(context.Background())
}

func (i GetConstAppCategoriesConstAppCategoryArgs) ToGetConstAppCategoriesConstAppCategoryOutputWithContext(ctx context.Context) GetConstAppCategoriesConstAppCategoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConstAppCategoriesConstAppCategoryOutput)
}

// GetConstAppCategoriesConstAppCategoryArrayInput is an input type that accepts GetConstAppCategoriesConstAppCategoryArray and GetConstAppCategoriesConstAppCategoryArrayOutput values.
// You can construct a concrete instance of `GetConstAppCategoriesConstAppCategoryArrayInput` via:
//
//	GetConstAppCategoriesConstAppCategoryArray{ GetConstAppCategoriesConstAppCategoryArgs{...} }
type GetConstAppCategoriesConstAppCategoryArrayInput interface {
	pulumi.Input

	ToGetConstAppCategoriesConstAppCategoryArrayOutput() GetConstAppCategoriesConstAppCategoryArrayOutput
	ToGetConstAppCategoriesConstAppCategoryArrayOutputWithContext(context.Context) GetConstAppCategoriesConstAppCategoryArrayOutput
}

type GetConstAppCategoriesConstAppCategoryArray []GetConstAppCategoriesConstAppCategoryInput

func (GetConstAppCategoriesConstAppCategoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConstAppCategoriesConstAppCategory)(nil)).Elem()
}

func (i GetConstAppCategoriesConstAppCategoryArray) ToGetConstAppCategoriesConstAppCategoryArrayOutput() GetConstAppCategoriesConstAppCategoryArrayOutput {
	return i.ToGetConstAppCategoriesConstAppCategoryArrayOutputWithContext(context.Background())
}

func (i GetConstAppCategoriesConstAppCategoryArray) ToGetConstAppCategoriesConstAppCategoryArrayOutputWithContext(ctx context.Context) GetConstAppCategoriesConstAppCategoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConstAppCategoriesConstAppCategoryArrayOutput)
}

type GetConstAppCategoriesConstAppCategoryOutput struct{ *pulumi.OutputState }

func (GetConstAppCategoriesConstAppCategoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConstAppCategoriesConstAppCategory)(nil)).Elem()
}

func (o GetConstAppCategoriesConstAppCategoryOutput) ToGetConstAppCategoriesConstAppCategoryOutput() GetConstAppCategoriesConstAppCategoryOutput {
	return o
}

func (o GetConstAppCategoriesConstAppCategoryOutput) ToGetConstAppCategoriesConstAppCategoryOutputWithContext(ctx context.Context) GetConstAppCategoriesConstAppCategoryOutput {
	return o
}

// Description of the app category
func (o GetConstAppCategoriesConstAppCategoryOutput) Display() pulumi.StringOutput {
	return o.ApplyT(func(v GetConstAppCategoriesConstAppCategory) string { return v.Display }).(pulumi.StringOutput)
}

func (o GetConstAppCategoriesConstAppCategoryOutput) Filters() GetConstAppCategoriesConstAppCategoryFiltersOutput {
	return o.ApplyT(func(v GetConstAppCategoriesConstAppCategory) GetConstAppCategoriesConstAppCategoryFilters {
		return v.Filters
	}).(GetConstAppCategoriesConstAppCategoryFiltersOutput)
}

// List of other App Categories contained by this one
func (o GetConstAppCategoriesConstAppCategoryOutput) Includes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetConstAppCategoriesConstAppCategory) []string { return v.Includes }).(pulumi.StringArrayOutput)
}

// Key name of the app category
func (o GetConstAppCategoriesConstAppCategoryOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetConstAppCategoriesConstAppCategory) string { return v.Key }).(pulumi.StringOutput)
}

type GetConstAppCategoriesConstAppCategoryArrayOutput struct{ *pulumi.OutputState }

func (GetConstAppCategoriesConstAppCategoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConstAppCategoriesConstAppCategory)(nil)).Elem()
}

func (o GetConstAppCategoriesConstAppCategoryArrayOutput) ToGetConstAppCategoriesConstAppCategoryArrayOutput() GetConstAppCategoriesConstAppCategoryArrayOutput {
	return o
}

func (o GetConstAppCategoriesConstAppCategoryArrayOutput) ToGetConstAppCategoriesConstAppCategoryArrayOutputWithContext(ctx context.Context) GetConstAppCategoriesConstAppCategoryArrayOutput {
	return o
}

func (o GetConstAppCategoriesConstAppCategoryArrayOutput) Index(i pulumi.IntInput) GetConstAppCategoriesConstAppCategoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConstAppCategoriesConstAppCategory {
		return vs[0].([]GetConstAppCategoriesConstAppCategory)[vs[1].(int)]
	}).(GetConstAppCategoriesConstAppCategoryOutput)
}

type GetConstAppCategoriesConstAppCategoryFilters struct {
	Srxes []string `pulumi:"srxes"`
	Ssrs  []string `pulumi:"ssrs"`
}

// GetConstAppCategoriesConstAppCategoryFiltersInput is an input type that accepts GetConstAppCategoriesConstAppCategoryFiltersArgs and GetConstAppCategoriesConstAppCategoryFiltersOutput values.
// You can construct a concrete instance of `GetConstAppCategoriesConstAppCategoryFiltersInput` via:
//
//	GetConstAppCategoriesConstAppCategoryFiltersArgs{...}
type GetConstAppCategoriesConstAppCategoryFiltersInput interface {
	pulumi.Input

	ToGetConstAppCategoriesConstAppCategoryFiltersOutput() GetConstAppCategoriesConstAppCategoryFiltersOutput
	ToGetConstAppCategoriesConstAppCategoryFiltersOutputWithContext(context.Context) GetConstAppCategoriesConstAppCategoryFiltersOutput
}

type GetConstAppCategoriesConstAppCategoryFiltersArgs struct {
	Srxes pulumi.StringArrayInput `pulumi:"srxes"`
	Ssrs  pulumi.StringArrayInput `pulumi:"ssrs"`
}

func (GetConstAppCategoriesConstAppCategoryFiltersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConstAppCategoriesConstAppCategoryFilters)(nil)).Elem()
}

func (i GetConstAppCategoriesConstAppCategoryFiltersArgs) ToGetConstAppCategoriesConstAppCategoryFiltersOutput() GetConstAppCategoriesConstAppCategoryFiltersOutput {
	return i.ToGetConstAppCategoriesConstAppCategoryFiltersOutputWithContext(context.Background())
}

func (i GetConstAppCategoriesConstAppCategoryFiltersArgs) ToGetConstAppCategoriesConstAppCategoryFiltersOutputWithContext(ctx context.Context) GetConstAppCategoriesConstAppCategoryFiltersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConstAppCategoriesConstAppCategoryFiltersOutput)
}

type GetConstAppCategoriesConstAppCategoryFiltersOutput struct{ *pulumi.OutputState }

func (GetConstAppCategoriesConstAppCategoryFiltersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConstAppCategoriesConstAppCategoryFilters)(nil)).Elem()
}

func (o GetConstAppCategoriesConstAppCategoryFiltersOutput) ToGetConstAppCategoriesConstAppCategoryFiltersOutput() GetConstAppCategoriesConstAppCategoryFiltersOutput {
	return o
}

func (o GetConstAppCategoriesConstAppCategoryFiltersOutput) ToGetConstAppCategoriesConstAppCategoryFiltersOutputWithContext(ctx context.Context) GetConstAppCategoriesConstAppCategoryFiltersOutput {
	return o
}

func (o GetConstAppCategoriesConstAppCategoryFiltersOutput) Srxes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetConstAppCategoriesConstAppCategoryFilters) []string { return v.Srxes }).(pulumi.StringArrayOutput)
}

func (o GetConstAppCategoriesConstAppCategoryFiltersOutput) Ssrs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetConstAppCategoriesConstAppCategoryFilters) []string { return v.Ssrs }).(pulumi.StringArrayOutput)
}

type GetConstAppSubCategoriesConstAppSubCategory struct {
	// Description of the app subcategory
	Display string `pulumi:"display"`
	// Key name of the app subcategory
	Key string `pulumi:"key"`
	// Type of traffic (QoS) of the app subcategory
	TrafficType string `pulumi:"trafficType"`
}

// GetConstAppSubCategoriesConstAppSubCategoryInput is an input type that accepts GetConstAppSubCategoriesConstAppSubCategoryArgs and GetConstAppSubCategoriesConstAppSubCategoryOutput values.
// You can construct a concrete instance of `GetConstAppSubCategoriesConstAppSubCategoryInput` via:
//
//	GetConstAppSubCategoriesConstAppSubCategoryArgs{...}
type GetConstAppSubCategoriesConstAppSubCategoryInput interface {
	pulumi.Input

	ToGetConstAppSubCategoriesConstAppSubCategoryOutput() GetConstAppSubCategoriesConstAppSubCategoryOutput
	ToGetConstAppSubCategoriesConstAppSubCategoryOutputWithContext(context.Context) GetConstAppSubCategoriesConstAppSubCategoryOutput
}

type GetConstAppSubCategoriesConstAppSubCategoryArgs struct {
	// Description of the app subcategory
	Display pulumi.StringInput `pulumi:"display"`
	// Key name of the app subcategory
	Key pulumi.StringInput `pulumi:"key"`
	// Type of traffic (QoS) of the app subcategory
	TrafficType pulumi.StringInput `pulumi:"trafficType"`
}

func (GetConstAppSubCategoriesConstAppSubCategoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConstAppSubCategoriesConstAppSubCategory)(nil)).Elem()
}

func (i GetConstAppSubCategoriesConstAppSubCategoryArgs) ToGetConstAppSubCategoriesConstAppSubCategoryOutput() GetConstAppSubCategoriesConstAppSubCategoryOutput {
	return i.ToGetConstAppSubCategoriesConstAppSubCategoryOutputWithContext(context.Background())
}

func (i GetConstAppSubCategoriesConstAppSubCategoryArgs) ToGetConstAppSubCategoriesConstAppSubCategoryOutputWithContext(ctx context.Context) GetConstAppSubCategoriesConstAppSubCategoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConstAppSubCategoriesConstAppSubCategoryOutput)
}

// GetConstAppSubCategoriesConstAppSubCategoryArrayInput is an input type that accepts GetConstAppSubCategoriesConstAppSubCategoryArray and GetConstAppSubCategoriesConstAppSubCategoryArrayOutput values.
// You can construct a concrete instance of `GetConstAppSubCategoriesConstAppSubCategoryArrayInput` via:
//
//	GetConstAppSubCategoriesConstAppSubCategoryArray{ GetConstAppSubCategoriesConstAppSubCategoryArgs{...} }
type GetConstAppSubCategoriesConstAppSubCategoryArrayInput interface {
	pulumi.Input

	ToGetConstAppSubCategoriesConstAppSubCategoryArrayOutput() GetConstAppSubCategoriesConstAppSubCategoryArrayOutput
	ToGetConstAppSubCategoriesConstAppSubCategoryArrayOutputWithContext(context.Context) GetConstAppSubCategoriesConstAppSubCategoryArrayOutput
}

type GetConstAppSubCategoriesConstAppSubCategoryArray []GetConstAppSubCategoriesConstAppSubCategoryInput

func (GetConstAppSubCategoriesConstAppSubCategoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConstAppSubCategoriesConstAppSubCategory)(nil)).Elem()
}

func (i GetConstAppSubCategoriesConstAppSubCategoryArray) ToGetConstAppSubCategoriesConstAppSubCategoryArrayOutput() GetConstAppSubCategoriesConstAppSubCategoryArrayOutput {
	return i.ToGetConstAppSubCategoriesConstAppSubCategoryArrayOutputWithContext(context.Background())
}

func (i GetConstAppSubCategoriesConstAppSubCategoryArray) ToGetConstAppSubCategoriesConstAppSubCategoryArrayOutputWithContext(ctx context.Context) GetConstAppSubCategoriesConstAppSubCategoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConstAppSubCategoriesConstAppSubCategoryArrayOutput)
}

type GetConstAppSubCategoriesConstAppSubCategoryOutput struct{ *pulumi.OutputState }

func (GetConstAppSubCategoriesConstAppSubCategoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConstAppSubCategoriesConstAppSubCategory)(nil)).Elem()
}

func (o GetConstAppSubCategoriesConstAppSubCategoryOutput) ToGetConstAppSubCategoriesConstAppSubCategoryOutput() GetConstAppSubCategoriesConstAppSubCategoryOutput {
	return o
}

func (o GetConstAppSubCategoriesConstAppSubCategoryOutput) ToGetConstAppSubCategoriesConstAppSubCategoryOutputWithContext(ctx context.Context) GetConstAppSubCategoriesConstAppSubCategoryOutput {
	return o
}

// Description of the app subcategory
func (o GetConstAppSubCategoriesConstAppSubCategoryOutput) Display() pulumi.StringOutput {
	return o.ApplyT(func(v GetConstAppSubCategoriesConstAppSubCategory) string { return v.Display }).(pulumi.StringOutput)
}

// Key name of the app subcategory
func (o GetConstAppSubCategoriesConstAppSubCategoryOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetConstAppSubCategoriesConstAppSubCategory) string { return v.Key }).(pulumi.StringOutput)
}

// Type of traffic (QoS) of the app subcategory
func (o GetConstAppSubCategoriesConstAppSubCategoryOutput) TrafficType() pulumi.StringOutput {
	return o.ApplyT(func(v GetConstAppSubCategoriesConstAppSubCategory) string { return v.TrafficType }).(pulumi.StringOutput)
}

type GetConstAppSubCategoriesConstAppSubCategoryArrayOutput struct{ *pulumi.OutputState }

func (GetConstAppSubCategoriesConstAppSubCategoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConstAppSubCategoriesConstAppSubCategory)(nil)).Elem()
}

func (o GetConstAppSubCategoriesConstAppSubCategoryArrayOutput) ToGetConstAppSubCategoriesConstAppSubCategoryArrayOutput() GetConstAppSubCategoriesConstAppSubCategoryArrayOutput {
	return o
}

func (o GetConstAppSubCategoriesConstAppSubCategoryArrayOutput) ToGetConstAppSubCategoriesConstAppSubCategoryArrayOutputWithContext(ctx context.Context) GetConstAppSubCategoriesConstAppSubCategoryArrayOutput {
	return o
}

func (o GetConstAppSubCategoriesConstAppSubCategoryArrayOutput) Index(i pulumi.IntInput) GetConstAppSubCategoriesConstAppSubCategoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConstAppSubCategoriesConstAppSubCategory {
		return vs[0].([]GetConstAppSubCategoriesConstAppSubCategory)[vs[1].(int)]
	}).(GetConstAppSubCategoriesConstAppSubCategoryOutput)
}

type GetConstApplicationsConstApplication struct {
	AppId          bool   `pulumi:"appId"`
	AppImageUrl    string `pulumi:"appImageUrl"`
	AppProbe       bool   `pulumi:"appProbe"`
	Category       string `pulumi:"category"`
	Group          string `pulumi:"group"`
	Key            string `pulumi:"key"`
	Name           string `pulumi:"name"`
	SignatureBased bool   `pulumi:"signatureBased"`
	SsrAppId       bool   `pulumi:"ssrAppId"`
}

// GetConstApplicationsConstApplicationInput is an input type that accepts GetConstApplicationsConstApplicationArgs and GetConstApplicationsConstApplicationOutput values.
// You can construct a concrete instance of `GetConstApplicationsConstApplicationInput` via:
//
//	GetConstApplicationsConstApplicationArgs{...}
type GetConstApplicationsConstApplicationInput interface {
	pulumi.Input

	ToGetConstApplicationsConstApplicationOutput() GetConstApplicationsConstApplicationOutput
	ToGetConstApplicationsConstApplicationOutputWithContext(context.Context) GetConstApplicationsConstApplicationOutput
}

type GetConstApplicationsConstApplicationArgs struct {
	AppId          pulumi.BoolInput   `pulumi:"appId"`
	AppImageUrl    pulumi.StringInput `pulumi:"appImageUrl"`
	AppProbe       pulumi.BoolInput   `pulumi:"appProbe"`
	Category       pulumi.StringInput `pulumi:"category"`
	Group          pulumi.StringInput `pulumi:"group"`
	Key            pulumi.StringInput `pulumi:"key"`
	Name           pulumi.StringInput `pulumi:"name"`
	SignatureBased pulumi.BoolInput   `pulumi:"signatureBased"`
	SsrAppId       pulumi.BoolInput   `pulumi:"ssrAppId"`
}

func (GetConstApplicationsConstApplicationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConstApplicationsConstApplication)(nil)).Elem()
}

func (i GetConstApplicationsConstApplicationArgs) ToGetConstApplicationsConstApplicationOutput() GetConstApplicationsConstApplicationOutput {
	return i.ToGetConstApplicationsConstApplicationOutputWithContext(context.Background())
}

func (i GetConstApplicationsConstApplicationArgs) ToGetConstApplicationsConstApplicationOutputWithContext(ctx context.Context) GetConstApplicationsConstApplicationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConstApplicationsConstApplicationOutput)
}

// GetConstApplicationsConstApplicationArrayInput is an input type that accepts GetConstApplicationsConstApplicationArray and GetConstApplicationsConstApplicationArrayOutput values.
// You can construct a concrete instance of `GetConstApplicationsConstApplicationArrayInput` via:
//
//	GetConstApplicationsConstApplicationArray{ GetConstApplicationsConstApplicationArgs{...} }
type GetConstApplicationsConstApplicationArrayInput interface {
	pulumi.Input

	ToGetConstApplicationsConstApplicationArrayOutput() GetConstApplicationsConstApplicationArrayOutput
	ToGetConstApplicationsConstApplicationArrayOutputWithContext(context.Context) GetConstApplicationsConstApplicationArrayOutput
}

type GetConstApplicationsConstApplicationArray []GetConstApplicationsConstApplicationInput

func (GetConstApplicationsConstApplicationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConstApplicationsConstApplication)(nil)).Elem()
}

func (i GetConstApplicationsConstApplicationArray) ToGetConstApplicationsConstApplicationArrayOutput() GetConstApplicationsConstApplicationArrayOutput {
	return i.ToGetConstApplicationsConstApplicationArrayOutputWithContext(context.Background())
}

func (i GetConstApplicationsConstApplicationArray) ToGetConstApplicationsConstApplicationArrayOutputWithContext(ctx context.Context) GetConstApplicationsConstApplicationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConstApplicationsConstApplicationArrayOutput)
}

type GetConstApplicationsConstApplicationOutput struct{ *pulumi.OutputState }

func (GetConstApplicationsConstApplicationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConstApplicationsConstApplication)(nil)).Elem()
}

func (o GetConstApplicationsConstApplicationOutput) ToGetConstApplicationsConstApplicationOutput() GetConstApplicationsConstApplicationOutput {
	return o
}

func (o GetConstApplicationsConstApplicationOutput) ToGetConstApplicationsConstApplicationOutputWithContext(ctx context.Context) GetConstApplicationsConstApplicationOutput {
	return o
}

func (o GetConstApplicationsConstApplicationOutput) AppId() pulumi.BoolOutput {
	return o.ApplyT(func(v GetConstApplicationsConstApplication) bool { return v.AppId }).(pulumi.BoolOutput)
}

func (o GetConstApplicationsConstApplicationOutput) AppImageUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetConstApplicationsConstApplication) string { return v.AppImageUrl }).(pulumi.StringOutput)
}

func (o GetConstApplicationsConstApplicationOutput) AppProbe() pulumi.BoolOutput {
	return o.ApplyT(func(v GetConstApplicationsConstApplication) bool { return v.AppProbe }).(pulumi.BoolOutput)
}

func (o GetConstApplicationsConstApplicationOutput) Category() pulumi.StringOutput {
	return o.ApplyT(func(v GetConstApplicationsConstApplication) string { return v.Category }).(pulumi.StringOutput)
}

func (o GetConstApplicationsConstApplicationOutput) Group() pulumi.StringOutput {
	return o.ApplyT(func(v GetConstApplicationsConstApplication) string { return v.Group }).(pulumi.StringOutput)
}

func (o GetConstApplicationsConstApplicationOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetConstApplicationsConstApplication) string { return v.Key }).(pulumi.StringOutput)
}

func (o GetConstApplicationsConstApplicationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetConstApplicationsConstApplication) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetConstApplicationsConstApplicationOutput) SignatureBased() pulumi.BoolOutput {
	return o.ApplyT(func(v GetConstApplicationsConstApplication) bool { return v.SignatureBased }).(pulumi.BoolOutput)
}

func (o GetConstApplicationsConstApplicationOutput) SsrAppId() pulumi.BoolOutput {
	return o.ApplyT(func(v GetConstApplicationsConstApplication) bool { return v.SsrAppId }).(pulumi.BoolOutput)
}

type GetConstApplicationsConstApplicationArrayOutput struct{ *pulumi.OutputState }

func (GetConstApplicationsConstApplicationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConstApplicationsConstApplication)(nil)).Elem()
}

func (o GetConstApplicationsConstApplicationArrayOutput) ToGetConstApplicationsConstApplicationArrayOutput() GetConstApplicationsConstApplicationArrayOutput {
	return o
}

func (o GetConstApplicationsConstApplicationArrayOutput) ToGetConstApplicationsConstApplicationArrayOutputWithContext(ctx context.Context) GetConstApplicationsConstApplicationArrayOutput {
	return o
}

func (o GetConstApplicationsConstApplicationArrayOutput) Index(i pulumi.IntInput) GetConstApplicationsConstApplicationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConstApplicationsConstApplication {
		return vs[0].([]GetConstApplicationsConstApplication)[vs[1].(int)]
	}).(GetConstApplicationsConstApplicationOutput)
}

type GetConstCountriesConstCountry struct {
	// Country code, in two-character
	Alpha2    string `pulumi:"alpha2"`
	Certified bool   `pulumi:"certified"`
	Name      string `pulumi:"name"`
	// Country code, ISO 3166-1 numeric
	Numeric float64 `pulumi:"numeric"`
}

// GetConstCountriesConstCountryInput is an input type that accepts GetConstCountriesConstCountryArgs and GetConstCountriesConstCountryOutput values.
// You can construct a concrete instance of `GetConstCountriesConstCountryInput` via:
//
//	GetConstCountriesConstCountryArgs{...}
type GetConstCountriesConstCountryInput interface {
	pulumi.Input

	ToGetConstCountriesConstCountryOutput() GetConstCountriesConstCountryOutput
	ToGetConstCountriesConstCountryOutputWithContext(context.Context) GetConstCountriesConstCountryOutput
}

type GetConstCountriesConstCountryArgs struct {
	// Country code, in two-character
	Alpha2    pulumi.StringInput `pulumi:"alpha2"`
	Certified pulumi.BoolInput   `pulumi:"certified"`
	Name      pulumi.StringInput `pulumi:"name"`
	// Country code, ISO 3166-1 numeric
	Numeric pulumi.Float64Input `pulumi:"numeric"`
}

func (GetConstCountriesConstCountryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConstCountriesConstCountry)(nil)).Elem()
}

func (i GetConstCountriesConstCountryArgs) ToGetConstCountriesConstCountryOutput() GetConstCountriesConstCountryOutput {
	return i.ToGetConstCountriesConstCountryOutputWithContext(context.Background())
}

func (i GetConstCountriesConstCountryArgs) ToGetConstCountriesConstCountryOutputWithContext(ctx context.Context) GetConstCountriesConstCountryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConstCountriesConstCountryOutput)
}

// GetConstCountriesConstCountryArrayInput is an input type that accepts GetConstCountriesConstCountryArray and GetConstCountriesConstCountryArrayOutput values.
// You can construct a concrete instance of `GetConstCountriesConstCountryArrayInput` via:
//
//	GetConstCountriesConstCountryArray{ GetConstCountriesConstCountryArgs{...} }
type GetConstCountriesConstCountryArrayInput interface {
	pulumi.Input

	ToGetConstCountriesConstCountryArrayOutput() GetConstCountriesConstCountryArrayOutput
	ToGetConstCountriesConstCountryArrayOutputWithContext(context.Context) GetConstCountriesConstCountryArrayOutput
}

type GetConstCountriesConstCountryArray []GetConstCountriesConstCountryInput

func (GetConstCountriesConstCountryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConstCountriesConstCountry)(nil)).Elem()
}

func (i GetConstCountriesConstCountryArray) ToGetConstCountriesConstCountryArrayOutput() GetConstCountriesConstCountryArrayOutput {
	return i.ToGetConstCountriesConstCountryArrayOutputWithContext(context.Background())
}

func (i GetConstCountriesConstCountryArray) ToGetConstCountriesConstCountryArrayOutputWithContext(ctx context.Context) GetConstCountriesConstCountryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConstCountriesConstCountryArrayOutput)
}

type GetConstCountriesConstCountryOutput struct{ *pulumi.OutputState }

func (GetConstCountriesConstCountryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConstCountriesConstCountry)(nil)).Elem()
}

func (o GetConstCountriesConstCountryOutput) ToGetConstCountriesConstCountryOutput() GetConstCountriesConstCountryOutput {
	return o
}

func (o GetConstCountriesConstCountryOutput) ToGetConstCountriesConstCountryOutputWithContext(ctx context.Context) GetConstCountriesConstCountryOutput {
	return o
}

// Country code, in two-character
func (o GetConstCountriesConstCountryOutput) Alpha2() pulumi.StringOutput {
	return o.ApplyT(func(v GetConstCountriesConstCountry) string { return v.Alpha2 }).(pulumi.StringOutput)
}

func (o GetConstCountriesConstCountryOutput) Certified() pulumi.BoolOutput {
	return o.ApplyT(func(v GetConstCountriesConstCountry) bool { return v.Certified }).(pulumi.BoolOutput)
}

func (o GetConstCountriesConstCountryOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetConstCountriesConstCountry) string { return v.Name }).(pulumi.StringOutput)
}

// Country code, ISO 3166-1 numeric
func (o GetConstCountriesConstCountryOutput) Numeric() pulumi.Float64Output {
	return o.ApplyT(func(v GetConstCountriesConstCountry) float64 { return v.Numeric }).(pulumi.Float64Output)
}

type GetConstCountriesConstCountryArrayOutput struct{ *pulumi.OutputState }

func (GetConstCountriesConstCountryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConstCountriesConstCountry)(nil)).Elem()
}

func (o GetConstCountriesConstCountryArrayOutput) ToGetConstCountriesConstCountryArrayOutput() GetConstCountriesConstCountryArrayOutput {
	return o
}

func (o GetConstCountriesConstCountryArrayOutput) ToGetConstCountriesConstCountryArrayOutputWithContext(ctx context.Context) GetConstCountriesConstCountryArrayOutput {
	return o
}

func (o GetConstCountriesConstCountryArrayOutput) Index(i pulumi.IntInput) GetConstCountriesConstCountryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConstCountriesConstCountry {
		return vs[0].([]GetConstCountriesConstCountry)[vs[1].(int)]
	}).(GetConstCountriesConstCountryOutput)
}

type GetConstTrafficTypesConstTrafficType struct {
	Display        string `pulumi:"display"`
	Dscp           int    `pulumi:"dscp"`
	FailoverPolicy string `pulumi:"failoverPolicy"`
	MaxJitter      int    `pulumi:"maxJitter"`
	MaxLatency     int    `pulumi:"maxLatency"`
	MaxLoss        int    `pulumi:"maxLoss"`
	Name           string `pulumi:"name"`
	TrafficClass   string `pulumi:"trafficClass"`
}

// GetConstTrafficTypesConstTrafficTypeInput is an input type that accepts GetConstTrafficTypesConstTrafficTypeArgs and GetConstTrafficTypesConstTrafficTypeOutput values.
// You can construct a concrete instance of `GetConstTrafficTypesConstTrafficTypeInput` via:
//
//	GetConstTrafficTypesConstTrafficTypeArgs{...}
type GetConstTrafficTypesConstTrafficTypeInput interface {
	pulumi.Input

	ToGetConstTrafficTypesConstTrafficTypeOutput() GetConstTrafficTypesConstTrafficTypeOutput
	ToGetConstTrafficTypesConstTrafficTypeOutputWithContext(context.Context) GetConstTrafficTypesConstTrafficTypeOutput
}

type GetConstTrafficTypesConstTrafficTypeArgs struct {
	Display        pulumi.StringInput `pulumi:"display"`
	Dscp           pulumi.IntInput    `pulumi:"dscp"`
	FailoverPolicy pulumi.StringInput `pulumi:"failoverPolicy"`
	MaxJitter      pulumi.IntInput    `pulumi:"maxJitter"`
	MaxLatency     pulumi.IntInput    `pulumi:"maxLatency"`
	MaxLoss        pulumi.IntInput    `pulumi:"maxLoss"`
	Name           pulumi.StringInput `pulumi:"name"`
	TrafficClass   pulumi.StringInput `pulumi:"trafficClass"`
}

func (GetConstTrafficTypesConstTrafficTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConstTrafficTypesConstTrafficType)(nil)).Elem()
}

func (i GetConstTrafficTypesConstTrafficTypeArgs) ToGetConstTrafficTypesConstTrafficTypeOutput() GetConstTrafficTypesConstTrafficTypeOutput {
	return i.ToGetConstTrafficTypesConstTrafficTypeOutputWithContext(context.Background())
}

func (i GetConstTrafficTypesConstTrafficTypeArgs) ToGetConstTrafficTypesConstTrafficTypeOutputWithContext(ctx context.Context) GetConstTrafficTypesConstTrafficTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConstTrafficTypesConstTrafficTypeOutput)
}

// GetConstTrafficTypesConstTrafficTypeArrayInput is an input type that accepts GetConstTrafficTypesConstTrafficTypeArray and GetConstTrafficTypesConstTrafficTypeArrayOutput values.
// You can construct a concrete instance of `GetConstTrafficTypesConstTrafficTypeArrayInput` via:
//
//	GetConstTrafficTypesConstTrafficTypeArray{ GetConstTrafficTypesConstTrafficTypeArgs{...} }
type GetConstTrafficTypesConstTrafficTypeArrayInput interface {
	pulumi.Input

	ToGetConstTrafficTypesConstTrafficTypeArrayOutput() GetConstTrafficTypesConstTrafficTypeArrayOutput
	ToGetConstTrafficTypesConstTrafficTypeArrayOutputWithContext(context.Context) GetConstTrafficTypesConstTrafficTypeArrayOutput
}

type GetConstTrafficTypesConstTrafficTypeArray []GetConstTrafficTypesConstTrafficTypeInput

func (GetConstTrafficTypesConstTrafficTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConstTrafficTypesConstTrafficType)(nil)).Elem()
}

func (i GetConstTrafficTypesConstTrafficTypeArray) ToGetConstTrafficTypesConstTrafficTypeArrayOutput() GetConstTrafficTypesConstTrafficTypeArrayOutput {
	return i.ToGetConstTrafficTypesConstTrafficTypeArrayOutputWithContext(context.Background())
}

func (i GetConstTrafficTypesConstTrafficTypeArray) ToGetConstTrafficTypesConstTrafficTypeArrayOutputWithContext(ctx context.Context) GetConstTrafficTypesConstTrafficTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConstTrafficTypesConstTrafficTypeArrayOutput)
}

type GetConstTrafficTypesConstTrafficTypeOutput struct{ *pulumi.OutputState }

func (GetConstTrafficTypesConstTrafficTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConstTrafficTypesConstTrafficType)(nil)).Elem()
}

func (o GetConstTrafficTypesConstTrafficTypeOutput) ToGetConstTrafficTypesConstTrafficTypeOutput() GetConstTrafficTypesConstTrafficTypeOutput {
	return o
}

func (o GetConstTrafficTypesConstTrafficTypeOutput) ToGetConstTrafficTypesConstTrafficTypeOutputWithContext(ctx context.Context) GetConstTrafficTypesConstTrafficTypeOutput {
	return o
}

func (o GetConstTrafficTypesConstTrafficTypeOutput) Display() pulumi.StringOutput {
	return o.ApplyT(func(v GetConstTrafficTypesConstTrafficType) string { return v.Display }).(pulumi.StringOutput)
}

func (o GetConstTrafficTypesConstTrafficTypeOutput) Dscp() pulumi.IntOutput {
	return o.ApplyT(func(v GetConstTrafficTypesConstTrafficType) int { return v.Dscp }).(pulumi.IntOutput)
}

func (o GetConstTrafficTypesConstTrafficTypeOutput) FailoverPolicy() pulumi.StringOutput {
	return o.ApplyT(func(v GetConstTrafficTypesConstTrafficType) string { return v.FailoverPolicy }).(pulumi.StringOutput)
}

func (o GetConstTrafficTypesConstTrafficTypeOutput) MaxJitter() pulumi.IntOutput {
	return o.ApplyT(func(v GetConstTrafficTypesConstTrafficType) int { return v.MaxJitter }).(pulumi.IntOutput)
}

func (o GetConstTrafficTypesConstTrafficTypeOutput) MaxLatency() pulumi.IntOutput {
	return o.ApplyT(func(v GetConstTrafficTypesConstTrafficType) int { return v.MaxLatency }).(pulumi.IntOutput)
}

func (o GetConstTrafficTypesConstTrafficTypeOutput) MaxLoss() pulumi.IntOutput {
	return o.ApplyT(func(v GetConstTrafficTypesConstTrafficType) int { return v.MaxLoss }).(pulumi.IntOutput)
}

func (o GetConstTrafficTypesConstTrafficTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetConstTrafficTypesConstTrafficType) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetConstTrafficTypesConstTrafficTypeOutput) TrafficClass() pulumi.StringOutput {
	return o.ApplyT(func(v GetConstTrafficTypesConstTrafficType) string { return v.TrafficClass }).(pulumi.StringOutput)
}

type GetConstTrafficTypesConstTrafficTypeArrayOutput struct{ *pulumi.OutputState }

func (GetConstTrafficTypesConstTrafficTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConstTrafficTypesConstTrafficType)(nil)).Elem()
}

func (o GetConstTrafficTypesConstTrafficTypeArrayOutput) ToGetConstTrafficTypesConstTrafficTypeArrayOutput() GetConstTrafficTypesConstTrafficTypeArrayOutput {
	return o
}

func (o GetConstTrafficTypesConstTrafficTypeArrayOutput) ToGetConstTrafficTypesConstTrafficTypeArrayOutputWithContext(ctx context.Context) GetConstTrafficTypesConstTrafficTypeArrayOutput {
	return o
}

func (o GetConstTrafficTypesConstTrafficTypeArrayOutput) Index(i pulumi.IntInput) GetConstTrafficTypesConstTrafficTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConstTrafficTypesConstTrafficType {
		return vs[0].([]GetConstTrafficTypesConstTrafficType)[vs[1].(int)]
	}).(GetConstTrafficTypesConstTrafficTypeOutput)
}

type GetConstWebhooksConstWebhook struct {
	// supports single event per message results
	AllowsSingleEventPerMessage bool `pulumi:"allowsSingleEventPerMessage"`
	// Can be used in org webhooks, optional
	ForOrg bool `pulumi:"forOrg"`
	// Supports webhook delivery results /api/v1/:scope/:scope*id/webhooks/:webhook*id/events/search
	HasDeliveryResults bool `pulumi:"hasDeliveryResults"`
	// Internal topic (not selectable in site/org webhooks)
	Internal bool `pulumi:"internal"`
	// Webhook topic name
	Key string `pulumi:"key"`
}

// GetConstWebhooksConstWebhookInput is an input type that accepts GetConstWebhooksConstWebhookArgs and GetConstWebhooksConstWebhookOutput values.
// You can construct a concrete instance of `GetConstWebhooksConstWebhookInput` via:
//
//	GetConstWebhooksConstWebhookArgs{...}
type GetConstWebhooksConstWebhookInput interface {
	pulumi.Input

	ToGetConstWebhooksConstWebhookOutput() GetConstWebhooksConstWebhookOutput
	ToGetConstWebhooksConstWebhookOutputWithContext(context.Context) GetConstWebhooksConstWebhookOutput
}

type GetConstWebhooksConstWebhookArgs struct {
	// supports single event per message results
	AllowsSingleEventPerMessage pulumi.BoolInput `pulumi:"allowsSingleEventPerMessage"`
	// Can be used in org webhooks, optional
	ForOrg pulumi.BoolInput `pulumi:"forOrg"`
	// Supports webhook delivery results /api/v1/:scope/:scope*id/webhooks/:webhook*id/events/search
	HasDeliveryResults pulumi.BoolInput `pulumi:"hasDeliveryResults"`
	// Internal topic (not selectable in site/org webhooks)
	Internal pulumi.BoolInput `pulumi:"internal"`
	// Webhook topic name
	Key pulumi.StringInput `pulumi:"key"`
}

func (GetConstWebhooksConstWebhookArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConstWebhooksConstWebhook)(nil)).Elem()
}

func (i GetConstWebhooksConstWebhookArgs) ToGetConstWebhooksConstWebhookOutput() GetConstWebhooksConstWebhookOutput {
	return i.ToGetConstWebhooksConstWebhookOutputWithContext(context.Background())
}

func (i GetConstWebhooksConstWebhookArgs) ToGetConstWebhooksConstWebhookOutputWithContext(ctx context.Context) GetConstWebhooksConstWebhookOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConstWebhooksConstWebhookOutput)
}

// GetConstWebhooksConstWebhookArrayInput is an input type that accepts GetConstWebhooksConstWebhookArray and GetConstWebhooksConstWebhookArrayOutput values.
// You can construct a concrete instance of `GetConstWebhooksConstWebhookArrayInput` via:
//
//	GetConstWebhooksConstWebhookArray{ GetConstWebhooksConstWebhookArgs{...} }
type GetConstWebhooksConstWebhookArrayInput interface {
	pulumi.Input

	ToGetConstWebhooksConstWebhookArrayOutput() GetConstWebhooksConstWebhookArrayOutput
	ToGetConstWebhooksConstWebhookArrayOutputWithContext(context.Context) GetConstWebhooksConstWebhookArrayOutput
}

type GetConstWebhooksConstWebhookArray []GetConstWebhooksConstWebhookInput

func (GetConstWebhooksConstWebhookArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConstWebhooksConstWebhook)(nil)).Elem()
}

func (i GetConstWebhooksConstWebhookArray) ToGetConstWebhooksConstWebhookArrayOutput() GetConstWebhooksConstWebhookArrayOutput {
	return i.ToGetConstWebhooksConstWebhookArrayOutputWithContext(context.Background())
}

func (i GetConstWebhooksConstWebhookArray) ToGetConstWebhooksConstWebhookArrayOutputWithContext(ctx context.Context) GetConstWebhooksConstWebhookArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConstWebhooksConstWebhookArrayOutput)
}

type GetConstWebhooksConstWebhookOutput struct{ *pulumi.OutputState }

func (GetConstWebhooksConstWebhookOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConstWebhooksConstWebhook)(nil)).Elem()
}

func (o GetConstWebhooksConstWebhookOutput) ToGetConstWebhooksConstWebhookOutput() GetConstWebhooksConstWebhookOutput {
	return o
}

func (o GetConstWebhooksConstWebhookOutput) ToGetConstWebhooksConstWebhookOutputWithContext(ctx context.Context) GetConstWebhooksConstWebhookOutput {
	return o
}

// supports single event per message results
func (o GetConstWebhooksConstWebhookOutput) AllowsSingleEventPerMessage() pulumi.BoolOutput {
	return o.ApplyT(func(v GetConstWebhooksConstWebhook) bool { return v.AllowsSingleEventPerMessage }).(pulumi.BoolOutput)
}

// Can be used in org webhooks, optional
func (o GetConstWebhooksConstWebhookOutput) ForOrg() pulumi.BoolOutput {
	return o.ApplyT(func(v GetConstWebhooksConstWebhook) bool { return v.ForOrg }).(pulumi.BoolOutput)
}

// Supports webhook delivery results /api/v1/:scope/:scope*id/webhooks/:webhook*id/events/search
func (o GetConstWebhooksConstWebhookOutput) HasDeliveryResults() pulumi.BoolOutput {
	return o.ApplyT(func(v GetConstWebhooksConstWebhook) bool { return v.HasDeliveryResults }).(pulumi.BoolOutput)
}

// Internal topic (not selectable in site/org webhooks)
func (o GetConstWebhooksConstWebhookOutput) Internal() pulumi.BoolOutput {
	return o.ApplyT(func(v GetConstWebhooksConstWebhook) bool { return v.Internal }).(pulumi.BoolOutput)
}

// Webhook topic name
func (o GetConstWebhooksConstWebhookOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetConstWebhooksConstWebhook) string { return v.Key }).(pulumi.StringOutput)
}

type GetConstWebhooksConstWebhookArrayOutput struct{ *pulumi.OutputState }

func (GetConstWebhooksConstWebhookArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConstWebhooksConstWebhook)(nil)).Elem()
}

func (o GetConstWebhooksConstWebhookArrayOutput) ToGetConstWebhooksConstWebhookArrayOutput() GetConstWebhooksConstWebhookArrayOutput {
	return o
}

func (o GetConstWebhooksConstWebhookArrayOutput) ToGetConstWebhooksConstWebhookArrayOutputWithContext(ctx context.Context) GetConstWebhooksConstWebhookArrayOutput {
	return o
}

func (o GetConstWebhooksConstWebhookArrayOutput) Index(i pulumi.IntInput) GetConstWebhooksConstWebhookOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConstWebhooksConstWebhook {
		return vs[0].([]GetConstWebhooksConstWebhook)[vs[1].(int)]
	}).(GetConstWebhooksConstWebhookOutput)
}

type GetSitesSite struct {
	// full address of the site
	Address string `pulumi:"address"`
	// Alarm Template ID, this takes precedence over the Org-level alarmtemplate_id
	AlarmtemplateId string `pulumi:"alarmtemplateId"`
	// AP Template ID, used by APs
	AptemplateId string `pulumi:"aptemplateId"`
	// country code for the site (for AP config generation), in two-character
	CountryCode string  `pulumi:"countryCode"`
	CreatedTime float64 `pulumi:"createdTime"`
	// Gateway Template ID, used by gateways
	GatewaytemplateId string             `pulumi:"gatewaytemplateId"`
	Id                string             `pulumi:"id"`
	Latlng            GetSitesSiteLatlng `pulumi:"latlng"`
	ModifiedTime      float64            `pulumi:"modifiedTime"`
	Name              string             `pulumi:"name"`
	// Network Template ID, this takes precedence over Site Settings
	NetworktemplateId string `pulumi:"networktemplateId"`
	// optional, any notes about the site
	Notes string `pulumi:"notes"`
	OrgId string `pulumi:"orgId"`
	// RF Template ID, this takes precedence over Site Settings
	RftemplateId string `pulumi:"rftemplateId"`
	// SecPolicy ID
	SecpolicyId string `pulumi:"secpolicyId"`
	// sitegroups this site belongs to
	SitegroupIds []string `pulumi:"sitegroupIds"`
	// Site Template ID
	SitetemplateId string `pulumi:"sitetemplateId"`
	// Timezone the site is at
	Timezone string `pulumi:"timezone"`
}

// GetSitesSiteInput is an input type that accepts GetSitesSiteArgs and GetSitesSiteOutput values.
// You can construct a concrete instance of `GetSitesSiteInput` via:
//
//	GetSitesSiteArgs{...}
type GetSitesSiteInput interface {
	pulumi.Input

	ToGetSitesSiteOutput() GetSitesSiteOutput
	ToGetSitesSiteOutputWithContext(context.Context) GetSitesSiteOutput
}

type GetSitesSiteArgs struct {
	// full address of the site
	Address pulumi.StringInput `pulumi:"address"`
	// Alarm Template ID, this takes precedence over the Org-level alarmtemplate_id
	AlarmtemplateId pulumi.StringInput `pulumi:"alarmtemplateId"`
	// AP Template ID, used by APs
	AptemplateId pulumi.StringInput `pulumi:"aptemplateId"`
	// country code for the site (for AP config generation), in two-character
	CountryCode pulumi.StringInput  `pulumi:"countryCode"`
	CreatedTime pulumi.Float64Input `pulumi:"createdTime"`
	// Gateway Template ID, used by gateways
	GatewaytemplateId pulumi.StringInput      `pulumi:"gatewaytemplateId"`
	Id                pulumi.StringInput      `pulumi:"id"`
	Latlng            GetSitesSiteLatlngInput `pulumi:"latlng"`
	ModifiedTime      pulumi.Float64Input     `pulumi:"modifiedTime"`
	Name              pulumi.StringInput      `pulumi:"name"`
	// Network Template ID, this takes precedence over Site Settings
	NetworktemplateId pulumi.StringInput `pulumi:"networktemplateId"`
	// optional, any notes about the site
	Notes pulumi.StringInput `pulumi:"notes"`
	OrgId pulumi.StringInput `pulumi:"orgId"`
	// RF Template ID, this takes precedence over Site Settings
	RftemplateId pulumi.StringInput `pulumi:"rftemplateId"`
	// SecPolicy ID
	SecpolicyId pulumi.StringInput `pulumi:"secpolicyId"`
	// sitegroups this site belongs to
	SitegroupIds pulumi.StringArrayInput `pulumi:"sitegroupIds"`
	// Site Template ID
	SitetemplateId pulumi.StringInput `pulumi:"sitetemplateId"`
	// Timezone the site is at
	Timezone pulumi.StringInput `pulumi:"timezone"`
}

func (GetSitesSiteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSitesSite)(nil)).Elem()
}

func (i GetSitesSiteArgs) ToGetSitesSiteOutput() GetSitesSiteOutput {
	return i.ToGetSitesSiteOutputWithContext(context.Background())
}

func (i GetSitesSiteArgs) ToGetSitesSiteOutputWithContext(ctx context.Context) GetSitesSiteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSitesSiteOutput)
}

// GetSitesSiteArrayInput is an input type that accepts GetSitesSiteArray and GetSitesSiteArrayOutput values.
// You can construct a concrete instance of `GetSitesSiteArrayInput` via:
//
//	GetSitesSiteArray{ GetSitesSiteArgs{...} }
type GetSitesSiteArrayInput interface {
	pulumi.Input

	ToGetSitesSiteArrayOutput() GetSitesSiteArrayOutput
	ToGetSitesSiteArrayOutputWithContext(context.Context) GetSitesSiteArrayOutput
}

type GetSitesSiteArray []GetSitesSiteInput

func (GetSitesSiteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSitesSite)(nil)).Elem()
}

func (i GetSitesSiteArray) ToGetSitesSiteArrayOutput() GetSitesSiteArrayOutput {
	return i.ToGetSitesSiteArrayOutputWithContext(context.Background())
}

func (i GetSitesSiteArray) ToGetSitesSiteArrayOutputWithContext(ctx context.Context) GetSitesSiteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSitesSiteArrayOutput)
}

type GetSitesSiteOutput struct{ *pulumi.OutputState }

func (GetSitesSiteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSitesSite)(nil)).Elem()
}

func (o GetSitesSiteOutput) ToGetSitesSiteOutput() GetSitesSiteOutput {
	return o
}

func (o GetSitesSiteOutput) ToGetSitesSiteOutputWithContext(ctx context.Context) GetSitesSiteOutput {
	return o
}

// full address of the site
func (o GetSitesSiteOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v GetSitesSite) string { return v.Address }).(pulumi.StringOutput)
}

// Alarm Template ID, this takes precedence over the Org-level alarmtemplate_id
func (o GetSitesSiteOutput) AlarmtemplateId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSitesSite) string { return v.AlarmtemplateId }).(pulumi.StringOutput)
}

// AP Template ID, used by APs
func (o GetSitesSiteOutput) AptemplateId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSitesSite) string { return v.AptemplateId }).(pulumi.StringOutput)
}

// country code for the site (for AP config generation), in two-character
func (o GetSitesSiteOutput) CountryCode() pulumi.StringOutput {
	return o.ApplyT(func(v GetSitesSite) string { return v.CountryCode }).(pulumi.StringOutput)
}

func (o GetSitesSiteOutput) CreatedTime() pulumi.Float64Output {
	return o.ApplyT(func(v GetSitesSite) float64 { return v.CreatedTime }).(pulumi.Float64Output)
}

// Gateway Template ID, used by gateways
func (o GetSitesSiteOutput) GatewaytemplateId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSitesSite) string { return v.GatewaytemplateId }).(pulumi.StringOutput)
}

func (o GetSitesSiteOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSitesSite) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetSitesSiteOutput) Latlng() GetSitesSiteLatlngOutput {
	return o.ApplyT(func(v GetSitesSite) GetSitesSiteLatlng { return v.Latlng }).(GetSitesSiteLatlngOutput)
}

func (o GetSitesSiteOutput) ModifiedTime() pulumi.Float64Output {
	return o.ApplyT(func(v GetSitesSite) float64 { return v.ModifiedTime }).(pulumi.Float64Output)
}

func (o GetSitesSiteOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSitesSite) string { return v.Name }).(pulumi.StringOutput)
}

// Network Template ID, this takes precedence over Site Settings
func (o GetSitesSiteOutput) NetworktemplateId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSitesSite) string { return v.NetworktemplateId }).(pulumi.StringOutput)
}

// optional, any notes about the site
func (o GetSitesSiteOutput) Notes() pulumi.StringOutput {
	return o.ApplyT(func(v GetSitesSite) string { return v.Notes }).(pulumi.StringOutput)
}

func (o GetSitesSiteOutput) OrgId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSitesSite) string { return v.OrgId }).(pulumi.StringOutput)
}

// RF Template ID, this takes precedence over Site Settings
func (o GetSitesSiteOutput) RftemplateId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSitesSite) string { return v.RftemplateId }).(pulumi.StringOutput)
}

// SecPolicy ID
func (o GetSitesSiteOutput) SecpolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSitesSite) string { return v.SecpolicyId }).(pulumi.StringOutput)
}

// sitegroups this site belongs to
func (o GetSitesSiteOutput) SitegroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSitesSite) []string { return v.SitegroupIds }).(pulumi.StringArrayOutput)
}

// Site Template ID
func (o GetSitesSiteOutput) SitetemplateId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSitesSite) string { return v.SitetemplateId }).(pulumi.StringOutput)
}

// Timezone the site is at
func (o GetSitesSiteOutput) Timezone() pulumi.StringOutput {
	return o.ApplyT(func(v GetSitesSite) string { return v.Timezone }).(pulumi.StringOutput)
}

type GetSitesSiteArrayOutput struct{ *pulumi.OutputState }

func (GetSitesSiteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSitesSite)(nil)).Elem()
}

func (o GetSitesSiteArrayOutput) ToGetSitesSiteArrayOutput() GetSitesSiteArrayOutput {
	return o
}

func (o GetSitesSiteArrayOutput) ToGetSitesSiteArrayOutputWithContext(ctx context.Context) GetSitesSiteArrayOutput {
	return o
}

func (o GetSitesSiteArrayOutput) Index(i pulumi.IntInput) GetSitesSiteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSitesSite {
		return vs[0].([]GetSitesSite)[vs[1].(int)]
	}).(GetSitesSiteOutput)
}

type GetSitesSiteLatlng struct {
	Lat float64 `pulumi:"lat"`
	Lng float64 `pulumi:"lng"`
}

// GetSitesSiteLatlngInput is an input type that accepts GetSitesSiteLatlngArgs and GetSitesSiteLatlngOutput values.
// You can construct a concrete instance of `GetSitesSiteLatlngInput` via:
//
//	GetSitesSiteLatlngArgs{...}
type GetSitesSiteLatlngInput interface {
	pulumi.Input

	ToGetSitesSiteLatlngOutput() GetSitesSiteLatlngOutput
	ToGetSitesSiteLatlngOutputWithContext(context.Context) GetSitesSiteLatlngOutput
}

type GetSitesSiteLatlngArgs struct {
	Lat pulumi.Float64Input `pulumi:"lat"`
	Lng pulumi.Float64Input `pulumi:"lng"`
}

func (GetSitesSiteLatlngArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSitesSiteLatlng)(nil)).Elem()
}

func (i GetSitesSiteLatlngArgs) ToGetSitesSiteLatlngOutput() GetSitesSiteLatlngOutput {
	return i.ToGetSitesSiteLatlngOutputWithContext(context.Background())
}

func (i GetSitesSiteLatlngArgs) ToGetSitesSiteLatlngOutputWithContext(ctx context.Context) GetSitesSiteLatlngOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSitesSiteLatlngOutput)
}

type GetSitesSiteLatlngOutput struct{ *pulumi.OutputState }

func (GetSitesSiteLatlngOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSitesSiteLatlng)(nil)).Elem()
}

func (o GetSitesSiteLatlngOutput) ToGetSitesSiteLatlngOutput() GetSitesSiteLatlngOutput {
	return o
}

func (o GetSitesSiteLatlngOutput) ToGetSitesSiteLatlngOutputWithContext(ctx context.Context) GetSitesSiteLatlngOutput {
	return o
}

func (o GetSitesSiteLatlngOutput) Lat() pulumi.Float64Output {
	return o.ApplyT(func(v GetSitesSiteLatlng) float64 { return v.Lat }).(pulumi.Float64Output)
}

func (o GetSitesSiteLatlngOutput) Lng() pulumi.Float64Output {
	return o.ApplyT(func(v GetSitesSiteLatlng) float64 { return v.Lng }).(pulumi.Float64Output)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*UpgradeDeviceFwupdateInput)(nil)).Elem(), UpgradeDeviceFwupdateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UpgradeDeviceFwupdatePtrInput)(nil)).Elem(), UpgradeDeviceFwupdateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConstAlarmsConstAlarmInput)(nil)).Elem(), GetConstAlarmsConstAlarmArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConstAlarmsConstAlarmArrayInput)(nil)).Elem(), GetConstAlarmsConstAlarmArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConstAppCategoriesConstAppCategoryInput)(nil)).Elem(), GetConstAppCategoriesConstAppCategoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConstAppCategoriesConstAppCategoryArrayInput)(nil)).Elem(), GetConstAppCategoriesConstAppCategoryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConstAppCategoriesConstAppCategoryFiltersInput)(nil)).Elem(), GetConstAppCategoriesConstAppCategoryFiltersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConstAppSubCategoriesConstAppSubCategoryInput)(nil)).Elem(), GetConstAppSubCategoriesConstAppSubCategoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConstAppSubCategoriesConstAppSubCategoryArrayInput)(nil)).Elem(), GetConstAppSubCategoriesConstAppSubCategoryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConstApplicationsConstApplicationInput)(nil)).Elem(), GetConstApplicationsConstApplicationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConstApplicationsConstApplicationArrayInput)(nil)).Elem(), GetConstApplicationsConstApplicationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConstCountriesConstCountryInput)(nil)).Elem(), GetConstCountriesConstCountryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConstCountriesConstCountryArrayInput)(nil)).Elem(), GetConstCountriesConstCountryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConstTrafficTypesConstTrafficTypeInput)(nil)).Elem(), GetConstTrafficTypesConstTrafficTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConstTrafficTypesConstTrafficTypeArrayInput)(nil)).Elem(), GetConstTrafficTypesConstTrafficTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConstWebhooksConstWebhookInput)(nil)).Elem(), GetConstWebhooksConstWebhookArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConstWebhooksConstWebhookArrayInput)(nil)).Elem(), GetConstWebhooksConstWebhookArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSitesSiteInput)(nil)).Elem(), GetSitesSiteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSitesSiteArrayInput)(nil)).Elem(), GetSitesSiteArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSitesSiteLatlngInput)(nil)).Elem(), GetSitesSiteLatlngArgs{})
	pulumi.RegisterOutputType(UpgradeDeviceFwupdateOutput{})
	pulumi.RegisterOutputType(UpgradeDeviceFwupdatePtrOutput{})
	pulumi.RegisterOutputType(GetConstAlarmsConstAlarmOutput{})
	pulumi.RegisterOutputType(GetConstAlarmsConstAlarmArrayOutput{})
	pulumi.RegisterOutputType(GetConstAppCategoriesConstAppCategoryOutput{})
	pulumi.RegisterOutputType(GetConstAppCategoriesConstAppCategoryArrayOutput{})
	pulumi.RegisterOutputType(GetConstAppCategoriesConstAppCategoryFiltersOutput{})
	pulumi.RegisterOutputType(GetConstAppSubCategoriesConstAppSubCategoryOutput{})
	pulumi.RegisterOutputType(GetConstAppSubCategoriesConstAppSubCategoryArrayOutput{})
	pulumi.RegisterOutputType(GetConstApplicationsConstApplicationOutput{})
	pulumi.RegisterOutputType(GetConstApplicationsConstApplicationArrayOutput{})
	pulumi.RegisterOutputType(GetConstCountriesConstCountryOutput{})
	pulumi.RegisterOutputType(GetConstCountriesConstCountryArrayOutput{})
	pulumi.RegisterOutputType(GetConstTrafficTypesConstTrafficTypeOutput{})
	pulumi.RegisterOutputType(GetConstTrafficTypesConstTrafficTypeArrayOutput{})
	pulumi.RegisterOutputType(GetConstWebhooksConstWebhookOutput{})
	pulumi.RegisterOutputType(GetConstWebhooksConstWebhookArrayOutput{})
	pulumi.RegisterOutputType(GetSitesSiteOutput{})
	pulumi.RegisterOutputType(GetSitesSiteArrayOutput{})
	pulumi.RegisterOutputType(GetSitesSiteLatlngOutput{})
}
