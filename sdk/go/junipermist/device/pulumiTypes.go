// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package device

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-junipermist/sdk/go/junipermist/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type ApAeroscout struct {
	// Whether to enable aeroscout config
	Enabled *bool `pulumi:"enabled"`
	// Required if enabled, aeroscout server host
	Host *string `pulumi:"host"`
	// Whether to enable the feature to allow wireless clients data received and sent to AES server for location calculation
	LocateConnected *bool `pulumi:"locateConnected"`
	Port            *int  `pulumi:"port"`
}

// ApAeroscoutInput is an input type that accepts ApAeroscoutArgs and ApAeroscoutOutput values.
// You can construct a concrete instance of `ApAeroscoutInput` via:
//
//	ApAeroscoutArgs{...}
type ApAeroscoutInput interface {
	pulumi.Input

	ToApAeroscoutOutput() ApAeroscoutOutput
	ToApAeroscoutOutputWithContext(context.Context) ApAeroscoutOutput
}

type ApAeroscoutArgs struct {
	// Whether to enable aeroscout config
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Required if enabled, aeroscout server host
	Host pulumi.StringPtrInput `pulumi:"host"`
	// Whether to enable the feature to allow wireless clients data received and sent to AES server for location calculation
	LocateConnected pulumi.BoolPtrInput `pulumi:"locateConnected"`
	Port            pulumi.IntPtrInput  `pulumi:"port"`
}

func (ApAeroscoutArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApAeroscout)(nil)).Elem()
}

func (i ApAeroscoutArgs) ToApAeroscoutOutput() ApAeroscoutOutput {
	return i.ToApAeroscoutOutputWithContext(context.Background())
}

func (i ApAeroscoutArgs) ToApAeroscoutOutputWithContext(ctx context.Context) ApAeroscoutOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApAeroscoutOutput)
}

func (i ApAeroscoutArgs) ToApAeroscoutPtrOutput() ApAeroscoutPtrOutput {
	return i.ToApAeroscoutPtrOutputWithContext(context.Background())
}

func (i ApAeroscoutArgs) ToApAeroscoutPtrOutputWithContext(ctx context.Context) ApAeroscoutPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApAeroscoutOutput).ToApAeroscoutPtrOutputWithContext(ctx)
}

// ApAeroscoutPtrInput is an input type that accepts ApAeroscoutArgs, ApAeroscoutPtr and ApAeroscoutPtrOutput values.
// You can construct a concrete instance of `ApAeroscoutPtrInput` via:
//
//	        ApAeroscoutArgs{...}
//
//	or:
//
//	        nil
type ApAeroscoutPtrInput interface {
	pulumi.Input

	ToApAeroscoutPtrOutput() ApAeroscoutPtrOutput
	ToApAeroscoutPtrOutputWithContext(context.Context) ApAeroscoutPtrOutput
}

type apAeroscoutPtrType ApAeroscoutArgs

func ApAeroscoutPtr(v *ApAeroscoutArgs) ApAeroscoutPtrInput {
	return (*apAeroscoutPtrType)(v)
}

func (*apAeroscoutPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApAeroscout)(nil)).Elem()
}

func (i *apAeroscoutPtrType) ToApAeroscoutPtrOutput() ApAeroscoutPtrOutput {
	return i.ToApAeroscoutPtrOutputWithContext(context.Background())
}

func (i *apAeroscoutPtrType) ToApAeroscoutPtrOutputWithContext(ctx context.Context) ApAeroscoutPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApAeroscoutPtrOutput)
}

type ApAeroscoutOutput struct{ *pulumi.OutputState }

func (ApAeroscoutOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApAeroscout)(nil)).Elem()
}

func (o ApAeroscoutOutput) ToApAeroscoutOutput() ApAeroscoutOutput {
	return o
}

func (o ApAeroscoutOutput) ToApAeroscoutOutputWithContext(ctx context.Context) ApAeroscoutOutput {
	return o
}

func (o ApAeroscoutOutput) ToApAeroscoutPtrOutput() ApAeroscoutPtrOutput {
	return o.ToApAeroscoutPtrOutputWithContext(context.Background())
}

func (o ApAeroscoutOutput) ToApAeroscoutPtrOutputWithContext(ctx context.Context) ApAeroscoutPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApAeroscout) *ApAeroscout {
		return &v
	}).(ApAeroscoutPtrOutput)
}

// Whether to enable aeroscout config
func (o ApAeroscoutOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApAeroscout) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Required if enabled, aeroscout server host
func (o ApAeroscoutOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApAeroscout) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// Whether to enable the feature to allow wireless clients data received and sent to AES server for location calculation
func (o ApAeroscoutOutput) LocateConnected() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApAeroscout) *bool { return v.LocateConnected }).(pulumi.BoolPtrOutput)
}

func (o ApAeroscoutOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApAeroscout) *int { return v.Port }).(pulumi.IntPtrOutput)
}

type ApAeroscoutPtrOutput struct{ *pulumi.OutputState }

func (ApAeroscoutPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApAeroscout)(nil)).Elem()
}

func (o ApAeroscoutPtrOutput) ToApAeroscoutPtrOutput() ApAeroscoutPtrOutput {
	return o
}

func (o ApAeroscoutPtrOutput) ToApAeroscoutPtrOutputWithContext(ctx context.Context) ApAeroscoutPtrOutput {
	return o
}

func (o ApAeroscoutPtrOutput) Elem() ApAeroscoutOutput {
	return o.ApplyT(func(v *ApAeroscout) ApAeroscout {
		if v != nil {
			return *v
		}
		var ret ApAeroscout
		return ret
	}).(ApAeroscoutOutput)
}

// Whether to enable aeroscout config
func (o ApAeroscoutPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApAeroscout) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Required if enabled, aeroscout server host
func (o ApAeroscoutPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApAeroscout) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

// Whether to enable the feature to allow wireless clients data received and sent to AES server for location calculation
func (o ApAeroscoutPtrOutput) LocateConnected() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApAeroscout) *bool {
		if v == nil {
			return nil
		}
		return v.LocateConnected
	}).(pulumi.BoolPtrOutput)
}

func (o ApAeroscoutPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApAeroscout) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

type ApBleConfig struct {
	// Whether Mist beacons is enabled
	BeaconEnabled *bool `pulumi:"beaconEnabled"`
	// Required if `beaconRateMode`==`custom`, 1-10, in number-beacons-per-second
	BeaconRate *int `pulumi:"beaconRate"`
	// enum: `custom`, `default`
	BeaconRateMode *string `pulumi:"beaconRateMode"`
	// List of AP BLE location beam numbers (1-8) which should be disabled at the AP and not transmit location information (where beam 1 is oriented at the top the AP, growing counter-clock-wise, with 9 being the omni BLE beam)
	BeamDisableds []int `pulumi:"beamDisableds"`
	// Can be enabled if `beaconEnabled`==`true`, whether to send custom packet
	CustomBlePacketEnabled *bool `pulumi:"customBlePacketEnabled"`
	// The custom frame to be sent out in this beacon. The frame must be a hexstring
	CustomBlePacketFrame *string `pulumi:"customBlePacketFrame"`
	// Frequency (msec) of data emitted by custom ble beacon
	CustomBlePacketFreqMsec *int `pulumi:"customBlePacketFreqMsec"`
	// Advertised TX Power, -100 to 20 (dBm), omit this attribute to use default
	EddystoneUidAdvPower *int    `pulumi:"eddystoneUidAdvPower"`
	EddystoneUidBeams    *string `pulumi:"eddystoneUidBeams"`
	// Only if `beaconEnabled`==`false`, Whether Eddystone-UID beacon is enabled
	EddystoneUidEnabled *bool `pulumi:"eddystoneUidEnabled"`
	// Frequency (msec) of data emmit by Eddystone-UID beacon
	EddystoneUidFreqMsec *int `pulumi:"eddystoneUidFreqMsec"`
	// Eddystone-UID instance for the device
	EddystoneUidInstance *string `pulumi:"eddystoneUidInstance"`
	// Eddystone-UID namespace
	EddystoneUidNamespace *string `pulumi:"eddystoneUidNamespace"`
	// Advertised TX Power, -100 to 20 (dBm), omit this attribute to use default
	EddystoneUrlAdvPower *int    `pulumi:"eddystoneUrlAdvPower"`
	EddystoneUrlBeams    *string `pulumi:"eddystoneUrlBeams"`
	// Only if `beaconEnabled`==`false`, Whether Eddystone-URL beacon is enabled
	EddystoneUrlEnabled *bool `pulumi:"eddystoneUrlEnabled"`
	// Frequency (msec) of data emit by Eddystone-UID beacon
	EddystoneUrlFreqMsec *int `pulumi:"eddystoneUrlFreqMsec"`
	// URL pointed by Eddystone-URL beacon
	EddystoneUrlUrl *string `pulumi:"eddystoneUrlUrl"`
	// Advertised TX Power, -100 to 20 (dBm), omit this attribute to use default
	IbeaconAdvPower *int    `pulumi:"ibeaconAdvPower"`
	IbeaconBeams    *string `pulumi:"ibeaconBeams"`
	// Can be enabled if `beaconEnabled`==`true`, whether to send iBeacon
	IbeaconEnabled *bool `pulumi:"ibeaconEnabled"`
	// Frequency (msec) of data emmit for iBeacon
	IbeaconFreqMsec *int `pulumi:"ibeaconFreqMsec"`
	// Major number for iBeacon
	IbeaconMajor *int `pulumi:"ibeaconMajor"`
	// Minor number for iBeacon
	IbeaconMinor *int `pulumi:"ibeaconMinor"`
	// Optional, if not specified, the same UUID as the beacon will be used
	IbeaconUuid *string `pulumi:"ibeaconUuid"`
	// Required if `powerMode`==`custom`; else use `powerMode` as default
	Power *int `pulumi:"power"`
	// enum: `custom`, `default`
	PowerMode *string `pulumi:"powerMode"`
}

// ApBleConfigInput is an input type that accepts ApBleConfigArgs and ApBleConfigOutput values.
// You can construct a concrete instance of `ApBleConfigInput` via:
//
//	ApBleConfigArgs{...}
type ApBleConfigInput interface {
	pulumi.Input

	ToApBleConfigOutput() ApBleConfigOutput
	ToApBleConfigOutputWithContext(context.Context) ApBleConfigOutput
}

type ApBleConfigArgs struct {
	// Whether Mist beacons is enabled
	BeaconEnabled pulumi.BoolPtrInput `pulumi:"beaconEnabled"`
	// Required if `beaconRateMode`==`custom`, 1-10, in number-beacons-per-second
	BeaconRate pulumi.IntPtrInput `pulumi:"beaconRate"`
	// enum: `custom`, `default`
	BeaconRateMode pulumi.StringPtrInput `pulumi:"beaconRateMode"`
	// List of AP BLE location beam numbers (1-8) which should be disabled at the AP and not transmit location information (where beam 1 is oriented at the top the AP, growing counter-clock-wise, with 9 being the omni BLE beam)
	BeamDisableds pulumi.IntArrayInput `pulumi:"beamDisableds"`
	// Can be enabled if `beaconEnabled`==`true`, whether to send custom packet
	CustomBlePacketEnabled pulumi.BoolPtrInput `pulumi:"customBlePacketEnabled"`
	// The custom frame to be sent out in this beacon. The frame must be a hexstring
	CustomBlePacketFrame pulumi.StringPtrInput `pulumi:"customBlePacketFrame"`
	// Frequency (msec) of data emitted by custom ble beacon
	CustomBlePacketFreqMsec pulumi.IntPtrInput `pulumi:"customBlePacketFreqMsec"`
	// Advertised TX Power, -100 to 20 (dBm), omit this attribute to use default
	EddystoneUidAdvPower pulumi.IntPtrInput    `pulumi:"eddystoneUidAdvPower"`
	EddystoneUidBeams    pulumi.StringPtrInput `pulumi:"eddystoneUidBeams"`
	// Only if `beaconEnabled`==`false`, Whether Eddystone-UID beacon is enabled
	EddystoneUidEnabled pulumi.BoolPtrInput `pulumi:"eddystoneUidEnabled"`
	// Frequency (msec) of data emmit by Eddystone-UID beacon
	EddystoneUidFreqMsec pulumi.IntPtrInput `pulumi:"eddystoneUidFreqMsec"`
	// Eddystone-UID instance for the device
	EddystoneUidInstance pulumi.StringPtrInput `pulumi:"eddystoneUidInstance"`
	// Eddystone-UID namespace
	EddystoneUidNamespace pulumi.StringPtrInput `pulumi:"eddystoneUidNamespace"`
	// Advertised TX Power, -100 to 20 (dBm), omit this attribute to use default
	EddystoneUrlAdvPower pulumi.IntPtrInput    `pulumi:"eddystoneUrlAdvPower"`
	EddystoneUrlBeams    pulumi.StringPtrInput `pulumi:"eddystoneUrlBeams"`
	// Only if `beaconEnabled`==`false`, Whether Eddystone-URL beacon is enabled
	EddystoneUrlEnabled pulumi.BoolPtrInput `pulumi:"eddystoneUrlEnabled"`
	// Frequency (msec) of data emit by Eddystone-UID beacon
	EddystoneUrlFreqMsec pulumi.IntPtrInput `pulumi:"eddystoneUrlFreqMsec"`
	// URL pointed by Eddystone-URL beacon
	EddystoneUrlUrl pulumi.StringPtrInput `pulumi:"eddystoneUrlUrl"`
	// Advertised TX Power, -100 to 20 (dBm), omit this attribute to use default
	IbeaconAdvPower pulumi.IntPtrInput    `pulumi:"ibeaconAdvPower"`
	IbeaconBeams    pulumi.StringPtrInput `pulumi:"ibeaconBeams"`
	// Can be enabled if `beaconEnabled`==`true`, whether to send iBeacon
	IbeaconEnabled pulumi.BoolPtrInput `pulumi:"ibeaconEnabled"`
	// Frequency (msec) of data emmit for iBeacon
	IbeaconFreqMsec pulumi.IntPtrInput `pulumi:"ibeaconFreqMsec"`
	// Major number for iBeacon
	IbeaconMajor pulumi.IntPtrInput `pulumi:"ibeaconMajor"`
	// Minor number for iBeacon
	IbeaconMinor pulumi.IntPtrInput `pulumi:"ibeaconMinor"`
	// Optional, if not specified, the same UUID as the beacon will be used
	IbeaconUuid pulumi.StringPtrInput `pulumi:"ibeaconUuid"`
	// Required if `powerMode`==`custom`; else use `powerMode` as default
	Power pulumi.IntPtrInput `pulumi:"power"`
	// enum: `custom`, `default`
	PowerMode pulumi.StringPtrInput `pulumi:"powerMode"`
}

func (ApBleConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApBleConfig)(nil)).Elem()
}

func (i ApBleConfigArgs) ToApBleConfigOutput() ApBleConfigOutput {
	return i.ToApBleConfigOutputWithContext(context.Background())
}

func (i ApBleConfigArgs) ToApBleConfigOutputWithContext(ctx context.Context) ApBleConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApBleConfigOutput)
}

func (i ApBleConfigArgs) ToApBleConfigPtrOutput() ApBleConfigPtrOutput {
	return i.ToApBleConfigPtrOutputWithContext(context.Background())
}

func (i ApBleConfigArgs) ToApBleConfigPtrOutputWithContext(ctx context.Context) ApBleConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApBleConfigOutput).ToApBleConfigPtrOutputWithContext(ctx)
}

// ApBleConfigPtrInput is an input type that accepts ApBleConfigArgs, ApBleConfigPtr and ApBleConfigPtrOutput values.
// You can construct a concrete instance of `ApBleConfigPtrInput` via:
//
//	        ApBleConfigArgs{...}
//
//	or:
//
//	        nil
type ApBleConfigPtrInput interface {
	pulumi.Input

	ToApBleConfigPtrOutput() ApBleConfigPtrOutput
	ToApBleConfigPtrOutputWithContext(context.Context) ApBleConfigPtrOutput
}

type apBleConfigPtrType ApBleConfigArgs

func ApBleConfigPtr(v *ApBleConfigArgs) ApBleConfigPtrInput {
	return (*apBleConfigPtrType)(v)
}

func (*apBleConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApBleConfig)(nil)).Elem()
}

func (i *apBleConfigPtrType) ToApBleConfigPtrOutput() ApBleConfigPtrOutput {
	return i.ToApBleConfigPtrOutputWithContext(context.Background())
}

func (i *apBleConfigPtrType) ToApBleConfigPtrOutputWithContext(ctx context.Context) ApBleConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApBleConfigPtrOutput)
}

type ApBleConfigOutput struct{ *pulumi.OutputState }

func (ApBleConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApBleConfig)(nil)).Elem()
}

func (o ApBleConfigOutput) ToApBleConfigOutput() ApBleConfigOutput {
	return o
}

func (o ApBleConfigOutput) ToApBleConfigOutputWithContext(ctx context.Context) ApBleConfigOutput {
	return o
}

func (o ApBleConfigOutput) ToApBleConfigPtrOutput() ApBleConfigPtrOutput {
	return o.ToApBleConfigPtrOutputWithContext(context.Background())
}

func (o ApBleConfigOutput) ToApBleConfigPtrOutputWithContext(ctx context.Context) ApBleConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApBleConfig) *ApBleConfig {
		return &v
	}).(ApBleConfigPtrOutput)
}

// Whether Mist beacons is enabled
func (o ApBleConfigOutput) BeaconEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApBleConfig) *bool { return v.BeaconEnabled }).(pulumi.BoolPtrOutput)
}

// Required if `beaconRateMode`==`custom`, 1-10, in number-beacons-per-second
func (o ApBleConfigOutput) BeaconRate() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApBleConfig) *int { return v.BeaconRate }).(pulumi.IntPtrOutput)
}

// enum: `custom`, `default`
func (o ApBleConfigOutput) BeaconRateMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApBleConfig) *string { return v.BeaconRateMode }).(pulumi.StringPtrOutput)
}

// List of AP BLE location beam numbers (1-8) which should be disabled at the AP and not transmit location information (where beam 1 is oriented at the top the AP, growing counter-clock-wise, with 9 being the omni BLE beam)
func (o ApBleConfigOutput) BeamDisableds() pulumi.IntArrayOutput {
	return o.ApplyT(func(v ApBleConfig) []int { return v.BeamDisableds }).(pulumi.IntArrayOutput)
}

// Can be enabled if `beaconEnabled`==`true`, whether to send custom packet
func (o ApBleConfigOutput) CustomBlePacketEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApBleConfig) *bool { return v.CustomBlePacketEnabled }).(pulumi.BoolPtrOutput)
}

// The custom frame to be sent out in this beacon. The frame must be a hexstring
func (o ApBleConfigOutput) CustomBlePacketFrame() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApBleConfig) *string { return v.CustomBlePacketFrame }).(pulumi.StringPtrOutput)
}

// Frequency (msec) of data emitted by custom ble beacon
func (o ApBleConfigOutput) CustomBlePacketFreqMsec() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApBleConfig) *int { return v.CustomBlePacketFreqMsec }).(pulumi.IntPtrOutput)
}

// Advertised TX Power, -100 to 20 (dBm), omit this attribute to use default
func (o ApBleConfigOutput) EddystoneUidAdvPower() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApBleConfig) *int { return v.EddystoneUidAdvPower }).(pulumi.IntPtrOutput)
}

func (o ApBleConfigOutput) EddystoneUidBeams() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApBleConfig) *string { return v.EddystoneUidBeams }).(pulumi.StringPtrOutput)
}

// Only if `beaconEnabled`==`false`, Whether Eddystone-UID beacon is enabled
func (o ApBleConfigOutput) EddystoneUidEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApBleConfig) *bool { return v.EddystoneUidEnabled }).(pulumi.BoolPtrOutput)
}

// Frequency (msec) of data emmit by Eddystone-UID beacon
func (o ApBleConfigOutput) EddystoneUidFreqMsec() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApBleConfig) *int { return v.EddystoneUidFreqMsec }).(pulumi.IntPtrOutput)
}

// Eddystone-UID instance for the device
func (o ApBleConfigOutput) EddystoneUidInstance() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApBleConfig) *string { return v.EddystoneUidInstance }).(pulumi.StringPtrOutput)
}

// Eddystone-UID namespace
func (o ApBleConfigOutput) EddystoneUidNamespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApBleConfig) *string { return v.EddystoneUidNamespace }).(pulumi.StringPtrOutput)
}

// Advertised TX Power, -100 to 20 (dBm), omit this attribute to use default
func (o ApBleConfigOutput) EddystoneUrlAdvPower() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApBleConfig) *int { return v.EddystoneUrlAdvPower }).(pulumi.IntPtrOutput)
}

func (o ApBleConfigOutput) EddystoneUrlBeams() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApBleConfig) *string { return v.EddystoneUrlBeams }).(pulumi.StringPtrOutput)
}

// Only if `beaconEnabled`==`false`, Whether Eddystone-URL beacon is enabled
func (o ApBleConfigOutput) EddystoneUrlEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApBleConfig) *bool { return v.EddystoneUrlEnabled }).(pulumi.BoolPtrOutput)
}

// Frequency (msec) of data emit by Eddystone-UID beacon
func (o ApBleConfigOutput) EddystoneUrlFreqMsec() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApBleConfig) *int { return v.EddystoneUrlFreqMsec }).(pulumi.IntPtrOutput)
}

// URL pointed by Eddystone-URL beacon
func (o ApBleConfigOutput) EddystoneUrlUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApBleConfig) *string { return v.EddystoneUrlUrl }).(pulumi.StringPtrOutput)
}

// Advertised TX Power, -100 to 20 (dBm), omit this attribute to use default
func (o ApBleConfigOutput) IbeaconAdvPower() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApBleConfig) *int { return v.IbeaconAdvPower }).(pulumi.IntPtrOutput)
}

func (o ApBleConfigOutput) IbeaconBeams() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApBleConfig) *string { return v.IbeaconBeams }).(pulumi.StringPtrOutput)
}

// Can be enabled if `beaconEnabled`==`true`, whether to send iBeacon
func (o ApBleConfigOutput) IbeaconEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApBleConfig) *bool { return v.IbeaconEnabled }).(pulumi.BoolPtrOutput)
}

// Frequency (msec) of data emmit for iBeacon
func (o ApBleConfigOutput) IbeaconFreqMsec() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApBleConfig) *int { return v.IbeaconFreqMsec }).(pulumi.IntPtrOutput)
}

// Major number for iBeacon
func (o ApBleConfigOutput) IbeaconMajor() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApBleConfig) *int { return v.IbeaconMajor }).(pulumi.IntPtrOutput)
}

// Minor number for iBeacon
func (o ApBleConfigOutput) IbeaconMinor() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApBleConfig) *int { return v.IbeaconMinor }).(pulumi.IntPtrOutput)
}

// Optional, if not specified, the same UUID as the beacon will be used
func (o ApBleConfigOutput) IbeaconUuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApBleConfig) *string { return v.IbeaconUuid }).(pulumi.StringPtrOutput)
}

// Required if `powerMode`==`custom`; else use `powerMode` as default
func (o ApBleConfigOutput) Power() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApBleConfig) *int { return v.Power }).(pulumi.IntPtrOutput)
}

// enum: `custom`, `default`
func (o ApBleConfigOutput) PowerMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApBleConfig) *string { return v.PowerMode }).(pulumi.StringPtrOutput)
}

type ApBleConfigPtrOutput struct{ *pulumi.OutputState }

func (ApBleConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApBleConfig)(nil)).Elem()
}

func (o ApBleConfigPtrOutput) ToApBleConfigPtrOutput() ApBleConfigPtrOutput {
	return o
}

func (o ApBleConfigPtrOutput) ToApBleConfigPtrOutputWithContext(ctx context.Context) ApBleConfigPtrOutput {
	return o
}

func (o ApBleConfigPtrOutput) Elem() ApBleConfigOutput {
	return o.ApplyT(func(v *ApBleConfig) ApBleConfig {
		if v != nil {
			return *v
		}
		var ret ApBleConfig
		return ret
	}).(ApBleConfigOutput)
}

// Whether Mist beacons is enabled
func (o ApBleConfigPtrOutput) BeaconEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApBleConfig) *bool {
		if v == nil {
			return nil
		}
		return v.BeaconEnabled
	}).(pulumi.BoolPtrOutput)
}

// Required if `beaconRateMode`==`custom`, 1-10, in number-beacons-per-second
func (o ApBleConfigPtrOutput) BeaconRate() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApBleConfig) *int {
		if v == nil {
			return nil
		}
		return v.BeaconRate
	}).(pulumi.IntPtrOutput)
}

// enum: `custom`, `default`
func (o ApBleConfigPtrOutput) BeaconRateMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApBleConfig) *string {
		if v == nil {
			return nil
		}
		return v.BeaconRateMode
	}).(pulumi.StringPtrOutput)
}

// List of AP BLE location beam numbers (1-8) which should be disabled at the AP and not transmit location information (where beam 1 is oriented at the top the AP, growing counter-clock-wise, with 9 being the omni BLE beam)
func (o ApBleConfigPtrOutput) BeamDisableds() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *ApBleConfig) []int {
		if v == nil {
			return nil
		}
		return v.BeamDisableds
	}).(pulumi.IntArrayOutput)
}

// Can be enabled if `beaconEnabled`==`true`, whether to send custom packet
func (o ApBleConfigPtrOutput) CustomBlePacketEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApBleConfig) *bool {
		if v == nil {
			return nil
		}
		return v.CustomBlePacketEnabled
	}).(pulumi.BoolPtrOutput)
}

// The custom frame to be sent out in this beacon. The frame must be a hexstring
func (o ApBleConfigPtrOutput) CustomBlePacketFrame() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApBleConfig) *string {
		if v == nil {
			return nil
		}
		return v.CustomBlePacketFrame
	}).(pulumi.StringPtrOutput)
}

// Frequency (msec) of data emitted by custom ble beacon
func (o ApBleConfigPtrOutput) CustomBlePacketFreqMsec() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApBleConfig) *int {
		if v == nil {
			return nil
		}
		return v.CustomBlePacketFreqMsec
	}).(pulumi.IntPtrOutput)
}

// Advertised TX Power, -100 to 20 (dBm), omit this attribute to use default
func (o ApBleConfigPtrOutput) EddystoneUidAdvPower() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApBleConfig) *int {
		if v == nil {
			return nil
		}
		return v.EddystoneUidAdvPower
	}).(pulumi.IntPtrOutput)
}

func (o ApBleConfigPtrOutput) EddystoneUidBeams() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApBleConfig) *string {
		if v == nil {
			return nil
		}
		return v.EddystoneUidBeams
	}).(pulumi.StringPtrOutput)
}

// Only if `beaconEnabled`==`false`, Whether Eddystone-UID beacon is enabled
func (o ApBleConfigPtrOutput) EddystoneUidEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApBleConfig) *bool {
		if v == nil {
			return nil
		}
		return v.EddystoneUidEnabled
	}).(pulumi.BoolPtrOutput)
}

// Frequency (msec) of data emmit by Eddystone-UID beacon
func (o ApBleConfigPtrOutput) EddystoneUidFreqMsec() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApBleConfig) *int {
		if v == nil {
			return nil
		}
		return v.EddystoneUidFreqMsec
	}).(pulumi.IntPtrOutput)
}

// Eddystone-UID instance for the device
func (o ApBleConfigPtrOutput) EddystoneUidInstance() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApBleConfig) *string {
		if v == nil {
			return nil
		}
		return v.EddystoneUidInstance
	}).(pulumi.StringPtrOutput)
}

// Eddystone-UID namespace
func (o ApBleConfigPtrOutput) EddystoneUidNamespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApBleConfig) *string {
		if v == nil {
			return nil
		}
		return v.EddystoneUidNamespace
	}).(pulumi.StringPtrOutput)
}

// Advertised TX Power, -100 to 20 (dBm), omit this attribute to use default
func (o ApBleConfigPtrOutput) EddystoneUrlAdvPower() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApBleConfig) *int {
		if v == nil {
			return nil
		}
		return v.EddystoneUrlAdvPower
	}).(pulumi.IntPtrOutput)
}

func (o ApBleConfigPtrOutput) EddystoneUrlBeams() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApBleConfig) *string {
		if v == nil {
			return nil
		}
		return v.EddystoneUrlBeams
	}).(pulumi.StringPtrOutput)
}

// Only if `beaconEnabled`==`false`, Whether Eddystone-URL beacon is enabled
func (o ApBleConfigPtrOutput) EddystoneUrlEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApBleConfig) *bool {
		if v == nil {
			return nil
		}
		return v.EddystoneUrlEnabled
	}).(pulumi.BoolPtrOutput)
}

// Frequency (msec) of data emit by Eddystone-UID beacon
func (o ApBleConfigPtrOutput) EddystoneUrlFreqMsec() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApBleConfig) *int {
		if v == nil {
			return nil
		}
		return v.EddystoneUrlFreqMsec
	}).(pulumi.IntPtrOutput)
}

// URL pointed by Eddystone-URL beacon
func (o ApBleConfigPtrOutput) EddystoneUrlUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApBleConfig) *string {
		if v == nil {
			return nil
		}
		return v.EddystoneUrlUrl
	}).(pulumi.StringPtrOutput)
}

// Advertised TX Power, -100 to 20 (dBm), omit this attribute to use default
func (o ApBleConfigPtrOutput) IbeaconAdvPower() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApBleConfig) *int {
		if v == nil {
			return nil
		}
		return v.IbeaconAdvPower
	}).(pulumi.IntPtrOutput)
}

func (o ApBleConfigPtrOutput) IbeaconBeams() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApBleConfig) *string {
		if v == nil {
			return nil
		}
		return v.IbeaconBeams
	}).(pulumi.StringPtrOutput)
}

// Can be enabled if `beaconEnabled`==`true`, whether to send iBeacon
func (o ApBleConfigPtrOutput) IbeaconEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApBleConfig) *bool {
		if v == nil {
			return nil
		}
		return v.IbeaconEnabled
	}).(pulumi.BoolPtrOutput)
}

// Frequency (msec) of data emmit for iBeacon
func (o ApBleConfigPtrOutput) IbeaconFreqMsec() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApBleConfig) *int {
		if v == nil {
			return nil
		}
		return v.IbeaconFreqMsec
	}).(pulumi.IntPtrOutput)
}

// Major number for iBeacon
func (o ApBleConfigPtrOutput) IbeaconMajor() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApBleConfig) *int {
		if v == nil {
			return nil
		}
		return v.IbeaconMajor
	}).(pulumi.IntPtrOutput)
}

// Minor number for iBeacon
func (o ApBleConfigPtrOutput) IbeaconMinor() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApBleConfig) *int {
		if v == nil {
			return nil
		}
		return v.IbeaconMinor
	}).(pulumi.IntPtrOutput)
}

// Optional, if not specified, the same UUID as the beacon will be used
func (o ApBleConfigPtrOutput) IbeaconUuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApBleConfig) *string {
		if v == nil {
			return nil
		}
		return v.IbeaconUuid
	}).(pulumi.StringPtrOutput)
}

// Required if `powerMode`==`custom`; else use `powerMode` as default
func (o ApBleConfigPtrOutput) Power() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApBleConfig) *int {
		if v == nil {
			return nil
		}
		return v.Power
	}).(pulumi.IntPtrOutput)
}

// enum: `custom`, `default`
func (o ApBleConfigPtrOutput) PowerMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApBleConfig) *string {
		if v == nil {
			return nil
		}
		return v.PowerMode
	}).(pulumi.StringPtrOutput)
}

type ApCentrak struct {
	Enabled *bool `pulumi:"enabled"`
}

// ApCentrakInput is an input type that accepts ApCentrakArgs and ApCentrakOutput values.
// You can construct a concrete instance of `ApCentrakInput` via:
//
//	ApCentrakArgs{...}
type ApCentrakInput interface {
	pulumi.Input

	ToApCentrakOutput() ApCentrakOutput
	ToApCentrakOutputWithContext(context.Context) ApCentrakOutput
}

type ApCentrakArgs struct {
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (ApCentrakArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApCentrak)(nil)).Elem()
}

func (i ApCentrakArgs) ToApCentrakOutput() ApCentrakOutput {
	return i.ToApCentrakOutputWithContext(context.Background())
}

func (i ApCentrakArgs) ToApCentrakOutputWithContext(ctx context.Context) ApCentrakOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApCentrakOutput)
}

func (i ApCentrakArgs) ToApCentrakPtrOutput() ApCentrakPtrOutput {
	return i.ToApCentrakPtrOutputWithContext(context.Background())
}

func (i ApCentrakArgs) ToApCentrakPtrOutputWithContext(ctx context.Context) ApCentrakPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApCentrakOutput).ToApCentrakPtrOutputWithContext(ctx)
}

// ApCentrakPtrInput is an input type that accepts ApCentrakArgs, ApCentrakPtr and ApCentrakPtrOutput values.
// You can construct a concrete instance of `ApCentrakPtrInput` via:
//
//	        ApCentrakArgs{...}
//
//	or:
//
//	        nil
type ApCentrakPtrInput interface {
	pulumi.Input

	ToApCentrakPtrOutput() ApCentrakPtrOutput
	ToApCentrakPtrOutputWithContext(context.Context) ApCentrakPtrOutput
}

type apCentrakPtrType ApCentrakArgs

func ApCentrakPtr(v *ApCentrakArgs) ApCentrakPtrInput {
	return (*apCentrakPtrType)(v)
}

func (*apCentrakPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApCentrak)(nil)).Elem()
}

func (i *apCentrakPtrType) ToApCentrakPtrOutput() ApCentrakPtrOutput {
	return i.ToApCentrakPtrOutputWithContext(context.Background())
}

func (i *apCentrakPtrType) ToApCentrakPtrOutputWithContext(ctx context.Context) ApCentrakPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApCentrakPtrOutput)
}

type ApCentrakOutput struct{ *pulumi.OutputState }

func (ApCentrakOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApCentrak)(nil)).Elem()
}

func (o ApCentrakOutput) ToApCentrakOutput() ApCentrakOutput {
	return o
}

func (o ApCentrakOutput) ToApCentrakOutputWithContext(ctx context.Context) ApCentrakOutput {
	return o
}

func (o ApCentrakOutput) ToApCentrakPtrOutput() ApCentrakPtrOutput {
	return o.ToApCentrakPtrOutputWithContext(context.Background())
}

func (o ApCentrakOutput) ToApCentrakPtrOutputWithContext(ctx context.Context) ApCentrakPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApCentrak) *ApCentrak {
		return &v
	}).(ApCentrakPtrOutput)
}

func (o ApCentrakOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApCentrak) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type ApCentrakPtrOutput struct{ *pulumi.OutputState }

func (ApCentrakPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApCentrak)(nil)).Elem()
}

func (o ApCentrakPtrOutput) ToApCentrakPtrOutput() ApCentrakPtrOutput {
	return o
}

func (o ApCentrakPtrOutput) ToApCentrakPtrOutputWithContext(ctx context.Context) ApCentrakPtrOutput {
	return o
}

func (o ApCentrakPtrOutput) Elem() ApCentrakOutput {
	return o.ApplyT(func(v *ApCentrak) ApCentrak {
		if v != nil {
			return *v
		}
		var ret ApCentrak
		return ret
	}).(ApCentrakOutput)
}

func (o ApCentrakPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApCentrak) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type ApClientBridge struct {
	Auth *ApClientBridgeAuth `pulumi:"auth"`
	// When acted as client bridge:
	//   * only 5G radio can be used
	//   * will not serve as AP on any radios
	Enabled *bool   `pulumi:"enabled"`
	Ssid    *string `pulumi:"ssid"`
}

// ApClientBridgeInput is an input type that accepts ApClientBridgeArgs and ApClientBridgeOutput values.
// You can construct a concrete instance of `ApClientBridgeInput` via:
//
//	ApClientBridgeArgs{...}
type ApClientBridgeInput interface {
	pulumi.Input

	ToApClientBridgeOutput() ApClientBridgeOutput
	ToApClientBridgeOutputWithContext(context.Context) ApClientBridgeOutput
}

type ApClientBridgeArgs struct {
	Auth ApClientBridgeAuthPtrInput `pulumi:"auth"`
	// When acted as client bridge:
	//   * only 5G radio can be used
	//   * will not serve as AP on any radios
	Enabled pulumi.BoolPtrInput   `pulumi:"enabled"`
	Ssid    pulumi.StringPtrInput `pulumi:"ssid"`
}

func (ApClientBridgeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApClientBridge)(nil)).Elem()
}

func (i ApClientBridgeArgs) ToApClientBridgeOutput() ApClientBridgeOutput {
	return i.ToApClientBridgeOutputWithContext(context.Background())
}

func (i ApClientBridgeArgs) ToApClientBridgeOutputWithContext(ctx context.Context) ApClientBridgeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApClientBridgeOutput)
}

func (i ApClientBridgeArgs) ToApClientBridgePtrOutput() ApClientBridgePtrOutput {
	return i.ToApClientBridgePtrOutputWithContext(context.Background())
}

func (i ApClientBridgeArgs) ToApClientBridgePtrOutputWithContext(ctx context.Context) ApClientBridgePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApClientBridgeOutput).ToApClientBridgePtrOutputWithContext(ctx)
}

// ApClientBridgePtrInput is an input type that accepts ApClientBridgeArgs, ApClientBridgePtr and ApClientBridgePtrOutput values.
// You can construct a concrete instance of `ApClientBridgePtrInput` via:
//
//	        ApClientBridgeArgs{...}
//
//	or:
//
//	        nil
type ApClientBridgePtrInput interface {
	pulumi.Input

	ToApClientBridgePtrOutput() ApClientBridgePtrOutput
	ToApClientBridgePtrOutputWithContext(context.Context) ApClientBridgePtrOutput
}

type apClientBridgePtrType ApClientBridgeArgs

func ApClientBridgePtr(v *ApClientBridgeArgs) ApClientBridgePtrInput {
	return (*apClientBridgePtrType)(v)
}

func (*apClientBridgePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApClientBridge)(nil)).Elem()
}

func (i *apClientBridgePtrType) ToApClientBridgePtrOutput() ApClientBridgePtrOutput {
	return i.ToApClientBridgePtrOutputWithContext(context.Background())
}

func (i *apClientBridgePtrType) ToApClientBridgePtrOutputWithContext(ctx context.Context) ApClientBridgePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApClientBridgePtrOutput)
}

type ApClientBridgeOutput struct{ *pulumi.OutputState }

func (ApClientBridgeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApClientBridge)(nil)).Elem()
}

func (o ApClientBridgeOutput) ToApClientBridgeOutput() ApClientBridgeOutput {
	return o
}

func (o ApClientBridgeOutput) ToApClientBridgeOutputWithContext(ctx context.Context) ApClientBridgeOutput {
	return o
}

func (o ApClientBridgeOutput) ToApClientBridgePtrOutput() ApClientBridgePtrOutput {
	return o.ToApClientBridgePtrOutputWithContext(context.Background())
}

func (o ApClientBridgeOutput) ToApClientBridgePtrOutputWithContext(ctx context.Context) ApClientBridgePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApClientBridge) *ApClientBridge {
		return &v
	}).(ApClientBridgePtrOutput)
}

func (o ApClientBridgeOutput) Auth() ApClientBridgeAuthPtrOutput {
	return o.ApplyT(func(v ApClientBridge) *ApClientBridgeAuth { return v.Auth }).(ApClientBridgeAuthPtrOutput)
}

// When acted as client bridge:
//   - only 5G radio can be used
//   - will not serve as AP on any radios
func (o ApClientBridgeOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApClientBridge) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

func (o ApClientBridgeOutput) Ssid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApClientBridge) *string { return v.Ssid }).(pulumi.StringPtrOutput)
}

type ApClientBridgePtrOutput struct{ *pulumi.OutputState }

func (ApClientBridgePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApClientBridge)(nil)).Elem()
}

func (o ApClientBridgePtrOutput) ToApClientBridgePtrOutput() ApClientBridgePtrOutput {
	return o
}

func (o ApClientBridgePtrOutput) ToApClientBridgePtrOutputWithContext(ctx context.Context) ApClientBridgePtrOutput {
	return o
}

func (o ApClientBridgePtrOutput) Elem() ApClientBridgeOutput {
	return o.ApplyT(func(v *ApClientBridge) ApClientBridge {
		if v != nil {
			return *v
		}
		var ret ApClientBridge
		return ret
	}).(ApClientBridgeOutput)
}

func (o ApClientBridgePtrOutput) Auth() ApClientBridgeAuthPtrOutput {
	return o.ApplyT(func(v *ApClientBridge) *ApClientBridgeAuth {
		if v == nil {
			return nil
		}
		return v.Auth
	}).(ApClientBridgeAuthPtrOutput)
}

// When acted as client bridge:
//   - only 5G radio can be used
//   - will not serve as AP on any radios
func (o ApClientBridgePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApClientBridge) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

func (o ApClientBridgePtrOutput) Ssid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApClientBridge) *string {
		if v == nil {
			return nil
		}
		return v.Ssid
	}).(pulumi.StringPtrOutput)
}

type ApClientBridgeAuth struct {
	Psk *string `pulumi:"psk"`
	// wpa2-AES/CCMPp is assumed when `type`==`psk`. enum: `open`, `psk`
	Type *string `pulumi:"type"`
}

// ApClientBridgeAuthInput is an input type that accepts ApClientBridgeAuthArgs and ApClientBridgeAuthOutput values.
// You can construct a concrete instance of `ApClientBridgeAuthInput` via:
//
//	ApClientBridgeAuthArgs{...}
type ApClientBridgeAuthInput interface {
	pulumi.Input

	ToApClientBridgeAuthOutput() ApClientBridgeAuthOutput
	ToApClientBridgeAuthOutputWithContext(context.Context) ApClientBridgeAuthOutput
}

type ApClientBridgeAuthArgs struct {
	Psk pulumi.StringPtrInput `pulumi:"psk"`
	// wpa2-AES/CCMPp is assumed when `type`==`psk`. enum: `open`, `psk`
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ApClientBridgeAuthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApClientBridgeAuth)(nil)).Elem()
}

func (i ApClientBridgeAuthArgs) ToApClientBridgeAuthOutput() ApClientBridgeAuthOutput {
	return i.ToApClientBridgeAuthOutputWithContext(context.Background())
}

func (i ApClientBridgeAuthArgs) ToApClientBridgeAuthOutputWithContext(ctx context.Context) ApClientBridgeAuthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApClientBridgeAuthOutput)
}

func (i ApClientBridgeAuthArgs) ToApClientBridgeAuthPtrOutput() ApClientBridgeAuthPtrOutput {
	return i.ToApClientBridgeAuthPtrOutputWithContext(context.Background())
}

func (i ApClientBridgeAuthArgs) ToApClientBridgeAuthPtrOutputWithContext(ctx context.Context) ApClientBridgeAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApClientBridgeAuthOutput).ToApClientBridgeAuthPtrOutputWithContext(ctx)
}

// ApClientBridgeAuthPtrInput is an input type that accepts ApClientBridgeAuthArgs, ApClientBridgeAuthPtr and ApClientBridgeAuthPtrOutput values.
// You can construct a concrete instance of `ApClientBridgeAuthPtrInput` via:
//
//	        ApClientBridgeAuthArgs{...}
//
//	or:
//
//	        nil
type ApClientBridgeAuthPtrInput interface {
	pulumi.Input

	ToApClientBridgeAuthPtrOutput() ApClientBridgeAuthPtrOutput
	ToApClientBridgeAuthPtrOutputWithContext(context.Context) ApClientBridgeAuthPtrOutput
}

type apClientBridgeAuthPtrType ApClientBridgeAuthArgs

func ApClientBridgeAuthPtr(v *ApClientBridgeAuthArgs) ApClientBridgeAuthPtrInput {
	return (*apClientBridgeAuthPtrType)(v)
}

func (*apClientBridgeAuthPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApClientBridgeAuth)(nil)).Elem()
}

func (i *apClientBridgeAuthPtrType) ToApClientBridgeAuthPtrOutput() ApClientBridgeAuthPtrOutput {
	return i.ToApClientBridgeAuthPtrOutputWithContext(context.Background())
}

func (i *apClientBridgeAuthPtrType) ToApClientBridgeAuthPtrOutputWithContext(ctx context.Context) ApClientBridgeAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApClientBridgeAuthPtrOutput)
}

type ApClientBridgeAuthOutput struct{ *pulumi.OutputState }

func (ApClientBridgeAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApClientBridgeAuth)(nil)).Elem()
}

func (o ApClientBridgeAuthOutput) ToApClientBridgeAuthOutput() ApClientBridgeAuthOutput {
	return o
}

func (o ApClientBridgeAuthOutput) ToApClientBridgeAuthOutputWithContext(ctx context.Context) ApClientBridgeAuthOutput {
	return o
}

func (o ApClientBridgeAuthOutput) ToApClientBridgeAuthPtrOutput() ApClientBridgeAuthPtrOutput {
	return o.ToApClientBridgeAuthPtrOutputWithContext(context.Background())
}

func (o ApClientBridgeAuthOutput) ToApClientBridgeAuthPtrOutputWithContext(ctx context.Context) ApClientBridgeAuthPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApClientBridgeAuth) *ApClientBridgeAuth {
		return &v
	}).(ApClientBridgeAuthPtrOutput)
}

func (o ApClientBridgeAuthOutput) Psk() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApClientBridgeAuth) *string { return v.Psk }).(pulumi.StringPtrOutput)
}

// wpa2-AES/CCMPp is assumed when `type`==`psk`. enum: `open`, `psk`
func (o ApClientBridgeAuthOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApClientBridgeAuth) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ApClientBridgeAuthPtrOutput struct{ *pulumi.OutputState }

func (ApClientBridgeAuthPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApClientBridgeAuth)(nil)).Elem()
}

func (o ApClientBridgeAuthPtrOutput) ToApClientBridgeAuthPtrOutput() ApClientBridgeAuthPtrOutput {
	return o
}

func (o ApClientBridgeAuthPtrOutput) ToApClientBridgeAuthPtrOutputWithContext(ctx context.Context) ApClientBridgeAuthPtrOutput {
	return o
}

func (o ApClientBridgeAuthPtrOutput) Elem() ApClientBridgeAuthOutput {
	return o.ApplyT(func(v *ApClientBridgeAuth) ApClientBridgeAuth {
		if v != nil {
			return *v
		}
		var ret ApClientBridgeAuth
		return ret
	}).(ApClientBridgeAuthOutput)
}

func (o ApClientBridgeAuthPtrOutput) Psk() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApClientBridgeAuth) *string {
		if v == nil {
			return nil
		}
		return v.Psk
	}).(pulumi.StringPtrOutput)
}

// wpa2-AES/CCMPp is assumed when `type`==`psk`. enum: `open`, `psk`
func (o ApClientBridgeAuthPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApClientBridgeAuth) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

type ApEslConfig struct {
	// Only if `type`==`imagotag` or `type`==`native`
	Cacert *string `pulumi:"cacert"`
	// Only if `type`==`imagotag` or `type`==`native`
	Channel *int `pulumi:"channel"`
	// usb_config is ignored if eslConfig enabled
	Enabled *bool `pulumi:"enabled"`
	// Only if `type`==`imagotag` or `type`==`native`
	Host *string `pulumi:"host"`
	// Only if `type`==`imagotag` or `type`==`native`
	Port *int `pulumi:"port"`
	// note: bleConfig will be ignored if eslConfig is enabled and with native mode. enum: `hanshow`, `imagotag`, `native`, `solum`
	Type *string `pulumi:"type"`
	// Only if `type`==`imagotag` or `type`==`native`
	VerifyCert *bool `pulumi:"verifyCert"`
	// Only if `type`==`solum` or `type`==`hanshow`
	VlanId *int `pulumi:"vlanId"`
}

// ApEslConfigInput is an input type that accepts ApEslConfigArgs and ApEslConfigOutput values.
// You can construct a concrete instance of `ApEslConfigInput` via:
//
//	ApEslConfigArgs{...}
type ApEslConfigInput interface {
	pulumi.Input

	ToApEslConfigOutput() ApEslConfigOutput
	ToApEslConfigOutputWithContext(context.Context) ApEslConfigOutput
}

type ApEslConfigArgs struct {
	// Only if `type`==`imagotag` or `type`==`native`
	Cacert pulumi.StringPtrInput `pulumi:"cacert"`
	// Only if `type`==`imagotag` or `type`==`native`
	Channel pulumi.IntPtrInput `pulumi:"channel"`
	// usb_config is ignored if eslConfig enabled
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Only if `type`==`imagotag` or `type`==`native`
	Host pulumi.StringPtrInput `pulumi:"host"`
	// Only if `type`==`imagotag` or `type`==`native`
	Port pulumi.IntPtrInput `pulumi:"port"`
	// note: bleConfig will be ignored if eslConfig is enabled and with native mode. enum: `hanshow`, `imagotag`, `native`, `solum`
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Only if `type`==`imagotag` or `type`==`native`
	VerifyCert pulumi.BoolPtrInput `pulumi:"verifyCert"`
	// Only if `type`==`solum` or `type`==`hanshow`
	VlanId pulumi.IntPtrInput `pulumi:"vlanId"`
}

func (ApEslConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApEslConfig)(nil)).Elem()
}

func (i ApEslConfigArgs) ToApEslConfigOutput() ApEslConfigOutput {
	return i.ToApEslConfigOutputWithContext(context.Background())
}

func (i ApEslConfigArgs) ToApEslConfigOutputWithContext(ctx context.Context) ApEslConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApEslConfigOutput)
}

func (i ApEslConfigArgs) ToApEslConfigPtrOutput() ApEslConfigPtrOutput {
	return i.ToApEslConfigPtrOutputWithContext(context.Background())
}

func (i ApEslConfigArgs) ToApEslConfigPtrOutputWithContext(ctx context.Context) ApEslConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApEslConfigOutput).ToApEslConfigPtrOutputWithContext(ctx)
}

// ApEslConfigPtrInput is an input type that accepts ApEslConfigArgs, ApEslConfigPtr and ApEslConfigPtrOutput values.
// You can construct a concrete instance of `ApEslConfigPtrInput` via:
//
//	        ApEslConfigArgs{...}
//
//	or:
//
//	        nil
type ApEslConfigPtrInput interface {
	pulumi.Input

	ToApEslConfigPtrOutput() ApEslConfigPtrOutput
	ToApEslConfigPtrOutputWithContext(context.Context) ApEslConfigPtrOutput
}

type apEslConfigPtrType ApEslConfigArgs

func ApEslConfigPtr(v *ApEslConfigArgs) ApEslConfigPtrInput {
	return (*apEslConfigPtrType)(v)
}

func (*apEslConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApEslConfig)(nil)).Elem()
}

func (i *apEslConfigPtrType) ToApEslConfigPtrOutput() ApEslConfigPtrOutput {
	return i.ToApEslConfigPtrOutputWithContext(context.Background())
}

func (i *apEslConfigPtrType) ToApEslConfigPtrOutputWithContext(ctx context.Context) ApEslConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApEslConfigPtrOutput)
}

type ApEslConfigOutput struct{ *pulumi.OutputState }

func (ApEslConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApEslConfig)(nil)).Elem()
}

func (o ApEslConfigOutput) ToApEslConfigOutput() ApEslConfigOutput {
	return o
}

func (o ApEslConfigOutput) ToApEslConfigOutputWithContext(ctx context.Context) ApEslConfigOutput {
	return o
}

func (o ApEslConfigOutput) ToApEslConfigPtrOutput() ApEslConfigPtrOutput {
	return o.ToApEslConfigPtrOutputWithContext(context.Background())
}

func (o ApEslConfigOutput) ToApEslConfigPtrOutputWithContext(ctx context.Context) ApEslConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApEslConfig) *ApEslConfig {
		return &v
	}).(ApEslConfigPtrOutput)
}

// Only if `type`==`imagotag` or `type`==`native`
func (o ApEslConfigOutput) Cacert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApEslConfig) *string { return v.Cacert }).(pulumi.StringPtrOutput)
}

// Only if `type`==`imagotag` or `type`==`native`
func (o ApEslConfigOutput) Channel() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApEslConfig) *int { return v.Channel }).(pulumi.IntPtrOutput)
}

// usb_config is ignored if eslConfig enabled
func (o ApEslConfigOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApEslConfig) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Only if `type`==`imagotag` or `type`==`native`
func (o ApEslConfigOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApEslConfig) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// Only if `type`==`imagotag` or `type`==`native`
func (o ApEslConfigOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApEslConfig) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// note: bleConfig will be ignored if eslConfig is enabled and with native mode. enum: `hanshow`, `imagotag`, `native`, `solum`
func (o ApEslConfigOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApEslConfig) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Only if `type`==`imagotag` or `type`==`native`
func (o ApEslConfigOutput) VerifyCert() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApEslConfig) *bool { return v.VerifyCert }).(pulumi.BoolPtrOutput)
}

// Only if `type`==`solum` or `type`==`hanshow`
func (o ApEslConfigOutput) VlanId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApEslConfig) *int { return v.VlanId }).(pulumi.IntPtrOutput)
}

type ApEslConfigPtrOutput struct{ *pulumi.OutputState }

func (ApEslConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApEslConfig)(nil)).Elem()
}

func (o ApEslConfigPtrOutput) ToApEslConfigPtrOutput() ApEslConfigPtrOutput {
	return o
}

func (o ApEslConfigPtrOutput) ToApEslConfigPtrOutputWithContext(ctx context.Context) ApEslConfigPtrOutput {
	return o
}

func (o ApEslConfigPtrOutput) Elem() ApEslConfigOutput {
	return o.ApplyT(func(v *ApEslConfig) ApEslConfig {
		if v != nil {
			return *v
		}
		var ret ApEslConfig
		return ret
	}).(ApEslConfigOutput)
}

// Only if `type`==`imagotag` or `type`==`native`
func (o ApEslConfigPtrOutput) Cacert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApEslConfig) *string {
		if v == nil {
			return nil
		}
		return v.Cacert
	}).(pulumi.StringPtrOutput)
}

// Only if `type`==`imagotag` or `type`==`native`
func (o ApEslConfigPtrOutput) Channel() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApEslConfig) *int {
		if v == nil {
			return nil
		}
		return v.Channel
	}).(pulumi.IntPtrOutput)
}

// usb_config is ignored if eslConfig enabled
func (o ApEslConfigPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApEslConfig) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Only if `type`==`imagotag` or `type`==`native`
func (o ApEslConfigPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApEslConfig) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

// Only if `type`==`imagotag` or `type`==`native`
func (o ApEslConfigPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApEslConfig) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

// note: bleConfig will be ignored if eslConfig is enabled and with native mode. enum: `hanshow`, `imagotag`, `native`, `solum`
func (o ApEslConfigPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApEslConfig) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Only if `type`==`imagotag` or `type`==`native`
func (o ApEslConfigPtrOutput) VerifyCert() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApEslConfig) *bool {
		if v == nil {
			return nil
		}
		return v.VerifyCert
	}).(pulumi.BoolPtrOutput)
}

// Only if `type`==`solum` or `type`==`hanshow`
func (o ApEslConfigPtrOutput) VlanId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApEslConfig) *int {
		if v == nil {
			return nil
		}
		return v.VlanId
	}).(pulumi.IntPtrOutput)
}

type ApIpConfig struct {
	// If `type`==`static`
	Dns []string `pulumi:"dns"`
	// Required if `type`==`static`
	DnsSuffixes []string `pulumi:"dnsSuffixes"`
	// Required if `type`==`static`
	Gateway  *string `pulumi:"gateway"`
	Gateway6 *string `pulumi:"gateway6"`
	// Required if `type`==`static`
	Ip  *string `pulumi:"ip"`
	Ip6 *string `pulumi:"ip6"`
	Mtu *int    `pulumi:"mtu"`
	// Required if `type`==`static`
	Netmask  *string `pulumi:"netmask"`
	Netmask6 *string `pulumi:"netmask6"`
	// enum: `dhcp`, `static`
	Type *string `pulumi:"type"`
	// enum: `autoconf`, `dhcp`, `disabled`, `static`
	Type6 *string `pulumi:"type6"`
	// Management VLAN id, default is 1 (untagged)
	VlanId *int `pulumi:"vlanId"`
}

// ApIpConfigInput is an input type that accepts ApIpConfigArgs and ApIpConfigOutput values.
// You can construct a concrete instance of `ApIpConfigInput` via:
//
//	ApIpConfigArgs{...}
type ApIpConfigInput interface {
	pulumi.Input

	ToApIpConfigOutput() ApIpConfigOutput
	ToApIpConfigOutputWithContext(context.Context) ApIpConfigOutput
}

type ApIpConfigArgs struct {
	// If `type`==`static`
	Dns pulumi.StringArrayInput `pulumi:"dns"`
	// Required if `type`==`static`
	DnsSuffixes pulumi.StringArrayInput `pulumi:"dnsSuffixes"`
	// Required if `type`==`static`
	Gateway  pulumi.StringPtrInput `pulumi:"gateway"`
	Gateway6 pulumi.StringPtrInput `pulumi:"gateway6"`
	// Required if `type`==`static`
	Ip  pulumi.StringPtrInput `pulumi:"ip"`
	Ip6 pulumi.StringPtrInput `pulumi:"ip6"`
	Mtu pulumi.IntPtrInput    `pulumi:"mtu"`
	// Required if `type`==`static`
	Netmask  pulumi.StringPtrInput `pulumi:"netmask"`
	Netmask6 pulumi.StringPtrInput `pulumi:"netmask6"`
	// enum: `dhcp`, `static`
	Type pulumi.StringPtrInput `pulumi:"type"`
	// enum: `autoconf`, `dhcp`, `disabled`, `static`
	Type6 pulumi.StringPtrInput `pulumi:"type6"`
	// Management VLAN id, default is 1 (untagged)
	VlanId pulumi.IntPtrInput `pulumi:"vlanId"`
}

func (ApIpConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApIpConfig)(nil)).Elem()
}

func (i ApIpConfigArgs) ToApIpConfigOutput() ApIpConfigOutput {
	return i.ToApIpConfigOutputWithContext(context.Background())
}

func (i ApIpConfigArgs) ToApIpConfigOutputWithContext(ctx context.Context) ApIpConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApIpConfigOutput)
}

func (i ApIpConfigArgs) ToApIpConfigPtrOutput() ApIpConfigPtrOutput {
	return i.ToApIpConfigPtrOutputWithContext(context.Background())
}

func (i ApIpConfigArgs) ToApIpConfigPtrOutputWithContext(ctx context.Context) ApIpConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApIpConfigOutput).ToApIpConfigPtrOutputWithContext(ctx)
}

// ApIpConfigPtrInput is an input type that accepts ApIpConfigArgs, ApIpConfigPtr and ApIpConfigPtrOutput values.
// You can construct a concrete instance of `ApIpConfigPtrInput` via:
//
//	        ApIpConfigArgs{...}
//
//	or:
//
//	        nil
type ApIpConfigPtrInput interface {
	pulumi.Input

	ToApIpConfigPtrOutput() ApIpConfigPtrOutput
	ToApIpConfigPtrOutputWithContext(context.Context) ApIpConfigPtrOutput
}

type apIpConfigPtrType ApIpConfigArgs

func ApIpConfigPtr(v *ApIpConfigArgs) ApIpConfigPtrInput {
	return (*apIpConfigPtrType)(v)
}

func (*apIpConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApIpConfig)(nil)).Elem()
}

func (i *apIpConfigPtrType) ToApIpConfigPtrOutput() ApIpConfigPtrOutput {
	return i.ToApIpConfigPtrOutputWithContext(context.Background())
}

func (i *apIpConfigPtrType) ToApIpConfigPtrOutputWithContext(ctx context.Context) ApIpConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApIpConfigPtrOutput)
}

type ApIpConfigOutput struct{ *pulumi.OutputState }

func (ApIpConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApIpConfig)(nil)).Elem()
}

func (o ApIpConfigOutput) ToApIpConfigOutput() ApIpConfigOutput {
	return o
}

func (o ApIpConfigOutput) ToApIpConfigOutputWithContext(ctx context.Context) ApIpConfigOutput {
	return o
}

func (o ApIpConfigOutput) ToApIpConfigPtrOutput() ApIpConfigPtrOutput {
	return o.ToApIpConfigPtrOutputWithContext(context.Background())
}

func (o ApIpConfigOutput) ToApIpConfigPtrOutputWithContext(ctx context.Context) ApIpConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApIpConfig) *ApIpConfig {
		return &v
	}).(ApIpConfigPtrOutput)
}

// If `type`==`static`
func (o ApIpConfigOutput) Dns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApIpConfig) []string { return v.Dns }).(pulumi.StringArrayOutput)
}

// Required if `type`==`static`
func (o ApIpConfigOutput) DnsSuffixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApIpConfig) []string { return v.DnsSuffixes }).(pulumi.StringArrayOutput)
}

// Required if `type`==`static`
func (o ApIpConfigOutput) Gateway() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApIpConfig) *string { return v.Gateway }).(pulumi.StringPtrOutput)
}

func (o ApIpConfigOutput) Gateway6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApIpConfig) *string { return v.Gateway6 }).(pulumi.StringPtrOutput)
}

// Required if `type`==`static`
func (o ApIpConfigOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApIpConfig) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

func (o ApIpConfigOutput) Ip6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApIpConfig) *string { return v.Ip6 }).(pulumi.StringPtrOutput)
}

func (o ApIpConfigOutput) Mtu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApIpConfig) *int { return v.Mtu }).(pulumi.IntPtrOutput)
}

// Required if `type`==`static`
func (o ApIpConfigOutput) Netmask() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApIpConfig) *string { return v.Netmask }).(pulumi.StringPtrOutput)
}

func (o ApIpConfigOutput) Netmask6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApIpConfig) *string { return v.Netmask6 }).(pulumi.StringPtrOutput)
}

// enum: `dhcp`, `static`
func (o ApIpConfigOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApIpConfig) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// enum: `autoconf`, `dhcp`, `disabled`, `static`
func (o ApIpConfigOutput) Type6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApIpConfig) *string { return v.Type6 }).(pulumi.StringPtrOutput)
}

// Management VLAN id, default is 1 (untagged)
func (o ApIpConfigOutput) VlanId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApIpConfig) *int { return v.VlanId }).(pulumi.IntPtrOutput)
}

type ApIpConfigPtrOutput struct{ *pulumi.OutputState }

func (ApIpConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApIpConfig)(nil)).Elem()
}

func (o ApIpConfigPtrOutput) ToApIpConfigPtrOutput() ApIpConfigPtrOutput {
	return o
}

func (o ApIpConfigPtrOutput) ToApIpConfigPtrOutputWithContext(ctx context.Context) ApIpConfigPtrOutput {
	return o
}

func (o ApIpConfigPtrOutput) Elem() ApIpConfigOutput {
	return o.ApplyT(func(v *ApIpConfig) ApIpConfig {
		if v != nil {
			return *v
		}
		var ret ApIpConfig
		return ret
	}).(ApIpConfigOutput)
}

// If `type`==`static`
func (o ApIpConfigPtrOutput) Dns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApIpConfig) []string {
		if v == nil {
			return nil
		}
		return v.Dns
	}).(pulumi.StringArrayOutput)
}

// Required if `type`==`static`
func (o ApIpConfigPtrOutput) DnsSuffixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApIpConfig) []string {
		if v == nil {
			return nil
		}
		return v.DnsSuffixes
	}).(pulumi.StringArrayOutput)
}

// Required if `type`==`static`
func (o ApIpConfigPtrOutput) Gateway() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApIpConfig) *string {
		if v == nil {
			return nil
		}
		return v.Gateway
	}).(pulumi.StringPtrOutput)
}

func (o ApIpConfigPtrOutput) Gateway6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApIpConfig) *string {
		if v == nil {
			return nil
		}
		return v.Gateway6
	}).(pulumi.StringPtrOutput)
}

// Required if `type`==`static`
func (o ApIpConfigPtrOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApIpConfig) *string {
		if v == nil {
			return nil
		}
		return v.Ip
	}).(pulumi.StringPtrOutput)
}

func (o ApIpConfigPtrOutput) Ip6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApIpConfig) *string {
		if v == nil {
			return nil
		}
		return v.Ip6
	}).(pulumi.StringPtrOutput)
}

func (o ApIpConfigPtrOutput) Mtu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApIpConfig) *int {
		if v == nil {
			return nil
		}
		return v.Mtu
	}).(pulumi.IntPtrOutput)
}

// Required if `type`==`static`
func (o ApIpConfigPtrOutput) Netmask() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApIpConfig) *string {
		if v == nil {
			return nil
		}
		return v.Netmask
	}).(pulumi.StringPtrOutput)
}

func (o ApIpConfigPtrOutput) Netmask6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApIpConfig) *string {
		if v == nil {
			return nil
		}
		return v.Netmask6
	}).(pulumi.StringPtrOutput)
}

// enum: `dhcp`, `static`
func (o ApIpConfigPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApIpConfig) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// enum: `autoconf`, `dhcp`, `disabled`, `static`
func (o ApIpConfigPtrOutput) Type6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApIpConfig) *string {
		if v == nil {
			return nil
		}
		return v.Type6
	}).(pulumi.StringPtrOutput)
}

// Management VLAN id, default is 1 (untagged)
func (o ApIpConfigPtrOutput) VlanId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApIpConfig) *int {
		if v == nil {
			return nil
		}
		return v.VlanId
	}).(pulumi.IntPtrOutput)
}

type ApLacpConfig struct {
	Enabled *bool `pulumi:"enabled"`
}

// ApLacpConfigInput is an input type that accepts ApLacpConfigArgs and ApLacpConfigOutput values.
// You can construct a concrete instance of `ApLacpConfigInput` via:
//
//	ApLacpConfigArgs{...}
type ApLacpConfigInput interface {
	pulumi.Input

	ToApLacpConfigOutput() ApLacpConfigOutput
	ToApLacpConfigOutputWithContext(context.Context) ApLacpConfigOutput
}

type ApLacpConfigArgs struct {
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (ApLacpConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApLacpConfig)(nil)).Elem()
}

func (i ApLacpConfigArgs) ToApLacpConfigOutput() ApLacpConfigOutput {
	return i.ToApLacpConfigOutputWithContext(context.Background())
}

func (i ApLacpConfigArgs) ToApLacpConfigOutputWithContext(ctx context.Context) ApLacpConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApLacpConfigOutput)
}

func (i ApLacpConfigArgs) ToApLacpConfigPtrOutput() ApLacpConfigPtrOutput {
	return i.ToApLacpConfigPtrOutputWithContext(context.Background())
}

func (i ApLacpConfigArgs) ToApLacpConfigPtrOutputWithContext(ctx context.Context) ApLacpConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApLacpConfigOutput).ToApLacpConfigPtrOutputWithContext(ctx)
}

// ApLacpConfigPtrInput is an input type that accepts ApLacpConfigArgs, ApLacpConfigPtr and ApLacpConfigPtrOutput values.
// You can construct a concrete instance of `ApLacpConfigPtrInput` via:
//
//	        ApLacpConfigArgs{...}
//
//	or:
//
//	        nil
type ApLacpConfigPtrInput interface {
	pulumi.Input

	ToApLacpConfigPtrOutput() ApLacpConfigPtrOutput
	ToApLacpConfigPtrOutputWithContext(context.Context) ApLacpConfigPtrOutput
}

type apLacpConfigPtrType ApLacpConfigArgs

func ApLacpConfigPtr(v *ApLacpConfigArgs) ApLacpConfigPtrInput {
	return (*apLacpConfigPtrType)(v)
}

func (*apLacpConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApLacpConfig)(nil)).Elem()
}

func (i *apLacpConfigPtrType) ToApLacpConfigPtrOutput() ApLacpConfigPtrOutput {
	return i.ToApLacpConfigPtrOutputWithContext(context.Background())
}

func (i *apLacpConfigPtrType) ToApLacpConfigPtrOutputWithContext(ctx context.Context) ApLacpConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApLacpConfigPtrOutput)
}

type ApLacpConfigOutput struct{ *pulumi.OutputState }

func (ApLacpConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApLacpConfig)(nil)).Elem()
}

func (o ApLacpConfigOutput) ToApLacpConfigOutput() ApLacpConfigOutput {
	return o
}

func (o ApLacpConfigOutput) ToApLacpConfigOutputWithContext(ctx context.Context) ApLacpConfigOutput {
	return o
}

func (o ApLacpConfigOutput) ToApLacpConfigPtrOutput() ApLacpConfigPtrOutput {
	return o.ToApLacpConfigPtrOutputWithContext(context.Background())
}

func (o ApLacpConfigOutput) ToApLacpConfigPtrOutputWithContext(ctx context.Context) ApLacpConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApLacpConfig) *ApLacpConfig {
		return &v
	}).(ApLacpConfigPtrOutput)
}

func (o ApLacpConfigOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApLacpConfig) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type ApLacpConfigPtrOutput struct{ *pulumi.OutputState }

func (ApLacpConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApLacpConfig)(nil)).Elem()
}

func (o ApLacpConfigPtrOutput) ToApLacpConfigPtrOutput() ApLacpConfigPtrOutput {
	return o
}

func (o ApLacpConfigPtrOutput) ToApLacpConfigPtrOutputWithContext(ctx context.Context) ApLacpConfigPtrOutput {
	return o
}

func (o ApLacpConfigPtrOutput) Elem() ApLacpConfigOutput {
	return o.ApplyT(func(v *ApLacpConfig) ApLacpConfig {
		if v != nil {
			return *v
		}
		var ret ApLacpConfig
		return ret
	}).(ApLacpConfigOutput)
}

func (o ApLacpConfigPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApLacpConfig) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type ApLed struct {
	Brightness *int  `pulumi:"brightness"`
	Enabled    *bool `pulumi:"enabled"`
}

// ApLedInput is an input type that accepts ApLedArgs and ApLedOutput values.
// You can construct a concrete instance of `ApLedInput` via:
//
//	ApLedArgs{...}
type ApLedInput interface {
	pulumi.Input

	ToApLedOutput() ApLedOutput
	ToApLedOutputWithContext(context.Context) ApLedOutput
}

type ApLedArgs struct {
	Brightness pulumi.IntPtrInput  `pulumi:"brightness"`
	Enabled    pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (ApLedArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApLed)(nil)).Elem()
}

func (i ApLedArgs) ToApLedOutput() ApLedOutput {
	return i.ToApLedOutputWithContext(context.Background())
}

func (i ApLedArgs) ToApLedOutputWithContext(ctx context.Context) ApLedOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApLedOutput)
}

func (i ApLedArgs) ToApLedPtrOutput() ApLedPtrOutput {
	return i.ToApLedPtrOutputWithContext(context.Background())
}

func (i ApLedArgs) ToApLedPtrOutputWithContext(ctx context.Context) ApLedPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApLedOutput).ToApLedPtrOutputWithContext(ctx)
}

// ApLedPtrInput is an input type that accepts ApLedArgs, ApLedPtr and ApLedPtrOutput values.
// You can construct a concrete instance of `ApLedPtrInput` via:
//
//	        ApLedArgs{...}
//
//	or:
//
//	        nil
type ApLedPtrInput interface {
	pulumi.Input

	ToApLedPtrOutput() ApLedPtrOutput
	ToApLedPtrOutputWithContext(context.Context) ApLedPtrOutput
}

type apLedPtrType ApLedArgs

func ApLedPtr(v *ApLedArgs) ApLedPtrInput {
	return (*apLedPtrType)(v)
}

func (*apLedPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApLed)(nil)).Elem()
}

func (i *apLedPtrType) ToApLedPtrOutput() ApLedPtrOutput {
	return i.ToApLedPtrOutputWithContext(context.Background())
}

func (i *apLedPtrType) ToApLedPtrOutputWithContext(ctx context.Context) ApLedPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApLedPtrOutput)
}

type ApLedOutput struct{ *pulumi.OutputState }

func (ApLedOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApLed)(nil)).Elem()
}

func (o ApLedOutput) ToApLedOutput() ApLedOutput {
	return o
}

func (o ApLedOutput) ToApLedOutputWithContext(ctx context.Context) ApLedOutput {
	return o
}

func (o ApLedOutput) ToApLedPtrOutput() ApLedPtrOutput {
	return o.ToApLedPtrOutputWithContext(context.Background())
}

func (o ApLedOutput) ToApLedPtrOutputWithContext(ctx context.Context) ApLedPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApLed) *ApLed {
		return &v
	}).(ApLedPtrOutput)
}

func (o ApLedOutput) Brightness() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApLed) *int { return v.Brightness }).(pulumi.IntPtrOutput)
}

func (o ApLedOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApLed) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type ApLedPtrOutput struct{ *pulumi.OutputState }

func (ApLedPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApLed)(nil)).Elem()
}

func (o ApLedPtrOutput) ToApLedPtrOutput() ApLedPtrOutput {
	return o
}

func (o ApLedPtrOutput) ToApLedPtrOutputWithContext(ctx context.Context) ApLedPtrOutput {
	return o
}

func (o ApLedPtrOutput) Elem() ApLedOutput {
	return o.ApplyT(func(v *ApLed) ApLed {
		if v != nil {
			return *v
		}
		var ret ApLed
		return ret
	}).(ApLedOutput)
}

func (o ApLedPtrOutput) Brightness() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApLed) *int {
		if v == nil {
			return nil
		}
		return v.Brightness
	}).(pulumi.IntPtrOutput)
}

func (o ApLedPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApLed) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type ApMesh struct {
	// List of bands that the mesh should apply to. For relay, the first viable one will be picked. For relay, the first viable one will be picked. enum: `24`, `5`, `6`
	Bands []string `pulumi:"bands"`
	// Whether mesh is enabled on this AP
	Enabled *bool `pulumi:"enabled"`
	// Mesh group, base AP(s) will only allow remote AP(s) in the same mesh group to join, 1-9, optional
	Group *int `pulumi:"group"`
	// enum: `base`, `remote`
	Role *string `pulumi:"role"`
}

// ApMeshInput is an input type that accepts ApMeshArgs and ApMeshOutput values.
// You can construct a concrete instance of `ApMeshInput` via:
//
//	ApMeshArgs{...}
type ApMeshInput interface {
	pulumi.Input

	ToApMeshOutput() ApMeshOutput
	ToApMeshOutputWithContext(context.Context) ApMeshOutput
}

type ApMeshArgs struct {
	// List of bands that the mesh should apply to. For relay, the first viable one will be picked. For relay, the first viable one will be picked. enum: `24`, `5`, `6`
	Bands pulumi.StringArrayInput `pulumi:"bands"`
	// Whether mesh is enabled on this AP
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Mesh group, base AP(s) will only allow remote AP(s) in the same mesh group to join, 1-9, optional
	Group pulumi.IntPtrInput `pulumi:"group"`
	// enum: `base`, `remote`
	Role pulumi.StringPtrInput `pulumi:"role"`
}

func (ApMeshArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApMesh)(nil)).Elem()
}

func (i ApMeshArgs) ToApMeshOutput() ApMeshOutput {
	return i.ToApMeshOutputWithContext(context.Background())
}

func (i ApMeshArgs) ToApMeshOutputWithContext(ctx context.Context) ApMeshOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApMeshOutput)
}

func (i ApMeshArgs) ToApMeshPtrOutput() ApMeshPtrOutput {
	return i.ToApMeshPtrOutputWithContext(context.Background())
}

func (i ApMeshArgs) ToApMeshPtrOutputWithContext(ctx context.Context) ApMeshPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApMeshOutput).ToApMeshPtrOutputWithContext(ctx)
}

// ApMeshPtrInput is an input type that accepts ApMeshArgs, ApMeshPtr and ApMeshPtrOutput values.
// You can construct a concrete instance of `ApMeshPtrInput` via:
//
//	        ApMeshArgs{...}
//
//	or:
//
//	        nil
type ApMeshPtrInput interface {
	pulumi.Input

	ToApMeshPtrOutput() ApMeshPtrOutput
	ToApMeshPtrOutputWithContext(context.Context) ApMeshPtrOutput
}

type apMeshPtrType ApMeshArgs

func ApMeshPtr(v *ApMeshArgs) ApMeshPtrInput {
	return (*apMeshPtrType)(v)
}

func (*apMeshPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApMesh)(nil)).Elem()
}

func (i *apMeshPtrType) ToApMeshPtrOutput() ApMeshPtrOutput {
	return i.ToApMeshPtrOutputWithContext(context.Background())
}

func (i *apMeshPtrType) ToApMeshPtrOutputWithContext(ctx context.Context) ApMeshPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApMeshPtrOutput)
}

type ApMeshOutput struct{ *pulumi.OutputState }

func (ApMeshOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApMesh)(nil)).Elem()
}

func (o ApMeshOutput) ToApMeshOutput() ApMeshOutput {
	return o
}

func (o ApMeshOutput) ToApMeshOutputWithContext(ctx context.Context) ApMeshOutput {
	return o
}

func (o ApMeshOutput) ToApMeshPtrOutput() ApMeshPtrOutput {
	return o.ToApMeshPtrOutputWithContext(context.Background())
}

func (o ApMeshOutput) ToApMeshPtrOutputWithContext(ctx context.Context) ApMeshPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApMesh) *ApMesh {
		return &v
	}).(ApMeshPtrOutput)
}

// List of bands that the mesh should apply to. For relay, the first viable one will be picked. For relay, the first viable one will be picked. enum: `24`, `5`, `6`
func (o ApMeshOutput) Bands() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApMesh) []string { return v.Bands }).(pulumi.StringArrayOutput)
}

// Whether mesh is enabled on this AP
func (o ApMeshOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApMesh) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Mesh group, base AP(s) will only allow remote AP(s) in the same mesh group to join, 1-9, optional
func (o ApMeshOutput) Group() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApMesh) *int { return v.Group }).(pulumi.IntPtrOutput)
}

// enum: `base`, `remote`
func (o ApMeshOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApMesh) *string { return v.Role }).(pulumi.StringPtrOutput)
}

type ApMeshPtrOutput struct{ *pulumi.OutputState }

func (ApMeshPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApMesh)(nil)).Elem()
}

func (o ApMeshPtrOutput) ToApMeshPtrOutput() ApMeshPtrOutput {
	return o
}

func (o ApMeshPtrOutput) ToApMeshPtrOutputWithContext(ctx context.Context) ApMeshPtrOutput {
	return o
}

func (o ApMeshPtrOutput) Elem() ApMeshOutput {
	return o.ApplyT(func(v *ApMesh) ApMesh {
		if v != nil {
			return *v
		}
		var ret ApMesh
		return ret
	}).(ApMeshOutput)
}

// List of bands that the mesh should apply to. For relay, the first viable one will be picked. For relay, the first viable one will be picked. enum: `24`, `5`, `6`
func (o ApMeshPtrOutput) Bands() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApMesh) []string {
		if v == nil {
			return nil
		}
		return v.Bands
	}).(pulumi.StringArrayOutput)
}

// Whether mesh is enabled on this AP
func (o ApMeshPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApMesh) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Mesh group, base AP(s) will only allow remote AP(s) in the same mesh group to join, 1-9, optional
func (o ApMeshPtrOutput) Group() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApMesh) *int {
		if v == nil {
			return nil
		}
		return v.Group
	}).(pulumi.IntPtrOutput)
}

// enum: `base`, `remote`
func (o ApMeshPtrOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApMesh) *string {
		if v == nil {
			return nil
		}
		return v.Role
	}).(pulumi.StringPtrOutput)
}

type ApPwrConfig struct {
	// Additional power to request during negotiating with PSE over PoE, in mW
	Base *int `pulumi:"base"`
	// Whether to enable power out to peripheral, meanwhile will reduce power to Wi-Fi (only for AP45 at power mode)
	PreferUsbOverWifi *bool `pulumi:"preferUsbOverWifi"`
}

// ApPwrConfigInput is an input type that accepts ApPwrConfigArgs and ApPwrConfigOutput values.
// You can construct a concrete instance of `ApPwrConfigInput` via:
//
//	ApPwrConfigArgs{...}
type ApPwrConfigInput interface {
	pulumi.Input

	ToApPwrConfigOutput() ApPwrConfigOutput
	ToApPwrConfigOutputWithContext(context.Context) ApPwrConfigOutput
}

type ApPwrConfigArgs struct {
	// Additional power to request during negotiating with PSE over PoE, in mW
	Base pulumi.IntPtrInput `pulumi:"base"`
	// Whether to enable power out to peripheral, meanwhile will reduce power to Wi-Fi (only for AP45 at power mode)
	PreferUsbOverWifi pulumi.BoolPtrInput `pulumi:"preferUsbOverWifi"`
}

func (ApPwrConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApPwrConfig)(nil)).Elem()
}

func (i ApPwrConfigArgs) ToApPwrConfigOutput() ApPwrConfigOutput {
	return i.ToApPwrConfigOutputWithContext(context.Background())
}

func (i ApPwrConfigArgs) ToApPwrConfigOutputWithContext(ctx context.Context) ApPwrConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApPwrConfigOutput)
}

func (i ApPwrConfigArgs) ToApPwrConfigPtrOutput() ApPwrConfigPtrOutput {
	return i.ToApPwrConfigPtrOutputWithContext(context.Background())
}

func (i ApPwrConfigArgs) ToApPwrConfigPtrOutputWithContext(ctx context.Context) ApPwrConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApPwrConfigOutput).ToApPwrConfigPtrOutputWithContext(ctx)
}

// ApPwrConfigPtrInput is an input type that accepts ApPwrConfigArgs, ApPwrConfigPtr and ApPwrConfigPtrOutput values.
// You can construct a concrete instance of `ApPwrConfigPtrInput` via:
//
//	        ApPwrConfigArgs{...}
//
//	or:
//
//	        nil
type ApPwrConfigPtrInput interface {
	pulumi.Input

	ToApPwrConfigPtrOutput() ApPwrConfigPtrOutput
	ToApPwrConfigPtrOutputWithContext(context.Context) ApPwrConfigPtrOutput
}

type apPwrConfigPtrType ApPwrConfigArgs

func ApPwrConfigPtr(v *ApPwrConfigArgs) ApPwrConfigPtrInput {
	return (*apPwrConfigPtrType)(v)
}

func (*apPwrConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApPwrConfig)(nil)).Elem()
}

func (i *apPwrConfigPtrType) ToApPwrConfigPtrOutput() ApPwrConfigPtrOutput {
	return i.ToApPwrConfigPtrOutputWithContext(context.Background())
}

func (i *apPwrConfigPtrType) ToApPwrConfigPtrOutputWithContext(ctx context.Context) ApPwrConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApPwrConfigPtrOutput)
}

type ApPwrConfigOutput struct{ *pulumi.OutputState }

func (ApPwrConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApPwrConfig)(nil)).Elem()
}

func (o ApPwrConfigOutput) ToApPwrConfigOutput() ApPwrConfigOutput {
	return o
}

func (o ApPwrConfigOutput) ToApPwrConfigOutputWithContext(ctx context.Context) ApPwrConfigOutput {
	return o
}

func (o ApPwrConfigOutput) ToApPwrConfigPtrOutput() ApPwrConfigPtrOutput {
	return o.ToApPwrConfigPtrOutputWithContext(context.Background())
}

func (o ApPwrConfigOutput) ToApPwrConfigPtrOutputWithContext(ctx context.Context) ApPwrConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApPwrConfig) *ApPwrConfig {
		return &v
	}).(ApPwrConfigPtrOutput)
}

// Additional power to request during negotiating with PSE over PoE, in mW
func (o ApPwrConfigOutput) Base() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApPwrConfig) *int { return v.Base }).(pulumi.IntPtrOutput)
}

// Whether to enable power out to peripheral, meanwhile will reduce power to Wi-Fi (only for AP45 at power mode)
func (o ApPwrConfigOutput) PreferUsbOverWifi() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApPwrConfig) *bool { return v.PreferUsbOverWifi }).(pulumi.BoolPtrOutput)
}

type ApPwrConfigPtrOutput struct{ *pulumi.OutputState }

func (ApPwrConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApPwrConfig)(nil)).Elem()
}

func (o ApPwrConfigPtrOutput) ToApPwrConfigPtrOutput() ApPwrConfigPtrOutput {
	return o
}

func (o ApPwrConfigPtrOutput) ToApPwrConfigPtrOutputWithContext(ctx context.Context) ApPwrConfigPtrOutput {
	return o
}

func (o ApPwrConfigPtrOutput) Elem() ApPwrConfigOutput {
	return o.ApplyT(func(v *ApPwrConfig) ApPwrConfig {
		if v != nil {
			return *v
		}
		var ret ApPwrConfig
		return ret
	}).(ApPwrConfigOutput)
}

// Additional power to request during negotiating with PSE over PoE, in mW
func (o ApPwrConfigPtrOutput) Base() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApPwrConfig) *int {
		if v == nil {
			return nil
		}
		return v.Base
	}).(pulumi.IntPtrOutput)
}

// Whether to enable power out to peripheral, meanwhile will reduce power to Wi-Fi (only for AP45 at power mode)
func (o ApPwrConfigPtrOutput) PreferUsbOverWifi() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApPwrConfig) *bool {
		if v == nil {
			return nil
		}
		return v.PreferUsbOverWifi
	}).(pulumi.BoolPtrOutput)
}

type ApRadioConfig struct {
	AllowRrmDisable *bool `pulumi:"allowRrmDisable"`
	// Antenna gain for 2.4G - for models with external antenna only
	AntGain24 *int `pulumi:"antGain24"`
	// Antenna gain for 5G - for models with external antenna only
	AntGain5 *int `pulumi:"antGain5"`
	// Antenna gain for 6G - for models with external antenna only
	AntGain6 *int `pulumi:"antGain6"`
	// enum: `1x1`, `2x2`, `3x3`, `4x4`, `default`
	AntennaMode *string `pulumi:"antennaMode"`
	// Radio Band AP settings
	Band24 *ApRadioConfigBand24 `pulumi:"band24"`
	// enum: `24`, `5`, `6`, `auto`
	Band24Usage *string `pulumi:"band24Usage"`
	// Radio Band AP settings
	Band5 *ApRadioConfigBand5 `pulumi:"band5"`
	// Radio Band AP settings
	Band5On24Radio *ApRadioConfigBand5On24Radio `pulumi:"band5On24Radio"`
	// Radio Band AP settings
	Band6 *ApRadioConfigBand6 `pulumi:"band6"`
	// To make an outdoor operate indoor. For an outdoor-ap, some channels are disallowed by default, this allows the user to use it as an indoor-ap
	IndoorUse *bool `pulumi:"indoorUse"`
	// Whether scanning radio is enabled
	ScanningEnabled *bool `pulumi:"scanningEnabled"`
}

// ApRadioConfigInput is an input type that accepts ApRadioConfigArgs and ApRadioConfigOutput values.
// You can construct a concrete instance of `ApRadioConfigInput` via:
//
//	ApRadioConfigArgs{...}
type ApRadioConfigInput interface {
	pulumi.Input

	ToApRadioConfigOutput() ApRadioConfigOutput
	ToApRadioConfigOutputWithContext(context.Context) ApRadioConfigOutput
}

type ApRadioConfigArgs struct {
	AllowRrmDisable pulumi.BoolPtrInput `pulumi:"allowRrmDisable"`
	// Antenna gain for 2.4G - for models with external antenna only
	AntGain24 pulumi.IntPtrInput `pulumi:"antGain24"`
	// Antenna gain for 5G - for models with external antenna only
	AntGain5 pulumi.IntPtrInput `pulumi:"antGain5"`
	// Antenna gain for 6G - for models with external antenna only
	AntGain6 pulumi.IntPtrInput `pulumi:"antGain6"`
	// enum: `1x1`, `2x2`, `3x3`, `4x4`, `default`
	AntennaMode pulumi.StringPtrInput `pulumi:"antennaMode"`
	// Radio Band AP settings
	Band24 ApRadioConfigBand24PtrInput `pulumi:"band24"`
	// enum: `24`, `5`, `6`, `auto`
	Band24Usage pulumi.StringPtrInput `pulumi:"band24Usage"`
	// Radio Band AP settings
	Band5 ApRadioConfigBand5PtrInput `pulumi:"band5"`
	// Radio Band AP settings
	Band5On24Radio ApRadioConfigBand5On24RadioPtrInput `pulumi:"band5On24Radio"`
	// Radio Band AP settings
	Band6 ApRadioConfigBand6PtrInput `pulumi:"band6"`
	// To make an outdoor operate indoor. For an outdoor-ap, some channels are disallowed by default, this allows the user to use it as an indoor-ap
	IndoorUse pulumi.BoolPtrInput `pulumi:"indoorUse"`
	// Whether scanning radio is enabled
	ScanningEnabled pulumi.BoolPtrInput `pulumi:"scanningEnabled"`
}

func (ApRadioConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApRadioConfig)(nil)).Elem()
}

func (i ApRadioConfigArgs) ToApRadioConfigOutput() ApRadioConfigOutput {
	return i.ToApRadioConfigOutputWithContext(context.Background())
}

func (i ApRadioConfigArgs) ToApRadioConfigOutputWithContext(ctx context.Context) ApRadioConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApRadioConfigOutput)
}

func (i ApRadioConfigArgs) ToApRadioConfigPtrOutput() ApRadioConfigPtrOutput {
	return i.ToApRadioConfigPtrOutputWithContext(context.Background())
}

func (i ApRadioConfigArgs) ToApRadioConfigPtrOutputWithContext(ctx context.Context) ApRadioConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApRadioConfigOutput).ToApRadioConfigPtrOutputWithContext(ctx)
}

// ApRadioConfigPtrInput is an input type that accepts ApRadioConfigArgs, ApRadioConfigPtr and ApRadioConfigPtrOutput values.
// You can construct a concrete instance of `ApRadioConfigPtrInput` via:
//
//	        ApRadioConfigArgs{...}
//
//	or:
//
//	        nil
type ApRadioConfigPtrInput interface {
	pulumi.Input

	ToApRadioConfigPtrOutput() ApRadioConfigPtrOutput
	ToApRadioConfigPtrOutputWithContext(context.Context) ApRadioConfigPtrOutput
}

type apRadioConfigPtrType ApRadioConfigArgs

func ApRadioConfigPtr(v *ApRadioConfigArgs) ApRadioConfigPtrInput {
	return (*apRadioConfigPtrType)(v)
}

func (*apRadioConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApRadioConfig)(nil)).Elem()
}

func (i *apRadioConfigPtrType) ToApRadioConfigPtrOutput() ApRadioConfigPtrOutput {
	return i.ToApRadioConfigPtrOutputWithContext(context.Background())
}

func (i *apRadioConfigPtrType) ToApRadioConfigPtrOutputWithContext(ctx context.Context) ApRadioConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApRadioConfigPtrOutput)
}

type ApRadioConfigOutput struct{ *pulumi.OutputState }

func (ApRadioConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApRadioConfig)(nil)).Elem()
}

func (o ApRadioConfigOutput) ToApRadioConfigOutput() ApRadioConfigOutput {
	return o
}

func (o ApRadioConfigOutput) ToApRadioConfigOutputWithContext(ctx context.Context) ApRadioConfigOutput {
	return o
}

func (o ApRadioConfigOutput) ToApRadioConfigPtrOutput() ApRadioConfigPtrOutput {
	return o.ToApRadioConfigPtrOutputWithContext(context.Background())
}

func (o ApRadioConfigOutput) ToApRadioConfigPtrOutputWithContext(ctx context.Context) ApRadioConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApRadioConfig) *ApRadioConfig {
		return &v
	}).(ApRadioConfigPtrOutput)
}

func (o ApRadioConfigOutput) AllowRrmDisable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApRadioConfig) *bool { return v.AllowRrmDisable }).(pulumi.BoolPtrOutput)
}

// Antenna gain for 2.4G - for models with external antenna only
func (o ApRadioConfigOutput) AntGain24() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApRadioConfig) *int { return v.AntGain24 }).(pulumi.IntPtrOutput)
}

// Antenna gain for 5G - for models with external antenna only
func (o ApRadioConfigOutput) AntGain5() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApRadioConfig) *int { return v.AntGain5 }).(pulumi.IntPtrOutput)
}

// Antenna gain for 6G - for models with external antenna only
func (o ApRadioConfigOutput) AntGain6() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApRadioConfig) *int { return v.AntGain6 }).(pulumi.IntPtrOutput)
}

// enum: `1x1`, `2x2`, `3x3`, `4x4`, `default`
func (o ApRadioConfigOutput) AntennaMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApRadioConfig) *string { return v.AntennaMode }).(pulumi.StringPtrOutput)
}

// Radio Band AP settings
func (o ApRadioConfigOutput) Band24() ApRadioConfigBand24PtrOutput {
	return o.ApplyT(func(v ApRadioConfig) *ApRadioConfigBand24 { return v.Band24 }).(ApRadioConfigBand24PtrOutput)
}

// enum: `24`, `5`, `6`, `auto`
func (o ApRadioConfigOutput) Band24Usage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApRadioConfig) *string { return v.Band24Usage }).(pulumi.StringPtrOutput)
}

// Radio Band AP settings
func (o ApRadioConfigOutput) Band5() ApRadioConfigBand5PtrOutput {
	return o.ApplyT(func(v ApRadioConfig) *ApRadioConfigBand5 { return v.Band5 }).(ApRadioConfigBand5PtrOutput)
}

// Radio Band AP settings
func (o ApRadioConfigOutput) Band5On24Radio() ApRadioConfigBand5On24RadioPtrOutput {
	return o.ApplyT(func(v ApRadioConfig) *ApRadioConfigBand5On24Radio { return v.Band5On24Radio }).(ApRadioConfigBand5On24RadioPtrOutput)
}

// Radio Band AP settings
func (o ApRadioConfigOutput) Band6() ApRadioConfigBand6PtrOutput {
	return o.ApplyT(func(v ApRadioConfig) *ApRadioConfigBand6 { return v.Band6 }).(ApRadioConfigBand6PtrOutput)
}

// To make an outdoor operate indoor. For an outdoor-ap, some channels are disallowed by default, this allows the user to use it as an indoor-ap
func (o ApRadioConfigOutput) IndoorUse() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApRadioConfig) *bool { return v.IndoorUse }).(pulumi.BoolPtrOutput)
}

// Whether scanning radio is enabled
func (o ApRadioConfigOutput) ScanningEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApRadioConfig) *bool { return v.ScanningEnabled }).(pulumi.BoolPtrOutput)
}

type ApRadioConfigPtrOutput struct{ *pulumi.OutputState }

func (ApRadioConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApRadioConfig)(nil)).Elem()
}

func (o ApRadioConfigPtrOutput) ToApRadioConfigPtrOutput() ApRadioConfigPtrOutput {
	return o
}

func (o ApRadioConfigPtrOutput) ToApRadioConfigPtrOutputWithContext(ctx context.Context) ApRadioConfigPtrOutput {
	return o
}

func (o ApRadioConfigPtrOutput) Elem() ApRadioConfigOutput {
	return o.ApplyT(func(v *ApRadioConfig) ApRadioConfig {
		if v != nil {
			return *v
		}
		var ret ApRadioConfig
		return ret
	}).(ApRadioConfigOutput)
}

func (o ApRadioConfigPtrOutput) AllowRrmDisable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApRadioConfig) *bool {
		if v == nil {
			return nil
		}
		return v.AllowRrmDisable
	}).(pulumi.BoolPtrOutput)
}

// Antenna gain for 2.4G - for models with external antenna only
func (o ApRadioConfigPtrOutput) AntGain24() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApRadioConfig) *int {
		if v == nil {
			return nil
		}
		return v.AntGain24
	}).(pulumi.IntPtrOutput)
}

// Antenna gain for 5G - for models with external antenna only
func (o ApRadioConfigPtrOutput) AntGain5() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApRadioConfig) *int {
		if v == nil {
			return nil
		}
		return v.AntGain5
	}).(pulumi.IntPtrOutput)
}

// Antenna gain for 6G - for models with external antenna only
func (o ApRadioConfigPtrOutput) AntGain6() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApRadioConfig) *int {
		if v == nil {
			return nil
		}
		return v.AntGain6
	}).(pulumi.IntPtrOutput)
}

// enum: `1x1`, `2x2`, `3x3`, `4x4`, `default`
func (o ApRadioConfigPtrOutput) AntennaMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApRadioConfig) *string {
		if v == nil {
			return nil
		}
		return v.AntennaMode
	}).(pulumi.StringPtrOutput)
}

// Radio Band AP settings
func (o ApRadioConfigPtrOutput) Band24() ApRadioConfigBand24PtrOutput {
	return o.ApplyT(func(v *ApRadioConfig) *ApRadioConfigBand24 {
		if v == nil {
			return nil
		}
		return v.Band24
	}).(ApRadioConfigBand24PtrOutput)
}

// enum: `24`, `5`, `6`, `auto`
func (o ApRadioConfigPtrOutput) Band24Usage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApRadioConfig) *string {
		if v == nil {
			return nil
		}
		return v.Band24Usage
	}).(pulumi.StringPtrOutput)
}

// Radio Band AP settings
func (o ApRadioConfigPtrOutput) Band5() ApRadioConfigBand5PtrOutput {
	return o.ApplyT(func(v *ApRadioConfig) *ApRadioConfigBand5 {
		if v == nil {
			return nil
		}
		return v.Band5
	}).(ApRadioConfigBand5PtrOutput)
}

// Radio Band AP settings
func (o ApRadioConfigPtrOutput) Band5On24Radio() ApRadioConfigBand5On24RadioPtrOutput {
	return o.ApplyT(func(v *ApRadioConfig) *ApRadioConfigBand5On24Radio {
		if v == nil {
			return nil
		}
		return v.Band5On24Radio
	}).(ApRadioConfigBand5On24RadioPtrOutput)
}

// Radio Band AP settings
func (o ApRadioConfigPtrOutput) Band6() ApRadioConfigBand6PtrOutput {
	return o.ApplyT(func(v *ApRadioConfig) *ApRadioConfigBand6 {
		if v == nil {
			return nil
		}
		return v.Band6
	}).(ApRadioConfigBand6PtrOutput)
}

// To make an outdoor operate indoor. For an outdoor-ap, some channels are disallowed by default, this allows the user to use it as an indoor-ap
func (o ApRadioConfigPtrOutput) IndoorUse() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApRadioConfig) *bool {
		if v == nil {
			return nil
		}
		return v.IndoorUse
	}).(pulumi.BoolPtrOutput)
}

// Whether scanning radio is enabled
func (o ApRadioConfigPtrOutput) ScanningEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApRadioConfig) *bool {
		if v == nil {
			return nil
		}
		return v.ScanningEnabled
	}).(pulumi.BoolPtrOutput)
}

type ApRadioConfigBand24 struct {
	AllowRrmDisable *bool `pulumi:"allowRrmDisable"`
	AntGain         *int  `pulumi:"antGain"`
	// enum: `1x1`, `2x2`, `3x3`, `4x4`, `default`
	AntennaMode *string `pulumi:"antennaMode"`
	// channel width for the 2.4GHz band. enum: `20`, `40`
	Bandwidth *int `pulumi:"bandwidth"`
	// For Device. (primary) channel for the band, 0 means using the Site Setting
	Channel *int `pulumi:"channel"`
	// For RFTemplates. List of channels, null or empty array means auto
	Channels []int `pulumi:"channels"`
	// Whether to disable the radio
	Disabled *bool `pulumi:"disabled"`
	// TX power of the radio. For Devices, 0 means auto. -1 / -2 / -3 / …: treated as 0 / -1 / -2 / …
	Power *int `pulumi:"power"`
	// When power=0, max tx power to use, HW-specific values will be used if not set
	PowerMax *int `pulumi:"powerMax"`
	// When power=0, min tx power to use, HW-specific values will be used if not set
	PowerMin *int `pulumi:"powerMin"`
	// enum: `auto`, `long`, `short`
	Preamble *string `pulumi:"preamble"`
}

// ApRadioConfigBand24Input is an input type that accepts ApRadioConfigBand24Args and ApRadioConfigBand24Output values.
// You can construct a concrete instance of `ApRadioConfigBand24Input` via:
//
//	ApRadioConfigBand24Args{...}
type ApRadioConfigBand24Input interface {
	pulumi.Input

	ToApRadioConfigBand24Output() ApRadioConfigBand24Output
	ToApRadioConfigBand24OutputWithContext(context.Context) ApRadioConfigBand24Output
}

type ApRadioConfigBand24Args struct {
	AllowRrmDisable pulumi.BoolPtrInput `pulumi:"allowRrmDisable"`
	AntGain         pulumi.IntPtrInput  `pulumi:"antGain"`
	// enum: `1x1`, `2x2`, `3x3`, `4x4`, `default`
	AntennaMode pulumi.StringPtrInput `pulumi:"antennaMode"`
	// channel width for the 2.4GHz band. enum: `20`, `40`
	Bandwidth pulumi.IntPtrInput `pulumi:"bandwidth"`
	// For Device. (primary) channel for the band, 0 means using the Site Setting
	Channel pulumi.IntPtrInput `pulumi:"channel"`
	// For RFTemplates. List of channels, null or empty array means auto
	Channels pulumi.IntArrayInput `pulumi:"channels"`
	// Whether to disable the radio
	Disabled pulumi.BoolPtrInput `pulumi:"disabled"`
	// TX power of the radio. For Devices, 0 means auto. -1 / -2 / -3 / …: treated as 0 / -1 / -2 / …
	Power pulumi.IntPtrInput `pulumi:"power"`
	// When power=0, max tx power to use, HW-specific values will be used if not set
	PowerMax pulumi.IntPtrInput `pulumi:"powerMax"`
	// When power=0, min tx power to use, HW-specific values will be used if not set
	PowerMin pulumi.IntPtrInput `pulumi:"powerMin"`
	// enum: `auto`, `long`, `short`
	Preamble pulumi.StringPtrInput `pulumi:"preamble"`
}

func (ApRadioConfigBand24Args) ElementType() reflect.Type {
	return reflect.TypeOf((*ApRadioConfigBand24)(nil)).Elem()
}

func (i ApRadioConfigBand24Args) ToApRadioConfigBand24Output() ApRadioConfigBand24Output {
	return i.ToApRadioConfigBand24OutputWithContext(context.Background())
}

func (i ApRadioConfigBand24Args) ToApRadioConfigBand24OutputWithContext(ctx context.Context) ApRadioConfigBand24Output {
	return pulumi.ToOutputWithContext(ctx, i).(ApRadioConfigBand24Output)
}

func (i ApRadioConfigBand24Args) ToApRadioConfigBand24PtrOutput() ApRadioConfigBand24PtrOutput {
	return i.ToApRadioConfigBand24PtrOutputWithContext(context.Background())
}

func (i ApRadioConfigBand24Args) ToApRadioConfigBand24PtrOutputWithContext(ctx context.Context) ApRadioConfigBand24PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApRadioConfigBand24Output).ToApRadioConfigBand24PtrOutputWithContext(ctx)
}

// ApRadioConfigBand24PtrInput is an input type that accepts ApRadioConfigBand24Args, ApRadioConfigBand24Ptr and ApRadioConfigBand24PtrOutput values.
// You can construct a concrete instance of `ApRadioConfigBand24PtrInput` via:
//
//	        ApRadioConfigBand24Args{...}
//
//	or:
//
//	        nil
type ApRadioConfigBand24PtrInput interface {
	pulumi.Input

	ToApRadioConfigBand24PtrOutput() ApRadioConfigBand24PtrOutput
	ToApRadioConfigBand24PtrOutputWithContext(context.Context) ApRadioConfigBand24PtrOutput
}

type apRadioConfigBand24PtrType ApRadioConfigBand24Args

func ApRadioConfigBand24Ptr(v *ApRadioConfigBand24Args) ApRadioConfigBand24PtrInput {
	return (*apRadioConfigBand24PtrType)(v)
}

func (*apRadioConfigBand24PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApRadioConfigBand24)(nil)).Elem()
}

func (i *apRadioConfigBand24PtrType) ToApRadioConfigBand24PtrOutput() ApRadioConfigBand24PtrOutput {
	return i.ToApRadioConfigBand24PtrOutputWithContext(context.Background())
}

func (i *apRadioConfigBand24PtrType) ToApRadioConfigBand24PtrOutputWithContext(ctx context.Context) ApRadioConfigBand24PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApRadioConfigBand24PtrOutput)
}

type ApRadioConfigBand24Output struct{ *pulumi.OutputState }

func (ApRadioConfigBand24Output) ElementType() reflect.Type {
	return reflect.TypeOf((*ApRadioConfigBand24)(nil)).Elem()
}

func (o ApRadioConfigBand24Output) ToApRadioConfigBand24Output() ApRadioConfigBand24Output {
	return o
}

func (o ApRadioConfigBand24Output) ToApRadioConfigBand24OutputWithContext(ctx context.Context) ApRadioConfigBand24Output {
	return o
}

func (o ApRadioConfigBand24Output) ToApRadioConfigBand24PtrOutput() ApRadioConfigBand24PtrOutput {
	return o.ToApRadioConfigBand24PtrOutputWithContext(context.Background())
}

func (o ApRadioConfigBand24Output) ToApRadioConfigBand24PtrOutputWithContext(ctx context.Context) ApRadioConfigBand24PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApRadioConfigBand24) *ApRadioConfigBand24 {
		return &v
	}).(ApRadioConfigBand24PtrOutput)
}

func (o ApRadioConfigBand24Output) AllowRrmDisable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApRadioConfigBand24) *bool { return v.AllowRrmDisable }).(pulumi.BoolPtrOutput)
}

func (o ApRadioConfigBand24Output) AntGain() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApRadioConfigBand24) *int { return v.AntGain }).(pulumi.IntPtrOutput)
}

// enum: `1x1`, `2x2`, `3x3`, `4x4`, `default`
func (o ApRadioConfigBand24Output) AntennaMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApRadioConfigBand24) *string { return v.AntennaMode }).(pulumi.StringPtrOutput)
}

// channel width for the 2.4GHz band. enum: `20`, `40`
func (o ApRadioConfigBand24Output) Bandwidth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApRadioConfigBand24) *int { return v.Bandwidth }).(pulumi.IntPtrOutput)
}

// For Device. (primary) channel for the band, 0 means using the Site Setting
func (o ApRadioConfigBand24Output) Channel() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApRadioConfigBand24) *int { return v.Channel }).(pulumi.IntPtrOutput)
}

// For RFTemplates. List of channels, null or empty array means auto
func (o ApRadioConfigBand24Output) Channels() pulumi.IntArrayOutput {
	return o.ApplyT(func(v ApRadioConfigBand24) []int { return v.Channels }).(pulumi.IntArrayOutput)
}

// Whether to disable the radio
func (o ApRadioConfigBand24Output) Disabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApRadioConfigBand24) *bool { return v.Disabled }).(pulumi.BoolPtrOutput)
}

// TX power of the radio. For Devices, 0 means auto. -1 / -2 / -3 / …: treated as 0 / -1 / -2 / …
func (o ApRadioConfigBand24Output) Power() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApRadioConfigBand24) *int { return v.Power }).(pulumi.IntPtrOutput)
}

// When power=0, max tx power to use, HW-specific values will be used if not set
func (o ApRadioConfigBand24Output) PowerMax() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApRadioConfigBand24) *int { return v.PowerMax }).(pulumi.IntPtrOutput)
}

// When power=0, min tx power to use, HW-specific values will be used if not set
func (o ApRadioConfigBand24Output) PowerMin() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApRadioConfigBand24) *int { return v.PowerMin }).(pulumi.IntPtrOutput)
}

// enum: `auto`, `long`, `short`
func (o ApRadioConfigBand24Output) Preamble() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApRadioConfigBand24) *string { return v.Preamble }).(pulumi.StringPtrOutput)
}

type ApRadioConfigBand24PtrOutput struct{ *pulumi.OutputState }

func (ApRadioConfigBand24PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApRadioConfigBand24)(nil)).Elem()
}

func (o ApRadioConfigBand24PtrOutput) ToApRadioConfigBand24PtrOutput() ApRadioConfigBand24PtrOutput {
	return o
}

func (o ApRadioConfigBand24PtrOutput) ToApRadioConfigBand24PtrOutputWithContext(ctx context.Context) ApRadioConfigBand24PtrOutput {
	return o
}

func (o ApRadioConfigBand24PtrOutput) Elem() ApRadioConfigBand24Output {
	return o.ApplyT(func(v *ApRadioConfigBand24) ApRadioConfigBand24 {
		if v != nil {
			return *v
		}
		var ret ApRadioConfigBand24
		return ret
	}).(ApRadioConfigBand24Output)
}

func (o ApRadioConfigBand24PtrOutput) AllowRrmDisable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApRadioConfigBand24) *bool {
		if v == nil {
			return nil
		}
		return v.AllowRrmDisable
	}).(pulumi.BoolPtrOutput)
}

func (o ApRadioConfigBand24PtrOutput) AntGain() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApRadioConfigBand24) *int {
		if v == nil {
			return nil
		}
		return v.AntGain
	}).(pulumi.IntPtrOutput)
}

// enum: `1x1`, `2x2`, `3x3`, `4x4`, `default`
func (o ApRadioConfigBand24PtrOutput) AntennaMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApRadioConfigBand24) *string {
		if v == nil {
			return nil
		}
		return v.AntennaMode
	}).(pulumi.StringPtrOutput)
}

// channel width for the 2.4GHz band. enum: `20`, `40`
func (o ApRadioConfigBand24PtrOutput) Bandwidth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApRadioConfigBand24) *int {
		if v == nil {
			return nil
		}
		return v.Bandwidth
	}).(pulumi.IntPtrOutput)
}

// For Device. (primary) channel for the band, 0 means using the Site Setting
func (o ApRadioConfigBand24PtrOutput) Channel() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApRadioConfigBand24) *int {
		if v == nil {
			return nil
		}
		return v.Channel
	}).(pulumi.IntPtrOutput)
}

// For RFTemplates. List of channels, null or empty array means auto
func (o ApRadioConfigBand24PtrOutput) Channels() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *ApRadioConfigBand24) []int {
		if v == nil {
			return nil
		}
		return v.Channels
	}).(pulumi.IntArrayOutput)
}

// Whether to disable the radio
func (o ApRadioConfigBand24PtrOutput) Disabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApRadioConfigBand24) *bool {
		if v == nil {
			return nil
		}
		return v.Disabled
	}).(pulumi.BoolPtrOutput)
}

// TX power of the radio. For Devices, 0 means auto. -1 / -2 / -3 / …: treated as 0 / -1 / -2 / …
func (o ApRadioConfigBand24PtrOutput) Power() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApRadioConfigBand24) *int {
		if v == nil {
			return nil
		}
		return v.Power
	}).(pulumi.IntPtrOutput)
}

// When power=0, max tx power to use, HW-specific values will be used if not set
func (o ApRadioConfigBand24PtrOutput) PowerMax() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApRadioConfigBand24) *int {
		if v == nil {
			return nil
		}
		return v.PowerMax
	}).(pulumi.IntPtrOutput)
}

// When power=0, min tx power to use, HW-specific values will be used if not set
func (o ApRadioConfigBand24PtrOutput) PowerMin() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApRadioConfigBand24) *int {
		if v == nil {
			return nil
		}
		return v.PowerMin
	}).(pulumi.IntPtrOutput)
}

// enum: `auto`, `long`, `short`
func (o ApRadioConfigBand24PtrOutput) Preamble() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApRadioConfigBand24) *string {
		if v == nil {
			return nil
		}
		return v.Preamble
	}).(pulumi.StringPtrOutput)
}

type ApRadioConfigBand5 struct {
	AllowRrmDisable *bool `pulumi:"allowRrmDisable"`
	AntGain         *int  `pulumi:"antGain"`
	// enum: `1x1`, `2x2`, `3x3`, `4x4`, `default`
	AntennaMode *string `pulumi:"antennaMode"`
	// channel width for the 5GHz band. enum: `20`, `40`, `80`
	Bandwidth *int `pulumi:"bandwidth"`
	// For Device. (primary) channel for the band, 0 means using the Site Setting
	Channel *int `pulumi:"channel"`
	// For RFTemplates. List of channels, null or empty array means auto
	Channels []int `pulumi:"channels"`
	// Whether to disable the radio
	Disabled *bool `pulumi:"disabled"`
	// TX power of the radio. For Devices, 0 means auto. -1 / -2 / -3 / …: treated as 0 / -1 / -2 / …
	Power *int `pulumi:"power"`
	// When power=0, max tx power to use, HW-specific values will be used if not set
	PowerMax *int `pulumi:"powerMax"`
	// When power=0, min tx power to use, HW-specific values will be used if not set
	PowerMin *int `pulumi:"powerMin"`
	// enum: `auto`, `long`, `short`
	Preamble *string `pulumi:"preamble"`
}

// ApRadioConfigBand5Input is an input type that accepts ApRadioConfigBand5Args and ApRadioConfigBand5Output values.
// You can construct a concrete instance of `ApRadioConfigBand5Input` via:
//
//	ApRadioConfigBand5Args{...}
type ApRadioConfigBand5Input interface {
	pulumi.Input

	ToApRadioConfigBand5Output() ApRadioConfigBand5Output
	ToApRadioConfigBand5OutputWithContext(context.Context) ApRadioConfigBand5Output
}

type ApRadioConfigBand5Args struct {
	AllowRrmDisable pulumi.BoolPtrInput `pulumi:"allowRrmDisable"`
	AntGain         pulumi.IntPtrInput  `pulumi:"antGain"`
	// enum: `1x1`, `2x2`, `3x3`, `4x4`, `default`
	AntennaMode pulumi.StringPtrInput `pulumi:"antennaMode"`
	// channel width for the 5GHz band. enum: `20`, `40`, `80`
	Bandwidth pulumi.IntPtrInput `pulumi:"bandwidth"`
	// For Device. (primary) channel for the band, 0 means using the Site Setting
	Channel pulumi.IntPtrInput `pulumi:"channel"`
	// For RFTemplates. List of channels, null or empty array means auto
	Channels pulumi.IntArrayInput `pulumi:"channels"`
	// Whether to disable the radio
	Disabled pulumi.BoolPtrInput `pulumi:"disabled"`
	// TX power of the radio. For Devices, 0 means auto. -1 / -2 / -3 / …: treated as 0 / -1 / -2 / …
	Power pulumi.IntPtrInput `pulumi:"power"`
	// When power=0, max tx power to use, HW-specific values will be used if not set
	PowerMax pulumi.IntPtrInput `pulumi:"powerMax"`
	// When power=0, min tx power to use, HW-specific values will be used if not set
	PowerMin pulumi.IntPtrInput `pulumi:"powerMin"`
	// enum: `auto`, `long`, `short`
	Preamble pulumi.StringPtrInput `pulumi:"preamble"`
}

func (ApRadioConfigBand5Args) ElementType() reflect.Type {
	return reflect.TypeOf((*ApRadioConfigBand5)(nil)).Elem()
}

func (i ApRadioConfigBand5Args) ToApRadioConfigBand5Output() ApRadioConfigBand5Output {
	return i.ToApRadioConfigBand5OutputWithContext(context.Background())
}

func (i ApRadioConfigBand5Args) ToApRadioConfigBand5OutputWithContext(ctx context.Context) ApRadioConfigBand5Output {
	return pulumi.ToOutputWithContext(ctx, i).(ApRadioConfigBand5Output)
}

func (i ApRadioConfigBand5Args) ToApRadioConfigBand5PtrOutput() ApRadioConfigBand5PtrOutput {
	return i.ToApRadioConfigBand5PtrOutputWithContext(context.Background())
}

func (i ApRadioConfigBand5Args) ToApRadioConfigBand5PtrOutputWithContext(ctx context.Context) ApRadioConfigBand5PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApRadioConfigBand5Output).ToApRadioConfigBand5PtrOutputWithContext(ctx)
}

// ApRadioConfigBand5PtrInput is an input type that accepts ApRadioConfigBand5Args, ApRadioConfigBand5Ptr and ApRadioConfigBand5PtrOutput values.
// You can construct a concrete instance of `ApRadioConfigBand5PtrInput` via:
//
//	        ApRadioConfigBand5Args{...}
//
//	or:
//
//	        nil
type ApRadioConfigBand5PtrInput interface {
	pulumi.Input

	ToApRadioConfigBand5PtrOutput() ApRadioConfigBand5PtrOutput
	ToApRadioConfigBand5PtrOutputWithContext(context.Context) ApRadioConfigBand5PtrOutput
}

type apRadioConfigBand5PtrType ApRadioConfigBand5Args

func ApRadioConfigBand5Ptr(v *ApRadioConfigBand5Args) ApRadioConfigBand5PtrInput {
	return (*apRadioConfigBand5PtrType)(v)
}

func (*apRadioConfigBand5PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApRadioConfigBand5)(nil)).Elem()
}

func (i *apRadioConfigBand5PtrType) ToApRadioConfigBand5PtrOutput() ApRadioConfigBand5PtrOutput {
	return i.ToApRadioConfigBand5PtrOutputWithContext(context.Background())
}

func (i *apRadioConfigBand5PtrType) ToApRadioConfigBand5PtrOutputWithContext(ctx context.Context) ApRadioConfigBand5PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApRadioConfigBand5PtrOutput)
}

type ApRadioConfigBand5Output struct{ *pulumi.OutputState }

func (ApRadioConfigBand5Output) ElementType() reflect.Type {
	return reflect.TypeOf((*ApRadioConfigBand5)(nil)).Elem()
}

func (o ApRadioConfigBand5Output) ToApRadioConfigBand5Output() ApRadioConfigBand5Output {
	return o
}

func (o ApRadioConfigBand5Output) ToApRadioConfigBand5OutputWithContext(ctx context.Context) ApRadioConfigBand5Output {
	return o
}

func (o ApRadioConfigBand5Output) ToApRadioConfigBand5PtrOutput() ApRadioConfigBand5PtrOutput {
	return o.ToApRadioConfigBand5PtrOutputWithContext(context.Background())
}

func (o ApRadioConfigBand5Output) ToApRadioConfigBand5PtrOutputWithContext(ctx context.Context) ApRadioConfigBand5PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApRadioConfigBand5) *ApRadioConfigBand5 {
		return &v
	}).(ApRadioConfigBand5PtrOutput)
}

func (o ApRadioConfigBand5Output) AllowRrmDisable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApRadioConfigBand5) *bool { return v.AllowRrmDisable }).(pulumi.BoolPtrOutput)
}

func (o ApRadioConfigBand5Output) AntGain() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApRadioConfigBand5) *int { return v.AntGain }).(pulumi.IntPtrOutput)
}

// enum: `1x1`, `2x2`, `3x3`, `4x4`, `default`
func (o ApRadioConfigBand5Output) AntennaMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApRadioConfigBand5) *string { return v.AntennaMode }).(pulumi.StringPtrOutput)
}

// channel width for the 5GHz band. enum: `20`, `40`, `80`
func (o ApRadioConfigBand5Output) Bandwidth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApRadioConfigBand5) *int { return v.Bandwidth }).(pulumi.IntPtrOutput)
}

// For Device. (primary) channel for the band, 0 means using the Site Setting
func (o ApRadioConfigBand5Output) Channel() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApRadioConfigBand5) *int { return v.Channel }).(pulumi.IntPtrOutput)
}

// For RFTemplates. List of channels, null or empty array means auto
func (o ApRadioConfigBand5Output) Channels() pulumi.IntArrayOutput {
	return o.ApplyT(func(v ApRadioConfigBand5) []int { return v.Channels }).(pulumi.IntArrayOutput)
}

// Whether to disable the radio
func (o ApRadioConfigBand5Output) Disabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApRadioConfigBand5) *bool { return v.Disabled }).(pulumi.BoolPtrOutput)
}

// TX power of the radio. For Devices, 0 means auto. -1 / -2 / -3 / …: treated as 0 / -1 / -2 / …
func (o ApRadioConfigBand5Output) Power() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApRadioConfigBand5) *int { return v.Power }).(pulumi.IntPtrOutput)
}

// When power=0, max tx power to use, HW-specific values will be used if not set
func (o ApRadioConfigBand5Output) PowerMax() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApRadioConfigBand5) *int { return v.PowerMax }).(pulumi.IntPtrOutput)
}

// When power=0, min tx power to use, HW-specific values will be used if not set
func (o ApRadioConfigBand5Output) PowerMin() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApRadioConfigBand5) *int { return v.PowerMin }).(pulumi.IntPtrOutput)
}

// enum: `auto`, `long`, `short`
func (o ApRadioConfigBand5Output) Preamble() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApRadioConfigBand5) *string { return v.Preamble }).(pulumi.StringPtrOutput)
}

type ApRadioConfigBand5PtrOutput struct{ *pulumi.OutputState }

func (ApRadioConfigBand5PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApRadioConfigBand5)(nil)).Elem()
}

func (o ApRadioConfigBand5PtrOutput) ToApRadioConfigBand5PtrOutput() ApRadioConfigBand5PtrOutput {
	return o
}

func (o ApRadioConfigBand5PtrOutput) ToApRadioConfigBand5PtrOutputWithContext(ctx context.Context) ApRadioConfigBand5PtrOutput {
	return o
}

func (o ApRadioConfigBand5PtrOutput) Elem() ApRadioConfigBand5Output {
	return o.ApplyT(func(v *ApRadioConfigBand5) ApRadioConfigBand5 {
		if v != nil {
			return *v
		}
		var ret ApRadioConfigBand5
		return ret
	}).(ApRadioConfigBand5Output)
}

func (o ApRadioConfigBand5PtrOutput) AllowRrmDisable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApRadioConfigBand5) *bool {
		if v == nil {
			return nil
		}
		return v.AllowRrmDisable
	}).(pulumi.BoolPtrOutput)
}

func (o ApRadioConfigBand5PtrOutput) AntGain() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApRadioConfigBand5) *int {
		if v == nil {
			return nil
		}
		return v.AntGain
	}).(pulumi.IntPtrOutput)
}

// enum: `1x1`, `2x2`, `3x3`, `4x4`, `default`
func (o ApRadioConfigBand5PtrOutput) AntennaMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApRadioConfigBand5) *string {
		if v == nil {
			return nil
		}
		return v.AntennaMode
	}).(pulumi.StringPtrOutput)
}

// channel width for the 5GHz band. enum: `20`, `40`, `80`
func (o ApRadioConfigBand5PtrOutput) Bandwidth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApRadioConfigBand5) *int {
		if v == nil {
			return nil
		}
		return v.Bandwidth
	}).(pulumi.IntPtrOutput)
}

// For Device. (primary) channel for the band, 0 means using the Site Setting
func (o ApRadioConfigBand5PtrOutput) Channel() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApRadioConfigBand5) *int {
		if v == nil {
			return nil
		}
		return v.Channel
	}).(pulumi.IntPtrOutput)
}

// For RFTemplates. List of channels, null or empty array means auto
func (o ApRadioConfigBand5PtrOutput) Channels() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *ApRadioConfigBand5) []int {
		if v == nil {
			return nil
		}
		return v.Channels
	}).(pulumi.IntArrayOutput)
}

// Whether to disable the radio
func (o ApRadioConfigBand5PtrOutput) Disabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApRadioConfigBand5) *bool {
		if v == nil {
			return nil
		}
		return v.Disabled
	}).(pulumi.BoolPtrOutput)
}

// TX power of the radio. For Devices, 0 means auto. -1 / -2 / -3 / …: treated as 0 / -1 / -2 / …
func (o ApRadioConfigBand5PtrOutput) Power() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApRadioConfigBand5) *int {
		if v == nil {
			return nil
		}
		return v.Power
	}).(pulumi.IntPtrOutput)
}

// When power=0, max tx power to use, HW-specific values will be used if not set
func (o ApRadioConfigBand5PtrOutput) PowerMax() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApRadioConfigBand5) *int {
		if v == nil {
			return nil
		}
		return v.PowerMax
	}).(pulumi.IntPtrOutput)
}

// When power=0, min tx power to use, HW-specific values will be used if not set
func (o ApRadioConfigBand5PtrOutput) PowerMin() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApRadioConfigBand5) *int {
		if v == nil {
			return nil
		}
		return v.PowerMin
	}).(pulumi.IntPtrOutput)
}

// enum: `auto`, `long`, `short`
func (o ApRadioConfigBand5PtrOutput) Preamble() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApRadioConfigBand5) *string {
		if v == nil {
			return nil
		}
		return v.Preamble
	}).(pulumi.StringPtrOutput)
}

type ApRadioConfigBand5On24Radio struct {
	AllowRrmDisable *bool `pulumi:"allowRrmDisable"`
	AntGain         *int  `pulumi:"antGain"`
	// enum: `1x1`, `2x2`, `3x3`, `4x4`, `default`
	AntennaMode *string `pulumi:"antennaMode"`
	// channel width for the 5GHz band. enum: `20`, `40`, `80`
	Bandwidth *int `pulumi:"bandwidth"`
	// For Device. (primary) channel for the band, 0 means using the Site Setting
	Channel *int `pulumi:"channel"`
	// For RFTemplates. List of channels, null or empty array means auto
	Channels []int `pulumi:"channels"`
	// Whether to disable the radio
	Disabled *bool `pulumi:"disabled"`
	// TX power of the radio. For Devices, 0 means auto. -1 / -2 / -3 / …: treated as 0 / -1 / -2 / …
	Power *int `pulumi:"power"`
	// When power=0, max tx power to use, HW-specific values will be used if not set
	PowerMax *int `pulumi:"powerMax"`
	// When power=0, min tx power to use, HW-specific values will be used if not set
	PowerMin *int `pulumi:"powerMin"`
	// enum: `auto`, `long`, `short`
	Preamble *string `pulumi:"preamble"`
}

// ApRadioConfigBand5On24RadioInput is an input type that accepts ApRadioConfigBand5On24RadioArgs and ApRadioConfigBand5On24RadioOutput values.
// You can construct a concrete instance of `ApRadioConfigBand5On24RadioInput` via:
//
//	ApRadioConfigBand5On24RadioArgs{...}
type ApRadioConfigBand5On24RadioInput interface {
	pulumi.Input

	ToApRadioConfigBand5On24RadioOutput() ApRadioConfigBand5On24RadioOutput
	ToApRadioConfigBand5On24RadioOutputWithContext(context.Context) ApRadioConfigBand5On24RadioOutput
}

type ApRadioConfigBand5On24RadioArgs struct {
	AllowRrmDisable pulumi.BoolPtrInput `pulumi:"allowRrmDisable"`
	AntGain         pulumi.IntPtrInput  `pulumi:"antGain"`
	// enum: `1x1`, `2x2`, `3x3`, `4x4`, `default`
	AntennaMode pulumi.StringPtrInput `pulumi:"antennaMode"`
	// channel width for the 5GHz band. enum: `20`, `40`, `80`
	Bandwidth pulumi.IntPtrInput `pulumi:"bandwidth"`
	// For Device. (primary) channel for the band, 0 means using the Site Setting
	Channel pulumi.IntPtrInput `pulumi:"channel"`
	// For RFTemplates. List of channels, null or empty array means auto
	Channels pulumi.IntArrayInput `pulumi:"channels"`
	// Whether to disable the radio
	Disabled pulumi.BoolPtrInput `pulumi:"disabled"`
	// TX power of the radio. For Devices, 0 means auto. -1 / -2 / -3 / …: treated as 0 / -1 / -2 / …
	Power pulumi.IntPtrInput `pulumi:"power"`
	// When power=0, max tx power to use, HW-specific values will be used if not set
	PowerMax pulumi.IntPtrInput `pulumi:"powerMax"`
	// When power=0, min tx power to use, HW-specific values will be used if not set
	PowerMin pulumi.IntPtrInput `pulumi:"powerMin"`
	// enum: `auto`, `long`, `short`
	Preamble pulumi.StringPtrInput `pulumi:"preamble"`
}

func (ApRadioConfigBand5On24RadioArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApRadioConfigBand5On24Radio)(nil)).Elem()
}

func (i ApRadioConfigBand5On24RadioArgs) ToApRadioConfigBand5On24RadioOutput() ApRadioConfigBand5On24RadioOutput {
	return i.ToApRadioConfigBand5On24RadioOutputWithContext(context.Background())
}

func (i ApRadioConfigBand5On24RadioArgs) ToApRadioConfigBand5On24RadioOutputWithContext(ctx context.Context) ApRadioConfigBand5On24RadioOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApRadioConfigBand5On24RadioOutput)
}

func (i ApRadioConfigBand5On24RadioArgs) ToApRadioConfigBand5On24RadioPtrOutput() ApRadioConfigBand5On24RadioPtrOutput {
	return i.ToApRadioConfigBand5On24RadioPtrOutputWithContext(context.Background())
}

func (i ApRadioConfigBand5On24RadioArgs) ToApRadioConfigBand5On24RadioPtrOutputWithContext(ctx context.Context) ApRadioConfigBand5On24RadioPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApRadioConfigBand5On24RadioOutput).ToApRadioConfigBand5On24RadioPtrOutputWithContext(ctx)
}

// ApRadioConfigBand5On24RadioPtrInput is an input type that accepts ApRadioConfigBand5On24RadioArgs, ApRadioConfigBand5On24RadioPtr and ApRadioConfigBand5On24RadioPtrOutput values.
// You can construct a concrete instance of `ApRadioConfigBand5On24RadioPtrInput` via:
//
//	        ApRadioConfigBand5On24RadioArgs{...}
//
//	or:
//
//	        nil
type ApRadioConfigBand5On24RadioPtrInput interface {
	pulumi.Input

	ToApRadioConfigBand5On24RadioPtrOutput() ApRadioConfigBand5On24RadioPtrOutput
	ToApRadioConfigBand5On24RadioPtrOutputWithContext(context.Context) ApRadioConfigBand5On24RadioPtrOutput
}

type apRadioConfigBand5On24RadioPtrType ApRadioConfigBand5On24RadioArgs

func ApRadioConfigBand5On24RadioPtr(v *ApRadioConfigBand5On24RadioArgs) ApRadioConfigBand5On24RadioPtrInput {
	return (*apRadioConfigBand5On24RadioPtrType)(v)
}

func (*apRadioConfigBand5On24RadioPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApRadioConfigBand5On24Radio)(nil)).Elem()
}

func (i *apRadioConfigBand5On24RadioPtrType) ToApRadioConfigBand5On24RadioPtrOutput() ApRadioConfigBand5On24RadioPtrOutput {
	return i.ToApRadioConfigBand5On24RadioPtrOutputWithContext(context.Background())
}

func (i *apRadioConfigBand5On24RadioPtrType) ToApRadioConfigBand5On24RadioPtrOutputWithContext(ctx context.Context) ApRadioConfigBand5On24RadioPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApRadioConfigBand5On24RadioPtrOutput)
}

type ApRadioConfigBand5On24RadioOutput struct{ *pulumi.OutputState }

func (ApRadioConfigBand5On24RadioOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApRadioConfigBand5On24Radio)(nil)).Elem()
}

func (o ApRadioConfigBand5On24RadioOutput) ToApRadioConfigBand5On24RadioOutput() ApRadioConfigBand5On24RadioOutput {
	return o
}

func (o ApRadioConfigBand5On24RadioOutput) ToApRadioConfigBand5On24RadioOutputWithContext(ctx context.Context) ApRadioConfigBand5On24RadioOutput {
	return o
}

func (o ApRadioConfigBand5On24RadioOutput) ToApRadioConfigBand5On24RadioPtrOutput() ApRadioConfigBand5On24RadioPtrOutput {
	return o.ToApRadioConfigBand5On24RadioPtrOutputWithContext(context.Background())
}

func (o ApRadioConfigBand5On24RadioOutput) ToApRadioConfigBand5On24RadioPtrOutputWithContext(ctx context.Context) ApRadioConfigBand5On24RadioPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApRadioConfigBand5On24Radio) *ApRadioConfigBand5On24Radio {
		return &v
	}).(ApRadioConfigBand5On24RadioPtrOutput)
}

func (o ApRadioConfigBand5On24RadioOutput) AllowRrmDisable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApRadioConfigBand5On24Radio) *bool { return v.AllowRrmDisable }).(pulumi.BoolPtrOutput)
}

func (o ApRadioConfigBand5On24RadioOutput) AntGain() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApRadioConfigBand5On24Radio) *int { return v.AntGain }).(pulumi.IntPtrOutput)
}

// enum: `1x1`, `2x2`, `3x3`, `4x4`, `default`
func (o ApRadioConfigBand5On24RadioOutput) AntennaMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApRadioConfigBand5On24Radio) *string { return v.AntennaMode }).(pulumi.StringPtrOutput)
}

// channel width for the 5GHz band. enum: `20`, `40`, `80`
func (o ApRadioConfigBand5On24RadioOutput) Bandwidth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApRadioConfigBand5On24Radio) *int { return v.Bandwidth }).(pulumi.IntPtrOutput)
}

// For Device. (primary) channel for the band, 0 means using the Site Setting
func (o ApRadioConfigBand5On24RadioOutput) Channel() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApRadioConfigBand5On24Radio) *int { return v.Channel }).(pulumi.IntPtrOutput)
}

// For RFTemplates. List of channels, null or empty array means auto
func (o ApRadioConfigBand5On24RadioOutput) Channels() pulumi.IntArrayOutput {
	return o.ApplyT(func(v ApRadioConfigBand5On24Radio) []int { return v.Channels }).(pulumi.IntArrayOutput)
}

// Whether to disable the radio
func (o ApRadioConfigBand5On24RadioOutput) Disabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApRadioConfigBand5On24Radio) *bool { return v.Disabled }).(pulumi.BoolPtrOutput)
}

// TX power of the radio. For Devices, 0 means auto. -1 / -2 / -3 / …: treated as 0 / -1 / -2 / …
func (o ApRadioConfigBand5On24RadioOutput) Power() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApRadioConfigBand5On24Radio) *int { return v.Power }).(pulumi.IntPtrOutput)
}

// When power=0, max tx power to use, HW-specific values will be used if not set
func (o ApRadioConfigBand5On24RadioOutput) PowerMax() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApRadioConfigBand5On24Radio) *int { return v.PowerMax }).(pulumi.IntPtrOutput)
}

// When power=0, min tx power to use, HW-specific values will be used if not set
func (o ApRadioConfigBand5On24RadioOutput) PowerMin() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApRadioConfigBand5On24Radio) *int { return v.PowerMin }).(pulumi.IntPtrOutput)
}

// enum: `auto`, `long`, `short`
func (o ApRadioConfigBand5On24RadioOutput) Preamble() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApRadioConfigBand5On24Radio) *string { return v.Preamble }).(pulumi.StringPtrOutput)
}

type ApRadioConfigBand5On24RadioPtrOutput struct{ *pulumi.OutputState }

func (ApRadioConfigBand5On24RadioPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApRadioConfigBand5On24Radio)(nil)).Elem()
}

func (o ApRadioConfigBand5On24RadioPtrOutput) ToApRadioConfigBand5On24RadioPtrOutput() ApRadioConfigBand5On24RadioPtrOutput {
	return o
}

func (o ApRadioConfigBand5On24RadioPtrOutput) ToApRadioConfigBand5On24RadioPtrOutputWithContext(ctx context.Context) ApRadioConfigBand5On24RadioPtrOutput {
	return o
}

func (o ApRadioConfigBand5On24RadioPtrOutput) Elem() ApRadioConfigBand5On24RadioOutput {
	return o.ApplyT(func(v *ApRadioConfigBand5On24Radio) ApRadioConfigBand5On24Radio {
		if v != nil {
			return *v
		}
		var ret ApRadioConfigBand5On24Radio
		return ret
	}).(ApRadioConfigBand5On24RadioOutput)
}

func (o ApRadioConfigBand5On24RadioPtrOutput) AllowRrmDisable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApRadioConfigBand5On24Radio) *bool {
		if v == nil {
			return nil
		}
		return v.AllowRrmDisable
	}).(pulumi.BoolPtrOutput)
}

func (o ApRadioConfigBand5On24RadioPtrOutput) AntGain() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApRadioConfigBand5On24Radio) *int {
		if v == nil {
			return nil
		}
		return v.AntGain
	}).(pulumi.IntPtrOutput)
}

// enum: `1x1`, `2x2`, `3x3`, `4x4`, `default`
func (o ApRadioConfigBand5On24RadioPtrOutput) AntennaMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApRadioConfigBand5On24Radio) *string {
		if v == nil {
			return nil
		}
		return v.AntennaMode
	}).(pulumi.StringPtrOutput)
}

// channel width for the 5GHz band. enum: `20`, `40`, `80`
func (o ApRadioConfigBand5On24RadioPtrOutput) Bandwidth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApRadioConfigBand5On24Radio) *int {
		if v == nil {
			return nil
		}
		return v.Bandwidth
	}).(pulumi.IntPtrOutput)
}

// For Device. (primary) channel for the band, 0 means using the Site Setting
func (o ApRadioConfigBand5On24RadioPtrOutput) Channel() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApRadioConfigBand5On24Radio) *int {
		if v == nil {
			return nil
		}
		return v.Channel
	}).(pulumi.IntPtrOutput)
}

// For RFTemplates. List of channels, null or empty array means auto
func (o ApRadioConfigBand5On24RadioPtrOutput) Channels() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *ApRadioConfigBand5On24Radio) []int {
		if v == nil {
			return nil
		}
		return v.Channels
	}).(pulumi.IntArrayOutput)
}

// Whether to disable the radio
func (o ApRadioConfigBand5On24RadioPtrOutput) Disabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApRadioConfigBand5On24Radio) *bool {
		if v == nil {
			return nil
		}
		return v.Disabled
	}).(pulumi.BoolPtrOutput)
}

// TX power of the radio. For Devices, 0 means auto. -1 / -2 / -3 / …: treated as 0 / -1 / -2 / …
func (o ApRadioConfigBand5On24RadioPtrOutput) Power() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApRadioConfigBand5On24Radio) *int {
		if v == nil {
			return nil
		}
		return v.Power
	}).(pulumi.IntPtrOutput)
}

// When power=0, max tx power to use, HW-specific values will be used if not set
func (o ApRadioConfigBand5On24RadioPtrOutput) PowerMax() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApRadioConfigBand5On24Radio) *int {
		if v == nil {
			return nil
		}
		return v.PowerMax
	}).(pulumi.IntPtrOutput)
}

// When power=0, min tx power to use, HW-specific values will be used if not set
func (o ApRadioConfigBand5On24RadioPtrOutput) PowerMin() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApRadioConfigBand5On24Radio) *int {
		if v == nil {
			return nil
		}
		return v.PowerMin
	}).(pulumi.IntPtrOutput)
}

// enum: `auto`, `long`, `short`
func (o ApRadioConfigBand5On24RadioPtrOutput) Preamble() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApRadioConfigBand5On24Radio) *string {
		if v == nil {
			return nil
		}
		return v.Preamble
	}).(pulumi.StringPtrOutput)
}

type ApRadioConfigBand6 struct {
	AllowRrmDisable *bool `pulumi:"allowRrmDisable"`
	AntGain         *int  `pulumi:"antGain"`
	// enum: `1x1`, `2x2`, `3x3`, `4x4`, `default`
	AntennaMode *string `pulumi:"antennaMode"`
	// channel width for the 6GHz band. enum: `20`, `40`, `80`, `160`
	Bandwidth *int `pulumi:"bandwidth"`
	// For Device. (primary) channel for the band, 0 means using the Site Setting
	Channel *int `pulumi:"channel"`
	// For RFTemplates. List of channels, null or empty array means auto
	Channels []int `pulumi:"channels"`
	// Whether to disable the radio
	Disabled *bool `pulumi:"disabled"`
	// TX power of the radio. For Devices, 0 means auto. -1 / -2 / -3 / …: treated as 0 / -1 / -2 / …
	Power *int `pulumi:"power"`
	// When power=0, max tx power to use, HW-specific values will be used if not set
	PowerMax *int `pulumi:"powerMax"`
	// When power=0, min tx power to use, HW-specific values will be used if not set
	PowerMin *int `pulumi:"powerMin"`
	// enum: `auto`, `long`, `short`
	Preamble *string `pulumi:"preamble"`
	// For 6GHz Only, standard-power operation, AFC (Automatic Frequency Coordination) will be performed, and we'll fall back to Low Power Indoor if AFC failed
	StandardPower *bool `pulumi:"standardPower"`
}

// ApRadioConfigBand6Input is an input type that accepts ApRadioConfigBand6Args and ApRadioConfigBand6Output values.
// You can construct a concrete instance of `ApRadioConfigBand6Input` via:
//
//	ApRadioConfigBand6Args{...}
type ApRadioConfigBand6Input interface {
	pulumi.Input

	ToApRadioConfigBand6Output() ApRadioConfigBand6Output
	ToApRadioConfigBand6OutputWithContext(context.Context) ApRadioConfigBand6Output
}

type ApRadioConfigBand6Args struct {
	AllowRrmDisable pulumi.BoolPtrInput `pulumi:"allowRrmDisable"`
	AntGain         pulumi.IntPtrInput  `pulumi:"antGain"`
	// enum: `1x1`, `2x2`, `3x3`, `4x4`, `default`
	AntennaMode pulumi.StringPtrInput `pulumi:"antennaMode"`
	// channel width for the 6GHz band. enum: `20`, `40`, `80`, `160`
	Bandwidth pulumi.IntPtrInput `pulumi:"bandwidth"`
	// For Device. (primary) channel for the band, 0 means using the Site Setting
	Channel pulumi.IntPtrInput `pulumi:"channel"`
	// For RFTemplates. List of channels, null or empty array means auto
	Channels pulumi.IntArrayInput `pulumi:"channels"`
	// Whether to disable the radio
	Disabled pulumi.BoolPtrInput `pulumi:"disabled"`
	// TX power of the radio. For Devices, 0 means auto. -1 / -2 / -3 / …: treated as 0 / -1 / -2 / …
	Power pulumi.IntPtrInput `pulumi:"power"`
	// When power=0, max tx power to use, HW-specific values will be used if not set
	PowerMax pulumi.IntPtrInput `pulumi:"powerMax"`
	// When power=0, min tx power to use, HW-specific values will be used if not set
	PowerMin pulumi.IntPtrInput `pulumi:"powerMin"`
	// enum: `auto`, `long`, `short`
	Preamble pulumi.StringPtrInput `pulumi:"preamble"`
	// For 6GHz Only, standard-power operation, AFC (Automatic Frequency Coordination) will be performed, and we'll fall back to Low Power Indoor if AFC failed
	StandardPower pulumi.BoolPtrInput `pulumi:"standardPower"`
}

func (ApRadioConfigBand6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*ApRadioConfigBand6)(nil)).Elem()
}

func (i ApRadioConfigBand6Args) ToApRadioConfigBand6Output() ApRadioConfigBand6Output {
	return i.ToApRadioConfigBand6OutputWithContext(context.Background())
}

func (i ApRadioConfigBand6Args) ToApRadioConfigBand6OutputWithContext(ctx context.Context) ApRadioConfigBand6Output {
	return pulumi.ToOutputWithContext(ctx, i).(ApRadioConfigBand6Output)
}

func (i ApRadioConfigBand6Args) ToApRadioConfigBand6PtrOutput() ApRadioConfigBand6PtrOutput {
	return i.ToApRadioConfigBand6PtrOutputWithContext(context.Background())
}

func (i ApRadioConfigBand6Args) ToApRadioConfigBand6PtrOutputWithContext(ctx context.Context) ApRadioConfigBand6PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApRadioConfigBand6Output).ToApRadioConfigBand6PtrOutputWithContext(ctx)
}

// ApRadioConfigBand6PtrInput is an input type that accepts ApRadioConfigBand6Args, ApRadioConfigBand6Ptr and ApRadioConfigBand6PtrOutput values.
// You can construct a concrete instance of `ApRadioConfigBand6PtrInput` via:
//
//	        ApRadioConfigBand6Args{...}
//
//	or:
//
//	        nil
type ApRadioConfigBand6PtrInput interface {
	pulumi.Input

	ToApRadioConfigBand6PtrOutput() ApRadioConfigBand6PtrOutput
	ToApRadioConfigBand6PtrOutputWithContext(context.Context) ApRadioConfigBand6PtrOutput
}

type apRadioConfigBand6PtrType ApRadioConfigBand6Args

func ApRadioConfigBand6Ptr(v *ApRadioConfigBand6Args) ApRadioConfigBand6PtrInput {
	return (*apRadioConfigBand6PtrType)(v)
}

func (*apRadioConfigBand6PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApRadioConfigBand6)(nil)).Elem()
}

func (i *apRadioConfigBand6PtrType) ToApRadioConfigBand6PtrOutput() ApRadioConfigBand6PtrOutput {
	return i.ToApRadioConfigBand6PtrOutputWithContext(context.Background())
}

func (i *apRadioConfigBand6PtrType) ToApRadioConfigBand6PtrOutputWithContext(ctx context.Context) ApRadioConfigBand6PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApRadioConfigBand6PtrOutput)
}

type ApRadioConfigBand6Output struct{ *pulumi.OutputState }

func (ApRadioConfigBand6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*ApRadioConfigBand6)(nil)).Elem()
}

func (o ApRadioConfigBand6Output) ToApRadioConfigBand6Output() ApRadioConfigBand6Output {
	return o
}

func (o ApRadioConfigBand6Output) ToApRadioConfigBand6OutputWithContext(ctx context.Context) ApRadioConfigBand6Output {
	return o
}

func (o ApRadioConfigBand6Output) ToApRadioConfigBand6PtrOutput() ApRadioConfigBand6PtrOutput {
	return o.ToApRadioConfigBand6PtrOutputWithContext(context.Background())
}

func (o ApRadioConfigBand6Output) ToApRadioConfigBand6PtrOutputWithContext(ctx context.Context) ApRadioConfigBand6PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApRadioConfigBand6) *ApRadioConfigBand6 {
		return &v
	}).(ApRadioConfigBand6PtrOutput)
}

func (o ApRadioConfigBand6Output) AllowRrmDisable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApRadioConfigBand6) *bool { return v.AllowRrmDisable }).(pulumi.BoolPtrOutput)
}

func (o ApRadioConfigBand6Output) AntGain() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApRadioConfigBand6) *int { return v.AntGain }).(pulumi.IntPtrOutput)
}

// enum: `1x1`, `2x2`, `3x3`, `4x4`, `default`
func (o ApRadioConfigBand6Output) AntennaMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApRadioConfigBand6) *string { return v.AntennaMode }).(pulumi.StringPtrOutput)
}

// channel width for the 6GHz band. enum: `20`, `40`, `80`, `160`
func (o ApRadioConfigBand6Output) Bandwidth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApRadioConfigBand6) *int { return v.Bandwidth }).(pulumi.IntPtrOutput)
}

// For Device. (primary) channel for the band, 0 means using the Site Setting
func (o ApRadioConfigBand6Output) Channel() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApRadioConfigBand6) *int { return v.Channel }).(pulumi.IntPtrOutput)
}

// For RFTemplates. List of channels, null or empty array means auto
func (o ApRadioConfigBand6Output) Channels() pulumi.IntArrayOutput {
	return o.ApplyT(func(v ApRadioConfigBand6) []int { return v.Channels }).(pulumi.IntArrayOutput)
}

// Whether to disable the radio
func (o ApRadioConfigBand6Output) Disabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApRadioConfigBand6) *bool { return v.Disabled }).(pulumi.BoolPtrOutput)
}

// TX power of the radio. For Devices, 0 means auto. -1 / -2 / -3 / …: treated as 0 / -1 / -2 / …
func (o ApRadioConfigBand6Output) Power() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApRadioConfigBand6) *int { return v.Power }).(pulumi.IntPtrOutput)
}

// When power=0, max tx power to use, HW-specific values will be used if not set
func (o ApRadioConfigBand6Output) PowerMax() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApRadioConfigBand6) *int { return v.PowerMax }).(pulumi.IntPtrOutput)
}

// When power=0, min tx power to use, HW-specific values will be used if not set
func (o ApRadioConfigBand6Output) PowerMin() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApRadioConfigBand6) *int { return v.PowerMin }).(pulumi.IntPtrOutput)
}

// enum: `auto`, `long`, `short`
func (o ApRadioConfigBand6Output) Preamble() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApRadioConfigBand6) *string { return v.Preamble }).(pulumi.StringPtrOutput)
}

// For 6GHz Only, standard-power operation, AFC (Automatic Frequency Coordination) will be performed, and we'll fall back to Low Power Indoor if AFC failed
func (o ApRadioConfigBand6Output) StandardPower() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApRadioConfigBand6) *bool { return v.StandardPower }).(pulumi.BoolPtrOutput)
}

type ApRadioConfigBand6PtrOutput struct{ *pulumi.OutputState }

func (ApRadioConfigBand6PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApRadioConfigBand6)(nil)).Elem()
}

func (o ApRadioConfigBand6PtrOutput) ToApRadioConfigBand6PtrOutput() ApRadioConfigBand6PtrOutput {
	return o
}

func (o ApRadioConfigBand6PtrOutput) ToApRadioConfigBand6PtrOutputWithContext(ctx context.Context) ApRadioConfigBand6PtrOutput {
	return o
}

func (o ApRadioConfigBand6PtrOutput) Elem() ApRadioConfigBand6Output {
	return o.ApplyT(func(v *ApRadioConfigBand6) ApRadioConfigBand6 {
		if v != nil {
			return *v
		}
		var ret ApRadioConfigBand6
		return ret
	}).(ApRadioConfigBand6Output)
}

func (o ApRadioConfigBand6PtrOutput) AllowRrmDisable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApRadioConfigBand6) *bool {
		if v == nil {
			return nil
		}
		return v.AllowRrmDisable
	}).(pulumi.BoolPtrOutput)
}

func (o ApRadioConfigBand6PtrOutput) AntGain() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApRadioConfigBand6) *int {
		if v == nil {
			return nil
		}
		return v.AntGain
	}).(pulumi.IntPtrOutput)
}

// enum: `1x1`, `2x2`, `3x3`, `4x4`, `default`
func (o ApRadioConfigBand6PtrOutput) AntennaMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApRadioConfigBand6) *string {
		if v == nil {
			return nil
		}
		return v.AntennaMode
	}).(pulumi.StringPtrOutput)
}

// channel width for the 6GHz band. enum: `20`, `40`, `80`, `160`
func (o ApRadioConfigBand6PtrOutput) Bandwidth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApRadioConfigBand6) *int {
		if v == nil {
			return nil
		}
		return v.Bandwidth
	}).(pulumi.IntPtrOutput)
}

// For Device. (primary) channel for the band, 0 means using the Site Setting
func (o ApRadioConfigBand6PtrOutput) Channel() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApRadioConfigBand6) *int {
		if v == nil {
			return nil
		}
		return v.Channel
	}).(pulumi.IntPtrOutput)
}

// For RFTemplates. List of channels, null or empty array means auto
func (o ApRadioConfigBand6PtrOutput) Channels() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *ApRadioConfigBand6) []int {
		if v == nil {
			return nil
		}
		return v.Channels
	}).(pulumi.IntArrayOutput)
}

// Whether to disable the radio
func (o ApRadioConfigBand6PtrOutput) Disabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApRadioConfigBand6) *bool {
		if v == nil {
			return nil
		}
		return v.Disabled
	}).(pulumi.BoolPtrOutput)
}

// TX power of the radio. For Devices, 0 means auto. -1 / -2 / -3 / …: treated as 0 / -1 / -2 / …
func (o ApRadioConfigBand6PtrOutput) Power() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApRadioConfigBand6) *int {
		if v == nil {
			return nil
		}
		return v.Power
	}).(pulumi.IntPtrOutput)
}

// When power=0, max tx power to use, HW-specific values will be used if not set
func (o ApRadioConfigBand6PtrOutput) PowerMax() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApRadioConfigBand6) *int {
		if v == nil {
			return nil
		}
		return v.PowerMax
	}).(pulumi.IntPtrOutput)
}

// When power=0, min tx power to use, HW-specific values will be used if not set
func (o ApRadioConfigBand6PtrOutput) PowerMin() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApRadioConfigBand6) *int {
		if v == nil {
			return nil
		}
		return v.PowerMin
	}).(pulumi.IntPtrOutput)
}

// enum: `auto`, `long`, `short`
func (o ApRadioConfigBand6PtrOutput) Preamble() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApRadioConfigBand6) *string {
		if v == nil {
			return nil
		}
		return v.Preamble
	}).(pulumi.StringPtrOutput)
}

// For 6GHz Only, standard-power operation, AFC (Automatic Frequency Coordination) will be performed, and we'll fall back to Low Power Indoor if AFC failed
func (o ApRadioConfigBand6PtrOutput) StandardPower() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApRadioConfigBand6) *bool {
		if v == nil {
			return nil
		}
		return v.StandardPower
	}).(pulumi.BoolPtrOutput)
}

type ApUplinkPortConfig struct {
	// Whether to do 802.1x against uplink switch. When enabled, AP cert will be used to do EAP-TLS and the Org's CA Cert has to be provisioned at the switch
	Dot1x *bool `pulumi:"dot1x"`
	// By default, WLANs are disabled when uplink is down. In some scenario, like SiteSurvey, one would want the AP to keep sending beacons.
	KeepWlansUpIfDown *bool `pulumi:"keepWlansUpIfDown"`
}

// ApUplinkPortConfigInput is an input type that accepts ApUplinkPortConfigArgs and ApUplinkPortConfigOutput values.
// You can construct a concrete instance of `ApUplinkPortConfigInput` via:
//
//	ApUplinkPortConfigArgs{...}
type ApUplinkPortConfigInput interface {
	pulumi.Input

	ToApUplinkPortConfigOutput() ApUplinkPortConfigOutput
	ToApUplinkPortConfigOutputWithContext(context.Context) ApUplinkPortConfigOutput
}

type ApUplinkPortConfigArgs struct {
	// Whether to do 802.1x against uplink switch. When enabled, AP cert will be used to do EAP-TLS and the Org's CA Cert has to be provisioned at the switch
	Dot1x pulumi.BoolPtrInput `pulumi:"dot1x"`
	// By default, WLANs are disabled when uplink is down. In some scenario, like SiteSurvey, one would want the AP to keep sending beacons.
	KeepWlansUpIfDown pulumi.BoolPtrInput `pulumi:"keepWlansUpIfDown"`
}

func (ApUplinkPortConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApUplinkPortConfig)(nil)).Elem()
}

func (i ApUplinkPortConfigArgs) ToApUplinkPortConfigOutput() ApUplinkPortConfigOutput {
	return i.ToApUplinkPortConfigOutputWithContext(context.Background())
}

func (i ApUplinkPortConfigArgs) ToApUplinkPortConfigOutputWithContext(ctx context.Context) ApUplinkPortConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApUplinkPortConfigOutput)
}

func (i ApUplinkPortConfigArgs) ToApUplinkPortConfigPtrOutput() ApUplinkPortConfigPtrOutput {
	return i.ToApUplinkPortConfigPtrOutputWithContext(context.Background())
}

func (i ApUplinkPortConfigArgs) ToApUplinkPortConfigPtrOutputWithContext(ctx context.Context) ApUplinkPortConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApUplinkPortConfigOutput).ToApUplinkPortConfigPtrOutputWithContext(ctx)
}

// ApUplinkPortConfigPtrInput is an input type that accepts ApUplinkPortConfigArgs, ApUplinkPortConfigPtr and ApUplinkPortConfigPtrOutput values.
// You can construct a concrete instance of `ApUplinkPortConfigPtrInput` via:
//
//	        ApUplinkPortConfigArgs{...}
//
//	or:
//
//	        nil
type ApUplinkPortConfigPtrInput interface {
	pulumi.Input

	ToApUplinkPortConfigPtrOutput() ApUplinkPortConfigPtrOutput
	ToApUplinkPortConfigPtrOutputWithContext(context.Context) ApUplinkPortConfigPtrOutput
}

type apUplinkPortConfigPtrType ApUplinkPortConfigArgs

func ApUplinkPortConfigPtr(v *ApUplinkPortConfigArgs) ApUplinkPortConfigPtrInput {
	return (*apUplinkPortConfigPtrType)(v)
}

func (*apUplinkPortConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApUplinkPortConfig)(nil)).Elem()
}

func (i *apUplinkPortConfigPtrType) ToApUplinkPortConfigPtrOutput() ApUplinkPortConfigPtrOutput {
	return i.ToApUplinkPortConfigPtrOutputWithContext(context.Background())
}

func (i *apUplinkPortConfigPtrType) ToApUplinkPortConfigPtrOutputWithContext(ctx context.Context) ApUplinkPortConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApUplinkPortConfigPtrOutput)
}

type ApUplinkPortConfigOutput struct{ *pulumi.OutputState }

func (ApUplinkPortConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApUplinkPortConfig)(nil)).Elem()
}

func (o ApUplinkPortConfigOutput) ToApUplinkPortConfigOutput() ApUplinkPortConfigOutput {
	return o
}

func (o ApUplinkPortConfigOutput) ToApUplinkPortConfigOutputWithContext(ctx context.Context) ApUplinkPortConfigOutput {
	return o
}

func (o ApUplinkPortConfigOutput) ToApUplinkPortConfigPtrOutput() ApUplinkPortConfigPtrOutput {
	return o.ToApUplinkPortConfigPtrOutputWithContext(context.Background())
}

func (o ApUplinkPortConfigOutput) ToApUplinkPortConfigPtrOutputWithContext(ctx context.Context) ApUplinkPortConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApUplinkPortConfig) *ApUplinkPortConfig {
		return &v
	}).(ApUplinkPortConfigPtrOutput)
}

// Whether to do 802.1x against uplink switch. When enabled, AP cert will be used to do EAP-TLS and the Org's CA Cert has to be provisioned at the switch
func (o ApUplinkPortConfigOutput) Dot1x() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApUplinkPortConfig) *bool { return v.Dot1x }).(pulumi.BoolPtrOutput)
}

// By default, WLANs are disabled when uplink is down. In some scenario, like SiteSurvey, one would want the AP to keep sending beacons.
func (o ApUplinkPortConfigOutput) KeepWlansUpIfDown() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApUplinkPortConfig) *bool { return v.KeepWlansUpIfDown }).(pulumi.BoolPtrOutput)
}

type ApUplinkPortConfigPtrOutput struct{ *pulumi.OutputState }

func (ApUplinkPortConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApUplinkPortConfig)(nil)).Elem()
}

func (o ApUplinkPortConfigPtrOutput) ToApUplinkPortConfigPtrOutput() ApUplinkPortConfigPtrOutput {
	return o
}

func (o ApUplinkPortConfigPtrOutput) ToApUplinkPortConfigPtrOutputWithContext(ctx context.Context) ApUplinkPortConfigPtrOutput {
	return o
}

func (o ApUplinkPortConfigPtrOutput) Elem() ApUplinkPortConfigOutput {
	return o.ApplyT(func(v *ApUplinkPortConfig) ApUplinkPortConfig {
		if v != nil {
			return *v
		}
		var ret ApUplinkPortConfig
		return ret
	}).(ApUplinkPortConfigOutput)
}

// Whether to do 802.1x against uplink switch. When enabled, AP cert will be used to do EAP-TLS and the Org's CA Cert has to be provisioned at the switch
func (o ApUplinkPortConfigPtrOutput) Dot1x() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApUplinkPortConfig) *bool {
		if v == nil {
			return nil
		}
		return v.Dot1x
	}).(pulumi.BoolPtrOutput)
}

// By default, WLANs are disabled when uplink is down. In some scenario, like SiteSurvey, one would want the AP to keep sending beacons.
func (o ApUplinkPortConfigPtrOutput) KeepWlansUpIfDown() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApUplinkPortConfig) *bool {
		if v == nil {
			return nil
		}
		return v.KeepWlansUpIfDown
	}).(pulumi.BoolPtrOutput)
}

type ApUsbConfig struct {
	// Only if `type`==`imagotag`
	Cacert *string `pulumi:"cacert"`
	// Only if `type`==`imagotag`, channel selection, not needed by default, required for manual channel override only
	Channel *int `pulumi:"channel"`
	// Whether to enable any usb config
	Enabled *bool `pulumi:"enabled"`
	// Only if `type`==`imagotag`
	Host *string `pulumi:"host"`
	// Only if `type`==`imagotag`
	Port *int `pulumi:"port"`
	// usb config type. enum: `hanshow`, `imagotag`, `solum`
	Type *string `pulumi:"type"`
	// Only if `type`==`imagotag`, whether to turn on SSL verification
	VerifyCert *bool `pulumi:"verifyCert"`
	// Only if `type`==`solum` or `type`==`hanshow`
	VlanId *int `pulumi:"vlanId"`
}

// ApUsbConfigInput is an input type that accepts ApUsbConfigArgs and ApUsbConfigOutput values.
// You can construct a concrete instance of `ApUsbConfigInput` via:
//
//	ApUsbConfigArgs{...}
type ApUsbConfigInput interface {
	pulumi.Input

	ToApUsbConfigOutput() ApUsbConfigOutput
	ToApUsbConfigOutputWithContext(context.Context) ApUsbConfigOutput
}

type ApUsbConfigArgs struct {
	// Only if `type`==`imagotag`
	Cacert pulumi.StringPtrInput `pulumi:"cacert"`
	// Only if `type`==`imagotag`, channel selection, not needed by default, required for manual channel override only
	Channel pulumi.IntPtrInput `pulumi:"channel"`
	// Whether to enable any usb config
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Only if `type`==`imagotag`
	Host pulumi.StringPtrInput `pulumi:"host"`
	// Only if `type`==`imagotag`
	Port pulumi.IntPtrInput `pulumi:"port"`
	// usb config type. enum: `hanshow`, `imagotag`, `solum`
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Only if `type`==`imagotag`, whether to turn on SSL verification
	VerifyCert pulumi.BoolPtrInput `pulumi:"verifyCert"`
	// Only if `type`==`solum` or `type`==`hanshow`
	VlanId pulumi.IntPtrInput `pulumi:"vlanId"`
}

func (ApUsbConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApUsbConfig)(nil)).Elem()
}

func (i ApUsbConfigArgs) ToApUsbConfigOutput() ApUsbConfigOutput {
	return i.ToApUsbConfigOutputWithContext(context.Background())
}

func (i ApUsbConfigArgs) ToApUsbConfigOutputWithContext(ctx context.Context) ApUsbConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApUsbConfigOutput)
}

func (i ApUsbConfigArgs) ToApUsbConfigPtrOutput() ApUsbConfigPtrOutput {
	return i.ToApUsbConfigPtrOutputWithContext(context.Background())
}

func (i ApUsbConfigArgs) ToApUsbConfigPtrOutputWithContext(ctx context.Context) ApUsbConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApUsbConfigOutput).ToApUsbConfigPtrOutputWithContext(ctx)
}

// ApUsbConfigPtrInput is an input type that accepts ApUsbConfigArgs, ApUsbConfigPtr and ApUsbConfigPtrOutput values.
// You can construct a concrete instance of `ApUsbConfigPtrInput` via:
//
//	        ApUsbConfigArgs{...}
//
//	or:
//
//	        nil
type ApUsbConfigPtrInput interface {
	pulumi.Input

	ToApUsbConfigPtrOutput() ApUsbConfigPtrOutput
	ToApUsbConfigPtrOutputWithContext(context.Context) ApUsbConfigPtrOutput
}

type apUsbConfigPtrType ApUsbConfigArgs

func ApUsbConfigPtr(v *ApUsbConfigArgs) ApUsbConfigPtrInput {
	return (*apUsbConfigPtrType)(v)
}

func (*apUsbConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApUsbConfig)(nil)).Elem()
}

func (i *apUsbConfigPtrType) ToApUsbConfigPtrOutput() ApUsbConfigPtrOutput {
	return i.ToApUsbConfigPtrOutputWithContext(context.Background())
}

func (i *apUsbConfigPtrType) ToApUsbConfigPtrOutputWithContext(ctx context.Context) ApUsbConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApUsbConfigPtrOutput)
}

type ApUsbConfigOutput struct{ *pulumi.OutputState }

func (ApUsbConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApUsbConfig)(nil)).Elem()
}

func (o ApUsbConfigOutput) ToApUsbConfigOutput() ApUsbConfigOutput {
	return o
}

func (o ApUsbConfigOutput) ToApUsbConfigOutputWithContext(ctx context.Context) ApUsbConfigOutput {
	return o
}

func (o ApUsbConfigOutput) ToApUsbConfigPtrOutput() ApUsbConfigPtrOutput {
	return o.ToApUsbConfigPtrOutputWithContext(context.Background())
}

func (o ApUsbConfigOutput) ToApUsbConfigPtrOutputWithContext(ctx context.Context) ApUsbConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApUsbConfig) *ApUsbConfig {
		return &v
	}).(ApUsbConfigPtrOutput)
}

// Only if `type`==`imagotag`
func (o ApUsbConfigOutput) Cacert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApUsbConfig) *string { return v.Cacert }).(pulumi.StringPtrOutput)
}

// Only if `type`==`imagotag`, channel selection, not needed by default, required for manual channel override only
func (o ApUsbConfigOutput) Channel() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApUsbConfig) *int { return v.Channel }).(pulumi.IntPtrOutput)
}

// Whether to enable any usb config
func (o ApUsbConfigOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApUsbConfig) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Only if `type`==`imagotag`
func (o ApUsbConfigOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApUsbConfig) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// Only if `type`==`imagotag`
func (o ApUsbConfigOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApUsbConfig) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// usb config type. enum: `hanshow`, `imagotag`, `solum`
func (o ApUsbConfigOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApUsbConfig) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Only if `type`==`imagotag`, whether to turn on SSL verification
func (o ApUsbConfigOutput) VerifyCert() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApUsbConfig) *bool { return v.VerifyCert }).(pulumi.BoolPtrOutput)
}

// Only if `type`==`solum` or `type`==`hanshow`
func (o ApUsbConfigOutput) VlanId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApUsbConfig) *int { return v.VlanId }).(pulumi.IntPtrOutput)
}

type ApUsbConfigPtrOutput struct{ *pulumi.OutputState }

func (ApUsbConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApUsbConfig)(nil)).Elem()
}

func (o ApUsbConfigPtrOutput) ToApUsbConfigPtrOutput() ApUsbConfigPtrOutput {
	return o
}

func (o ApUsbConfigPtrOutput) ToApUsbConfigPtrOutputWithContext(ctx context.Context) ApUsbConfigPtrOutput {
	return o
}

func (o ApUsbConfigPtrOutput) Elem() ApUsbConfigOutput {
	return o.ApplyT(func(v *ApUsbConfig) ApUsbConfig {
		if v != nil {
			return *v
		}
		var ret ApUsbConfig
		return ret
	}).(ApUsbConfigOutput)
}

// Only if `type`==`imagotag`
func (o ApUsbConfigPtrOutput) Cacert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApUsbConfig) *string {
		if v == nil {
			return nil
		}
		return v.Cacert
	}).(pulumi.StringPtrOutput)
}

// Only if `type`==`imagotag`, channel selection, not needed by default, required for manual channel override only
func (o ApUsbConfigPtrOutput) Channel() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApUsbConfig) *int {
		if v == nil {
			return nil
		}
		return v.Channel
	}).(pulumi.IntPtrOutput)
}

// Whether to enable any usb config
func (o ApUsbConfigPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApUsbConfig) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Only if `type`==`imagotag`
func (o ApUsbConfigPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApUsbConfig) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

// Only if `type`==`imagotag`
func (o ApUsbConfigPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApUsbConfig) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

// usb config type. enum: `hanshow`, `imagotag`, `solum`
func (o ApUsbConfigPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApUsbConfig) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Only if `type`==`imagotag`, whether to turn on SSL verification
func (o ApUsbConfigPtrOutput) VerifyCert() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApUsbConfig) *bool {
		if v == nil {
			return nil
		}
		return v.VerifyCert
	}).(pulumi.BoolPtrOutput)
}

// Only if `type`==`solum` or `type`==`hanshow`
func (o ApUsbConfigPtrOutput) VlanId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApUsbConfig) *int {
		if v == nil {
			return nil
		}
		return v.VlanId
	}).(pulumi.IntPtrOutput)
}

type GatewayBgpConfig struct {
	AuthKey *string `pulumi:"authKey"`
	// When bfdMultiplier is configured alone. Default:
	//   * 1000 if `type`==`external`
	//   * 350 `type`==`internal`
	BfdMinimumInterval *int `pulumi:"bfdMinimumInterval"`
	// When bfdMinimumIntervalIsConfigured alone
	BfdMultiplier *int `pulumi:"bfdMultiplier"`
	// BFD provides faster path failure detection and is enabled by default
	DisableBfd *bool   `pulumi:"disableBfd"`
	Export     *string `pulumi:"export"`
	// Default export policies if no per-neighbor policies defined
	ExportPolicy *string `pulumi:"exportPolicy"`
	// By default, either inet/net6 unicast depending on neighbor IP family (v4 or v6). For v6 neighbors, to exchange v4 nexthop, which allows dual-stack support, enable this
	ExtendedV4Nexthop *bool `pulumi:"extendedV4Nexthop"`
	// `0` means disable
	GracefulRestartTime *int    `pulumi:"gracefulRestartTime"`
	HoldTime            *int    `pulumi:"holdTime"`
	Import              *string `pulumi:"import"`
	// Default import policies if no per-neighbor policies defined
	ImportPolicy *string `pulumi:"importPolicy"`
	// Local AS. Value must be in range 1-4294967295 or a variable (e.g. `{{as_variable}}`)
	LocalAs *string `pulumi:"localAs"`
	// Neighbor AS. Value must be in range 1-4294967295 or a variable (e.g. `{{as_variable}}`)
	NeighborAs *string `pulumi:"neighborAs"`
	// If per-neighbor as is desired. Property key is the neighbor address
	Neighbors map[string]GatewayBgpConfigNeighbors `pulumi:"neighbors"`
	// If `type`!=`external`or `via`==`wan`networks where we expect BGP neighbor to connect to/from
	Networks    []string `pulumi:"networks"`
	NoPrivateAs *bool    `pulumi:"noPrivateAs"`
	// By default, we'll re-advertise all learned BGP routers toward overlay
	NoReadvertiseToOverlay *bool `pulumi:"noReadvertiseToOverlay"`
	// If `type`==`tunnel`
	TunnelName *string `pulumi:"tunnelName"`
	// enum: `external`, `internal`
	Type *string `pulumi:"type"`
	// network name. enum: `lan`, `tunnel`, `vpn`, `wan`
	Via     *string `pulumi:"via"`
	VpnName *string `pulumi:"vpnName"`
	// If `via`==`wan`
	WanName *string `pulumi:"wanName"`
}

// GatewayBgpConfigInput is an input type that accepts GatewayBgpConfigArgs and GatewayBgpConfigOutput values.
// You can construct a concrete instance of `GatewayBgpConfigInput` via:
//
//	GatewayBgpConfigArgs{...}
type GatewayBgpConfigInput interface {
	pulumi.Input

	ToGatewayBgpConfigOutput() GatewayBgpConfigOutput
	ToGatewayBgpConfigOutputWithContext(context.Context) GatewayBgpConfigOutput
}

type GatewayBgpConfigArgs struct {
	AuthKey pulumi.StringPtrInput `pulumi:"authKey"`
	// When bfdMultiplier is configured alone. Default:
	//   * 1000 if `type`==`external`
	//   * 350 `type`==`internal`
	BfdMinimumInterval pulumi.IntPtrInput `pulumi:"bfdMinimumInterval"`
	// When bfdMinimumIntervalIsConfigured alone
	BfdMultiplier pulumi.IntPtrInput `pulumi:"bfdMultiplier"`
	// BFD provides faster path failure detection and is enabled by default
	DisableBfd pulumi.BoolPtrInput   `pulumi:"disableBfd"`
	Export     pulumi.StringPtrInput `pulumi:"export"`
	// Default export policies if no per-neighbor policies defined
	ExportPolicy pulumi.StringPtrInput `pulumi:"exportPolicy"`
	// By default, either inet/net6 unicast depending on neighbor IP family (v4 or v6). For v6 neighbors, to exchange v4 nexthop, which allows dual-stack support, enable this
	ExtendedV4Nexthop pulumi.BoolPtrInput `pulumi:"extendedV4Nexthop"`
	// `0` means disable
	GracefulRestartTime pulumi.IntPtrInput    `pulumi:"gracefulRestartTime"`
	HoldTime            pulumi.IntPtrInput    `pulumi:"holdTime"`
	Import              pulumi.StringPtrInput `pulumi:"import"`
	// Default import policies if no per-neighbor policies defined
	ImportPolicy pulumi.StringPtrInput `pulumi:"importPolicy"`
	// Local AS. Value must be in range 1-4294967295 or a variable (e.g. `{{as_variable}}`)
	LocalAs pulumi.StringPtrInput `pulumi:"localAs"`
	// Neighbor AS. Value must be in range 1-4294967295 or a variable (e.g. `{{as_variable}}`)
	NeighborAs pulumi.StringPtrInput `pulumi:"neighborAs"`
	// If per-neighbor as is desired. Property key is the neighbor address
	Neighbors GatewayBgpConfigNeighborsMapInput `pulumi:"neighbors"`
	// If `type`!=`external`or `via`==`wan`networks where we expect BGP neighbor to connect to/from
	Networks    pulumi.StringArrayInput `pulumi:"networks"`
	NoPrivateAs pulumi.BoolPtrInput     `pulumi:"noPrivateAs"`
	// By default, we'll re-advertise all learned BGP routers toward overlay
	NoReadvertiseToOverlay pulumi.BoolPtrInput `pulumi:"noReadvertiseToOverlay"`
	// If `type`==`tunnel`
	TunnelName pulumi.StringPtrInput `pulumi:"tunnelName"`
	// enum: `external`, `internal`
	Type pulumi.StringPtrInput `pulumi:"type"`
	// network name. enum: `lan`, `tunnel`, `vpn`, `wan`
	Via     pulumi.StringPtrInput `pulumi:"via"`
	VpnName pulumi.StringPtrInput `pulumi:"vpnName"`
	// If `via`==`wan`
	WanName pulumi.StringPtrInput `pulumi:"wanName"`
}

func (GatewayBgpConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayBgpConfig)(nil)).Elem()
}

func (i GatewayBgpConfigArgs) ToGatewayBgpConfigOutput() GatewayBgpConfigOutput {
	return i.ToGatewayBgpConfigOutputWithContext(context.Background())
}

func (i GatewayBgpConfigArgs) ToGatewayBgpConfigOutputWithContext(ctx context.Context) GatewayBgpConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayBgpConfigOutput)
}

// GatewayBgpConfigMapInput is an input type that accepts GatewayBgpConfigMap and GatewayBgpConfigMapOutput values.
// You can construct a concrete instance of `GatewayBgpConfigMapInput` via:
//
//	GatewayBgpConfigMap{ "key": GatewayBgpConfigArgs{...} }
type GatewayBgpConfigMapInput interface {
	pulumi.Input

	ToGatewayBgpConfigMapOutput() GatewayBgpConfigMapOutput
	ToGatewayBgpConfigMapOutputWithContext(context.Context) GatewayBgpConfigMapOutput
}

type GatewayBgpConfigMap map[string]GatewayBgpConfigInput

func (GatewayBgpConfigMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]GatewayBgpConfig)(nil)).Elem()
}

func (i GatewayBgpConfigMap) ToGatewayBgpConfigMapOutput() GatewayBgpConfigMapOutput {
	return i.ToGatewayBgpConfigMapOutputWithContext(context.Background())
}

func (i GatewayBgpConfigMap) ToGatewayBgpConfigMapOutputWithContext(ctx context.Context) GatewayBgpConfigMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayBgpConfigMapOutput)
}

type GatewayBgpConfigOutput struct{ *pulumi.OutputState }

func (GatewayBgpConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayBgpConfig)(nil)).Elem()
}

func (o GatewayBgpConfigOutput) ToGatewayBgpConfigOutput() GatewayBgpConfigOutput {
	return o
}

func (o GatewayBgpConfigOutput) ToGatewayBgpConfigOutputWithContext(ctx context.Context) GatewayBgpConfigOutput {
	return o
}

func (o GatewayBgpConfigOutput) AuthKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayBgpConfig) *string { return v.AuthKey }).(pulumi.StringPtrOutput)
}

// When bfdMultiplier is configured alone. Default:
//   - 1000 if `type`==`external`
//   - 350 `type`==`internal`
func (o GatewayBgpConfigOutput) BfdMinimumInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GatewayBgpConfig) *int { return v.BfdMinimumInterval }).(pulumi.IntPtrOutput)
}

// When bfdMinimumIntervalIsConfigured alone
func (o GatewayBgpConfigOutput) BfdMultiplier() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GatewayBgpConfig) *int { return v.BfdMultiplier }).(pulumi.IntPtrOutput)
}

// BFD provides faster path failure detection and is enabled by default
func (o GatewayBgpConfigOutput) DisableBfd() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GatewayBgpConfig) *bool { return v.DisableBfd }).(pulumi.BoolPtrOutput)
}

func (o GatewayBgpConfigOutput) Export() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayBgpConfig) *string { return v.Export }).(pulumi.StringPtrOutput)
}

// Default export policies if no per-neighbor policies defined
func (o GatewayBgpConfigOutput) ExportPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayBgpConfig) *string { return v.ExportPolicy }).(pulumi.StringPtrOutput)
}

// By default, either inet/net6 unicast depending on neighbor IP family (v4 or v6). For v6 neighbors, to exchange v4 nexthop, which allows dual-stack support, enable this
func (o GatewayBgpConfigOutput) ExtendedV4Nexthop() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GatewayBgpConfig) *bool { return v.ExtendedV4Nexthop }).(pulumi.BoolPtrOutput)
}

// `0` means disable
func (o GatewayBgpConfigOutput) GracefulRestartTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GatewayBgpConfig) *int { return v.GracefulRestartTime }).(pulumi.IntPtrOutput)
}

func (o GatewayBgpConfigOutput) HoldTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GatewayBgpConfig) *int { return v.HoldTime }).(pulumi.IntPtrOutput)
}

func (o GatewayBgpConfigOutput) Import() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayBgpConfig) *string { return v.Import }).(pulumi.StringPtrOutput)
}

// Default import policies if no per-neighbor policies defined
func (o GatewayBgpConfigOutput) ImportPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayBgpConfig) *string { return v.ImportPolicy }).(pulumi.StringPtrOutput)
}

// Local AS. Value must be in range 1-4294967295 or a variable (e.g. `{{as_variable}}`)
func (o GatewayBgpConfigOutput) LocalAs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayBgpConfig) *string { return v.LocalAs }).(pulumi.StringPtrOutput)
}

// Neighbor AS. Value must be in range 1-4294967295 or a variable (e.g. `{{as_variable}}`)
func (o GatewayBgpConfigOutput) NeighborAs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayBgpConfig) *string { return v.NeighborAs }).(pulumi.StringPtrOutput)
}

// If per-neighbor as is desired. Property key is the neighbor address
func (o GatewayBgpConfigOutput) Neighbors() GatewayBgpConfigNeighborsMapOutput {
	return o.ApplyT(func(v GatewayBgpConfig) map[string]GatewayBgpConfigNeighbors { return v.Neighbors }).(GatewayBgpConfigNeighborsMapOutput)
}

// If `type`!=`external`or `via`==`wan`networks where we expect BGP neighbor to connect to/from
func (o GatewayBgpConfigOutput) Networks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GatewayBgpConfig) []string { return v.Networks }).(pulumi.StringArrayOutput)
}

func (o GatewayBgpConfigOutput) NoPrivateAs() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GatewayBgpConfig) *bool { return v.NoPrivateAs }).(pulumi.BoolPtrOutput)
}

// By default, we'll re-advertise all learned BGP routers toward overlay
func (o GatewayBgpConfigOutput) NoReadvertiseToOverlay() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GatewayBgpConfig) *bool { return v.NoReadvertiseToOverlay }).(pulumi.BoolPtrOutput)
}

// If `type`==`tunnel`
func (o GatewayBgpConfigOutput) TunnelName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayBgpConfig) *string { return v.TunnelName }).(pulumi.StringPtrOutput)
}

// enum: `external`, `internal`
func (o GatewayBgpConfigOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayBgpConfig) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// network name. enum: `lan`, `tunnel`, `vpn`, `wan`
func (o GatewayBgpConfigOutput) Via() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayBgpConfig) *string { return v.Via }).(pulumi.StringPtrOutput)
}

func (o GatewayBgpConfigOutput) VpnName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayBgpConfig) *string { return v.VpnName }).(pulumi.StringPtrOutput)
}

// If `via`==`wan`
func (o GatewayBgpConfigOutput) WanName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayBgpConfig) *string { return v.WanName }).(pulumi.StringPtrOutput)
}

type GatewayBgpConfigMapOutput struct{ *pulumi.OutputState }

func (GatewayBgpConfigMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]GatewayBgpConfig)(nil)).Elem()
}

func (o GatewayBgpConfigMapOutput) ToGatewayBgpConfigMapOutput() GatewayBgpConfigMapOutput {
	return o
}

func (o GatewayBgpConfigMapOutput) ToGatewayBgpConfigMapOutputWithContext(ctx context.Context) GatewayBgpConfigMapOutput {
	return o
}

func (o GatewayBgpConfigMapOutput) MapIndex(k pulumi.StringInput) GatewayBgpConfigOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) GatewayBgpConfig {
		return vs[0].(map[string]GatewayBgpConfig)[vs[1].(string)]
	}).(GatewayBgpConfigOutput)
}

type GatewayBgpConfigNeighbors struct {
	// If true, the BGP session to this neighbor will be administratively disabled/shutdown
	Disabled     *bool   `pulumi:"disabled"`
	ExportPolicy *string `pulumi:"exportPolicy"`
	HoldTime     *int    `pulumi:"holdTime"`
	ImportPolicy *string `pulumi:"importPolicy"`
	// Assuming BGP neighbor is directly connected
	MultihopTtl *int `pulumi:"multihopTtl"`
	// Neighbor AS. Value must be in range 1-4294967295 or a variable (e.g. `{{as_variable}}`)
	NeighborAs *string `pulumi:"neighborAs"`
}

// GatewayBgpConfigNeighborsInput is an input type that accepts GatewayBgpConfigNeighborsArgs and GatewayBgpConfigNeighborsOutput values.
// You can construct a concrete instance of `GatewayBgpConfigNeighborsInput` via:
//
//	GatewayBgpConfigNeighborsArgs{...}
type GatewayBgpConfigNeighborsInput interface {
	pulumi.Input

	ToGatewayBgpConfigNeighborsOutput() GatewayBgpConfigNeighborsOutput
	ToGatewayBgpConfigNeighborsOutputWithContext(context.Context) GatewayBgpConfigNeighborsOutput
}

type GatewayBgpConfigNeighborsArgs struct {
	// If true, the BGP session to this neighbor will be administratively disabled/shutdown
	Disabled     pulumi.BoolPtrInput   `pulumi:"disabled"`
	ExportPolicy pulumi.StringPtrInput `pulumi:"exportPolicy"`
	HoldTime     pulumi.IntPtrInput    `pulumi:"holdTime"`
	ImportPolicy pulumi.StringPtrInput `pulumi:"importPolicy"`
	// Assuming BGP neighbor is directly connected
	MultihopTtl pulumi.IntPtrInput `pulumi:"multihopTtl"`
	// Neighbor AS. Value must be in range 1-4294967295 or a variable (e.g. `{{as_variable}}`)
	NeighborAs pulumi.StringPtrInput `pulumi:"neighborAs"`
}

func (GatewayBgpConfigNeighborsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayBgpConfigNeighbors)(nil)).Elem()
}

func (i GatewayBgpConfigNeighborsArgs) ToGatewayBgpConfigNeighborsOutput() GatewayBgpConfigNeighborsOutput {
	return i.ToGatewayBgpConfigNeighborsOutputWithContext(context.Background())
}

func (i GatewayBgpConfigNeighborsArgs) ToGatewayBgpConfigNeighborsOutputWithContext(ctx context.Context) GatewayBgpConfigNeighborsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayBgpConfigNeighborsOutput)
}

// GatewayBgpConfigNeighborsMapInput is an input type that accepts GatewayBgpConfigNeighborsMap and GatewayBgpConfigNeighborsMapOutput values.
// You can construct a concrete instance of `GatewayBgpConfigNeighborsMapInput` via:
//
//	GatewayBgpConfigNeighborsMap{ "key": GatewayBgpConfigNeighborsArgs{...} }
type GatewayBgpConfigNeighborsMapInput interface {
	pulumi.Input

	ToGatewayBgpConfigNeighborsMapOutput() GatewayBgpConfigNeighborsMapOutput
	ToGatewayBgpConfigNeighborsMapOutputWithContext(context.Context) GatewayBgpConfigNeighborsMapOutput
}

type GatewayBgpConfigNeighborsMap map[string]GatewayBgpConfigNeighborsInput

func (GatewayBgpConfigNeighborsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]GatewayBgpConfigNeighbors)(nil)).Elem()
}

func (i GatewayBgpConfigNeighborsMap) ToGatewayBgpConfigNeighborsMapOutput() GatewayBgpConfigNeighborsMapOutput {
	return i.ToGatewayBgpConfigNeighborsMapOutputWithContext(context.Background())
}

func (i GatewayBgpConfigNeighborsMap) ToGatewayBgpConfigNeighborsMapOutputWithContext(ctx context.Context) GatewayBgpConfigNeighborsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayBgpConfigNeighborsMapOutput)
}

type GatewayBgpConfigNeighborsOutput struct{ *pulumi.OutputState }

func (GatewayBgpConfigNeighborsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayBgpConfigNeighbors)(nil)).Elem()
}

func (o GatewayBgpConfigNeighborsOutput) ToGatewayBgpConfigNeighborsOutput() GatewayBgpConfigNeighborsOutput {
	return o
}

func (o GatewayBgpConfigNeighborsOutput) ToGatewayBgpConfigNeighborsOutputWithContext(ctx context.Context) GatewayBgpConfigNeighborsOutput {
	return o
}

// If true, the BGP session to this neighbor will be administratively disabled/shutdown
func (o GatewayBgpConfigNeighborsOutput) Disabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GatewayBgpConfigNeighbors) *bool { return v.Disabled }).(pulumi.BoolPtrOutput)
}

func (o GatewayBgpConfigNeighborsOutput) ExportPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayBgpConfigNeighbors) *string { return v.ExportPolicy }).(pulumi.StringPtrOutput)
}

func (o GatewayBgpConfigNeighborsOutput) HoldTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GatewayBgpConfigNeighbors) *int { return v.HoldTime }).(pulumi.IntPtrOutput)
}

func (o GatewayBgpConfigNeighborsOutput) ImportPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayBgpConfigNeighbors) *string { return v.ImportPolicy }).(pulumi.StringPtrOutput)
}

// Assuming BGP neighbor is directly connected
func (o GatewayBgpConfigNeighborsOutput) MultihopTtl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GatewayBgpConfigNeighbors) *int { return v.MultihopTtl }).(pulumi.IntPtrOutput)
}

// Neighbor AS. Value must be in range 1-4294967295 or a variable (e.g. `{{as_variable}}`)
func (o GatewayBgpConfigNeighborsOutput) NeighborAs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayBgpConfigNeighbors) *string { return v.NeighborAs }).(pulumi.StringPtrOutput)
}

type GatewayBgpConfigNeighborsMapOutput struct{ *pulumi.OutputState }

func (GatewayBgpConfigNeighborsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]GatewayBgpConfigNeighbors)(nil)).Elem()
}

func (o GatewayBgpConfigNeighborsMapOutput) ToGatewayBgpConfigNeighborsMapOutput() GatewayBgpConfigNeighborsMapOutput {
	return o
}

func (o GatewayBgpConfigNeighborsMapOutput) ToGatewayBgpConfigNeighborsMapOutputWithContext(ctx context.Context) GatewayBgpConfigNeighborsMapOutput {
	return o
}

func (o GatewayBgpConfigNeighborsMapOutput) MapIndex(k pulumi.StringInput) GatewayBgpConfigNeighborsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) GatewayBgpConfigNeighbors {
		return vs[0].(map[string]GatewayBgpConfigNeighbors)[vs[1].(string)]
	}).(GatewayBgpConfigNeighborsOutput)
}

type GatewayClusterNode struct {
	// Gateway MAC Address. Format is `[0-9a-f]{12}` (e.g. "5684dae9ac8b")
	Mac string `pulumi:"mac"`
}

// GatewayClusterNodeInput is an input type that accepts GatewayClusterNodeArgs and GatewayClusterNodeOutput values.
// You can construct a concrete instance of `GatewayClusterNodeInput` via:
//
//	GatewayClusterNodeArgs{...}
type GatewayClusterNodeInput interface {
	pulumi.Input

	ToGatewayClusterNodeOutput() GatewayClusterNodeOutput
	ToGatewayClusterNodeOutputWithContext(context.Context) GatewayClusterNodeOutput
}

type GatewayClusterNodeArgs struct {
	// Gateway MAC Address. Format is `[0-9a-f]{12}` (e.g. "5684dae9ac8b")
	Mac pulumi.StringInput `pulumi:"mac"`
}

func (GatewayClusterNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayClusterNode)(nil)).Elem()
}

func (i GatewayClusterNodeArgs) ToGatewayClusterNodeOutput() GatewayClusterNodeOutput {
	return i.ToGatewayClusterNodeOutputWithContext(context.Background())
}

func (i GatewayClusterNodeArgs) ToGatewayClusterNodeOutputWithContext(ctx context.Context) GatewayClusterNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayClusterNodeOutput)
}

// GatewayClusterNodeArrayInput is an input type that accepts GatewayClusterNodeArray and GatewayClusterNodeArrayOutput values.
// You can construct a concrete instance of `GatewayClusterNodeArrayInput` via:
//
//	GatewayClusterNodeArray{ GatewayClusterNodeArgs{...} }
type GatewayClusterNodeArrayInput interface {
	pulumi.Input

	ToGatewayClusterNodeArrayOutput() GatewayClusterNodeArrayOutput
	ToGatewayClusterNodeArrayOutputWithContext(context.Context) GatewayClusterNodeArrayOutput
}

type GatewayClusterNodeArray []GatewayClusterNodeInput

func (GatewayClusterNodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GatewayClusterNode)(nil)).Elem()
}

func (i GatewayClusterNodeArray) ToGatewayClusterNodeArrayOutput() GatewayClusterNodeArrayOutput {
	return i.ToGatewayClusterNodeArrayOutputWithContext(context.Background())
}

func (i GatewayClusterNodeArray) ToGatewayClusterNodeArrayOutputWithContext(ctx context.Context) GatewayClusterNodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayClusterNodeArrayOutput)
}

type GatewayClusterNodeOutput struct{ *pulumi.OutputState }

func (GatewayClusterNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayClusterNode)(nil)).Elem()
}

func (o GatewayClusterNodeOutput) ToGatewayClusterNodeOutput() GatewayClusterNodeOutput {
	return o
}

func (o GatewayClusterNodeOutput) ToGatewayClusterNodeOutputWithContext(ctx context.Context) GatewayClusterNodeOutput {
	return o
}

// Gateway MAC Address. Format is `[0-9a-f]{12}` (e.g. "5684dae9ac8b")
func (o GatewayClusterNodeOutput) Mac() pulumi.StringOutput {
	return o.ApplyT(func(v GatewayClusterNode) string { return v.Mac }).(pulumi.StringOutput)
}

type GatewayClusterNodeArrayOutput struct{ *pulumi.OutputState }

func (GatewayClusterNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GatewayClusterNode)(nil)).Elem()
}

func (o GatewayClusterNodeArrayOutput) ToGatewayClusterNodeArrayOutput() GatewayClusterNodeArrayOutput {
	return o
}

func (o GatewayClusterNodeArrayOutput) ToGatewayClusterNodeArrayOutputWithContext(ctx context.Context) GatewayClusterNodeArrayOutput {
	return o
}

func (o GatewayClusterNodeArrayOutput) Index(i pulumi.IntInput) GatewayClusterNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GatewayClusterNode {
		return vs[0].([]GatewayClusterNode)[vs[1].(int)]
	}).(GatewayClusterNodeOutput)
}

type GatewayDhcpdConfig struct {
	// Property key is the network name
	Config map[string]GatewayDhcpdConfigConfig `pulumi:"config"`
	// If set to `false`, disable the DHCP server
	Enabled *bool `pulumi:"enabled"`
}

// GatewayDhcpdConfigInput is an input type that accepts GatewayDhcpdConfigArgs and GatewayDhcpdConfigOutput values.
// You can construct a concrete instance of `GatewayDhcpdConfigInput` via:
//
//	GatewayDhcpdConfigArgs{...}
type GatewayDhcpdConfigInput interface {
	pulumi.Input

	ToGatewayDhcpdConfigOutput() GatewayDhcpdConfigOutput
	ToGatewayDhcpdConfigOutputWithContext(context.Context) GatewayDhcpdConfigOutput
}

type GatewayDhcpdConfigArgs struct {
	// Property key is the network name
	Config GatewayDhcpdConfigConfigMapInput `pulumi:"config"`
	// If set to `false`, disable the DHCP server
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (GatewayDhcpdConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayDhcpdConfig)(nil)).Elem()
}

func (i GatewayDhcpdConfigArgs) ToGatewayDhcpdConfigOutput() GatewayDhcpdConfigOutput {
	return i.ToGatewayDhcpdConfigOutputWithContext(context.Background())
}

func (i GatewayDhcpdConfigArgs) ToGatewayDhcpdConfigOutputWithContext(ctx context.Context) GatewayDhcpdConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayDhcpdConfigOutput)
}

func (i GatewayDhcpdConfigArgs) ToGatewayDhcpdConfigPtrOutput() GatewayDhcpdConfigPtrOutput {
	return i.ToGatewayDhcpdConfigPtrOutputWithContext(context.Background())
}

func (i GatewayDhcpdConfigArgs) ToGatewayDhcpdConfigPtrOutputWithContext(ctx context.Context) GatewayDhcpdConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayDhcpdConfigOutput).ToGatewayDhcpdConfigPtrOutputWithContext(ctx)
}

// GatewayDhcpdConfigPtrInput is an input type that accepts GatewayDhcpdConfigArgs, GatewayDhcpdConfigPtr and GatewayDhcpdConfigPtrOutput values.
// You can construct a concrete instance of `GatewayDhcpdConfigPtrInput` via:
//
//	        GatewayDhcpdConfigArgs{...}
//
//	or:
//
//	        nil
type GatewayDhcpdConfigPtrInput interface {
	pulumi.Input

	ToGatewayDhcpdConfigPtrOutput() GatewayDhcpdConfigPtrOutput
	ToGatewayDhcpdConfigPtrOutputWithContext(context.Context) GatewayDhcpdConfigPtrOutput
}

type gatewayDhcpdConfigPtrType GatewayDhcpdConfigArgs

func GatewayDhcpdConfigPtr(v *GatewayDhcpdConfigArgs) GatewayDhcpdConfigPtrInput {
	return (*gatewayDhcpdConfigPtrType)(v)
}

func (*gatewayDhcpdConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayDhcpdConfig)(nil)).Elem()
}

func (i *gatewayDhcpdConfigPtrType) ToGatewayDhcpdConfigPtrOutput() GatewayDhcpdConfigPtrOutput {
	return i.ToGatewayDhcpdConfigPtrOutputWithContext(context.Background())
}

func (i *gatewayDhcpdConfigPtrType) ToGatewayDhcpdConfigPtrOutputWithContext(ctx context.Context) GatewayDhcpdConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayDhcpdConfigPtrOutput)
}

type GatewayDhcpdConfigOutput struct{ *pulumi.OutputState }

func (GatewayDhcpdConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayDhcpdConfig)(nil)).Elem()
}

func (o GatewayDhcpdConfigOutput) ToGatewayDhcpdConfigOutput() GatewayDhcpdConfigOutput {
	return o
}

func (o GatewayDhcpdConfigOutput) ToGatewayDhcpdConfigOutputWithContext(ctx context.Context) GatewayDhcpdConfigOutput {
	return o
}

func (o GatewayDhcpdConfigOutput) ToGatewayDhcpdConfigPtrOutput() GatewayDhcpdConfigPtrOutput {
	return o.ToGatewayDhcpdConfigPtrOutputWithContext(context.Background())
}

func (o GatewayDhcpdConfigOutput) ToGatewayDhcpdConfigPtrOutputWithContext(ctx context.Context) GatewayDhcpdConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayDhcpdConfig) *GatewayDhcpdConfig {
		return &v
	}).(GatewayDhcpdConfigPtrOutput)
}

// Property key is the network name
func (o GatewayDhcpdConfigOutput) Config() GatewayDhcpdConfigConfigMapOutput {
	return o.ApplyT(func(v GatewayDhcpdConfig) map[string]GatewayDhcpdConfigConfig { return v.Config }).(GatewayDhcpdConfigConfigMapOutput)
}

// If set to `false`, disable the DHCP server
func (o GatewayDhcpdConfigOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GatewayDhcpdConfig) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type GatewayDhcpdConfigPtrOutput struct{ *pulumi.OutputState }

func (GatewayDhcpdConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayDhcpdConfig)(nil)).Elem()
}

func (o GatewayDhcpdConfigPtrOutput) ToGatewayDhcpdConfigPtrOutput() GatewayDhcpdConfigPtrOutput {
	return o
}

func (o GatewayDhcpdConfigPtrOutput) ToGatewayDhcpdConfigPtrOutputWithContext(ctx context.Context) GatewayDhcpdConfigPtrOutput {
	return o
}

func (o GatewayDhcpdConfigPtrOutput) Elem() GatewayDhcpdConfigOutput {
	return o.ApplyT(func(v *GatewayDhcpdConfig) GatewayDhcpdConfig {
		if v != nil {
			return *v
		}
		var ret GatewayDhcpdConfig
		return ret
	}).(GatewayDhcpdConfigOutput)
}

// Property key is the network name
func (o GatewayDhcpdConfigPtrOutput) Config() GatewayDhcpdConfigConfigMapOutput {
	return o.ApplyT(func(v *GatewayDhcpdConfig) map[string]GatewayDhcpdConfigConfig {
		if v == nil {
			return nil
		}
		return v.Config
	}).(GatewayDhcpdConfigConfigMapOutput)
}

// If set to `false`, disable the DHCP server
func (o GatewayDhcpdConfigPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GatewayDhcpdConfig) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type GatewayDhcpdConfigConfig struct {
	// If `type`==`local` or `type6`==`local` - optional, if not defined, system one will be used
	DnsServers []string `pulumi:"dnsServers"`
	// If `type`==`local` or `type6`==`local` - optional, if not defined, system one will be used
	DnsSuffixes []string `pulumi:"dnsSuffixes"`
	// If `type`==`local` or `type6`==`local`. Property key is the MAC Address. Format is `[0-9a-f]{12}` (e.g. "5684dae9ac8b")
	FixedBindings map[string]GatewayDhcpdConfigConfigFixedBindings `pulumi:"fixedBindings"`
	// If `type`==`local` - optional, `ip` will be used if not provided
	Gateway *string `pulumi:"gateway"`
	// If `type`==`local`
	IpEnd *string `pulumi:"ipEnd"`
	// If `type6`==`local`
	IpEnd6 *string `pulumi:"ipEnd6"`
	// If `type`==`local`
	IpStart *string `pulumi:"ipStart"`
	// If `type6`==`local`
	IpStart6 *string `pulumi:"ipStart6"`
	// In seconds, lease time has to be between 3600 [1hr] - 604800 [1 week], default is 86400 [1 day]
	LeaseTime *int `pulumi:"leaseTime"`
	// If `type`==`local` or `type6`==`local`. Property key is the DHCP option number
	Options map[string]GatewayDhcpdConfigConfigOptions `pulumi:"options"`
	// `serverIdOverride`==`true` means the device, when acts as DHCP relay and forwards DHCP responses from DHCP server to clients,
	// should overwrite the Sever Identifier option (i.e. DHCP option 54) in DHCP responses with its own IP address.
	ServerIdOverride *bool `pulumi:"serverIdOverride"`
	// If `type`==`relay`
	Servers []string `pulumi:"servers"`
	// If `type6`==`relay`
	Servers6s []string `pulumi:"servers6s"`
	// enum: `local` (DHCP Server), `none`, `relay` (DHCP Relay)
	Type *string `pulumi:"type"`
	// enum: `local` (DHCP Server), `none`, `relay` (DHCP Relay)
	Type6 *string `pulumi:"type6"`
	// If `type`==`local` or `type6`==`local`. Property key is <enterprise number>:<sub option code>, with
	//   * enterprise number: 1-65535 (https://www.iana.org/assignments/enterprise-numbers/enterprise-numbers)
	//   * sub option code: 1-255, sub-option code
	VendorEncapsulated map[string]GatewayDhcpdConfigConfigVendorEncapsulated `pulumi:"vendorEncapsulated"`
}

// GatewayDhcpdConfigConfigInput is an input type that accepts GatewayDhcpdConfigConfigArgs and GatewayDhcpdConfigConfigOutput values.
// You can construct a concrete instance of `GatewayDhcpdConfigConfigInput` via:
//
//	GatewayDhcpdConfigConfigArgs{...}
type GatewayDhcpdConfigConfigInput interface {
	pulumi.Input

	ToGatewayDhcpdConfigConfigOutput() GatewayDhcpdConfigConfigOutput
	ToGatewayDhcpdConfigConfigOutputWithContext(context.Context) GatewayDhcpdConfigConfigOutput
}

type GatewayDhcpdConfigConfigArgs struct {
	// If `type`==`local` or `type6`==`local` - optional, if not defined, system one will be used
	DnsServers pulumi.StringArrayInput `pulumi:"dnsServers"`
	// If `type`==`local` or `type6`==`local` - optional, if not defined, system one will be used
	DnsSuffixes pulumi.StringArrayInput `pulumi:"dnsSuffixes"`
	// If `type`==`local` or `type6`==`local`. Property key is the MAC Address. Format is `[0-9a-f]{12}` (e.g. "5684dae9ac8b")
	FixedBindings GatewayDhcpdConfigConfigFixedBindingsMapInput `pulumi:"fixedBindings"`
	// If `type`==`local` - optional, `ip` will be used if not provided
	Gateway pulumi.StringPtrInput `pulumi:"gateway"`
	// If `type`==`local`
	IpEnd pulumi.StringPtrInput `pulumi:"ipEnd"`
	// If `type6`==`local`
	IpEnd6 pulumi.StringPtrInput `pulumi:"ipEnd6"`
	// If `type`==`local`
	IpStart pulumi.StringPtrInput `pulumi:"ipStart"`
	// If `type6`==`local`
	IpStart6 pulumi.StringPtrInput `pulumi:"ipStart6"`
	// In seconds, lease time has to be between 3600 [1hr] - 604800 [1 week], default is 86400 [1 day]
	LeaseTime pulumi.IntPtrInput `pulumi:"leaseTime"`
	// If `type`==`local` or `type6`==`local`. Property key is the DHCP option number
	Options GatewayDhcpdConfigConfigOptionsMapInput `pulumi:"options"`
	// `serverIdOverride`==`true` means the device, when acts as DHCP relay and forwards DHCP responses from DHCP server to clients,
	// should overwrite the Sever Identifier option (i.e. DHCP option 54) in DHCP responses with its own IP address.
	ServerIdOverride pulumi.BoolPtrInput `pulumi:"serverIdOverride"`
	// If `type`==`relay`
	Servers pulumi.StringArrayInput `pulumi:"servers"`
	// If `type6`==`relay`
	Servers6s pulumi.StringArrayInput `pulumi:"servers6s"`
	// enum: `local` (DHCP Server), `none`, `relay` (DHCP Relay)
	Type pulumi.StringPtrInput `pulumi:"type"`
	// enum: `local` (DHCP Server), `none`, `relay` (DHCP Relay)
	Type6 pulumi.StringPtrInput `pulumi:"type6"`
	// If `type`==`local` or `type6`==`local`. Property key is <enterprise number>:<sub option code>, with
	//   * enterprise number: 1-65535 (https://www.iana.org/assignments/enterprise-numbers/enterprise-numbers)
	//   * sub option code: 1-255, sub-option code
	VendorEncapsulated GatewayDhcpdConfigConfigVendorEncapsulatedMapInput `pulumi:"vendorEncapsulated"`
}

func (GatewayDhcpdConfigConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayDhcpdConfigConfig)(nil)).Elem()
}

func (i GatewayDhcpdConfigConfigArgs) ToGatewayDhcpdConfigConfigOutput() GatewayDhcpdConfigConfigOutput {
	return i.ToGatewayDhcpdConfigConfigOutputWithContext(context.Background())
}

func (i GatewayDhcpdConfigConfigArgs) ToGatewayDhcpdConfigConfigOutputWithContext(ctx context.Context) GatewayDhcpdConfigConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayDhcpdConfigConfigOutput)
}

// GatewayDhcpdConfigConfigMapInput is an input type that accepts GatewayDhcpdConfigConfigMap and GatewayDhcpdConfigConfigMapOutput values.
// You can construct a concrete instance of `GatewayDhcpdConfigConfigMapInput` via:
//
//	GatewayDhcpdConfigConfigMap{ "key": GatewayDhcpdConfigConfigArgs{...} }
type GatewayDhcpdConfigConfigMapInput interface {
	pulumi.Input

	ToGatewayDhcpdConfigConfigMapOutput() GatewayDhcpdConfigConfigMapOutput
	ToGatewayDhcpdConfigConfigMapOutputWithContext(context.Context) GatewayDhcpdConfigConfigMapOutput
}

type GatewayDhcpdConfigConfigMap map[string]GatewayDhcpdConfigConfigInput

func (GatewayDhcpdConfigConfigMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]GatewayDhcpdConfigConfig)(nil)).Elem()
}

func (i GatewayDhcpdConfigConfigMap) ToGatewayDhcpdConfigConfigMapOutput() GatewayDhcpdConfigConfigMapOutput {
	return i.ToGatewayDhcpdConfigConfigMapOutputWithContext(context.Background())
}

func (i GatewayDhcpdConfigConfigMap) ToGatewayDhcpdConfigConfigMapOutputWithContext(ctx context.Context) GatewayDhcpdConfigConfigMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayDhcpdConfigConfigMapOutput)
}

type GatewayDhcpdConfigConfigOutput struct{ *pulumi.OutputState }

func (GatewayDhcpdConfigConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayDhcpdConfigConfig)(nil)).Elem()
}

func (o GatewayDhcpdConfigConfigOutput) ToGatewayDhcpdConfigConfigOutput() GatewayDhcpdConfigConfigOutput {
	return o
}

func (o GatewayDhcpdConfigConfigOutput) ToGatewayDhcpdConfigConfigOutputWithContext(ctx context.Context) GatewayDhcpdConfigConfigOutput {
	return o
}

// If `type`==`local` or `type6`==`local` - optional, if not defined, system one will be used
func (o GatewayDhcpdConfigConfigOutput) DnsServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GatewayDhcpdConfigConfig) []string { return v.DnsServers }).(pulumi.StringArrayOutput)
}

// If `type`==`local` or `type6`==`local` - optional, if not defined, system one will be used
func (o GatewayDhcpdConfigConfigOutput) DnsSuffixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GatewayDhcpdConfigConfig) []string { return v.DnsSuffixes }).(pulumi.StringArrayOutput)
}

// If `type`==`local` or `type6`==`local`. Property key is the MAC Address. Format is `[0-9a-f]{12}` (e.g. "5684dae9ac8b")
func (o GatewayDhcpdConfigConfigOutput) FixedBindings() GatewayDhcpdConfigConfigFixedBindingsMapOutput {
	return o.ApplyT(func(v GatewayDhcpdConfigConfig) map[string]GatewayDhcpdConfigConfigFixedBindings {
		return v.FixedBindings
	}).(GatewayDhcpdConfigConfigFixedBindingsMapOutput)
}

// If `type`==`local` - optional, `ip` will be used if not provided
func (o GatewayDhcpdConfigConfigOutput) Gateway() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayDhcpdConfigConfig) *string { return v.Gateway }).(pulumi.StringPtrOutput)
}

// If `type`==`local`
func (o GatewayDhcpdConfigConfigOutput) IpEnd() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayDhcpdConfigConfig) *string { return v.IpEnd }).(pulumi.StringPtrOutput)
}

// If `type6`==`local`
func (o GatewayDhcpdConfigConfigOutput) IpEnd6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayDhcpdConfigConfig) *string { return v.IpEnd6 }).(pulumi.StringPtrOutput)
}

// If `type`==`local`
func (o GatewayDhcpdConfigConfigOutput) IpStart() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayDhcpdConfigConfig) *string { return v.IpStart }).(pulumi.StringPtrOutput)
}

// If `type6`==`local`
func (o GatewayDhcpdConfigConfigOutput) IpStart6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayDhcpdConfigConfig) *string { return v.IpStart6 }).(pulumi.StringPtrOutput)
}

// In seconds, lease time has to be between 3600 [1hr] - 604800 [1 week], default is 86400 [1 day]
func (o GatewayDhcpdConfigConfigOutput) LeaseTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GatewayDhcpdConfigConfig) *int { return v.LeaseTime }).(pulumi.IntPtrOutput)
}

// If `type`==`local` or `type6`==`local`. Property key is the DHCP option number
func (o GatewayDhcpdConfigConfigOutput) Options() GatewayDhcpdConfigConfigOptionsMapOutput {
	return o.ApplyT(func(v GatewayDhcpdConfigConfig) map[string]GatewayDhcpdConfigConfigOptions { return v.Options }).(GatewayDhcpdConfigConfigOptionsMapOutput)
}

// `serverIdOverride`==`true` means the device, when acts as DHCP relay and forwards DHCP responses from DHCP server to clients,
// should overwrite the Sever Identifier option (i.e. DHCP option 54) in DHCP responses with its own IP address.
func (o GatewayDhcpdConfigConfigOutput) ServerIdOverride() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GatewayDhcpdConfigConfig) *bool { return v.ServerIdOverride }).(pulumi.BoolPtrOutput)
}

// If `type`==`relay`
func (o GatewayDhcpdConfigConfigOutput) Servers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GatewayDhcpdConfigConfig) []string { return v.Servers }).(pulumi.StringArrayOutput)
}

// If `type6`==`relay`
func (o GatewayDhcpdConfigConfigOutput) Servers6s() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GatewayDhcpdConfigConfig) []string { return v.Servers6s }).(pulumi.StringArrayOutput)
}

// enum: `local` (DHCP Server), `none`, `relay` (DHCP Relay)
func (o GatewayDhcpdConfigConfigOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayDhcpdConfigConfig) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// enum: `local` (DHCP Server), `none`, `relay` (DHCP Relay)
func (o GatewayDhcpdConfigConfigOutput) Type6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayDhcpdConfigConfig) *string { return v.Type6 }).(pulumi.StringPtrOutput)
}

// If `type`==`local` or `type6`==`local`. Property key is <enterprise number>:<sub option code>, with
//   - enterprise number: 1-65535 (https://www.iana.org/assignments/enterprise-numbers/enterprise-numbers)
//   - sub option code: 1-255, sub-option code
func (o GatewayDhcpdConfigConfigOutput) VendorEncapsulated() GatewayDhcpdConfigConfigVendorEncapsulatedMapOutput {
	return o.ApplyT(func(v GatewayDhcpdConfigConfig) map[string]GatewayDhcpdConfigConfigVendorEncapsulated {
		return v.VendorEncapsulated
	}).(GatewayDhcpdConfigConfigVendorEncapsulatedMapOutput)
}

type GatewayDhcpdConfigConfigMapOutput struct{ *pulumi.OutputState }

func (GatewayDhcpdConfigConfigMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]GatewayDhcpdConfigConfig)(nil)).Elem()
}

func (o GatewayDhcpdConfigConfigMapOutput) ToGatewayDhcpdConfigConfigMapOutput() GatewayDhcpdConfigConfigMapOutput {
	return o
}

func (o GatewayDhcpdConfigConfigMapOutput) ToGatewayDhcpdConfigConfigMapOutputWithContext(ctx context.Context) GatewayDhcpdConfigConfigMapOutput {
	return o
}

func (o GatewayDhcpdConfigConfigMapOutput) MapIndex(k pulumi.StringInput) GatewayDhcpdConfigConfigOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) GatewayDhcpdConfigConfig {
		return vs[0].(map[string]GatewayDhcpdConfigConfig)[vs[1].(string)]
	}).(GatewayDhcpdConfigConfigOutput)
}

type GatewayDhcpdConfigConfigFixedBindings struct {
	Ip   string  `pulumi:"ip"`
	Name *string `pulumi:"name"`
}

// GatewayDhcpdConfigConfigFixedBindingsInput is an input type that accepts GatewayDhcpdConfigConfigFixedBindingsArgs and GatewayDhcpdConfigConfigFixedBindingsOutput values.
// You can construct a concrete instance of `GatewayDhcpdConfigConfigFixedBindingsInput` via:
//
//	GatewayDhcpdConfigConfigFixedBindingsArgs{...}
type GatewayDhcpdConfigConfigFixedBindingsInput interface {
	pulumi.Input

	ToGatewayDhcpdConfigConfigFixedBindingsOutput() GatewayDhcpdConfigConfigFixedBindingsOutput
	ToGatewayDhcpdConfigConfigFixedBindingsOutputWithContext(context.Context) GatewayDhcpdConfigConfigFixedBindingsOutput
}

type GatewayDhcpdConfigConfigFixedBindingsArgs struct {
	Ip   pulumi.StringInput    `pulumi:"ip"`
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (GatewayDhcpdConfigConfigFixedBindingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayDhcpdConfigConfigFixedBindings)(nil)).Elem()
}

func (i GatewayDhcpdConfigConfigFixedBindingsArgs) ToGatewayDhcpdConfigConfigFixedBindingsOutput() GatewayDhcpdConfigConfigFixedBindingsOutput {
	return i.ToGatewayDhcpdConfigConfigFixedBindingsOutputWithContext(context.Background())
}

func (i GatewayDhcpdConfigConfigFixedBindingsArgs) ToGatewayDhcpdConfigConfigFixedBindingsOutputWithContext(ctx context.Context) GatewayDhcpdConfigConfigFixedBindingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayDhcpdConfigConfigFixedBindingsOutput)
}

// GatewayDhcpdConfigConfigFixedBindingsMapInput is an input type that accepts GatewayDhcpdConfigConfigFixedBindingsMap and GatewayDhcpdConfigConfigFixedBindingsMapOutput values.
// You can construct a concrete instance of `GatewayDhcpdConfigConfigFixedBindingsMapInput` via:
//
//	GatewayDhcpdConfigConfigFixedBindingsMap{ "key": GatewayDhcpdConfigConfigFixedBindingsArgs{...} }
type GatewayDhcpdConfigConfigFixedBindingsMapInput interface {
	pulumi.Input

	ToGatewayDhcpdConfigConfigFixedBindingsMapOutput() GatewayDhcpdConfigConfigFixedBindingsMapOutput
	ToGatewayDhcpdConfigConfigFixedBindingsMapOutputWithContext(context.Context) GatewayDhcpdConfigConfigFixedBindingsMapOutput
}

type GatewayDhcpdConfigConfigFixedBindingsMap map[string]GatewayDhcpdConfigConfigFixedBindingsInput

func (GatewayDhcpdConfigConfigFixedBindingsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]GatewayDhcpdConfigConfigFixedBindings)(nil)).Elem()
}

func (i GatewayDhcpdConfigConfigFixedBindingsMap) ToGatewayDhcpdConfigConfigFixedBindingsMapOutput() GatewayDhcpdConfigConfigFixedBindingsMapOutput {
	return i.ToGatewayDhcpdConfigConfigFixedBindingsMapOutputWithContext(context.Background())
}

func (i GatewayDhcpdConfigConfigFixedBindingsMap) ToGatewayDhcpdConfigConfigFixedBindingsMapOutputWithContext(ctx context.Context) GatewayDhcpdConfigConfigFixedBindingsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayDhcpdConfigConfigFixedBindingsMapOutput)
}

type GatewayDhcpdConfigConfigFixedBindingsOutput struct{ *pulumi.OutputState }

func (GatewayDhcpdConfigConfigFixedBindingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayDhcpdConfigConfigFixedBindings)(nil)).Elem()
}

func (o GatewayDhcpdConfigConfigFixedBindingsOutput) ToGatewayDhcpdConfigConfigFixedBindingsOutput() GatewayDhcpdConfigConfigFixedBindingsOutput {
	return o
}

func (o GatewayDhcpdConfigConfigFixedBindingsOutput) ToGatewayDhcpdConfigConfigFixedBindingsOutputWithContext(ctx context.Context) GatewayDhcpdConfigConfigFixedBindingsOutput {
	return o
}

func (o GatewayDhcpdConfigConfigFixedBindingsOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v GatewayDhcpdConfigConfigFixedBindings) string { return v.Ip }).(pulumi.StringOutput)
}

func (o GatewayDhcpdConfigConfigFixedBindingsOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayDhcpdConfigConfigFixedBindings) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type GatewayDhcpdConfigConfigFixedBindingsMapOutput struct{ *pulumi.OutputState }

func (GatewayDhcpdConfigConfigFixedBindingsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]GatewayDhcpdConfigConfigFixedBindings)(nil)).Elem()
}

func (o GatewayDhcpdConfigConfigFixedBindingsMapOutput) ToGatewayDhcpdConfigConfigFixedBindingsMapOutput() GatewayDhcpdConfigConfigFixedBindingsMapOutput {
	return o
}

func (o GatewayDhcpdConfigConfigFixedBindingsMapOutput) ToGatewayDhcpdConfigConfigFixedBindingsMapOutputWithContext(ctx context.Context) GatewayDhcpdConfigConfigFixedBindingsMapOutput {
	return o
}

func (o GatewayDhcpdConfigConfigFixedBindingsMapOutput) MapIndex(k pulumi.StringInput) GatewayDhcpdConfigConfigFixedBindingsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) GatewayDhcpdConfigConfigFixedBindings {
		return vs[0].(map[string]GatewayDhcpdConfigConfigFixedBindings)[vs[1].(string)]
	}).(GatewayDhcpdConfigConfigFixedBindingsOutput)
}

type GatewayDhcpdConfigConfigOptions struct {
	// enum: `boolean`, `hex`, `int16`, `int32`, `ip`, `string`, `uint16`, `uint32`
	Type  *string `pulumi:"type"`
	Value *string `pulumi:"value"`
}

// GatewayDhcpdConfigConfigOptionsInput is an input type that accepts GatewayDhcpdConfigConfigOptionsArgs and GatewayDhcpdConfigConfigOptionsOutput values.
// You can construct a concrete instance of `GatewayDhcpdConfigConfigOptionsInput` via:
//
//	GatewayDhcpdConfigConfigOptionsArgs{...}
type GatewayDhcpdConfigConfigOptionsInput interface {
	pulumi.Input

	ToGatewayDhcpdConfigConfigOptionsOutput() GatewayDhcpdConfigConfigOptionsOutput
	ToGatewayDhcpdConfigConfigOptionsOutputWithContext(context.Context) GatewayDhcpdConfigConfigOptionsOutput
}

type GatewayDhcpdConfigConfigOptionsArgs struct {
	// enum: `boolean`, `hex`, `int16`, `int32`, `ip`, `string`, `uint16`, `uint32`
	Type  pulumi.StringPtrInput `pulumi:"type"`
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (GatewayDhcpdConfigConfigOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayDhcpdConfigConfigOptions)(nil)).Elem()
}

func (i GatewayDhcpdConfigConfigOptionsArgs) ToGatewayDhcpdConfigConfigOptionsOutput() GatewayDhcpdConfigConfigOptionsOutput {
	return i.ToGatewayDhcpdConfigConfigOptionsOutputWithContext(context.Background())
}

func (i GatewayDhcpdConfigConfigOptionsArgs) ToGatewayDhcpdConfigConfigOptionsOutputWithContext(ctx context.Context) GatewayDhcpdConfigConfigOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayDhcpdConfigConfigOptionsOutput)
}

// GatewayDhcpdConfigConfigOptionsMapInput is an input type that accepts GatewayDhcpdConfigConfigOptionsMap and GatewayDhcpdConfigConfigOptionsMapOutput values.
// You can construct a concrete instance of `GatewayDhcpdConfigConfigOptionsMapInput` via:
//
//	GatewayDhcpdConfigConfigOptionsMap{ "key": GatewayDhcpdConfigConfigOptionsArgs{...} }
type GatewayDhcpdConfigConfigOptionsMapInput interface {
	pulumi.Input

	ToGatewayDhcpdConfigConfigOptionsMapOutput() GatewayDhcpdConfigConfigOptionsMapOutput
	ToGatewayDhcpdConfigConfigOptionsMapOutputWithContext(context.Context) GatewayDhcpdConfigConfigOptionsMapOutput
}

type GatewayDhcpdConfigConfigOptionsMap map[string]GatewayDhcpdConfigConfigOptionsInput

func (GatewayDhcpdConfigConfigOptionsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]GatewayDhcpdConfigConfigOptions)(nil)).Elem()
}

func (i GatewayDhcpdConfigConfigOptionsMap) ToGatewayDhcpdConfigConfigOptionsMapOutput() GatewayDhcpdConfigConfigOptionsMapOutput {
	return i.ToGatewayDhcpdConfigConfigOptionsMapOutputWithContext(context.Background())
}

func (i GatewayDhcpdConfigConfigOptionsMap) ToGatewayDhcpdConfigConfigOptionsMapOutputWithContext(ctx context.Context) GatewayDhcpdConfigConfigOptionsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayDhcpdConfigConfigOptionsMapOutput)
}

type GatewayDhcpdConfigConfigOptionsOutput struct{ *pulumi.OutputState }

func (GatewayDhcpdConfigConfigOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayDhcpdConfigConfigOptions)(nil)).Elem()
}

func (o GatewayDhcpdConfigConfigOptionsOutput) ToGatewayDhcpdConfigConfigOptionsOutput() GatewayDhcpdConfigConfigOptionsOutput {
	return o
}

func (o GatewayDhcpdConfigConfigOptionsOutput) ToGatewayDhcpdConfigConfigOptionsOutputWithContext(ctx context.Context) GatewayDhcpdConfigConfigOptionsOutput {
	return o
}

// enum: `boolean`, `hex`, `int16`, `int32`, `ip`, `string`, `uint16`, `uint32`
func (o GatewayDhcpdConfigConfigOptionsOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayDhcpdConfigConfigOptions) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o GatewayDhcpdConfigConfigOptionsOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayDhcpdConfigConfigOptions) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type GatewayDhcpdConfigConfigOptionsMapOutput struct{ *pulumi.OutputState }

func (GatewayDhcpdConfigConfigOptionsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]GatewayDhcpdConfigConfigOptions)(nil)).Elem()
}

func (o GatewayDhcpdConfigConfigOptionsMapOutput) ToGatewayDhcpdConfigConfigOptionsMapOutput() GatewayDhcpdConfigConfigOptionsMapOutput {
	return o
}

func (o GatewayDhcpdConfigConfigOptionsMapOutput) ToGatewayDhcpdConfigConfigOptionsMapOutputWithContext(ctx context.Context) GatewayDhcpdConfigConfigOptionsMapOutput {
	return o
}

func (o GatewayDhcpdConfigConfigOptionsMapOutput) MapIndex(k pulumi.StringInput) GatewayDhcpdConfigConfigOptionsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) GatewayDhcpdConfigConfigOptions {
		return vs[0].(map[string]GatewayDhcpdConfigConfigOptions)[vs[1].(string)]
	}).(GatewayDhcpdConfigConfigOptionsOutput)
}

type GatewayDhcpdConfigConfigVendorEncapsulated struct {
	// enum: `boolean`, `hex`, `int16`, `int32`, `ip`, `string`, `uint16`, `uint32`
	Type  *string `pulumi:"type"`
	Value *string `pulumi:"value"`
}

// GatewayDhcpdConfigConfigVendorEncapsulatedInput is an input type that accepts GatewayDhcpdConfigConfigVendorEncapsulatedArgs and GatewayDhcpdConfigConfigVendorEncapsulatedOutput values.
// You can construct a concrete instance of `GatewayDhcpdConfigConfigVendorEncapsulatedInput` via:
//
//	GatewayDhcpdConfigConfigVendorEncapsulatedArgs{...}
type GatewayDhcpdConfigConfigVendorEncapsulatedInput interface {
	pulumi.Input

	ToGatewayDhcpdConfigConfigVendorEncapsulatedOutput() GatewayDhcpdConfigConfigVendorEncapsulatedOutput
	ToGatewayDhcpdConfigConfigVendorEncapsulatedOutputWithContext(context.Context) GatewayDhcpdConfigConfigVendorEncapsulatedOutput
}

type GatewayDhcpdConfigConfigVendorEncapsulatedArgs struct {
	// enum: `boolean`, `hex`, `int16`, `int32`, `ip`, `string`, `uint16`, `uint32`
	Type  pulumi.StringPtrInput `pulumi:"type"`
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (GatewayDhcpdConfigConfigVendorEncapsulatedArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayDhcpdConfigConfigVendorEncapsulated)(nil)).Elem()
}

func (i GatewayDhcpdConfigConfigVendorEncapsulatedArgs) ToGatewayDhcpdConfigConfigVendorEncapsulatedOutput() GatewayDhcpdConfigConfigVendorEncapsulatedOutput {
	return i.ToGatewayDhcpdConfigConfigVendorEncapsulatedOutputWithContext(context.Background())
}

func (i GatewayDhcpdConfigConfigVendorEncapsulatedArgs) ToGatewayDhcpdConfigConfigVendorEncapsulatedOutputWithContext(ctx context.Context) GatewayDhcpdConfigConfigVendorEncapsulatedOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayDhcpdConfigConfigVendorEncapsulatedOutput)
}

// GatewayDhcpdConfigConfigVendorEncapsulatedMapInput is an input type that accepts GatewayDhcpdConfigConfigVendorEncapsulatedMap and GatewayDhcpdConfigConfigVendorEncapsulatedMapOutput values.
// You can construct a concrete instance of `GatewayDhcpdConfigConfigVendorEncapsulatedMapInput` via:
//
//	GatewayDhcpdConfigConfigVendorEncapsulatedMap{ "key": GatewayDhcpdConfigConfigVendorEncapsulatedArgs{...} }
type GatewayDhcpdConfigConfigVendorEncapsulatedMapInput interface {
	pulumi.Input

	ToGatewayDhcpdConfigConfigVendorEncapsulatedMapOutput() GatewayDhcpdConfigConfigVendorEncapsulatedMapOutput
	ToGatewayDhcpdConfigConfigVendorEncapsulatedMapOutputWithContext(context.Context) GatewayDhcpdConfigConfigVendorEncapsulatedMapOutput
}

type GatewayDhcpdConfigConfigVendorEncapsulatedMap map[string]GatewayDhcpdConfigConfigVendorEncapsulatedInput

func (GatewayDhcpdConfigConfigVendorEncapsulatedMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]GatewayDhcpdConfigConfigVendorEncapsulated)(nil)).Elem()
}

func (i GatewayDhcpdConfigConfigVendorEncapsulatedMap) ToGatewayDhcpdConfigConfigVendorEncapsulatedMapOutput() GatewayDhcpdConfigConfigVendorEncapsulatedMapOutput {
	return i.ToGatewayDhcpdConfigConfigVendorEncapsulatedMapOutputWithContext(context.Background())
}

func (i GatewayDhcpdConfigConfigVendorEncapsulatedMap) ToGatewayDhcpdConfigConfigVendorEncapsulatedMapOutputWithContext(ctx context.Context) GatewayDhcpdConfigConfigVendorEncapsulatedMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayDhcpdConfigConfigVendorEncapsulatedMapOutput)
}

type GatewayDhcpdConfigConfigVendorEncapsulatedOutput struct{ *pulumi.OutputState }

func (GatewayDhcpdConfigConfigVendorEncapsulatedOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayDhcpdConfigConfigVendorEncapsulated)(nil)).Elem()
}

func (o GatewayDhcpdConfigConfigVendorEncapsulatedOutput) ToGatewayDhcpdConfigConfigVendorEncapsulatedOutput() GatewayDhcpdConfigConfigVendorEncapsulatedOutput {
	return o
}

func (o GatewayDhcpdConfigConfigVendorEncapsulatedOutput) ToGatewayDhcpdConfigConfigVendorEncapsulatedOutputWithContext(ctx context.Context) GatewayDhcpdConfigConfigVendorEncapsulatedOutput {
	return o
}

// enum: `boolean`, `hex`, `int16`, `int32`, `ip`, `string`, `uint16`, `uint32`
func (o GatewayDhcpdConfigConfigVendorEncapsulatedOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayDhcpdConfigConfigVendorEncapsulated) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o GatewayDhcpdConfigConfigVendorEncapsulatedOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayDhcpdConfigConfigVendorEncapsulated) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type GatewayDhcpdConfigConfigVendorEncapsulatedMapOutput struct{ *pulumi.OutputState }

func (GatewayDhcpdConfigConfigVendorEncapsulatedMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]GatewayDhcpdConfigConfigVendorEncapsulated)(nil)).Elem()
}

func (o GatewayDhcpdConfigConfigVendorEncapsulatedMapOutput) ToGatewayDhcpdConfigConfigVendorEncapsulatedMapOutput() GatewayDhcpdConfigConfigVendorEncapsulatedMapOutput {
	return o
}

func (o GatewayDhcpdConfigConfigVendorEncapsulatedMapOutput) ToGatewayDhcpdConfigConfigVendorEncapsulatedMapOutputWithContext(ctx context.Context) GatewayDhcpdConfigConfigVendorEncapsulatedMapOutput {
	return o
}

func (o GatewayDhcpdConfigConfigVendorEncapsulatedMapOutput) MapIndex(k pulumi.StringInput) GatewayDhcpdConfigConfigVendorEncapsulatedOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) GatewayDhcpdConfigConfigVendorEncapsulated {
		return vs[0].(map[string]GatewayDhcpdConfigConfigVendorEncapsulated)[vs[1].(string)]
	}).(GatewayDhcpdConfigConfigVendorEncapsulatedOutput)
}

type GatewayExtraRoutes6 struct {
	Via string `pulumi:"via"`
}

// GatewayExtraRoutes6Input is an input type that accepts GatewayExtraRoutes6Args and GatewayExtraRoutes6Output values.
// You can construct a concrete instance of `GatewayExtraRoutes6Input` via:
//
//	GatewayExtraRoutes6Args{...}
type GatewayExtraRoutes6Input interface {
	pulumi.Input

	ToGatewayExtraRoutes6Output() GatewayExtraRoutes6Output
	ToGatewayExtraRoutes6OutputWithContext(context.Context) GatewayExtraRoutes6Output
}

type GatewayExtraRoutes6Args struct {
	Via pulumi.StringInput `pulumi:"via"`
}

func (GatewayExtraRoutes6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayExtraRoutes6)(nil)).Elem()
}

func (i GatewayExtraRoutes6Args) ToGatewayExtraRoutes6Output() GatewayExtraRoutes6Output {
	return i.ToGatewayExtraRoutes6OutputWithContext(context.Background())
}

func (i GatewayExtraRoutes6Args) ToGatewayExtraRoutes6OutputWithContext(ctx context.Context) GatewayExtraRoutes6Output {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayExtraRoutes6Output)
}

// GatewayExtraRoutes6MapInput is an input type that accepts GatewayExtraRoutes6Map and GatewayExtraRoutes6MapOutput values.
// You can construct a concrete instance of `GatewayExtraRoutes6MapInput` via:
//
//	GatewayExtraRoutes6Map{ "key": GatewayExtraRoutes6Args{...} }
type GatewayExtraRoutes6MapInput interface {
	pulumi.Input

	ToGatewayExtraRoutes6MapOutput() GatewayExtraRoutes6MapOutput
	ToGatewayExtraRoutes6MapOutputWithContext(context.Context) GatewayExtraRoutes6MapOutput
}

type GatewayExtraRoutes6Map map[string]GatewayExtraRoutes6Input

func (GatewayExtraRoutes6Map) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]GatewayExtraRoutes6)(nil)).Elem()
}

func (i GatewayExtraRoutes6Map) ToGatewayExtraRoutes6MapOutput() GatewayExtraRoutes6MapOutput {
	return i.ToGatewayExtraRoutes6MapOutputWithContext(context.Background())
}

func (i GatewayExtraRoutes6Map) ToGatewayExtraRoutes6MapOutputWithContext(ctx context.Context) GatewayExtraRoutes6MapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayExtraRoutes6MapOutput)
}

type GatewayExtraRoutes6Output struct{ *pulumi.OutputState }

func (GatewayExtraRoutes6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayExtraRoutes6)(nil)).Elem()
}

func (o GatewayExtraRoutes6Output) ToGatewayExtraRoutes6Output() GatewayExtraRoutes6Output {
	return o
}

func (o GatewayExtraRoutes6Output) ToGatewayExtraRoutes6OutputWithContext(ctx context.Context) GatewayExtraRoutes6Output {
	return o
}

func (o GatewayExtraRoutes6Output) Via() pulumi.StringOutput {
	return o.ApplyT(func(v GatewayExtraRoutes6) string { return v.Via }).(pulumi.StringOutput)
}

type GatewayExtraRoutes6MapOutput struct{ *pulumi.OutputState }

func (GatewayExtraRoutes6MapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]GatewayExtraRoutes6)(nil)).Elem()
}

func (o GatewayExtraRoutes6MapOutput) ToGatewayExtraRoutes6MapOutput() GatewayExtraRoutes6MapOutput {
	return o
}

func (o GatewayExtraRoutes6MapOutput) ToGatewayExtraRoutes6MapOutputWithContext(ctx context.Context) GatewayExtraRoutes6MapOutput {
	return o
}

func (o GatewayExtraRoutes6MapOutput) MapIndex(k pulumi.StringInput) GatewayExtraRoutes6Output {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) GatewayExtraRoutes6 {
		return vs[0].(map[string]GatewayExtraRoutes6)[vs[1].(string)]
	}).(GatewayExtraRoutes6Output)
}

type GatewayExtraRoutes struct {
	Via string `pulumi:"via"`
}

// GatewayExtraRoutesInput is an input type that accepts GatewayExtraRoutesArgs and GatewayExtraRoutesOutput values.
// You can construct a concrete instance of `GatewayExtraRoutesInput` via:
//
//	GatewayExtraRoutesArgs{...}
type GatewayExtraRoutesInput interface {
	pulumi.Input

	ToGatewayExtraRoutesOutput() GatewayExtraRoutesOutput
	ToGatewayExtraRoutesOutputWithContext(context.Context) GatewayExtraRoutesOutput
}

type GatewayExtraRoutesArgs struct {
	Via pulumi.StringInput `pulumi:"via"`
}

func (GatewayExtraRoutesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayExtraRoutes)(nil)).Elem()
}

func (i GatewayExtraRoutesArgs) ToGatewayExtraRoutesOutput() GatewayExtraRoutesOutput {
	return i.ToGatewayExtraRoutesOutputWithContext(context.Background())
}

func (i GatewayExtraRoutesArgs) ToGatewayExtraRoutesOutputWithContext(ctx context.Context) GatewayExtraRoutesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayExtraRoutesOutput)
}

// GatewayExtraRoutesMapInput is an input type that accepts GatewayExtraRoutesMap and GatewayExtraRoutesMapOutput values.
// You can construct a concrete instance of `GatewayExtraRoutesMapInput` via:
//
//	GatewayExtraRoutesMap{ "key": GatewayExtraRoutesArgs{...} }
type GatewayExtraRoutesMapInput interface {
	pulumi.Input

	ToGatewayExtraRoutesMapOutput() GatewayExtraRoutesMapOutput
	ToGatewayExtraRoutesMapOutputWithContext(context.Context) GatewayExtraRoutesMapOutput
}

type GatewayExtraRoutesMap map[string]GatewayExtraRoutesInput

func (GatewayExtraRoutesMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]GatewayExtraRoutes)(nil)).Elem()
}

func (i GatewayExtraRoutesMap) ToGatewayExtraRoutesMapOutput() GatewayExtraRoutesMapOutput {
	return i.ToGatewayExtraRoutesMapOutputWithContext(context.Background())
}

func (i GatewayExtraRoutesMap) ToGatewayExtraRoutesMapOutputWithContext(ctx context.Context) GatewayExtraRoutesMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayExtraRoutesMapOutput)
}

type GatewayExtraRoutesOutput struct{ *pulumi.OutputState }

func (GatewayExtraRoutesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayExtraRoutes)(nil)).Elem()
}

func (o GatewayExtraRoutesOutput) ToGatewayExtraRoutesOutput() GatewayExtraRoutesOutput {
	return o
}

func (o GatewayExtraRoutesOutput) ToGatewayExtraRoutesOutputWithContext(ctx context.Context) GatewayExtraRoutesOutput {
	return o
}

func (o GatewayExtraRoutesOutput) Via() pulumi.StringOutput {
	return o.ApplyT(func(v GatewayExtraRoutes) string { return v.Via }).(pulumi.StringOutput)
}

type GatewayExtraRoutesMapOutput struct{ *pulumi.OutputState }

func (GatewayExtraRoutesMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]GatewayExtraRoutes)(nil)).Elem()
}

func (o GatewayExtraRoutesMapOutput) ToGatewayExtraRoutesMapOutput() GatewayExtraRoutesMapOutput {
	return o
}

func (o GatewayExtraRoutesMapOutput) ToGatewayExtraRoutesMapOutputWithContext(ctx context.Context) GatewayExtraRoutesMapOutput {
	return o
}

func (o GatewayExtraRoutesMapOutput) MapIndex(k pulumi.StringInput) GatewayExtraRoutesOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) GatewayExtraRoutes {
		return vs[0].(map[string]GatewayExtraRoutes)[vs[1].(string)]
	}).(GatewayExtraRoutesOutput)
}

type GatewayIdpProfiles struct {
	// enum: `critical`, `standard`, `strict`
	BaseProfile *string `pulumi:"baseProfile"`
	// Unique ID of the object instance in the Mist Organization
	Id         *string                       `pulumi:"id"`
	Name       *string                       `pulumi:"name"`
	OrgId      *string                       `pulumi:"orgId"`
	Overwrites []GatewayIdpProfilesOverwrite `pulumi:"overwrites"`
}

// GatewayIdpProfilesInput is an input type that accepts GatewayIdpProfilesArgs and GatewayIdpProfilesOutput values.
// You can construct a concrete instance of `GatewayIdpProfilesInput` via:
//
//	GatewayIdpProfilesArgs{...}
type GatewayIdpProfilesInput interface {
	pulumi.Input

	ToGatewayIdpProfilesOutput() GatewayIdpProfilesOutput
	ToGatewayIdpProfilesOutputWithContext(context.Context) GatewayIdpProfilesOutput
}

type GatewayIdpProfilesArgs struct {
	// enum: `critical`, `standard`, `strict`
	BaseProfile pulumi.StringPtrInput `pulumi:"baseProfile"`
	// Unique ID of the object instance in the Mist Organization
	Id         pulumi.StringPtrInput                 `pulumi:"id"`
	Name       pulumi.StringPtrInput                 `pulumi:"name"`
	OrgId      pulumi.StringPtrInput                 `pulumi:"orgId"`
	Overwrites GatewayIdpProfilesOverwriteArrayInput `pulumi:"overwrites"`
}

func (GatewayIdpProfilesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayIdpProfiles)(nil)).Elem()
}

func (i GatewayIdpProfilesArgs) ToGatewayIdpProfilesOutput() GatewayIdpProfilesOutput {
	return i.ToGatewayIdpProfilesOutputWithContext(context.Background())
}

func (i GatewayIdpProfilesArgs) ToGatewayIdpProfilesOutputWithContext(ctx context.Context) GatewayIdpProfilesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayIdpProfilesOutput)
}

// GatewayIdpProfilesMapInput is an input type that accepts GatewayIdpProfilesMap and GatewayIdpProfilesMapOutput values.
// You can construct a concrete instance of `GatewayIdpProfilesMapInput` via:
//
//	GatewayIdpProfilesMap{ "key": GatewayIdpProfilesArgs{...} }
type GatewayIdpProfilesMapInput interface {
	pulumi.Input

	ToGatewayIdpProfilesMapOutput() GatewayIdpProfilesMapOutput
	ToGatewayIdpProfilesMapOutputWithContext(context.Context) GatewayIdpProfilesMapOutput
}

type GatewayIdpProfilesMap map[string]GatewayIdpProfilesInput

func (GatewayIdpProfilesMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]GatewayIdpProfiles)(nil)).Elem()
}

func (i GatewayIdpProfilesMap) ToGatewayIdpProfilesMapOutput() GatewayIdpProfilesMapOutput {
	return i.ToGatewayIdpProfilesMapOutputWithContext(context.Background())
}

func (i GatewayIdpProfilesMap) ToGatewayIdpProfilesMapOutputWithContext(ctx context.Context) GatewayIdpProfilesMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayIdpProfilesMapOutput)
}

type GatewayIdpProfilesOutput struct{ *pulumi.OutputState }

func (GatewayIdpProfilesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayIdpProfiles)(nil)).Elem()
}

func (o GatewayIdpProfilesOutput) ToGatewayIdpProfilesOutput() GatewayIdpProfilesOutput {
	return o
}

func (o GatewayIdpProfilesOutput) ToGatewayIdpProfilesOutputWithContext(ctx context.Context) GatewayIdpProfilesOutput {
	return o
}

// enum: `critical`, `standard`, `strict`
func (o GatewayIdpProfilesOutput) BaseProfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayIdpProfiles) *string { return v.BaseProfile }).(pulumi.StringPtrOutput)
}

// Unique ID of the object instance in the Mist Organization
func (o GatewayIdpProfilesOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayIdpProfiles) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o GatewayIdpProfilesOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayIdpProfiles) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o GatewayIdpProfilesOutput) OrgId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayIdpProfiles) *string { return v.OrgId }).(pulumi.StringPtrOutput)
}

func (o GatewayIdpProfilesOutput) Overwrites() GatewayIdpProfilesOverwriteArrayOutput {
	return o.ApplyT(func(v GatewayIdpProfiles) []GatewayIdpProfilesOverwrite { return v.Overwrites }).(GatewayIdpProfilesOverwriteArrayOutput)
}

type GatewayIdpProfilesMapOutput struct{ *pulumi.OutputState }

func (GatewayIdpProfilesMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]GatewayIdpProfiles)(nil)).Elem()
}

func (o GatewayIdpProfilesMapOutput) ToGatewayIdpProfilesMapOutput() GatewayIdpProfilesMapOutput {
	return o
}

func (o GatewayIdpProfilesMapOutput) ToGatewayIdpProfilesMapOutputWithContext(ctx context.Context) GatewayIdpProfilesMapOutput {
	return o
}

func (o GatewayIdpProfilesMapOutput) MapIndex(k pulumi.StringInput) GatewayIdpProfilesOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) GatewayIdpProfiles {
		return vs[0].(map[string]GatewayIdpProfiles)[vs[1].(string)]
	}).(GatewayIdpProfilesOutput)
}

type GatewayIdpProfilesOverwrite struct {
	// enum:
	//   * alert (default)
	//   * drop: silently dropping packets
	//   * close: notify client/server to close connection
	Action   *string                              `pulumi:"action"`
	Matching *GatewayIdpProfilesOverwriteMatching `pulumi:"matching"`
	Name     *string                              `pulumi:"name"`
}

// GatewayIdpProfilesOverwriteInput is an input type that accepts GatewayIdpProfilesOverwriteArgs and GatewayIdpProfilesOverwriteOutput values.
// You can construct a concrete instance of `GatewayIdpProfilesOverwriteInput` via:
//
//	GatewayIdpProfilesOverwriteArgs{...}
type GatewayIdpProfilesOverwriteInput interface {
	pulumi.Input

	ToGatewayIdpProfilesOverwriteOutput() GatewayIdpProfilesOverwriteOutput
	ToGatewayIdpProfilesOverwriteOutputWithContext(context.Context) GatewayIdpProfilesOverwriteOutput
}

type GatewayIdpProfilesOverwriteArgs struct {
	// enum:
	//   * alert (default)
	//   * drop: silently dropping packets
	//   * close: notify client/server to close connection
	Action   pulumi.StringPtrInput                       `pulumi:"action"`
	Matching GatewayIdpProfilesOverwriteMatchingPtrInput `pulumi:"matching"`
	Name     pulumi.StringPtrInput                       `pulumi:"name"`
}

func (GatewayIdpProfilesOverwriteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayIdpProfilesOverwrite)(nil)).Elem()
}

func (i GatewayIdpProfilesOverwriteArgs) ToGatewayIdpProfilesOverwriteOutput() GatewayIdpProfilesOverwriteOutput {
	return i.ToGatewayIdpProfilesOverwriteOutputWithContext(context.Background())
}

func (i GatewayIdpProfilesOverwriteArgs) ToGatewayIdpProfilesOverwriteOutputWithContext(ctx context.Context) GatewayIdpProfilesOverwriteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayIdpProfilesOverwriteOutput)
}

// GatewayIdpProfilesOverwriteArrayInput is an input type that accepts GatewayIdpProfilesOverwriteArray and GatewayIdpProfilesOverwriteArrayOutput values.
// You can construct a concrete instance of `GatewayIdpProfilesOverwriteArrayInput` via:
//
//	GatewayIdpProfilesOverwriteArray{ GatewayIdpProfilesOverwriteArgs{...} }
type GatewayIdpProfilesOverwriteArrayInput interface {
	pulumi.Input

	ToGatewayIdpProfilesOverwriteArrayOutput() GatewayIdpProfilesOverwriteArrayOutput
	ToGatewayIdpProfilesOverwriteArrayOutputWithContext(context.Context) GatewayIdpProfilesOverwriteArrayOutput
}

type GatewayIdpProfilesOverwriteArray []GatewayIdpProfilesOverwriteInput

func (GatewayIdpProfilesOverwriteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GatewayIdpProfilesOverwrite)(nil)).Elem()
}

func (i GatewayIdpProfilesOverwriteArray) ToGatewayIdpProfilesOverwriteArrayOutput() GatewayIdpProfilesOverwriteArrayOutput {
	return i.ToGatewayIdpProfilesOverwriteArrayOutputWithContext(context.Background())
}

func (i GatewayIdpProfilesOverwriteArray) ToGatewayIdpProfilesOverwriteArrayOutputWithContext(ctx context.Context) GatewayIdpProfilesOverwriteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayIdpProfilesOverwriteArrayOutput)
}

type GatewayIdpProfilesOverwriteOutput struct{ *pulumi.OutputState }

func (GatewayIdpProfilesOverwriteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayIdpProfilesOverwrite)(nil)).Elem()
}

func (o GatewayIdpProfilesOverwriteOutput) ToGatewayIdpProfilesOverwriteOutput() GatewayIdpProfilesOverwriteOutput {
	return o
}

func (o GatewayIdpProfilesOverwriteOutput) ToGatewayIdpProfilesOverwriteOutputWithContext(ctx context.Context) GatewayIdpProfilesOverwriteOutput {
	return o
}

// enum:
//   - alert (default)
//   - drop: silently dropping packets
//   - close: notify client/server to close connection
func (o GatewayIdpProfilesOverwriteOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayIdpProfilesOverwrite) *string { return v.Action }).(pulumi.StringPtrOutput)
}

func (o GatewayIdpProfilesOverwriteOutput) Matching() GatewayIdpProfilesOverwriteMatchingPtrOutput {
	return o.ApplyT(func(v GatewayIdpProfilesOverwrite) *GatewayIdpProfilesOverwriteMatching { return v.Matching }).(GatewayIdpProfilesOverwriteMatchingPtrOutput)
}

func (o GatewayIdpProfilesOverwriteOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayIdpProfilesOverwrite) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type GatewayIdpProfilesOverwriteArrayOutput struct{ *pulumi.OutputState }

func (GatewayIdpProfilesOverwriteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GatewayIdpProfilesOverwrite)(nil)).Elem()
}

func (o GatewayIdpProfilesOverwriteArrayOutput) ToGatewayIdpProfilesOverwriteArrayOutput() GatewayIdpProfilesOverwriteArrayOutput {
	return o
}

func (o GatewayIdpProfilesOverwriteArrayOutput) ToGatewayIdpProfilesOverwriteArrayOutputWithContext(ctx context.Context) GatewayIdpProfilesOverwriteArrayOutput {
	return o
}

func (o GatewayIdpProfilesOverwriteArrayOutput) Index(i pulumi.IntInput) GatewayIdpProfilesOverwriteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GatewayIdpProfilesOverwrite {
		return vs[0].([]GatewayIdpProfilesOverwrite)[vs[1].(int)]
	}).(GatewayIdpProfilesOverwriteOutput)
}

type GatewayIdpProfilesOverwriteMatching struct {
	AttackNames []string `pulumi:"attackNames"`
	DstSubnets  []string `pulumi:"dstSubnets"`
	Severities  []string `pulumi:"severities"`
}

// GatewayIdpProfilesOverwriteMatchingInput is an input type that accepts GatewayIdpProfilesOverwriteMatchingArgs and GatewayIdpProfilesOverwriteMatchingOutput values.
// You can construct a concrete instance of `GatewayIdpProfilesOverwriteMatchingInput` via:
//
//	GatewayIdpProfilesOverwriteMatchingArgs{...}
type GatewayIdpProfilesOverwriteMatchingInput interface {
	pulumi.Input

	ToGatewayIdpProfilesOverwriteMatchingOutput() GatewayIdpProfilesOverwriteMatchingOutput
	ToGatewayIdpProfilesOverwriteMatchingOutputWithContext(context.Context) GatewayIdpProfilesOverwriteMatchingOutput
}

type GatewayIdpProfilesOverwriteMatchingArgs struct {
	AttackNames pulumi.StringArrayInput `pulumi:"attackNames"`
	DstSubnets  pulumi.StringArrayInput `pulumi:"dstSubnets"`
	Severities  pulumi.StringArrayInput `pulumi:"severities"`
}

func (GatewayIdpProfilesOverwriteMatchingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayIdpProfilesOverwriteMatching)(nil)).Elem()
}

func (i GatewayIdpProfilesOverwriteMatchingArgs) ToGatewayIdpProfilesOverwriteMatchingOutput() GatewayIdpProfilesOverwriteMatchingOutput {
	return i.ToGatewayIdpProfilesOverwriteMatchingOutputWithContext(context.Background())
}

func (i GatewayIdpProfilesOverwriteMatchingArgs) ToGatewayIdpProfilesOverwriteMatchingOutputWithContext(ctx context.Context) GatewayIdpProfilesOverwriteMatchingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayIdpProfilesOverwriteMatchingOutput)
}

func (i GatewayIdpProfilesOverwriteMatchingArgs) ToGatewayIdpProfilesOverwriteMatchingPtrOutput() GatewayIdpProfilesOverwriteMatchingPtrOutput {
	return i.ToGatewayIdpProfilesOverwriteMatchingPtrOutputWithContext(context.Background())
}

func (i GatewayIdpProfilesOverwriteMatchingArgs) ToGatewayIdpProfilesOverwriteMatchingPtrOutputWithContext(ctx context.Context) GatewayIdpProfilesOverwriteMatchingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayIdpProfilesOverwriteMatchingOutput).ToGatewayIdpProfilesOverwriteMatchingPtrOutputWithContext(ctx)
}

// GatewayIdpProfilesOverwriteMatchingPtrInput is an input type that accepts GatewayIdpProfilesOverwriteMatchingArgs, GatewayIdpProfilesOverwriteMatchingPtr and GatewayIdpProfilesOverwriteMatchingPtrOutput values.
// You can construct a concrete instance of `GatewayIdpProfilesOverwriteMatchingPtrInput` via:
//
//	        GatewayIdpProfilesOverwriteMatchingArgs{...}
//
//	or:
//
//	        nil
type GatewayIdpProfilesOverwriteMatchingPtrInput interface {
	pulumi.Input

	ToGatewayIdpProfilesOverwriteMatchingPtrOutput() GatewayIdpProfilesOverwriteMatchingPtrOutput
	ToGatewayIdpProfilesOverwriteMatchingPtrOutputWithContext(context.Context) GatewayIdpProfilesOverwriteMatchingPtrOutput
}

type gatewayIdpProfilesOverwriteMatchingPtrType GatewayIdpProfilesOverwriteMatchingArgs

func GatewayIdpProfilesOverwriteMatchingPtr(v *GatewayIdpProfilesOverwriteMatchingArgs) GatewayIdpProfilesOverwriteMatchingPtrInput {
	return (*gatewayIdpProfilesOverwriteMatchingPtrType)(v)
}

func (*gatewayIdpProfilesOverwriteMatchingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayIdpProfilesOverwriteMatching)(nil)).Elem()
}

func (i *gatewayIdpProfilesOverwriteMatchingPtrType) ToGatewayIdpProfilesOverwriteMatchingPtrOutput() GatewayIdpProfilesOverwriteMatchingPtrOutput {
	return i.ToGatewayIdpProfilesOverwriteMatchingPtrOutputWithContext(context.Background())
}

func (i *gatewayIdpProfilesOverwriteMatchingPtrType) ToGatewayIdpProfilesOverwriteMatchingPtrOutputWithContext(ctx context.Context) GatewayIdpProfilesOverwriteMatchingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayIdpProfilesOverwriteMatchingPtrOutput)
}

type GatewayIdpProfilesOverwriteMatchingOutput struct{ *pulumi.OutputState }

func (GatewayIdpProfilesOverwriteMatchingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayIdpProfilesOverwriteMatching)(nil)).Elem()
}

func (o GatewayIdpProfilesOverwriteMatchingOutput) ToGatewayIdpProfilesOverwriteMatchingOutput() GatewayIdpProfilesOverwriteMatchingOutput {
	return o
}

func (o GatewayIdpProfilesOverwriteMatchingOutput) ToGatewayIdpProfilesOverwriteMatchingOutputWithContext(ctx context.Context) GatewayIdpProfilesOverwriteMatchingOutput {
	return o
}

func (o GatewayIdpProfilesOverwriteMatchingOutput) ToGatewayIdpProfilesOverwriteMatchingPtrOutput() GatewayIdpProfilesOverwriteMatchingPtrOutput {
	return o.ToGatewayIdpProfilesOverwriteMatchingPtrOutputWithContext(context.Background())
}

func (o GatewayIdpProfilesOverwriteMatchingOutput) ToGatewayIdpProfilesOverwriteMatchingPtrOutputWithContext(ctx context.Context) GatewayIdpProfilesOverwriteMatchingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayIdpProfilesOverwriteMatching) *GatewayIdpProfilesOverwriteMatching {
		return &v
	}).(GatewayIdpProfilesOverwriteMatchingPtrOutput)
}

func (o GatewayIdpProfilesOverwriteMatchingOutput) AttackNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GatewayIdpProfilesOverwriteMatching) []string { return v.AttackNames }).(pulumi.StringArrayOutput)
}

func (o GatewayIdpProfilesOverwriteMatchingOutput) DstSubnets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GatewayIdpProfilesOverwriteMatching) []string { return v.DstSubnets }).(pulumi.StringArrayOutput)
}

func (o GatewayIdpProfilesOverwriteMatchingOutput) Severities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GatewayIdpProfilesOverwriteMatching) []string { return v.Severities }).(pulumi.StringArrayOutput)
}

type GatewayIdpProfilesOverwriteMatchingPtrOutput struct{ *pulumi.OutputState }

func (GatewayIdpProfilesOverwriteMatchingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayIdpProfilesOverwriteMatching)(nil)).Elem()
}

func (o GatewayIdpProfilesOverwriteMatchingPtrOutput) ToGatewayIdpProfilesOverwriteMatchingPtrOutput() GatewayIdpProfilesOverwriteMatchingPtrOutput {
	return o
}

func (o GatewayIdpProfilesOverwriteMatchingPtrOutput) ToGatewayIdpProfilesOverwriteMatchingPtrOutputWithContext(ctx context.Context) GatewayIdpProfilesOverwriteMatchingPtrOutput {
	return o
}

func (o GatewayIdpProfilesOverwriteMatchingPtrOutput) Elem() GatewayIdpProfilesOverwriteMatchingOutput {
	return o.ApplyT(func(v *GatewayIdpProfilesOverwriteMatching) GatewayIdpProfilesOverwriteMatching {
		if v != nil {
			return *v
		}
		var ret GatewayIdpProfilesOverwriteMatching
		return ret
	}).(GatewayIdpProfilesOverwriteMatchingOutput)
}

func (o GatewayIdpProfilesOverwriteMatchingPtrOutput) AttackNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GatewayIdpProfilesOverwriteMatching) []string {
		if v == nil {
			return nil
		}
		return v.AttackNames
	}).(pulumi.StringArrayOutput)
}

func (o GatewayIdpProfilesOverwriteMatchingPtrOutput) DstSubnets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GatewayIdpProfilesOverwriteMatching) []string {
		if v == nil {
			return nil
		}
		return v.DstSubnets
	}).(pulumi.StringArrayOutput)
}

func (o GatewayIdpProfilesOverwriteMatchingPtrOutput) Severities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GatewayIdpProfilesOverwriteMatching) []string {
		if v == nil {
			return nil
		}
		return v.Severities
	}).(pulumi.StringArrayOutput)
}

type GatewayIpConfigs struct {
	Ip      *string `pulumi:"ip"`
	Netmask *string `pulumi:"netmask"`
	// Optional list of secondary IPs in CIDR format
	SecondaryIps []string `pulumi:"secondaryIps"`
	// enum: `dhcp`, `static`
	Type *string `pulumi:"type"`
}

// GatewayIpConfigsInput is an input type that accepts GatewayIpConfigsArgs and GatewayIpConfigsOutput values.
// You can construct a concrete instance of `GatewayIpConfigsInput` via:
//
//	GatewayIpConfigsArgs{...}
type GatewayIpConfigsInput interface {
	pulumi.Input

	ToGatewayIpConfigsOutput() GatewayIpConfigsOutput
	ToGatewayIpConfigsOutputWithContext(context.Context) GatewayIpConfigsOutput
}

type GatewayIpConfigsArgs struct {
	Ip      pulumi.StringPtrInput `pulumi:"ip"`
	Netmask pulumi.StringPtrInput `pulumi:"netmask"`
	// Optional list of secondary IPs in CIDR format
	SecondaryIps pulumi.StringArrayInput `pulumi:"secondaryIps"`
	// enum: `dhcp`, `static`
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (GatewayIpConfigsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayIpConfigs)(nil)).Elem()
}

func (i GatewayIpConfigsArgs) ToGatewayIpConfigsOutput() GatewayIpConfigsOutput {
	return i.ToGatewayIpConfigsOutputWithContext(context.Background())
}

func (i GatewayIpConfigsArgs) ToGatewayIpConfigsOutputWithContext(ctx context.Context) GatewayIpConfigsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayIpConfigsOutput)
}

// GatewayIpConfigsMapInput is an input type that accepts GatewayIpConfigsMap and GatewayIpConfigsMapOutput values.
// You can construct a concrete instance of `GatewayIpConfigsMapInput` via:
//
//	GatewayIpConfigsMap{ "key": GatewayIpConfigsArgs{...} }
type GatewayIpConfigsMapInput interface {
	pulumi.Input

	ToGatewayIpConfigsMapOutput() GatewayIpConfigsMapOutput
	ToGatewayIpConfigsMapOutputWithContext(context.Context) GatewayIpConfigsMapOutput
}

type GatewayIpConfigsMap map[string]GatewayIpConfigsInput

func (GatewayIpConfigsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]GatewayIpConfigs)(nil)).Elem()
}

func (i GatewayIpConfigsMap) ToGatewayIpConfigsMapOutput() GatewayIpConfigsMapOutput {
	return i.ToGatewayIpConfigsMapOutputWithContext(context.Background())
}

func (i GatewayIpConfigsMap) ToGatewayIpConfigsMapOutputWithContext(ctx context.Context) GatewayIpConfigsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayIpConfigsMapOutput)
}

type GatewayIpConfigsOutput struct{ *pulumi.OutputState }

func (GatewayIpConfigsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayIpConfigs)(nil)).Elem()
}

func (o GatewayIpConfigsOutput) ToGatewayIpConfigsOutput() GatewayIpConfigsOutput {
	return o
}

func (o GatewayIpConfigsOutput) ToGatewayIpConfigsOutputWithContext(ctx context.Context) GatewayIpConfigsOutput {
	return o
}

func (o GatewayIpConfigsOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayIpConfigs) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

func (o GatewayIpConfigsOutput) Netmask() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayIpConfigs) *string { return v.Netmask }).(pulumi.StringPtrOutput)
}

// Optional list of secondary IPs in CIDR format
func (o GatewayIpConfigsOutput) SecondaryIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GatewayIpConfigs) []string { return v.SecondaryIps }).(pulumi.StringArrayOutput)
}

// enum: `dhcp`, `static`
func (o GatewayIpConfigsOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayIpConfigs) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type GatewayIpConfigsMapOutput struct{ *pulumi.OutputState }

func (GatewayIpConfigsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]GatewayIpConfigs)(nil)).Elem()
}

func (o GatewayIpConfigsMapOutput) ToGatewayIpConfigsMapOutput() GatewayIpConfigsMapOutput {
	return o
}

func (o GatewayIpConfigsMapOutput) ToGatewayIpConfigsMapOutputWithContext(ctx context.Context) GatewayIpConfigsMapOutput {
	return o
}

func (o GatewayIpConfigsMapOutput) MapIndex(k pulumi.StringInput) GatewayIpConfigsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) GatewayIpConfigs {
		return vs[0].(map[string]GatewayIpConfigs)[vs[1].(string)]
	}).(GatewayIpConfigsOutput)
}

type GatewayNetwork struct {
	// Whether to disallow Mist Devices in the network
	DisallowMistServices *bool                         `pulumi:"disallowMistServices"`
	Gateway              *string                       `pulumi:"gateway"`
	Gateway6             *string                       `pulumi:"gateway6"`
	InternalAccess       *GatewayNetworkInternalAccess `pulumi:"internalAccess"`
	// Whether this network has direct internet access
	InternetAccess *GatewayNetworkInternetAccess `pulumi:"internetAccess"`
	// Whether to allow clients in the network to talk to each other
	Isolation *bool `pulumi:"isolation"`
	// Whether to enable multicast support (only PIM-sparse mode is supported)
	Multicast *GatewayNetworkMulticast `pulumi:"multicast"`
	Name      string                   `pulumi:"name"`
	// For a Network (usually LAN), it can be routable to other networks (e.g. OSPF)
	RoutedForNetworks []string `pulumi:"routedForNetworks"`
	Subnet            string   `pulumi:"subnet"`
	Subnet6           *string  `pulumi:"subnet6"`
	// Property key must be the user/tenant name (i.e. "printer-1") or a Variable (i.e. "{{myvar}}")
	Tenants map[string]GatewayNetworkTenants `pulumi:"tenants"`
	VlanId  *string                          `pulumi:"vlanId"`
	// Property key is the VPN name. Whether this network can be accessed from vpn
	VpnAccess map[string]GatewayNetworkVpnAccess `pulumi:"vpnAccess"`
}

// GatewayNetworkInput is an input type that accepts GatewayNetworkArgs and GatewayNetworkOutput values.
// You can construct a concrete instance of `GatewayNetworkInput` via:
//
//	GatewayNetworkArgs{...}
type GatewayNetworkInput interface {
	pulumi.Input

	ToGatewayNetworkOutput() GatewayNetworkOutput
	ToGatewayNetworkOutputWithContext(context.Context) GatewayNetworkOutput
}

type GatewayNetworkArgs struct {
	// Whether to disallow Mist Devices in the network
	DisallowMistServices pulumi.BoolPtrInput                  `pulumi:"disallowMistServices"`
	Gateway              pulumi.StringPtrInput                `pulumi:"gateway"`
	Gateway6             pulumi.StringPtrInput                `pulumi:"gateway6"`
	InternalAccess       GatewayNetworkInternalAccessPtrInput `pulumi:"internalAccess"`
	// Whether this network has direct internet access
	InternetAccess GatewayNetworkInternetAccessPtrInput `pulumi:"internetAccess"`
	// Whether to allow clients in the network to talk to each other
	Isolation pulumi.BoolPtrInput `pulumi:"isolation"`
	// Whether to enable multicast support (only PIM-sparse mode is supported)
	Multicast GatewayNetworkMulticastPtrInput `pulumi:"multicast"`
	Name      pulumi.StringInput              `pulumi:"name"`
	// For a Network (usually LAN), it can be routable to other networks (e.g. OSPF)
	RoutedForNetworks pulumi.StringArrayInput `pulumi:"routedForNetworks"`
	Subnet            pulumi.StringInput      `pulumi:"subnet"`
	Subnet6           pulumi.StringPtrInput   `pulumi:"subnet6"`
	// Property key must be the user/tenant name (i.e. "printer-1") or a Variable (i.e. "{{myvar}}")
	Tenants GatewayNetworkTenantsMapInput `pulumi:"tenants"`
	VlanId  pulumi.StringPtrInput         `pulumi:"vlanId"`
	// Property key is the VPN name. Whether this network can be accessed from vpn
	VpnAccess GatewayNetworkVpnAccessMapInput `pulumi:"vpnAccess"`
}

func (GatewayNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayNetwork)(nil)).Elem()
}

func (i GatewayNetworkArgs) ToGatewayNetworkOutput() GatewayNetworkOutput {
	return i.ToGatewayNetworkOutputWithContext(context.Background())
}

func (i GatewayNetworkArgs) ToGatewayNetworkOutputWithContext(ctx context.Context) GatewayNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayNetworkOutput)
}

// GatewayNetworkArrayInput is an input type that accepts GatewayNetworkArray and GatewayNetworkArrayOutput values.
// You can construct a concrete instance of `GatewayNetworkArrayInput` via:
//
//	GatewayNetworkArray{ GatewayNetworkArgs{...} }
type GatewayNetworkArrayInput interface {
	pulumi.Input

	ToGatewayNetworkArrayOutput() GatewayNetworkArrayOutput
	ToGatewayNetworkArrayOutputWithContext(context.Context) GatewayNetworkArrayOutput
}

type GatewayNetworkArray []GatewayNetworkInput

func (GatewayNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GatewayNetwork)(nil)).Elem()
}

func (i GatewayNetworkArray) ToGatewayNetworkArrayOutput() GatewayNetworkArrayOutput {
	return i.ToGatewayNetworkArrayOutputWithContext(context.Background())
}

func (i GatewayNetworkArray) ToGatewayNetworkArrayOutputWithContext(ctx context.Context) GatewayNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayNetworkArrayOutput)
}

type GatewayNetworkOutput struct{ *pulumi.OutputState }

func (GatewayNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayNetwork)(nil)).Elem()
}

func (o GatewayNetworkOutput) ToGatewayNetworkOutput() GatewayNetworkOutput {
	return o
}

func (o GatewayNetworkOutput) ToGatewayNetworkOutputWithContext(ctx context.Context) GatewayNetworkOutput {
	return o
}

// Whether to disallow Mist Devices in the network
func (o GatewayNetworkOutput) DisallowMistServices() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GatewayNetwork) *bool { return v.DisallowMistServices }).(pulumi.BoolPtrOutput)
}

func (o GatewayNetworkOutput) Gateway() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayNetwork) *string { return v.Gateway }).(pulumi.StringPtrOutput)
}

func (o GatewayNetworkOutput) Gateway6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayNetwork) *string { return v.Gateway6 }).(pulumi.StringPtrOutput)
}

func (o GatewayNetworkOutput) InternalAccess() GatewayNetworkInternalAccessPtrOutput {
	return o.ApplyT(func(v GatewayNetwork) *GatewayNetworkInternalAccess { return v.InternalAccess }).(GatewayNetworkInternalAccessPtrOutput)
}

// Whether this network has direct internet access
func (o GatewayNetworkOutput) InternetAccess() GatewayNetworkInternetAccessPtrOutput {
	return o.ApplyT(func(v GatewayNetwork) *GatewayNetworkInternetAccess { return v.InternetAccess }).(GatewayNetworkInternetAccessPtrOutput)
}

// Whether to allow clients in the network to talk to each other
func (o GatewayNetworkOutput) Isolation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GatewayNetwork) *bool { return v.Isolation }).(pulumi.BoolPtrOutput)
}

// Whether to enable multicast support (only PIM-sparse mode is supported)
func (o GatewayNetworkOutput) Multicast() GatewayNetworkMulticastPtrOutput {
	return o.ApplyT(func(v GatewayNetwork) *GatewayNetworkMulticast { return v.Multicast }).(GatewayNetworkMulticastPtrOutput)
}

func (o GatewayNetworkOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GatewayNetwork) string { return v.Name }).(pulumi.StringOutput)
}

// For a Network (usually LAN), it can be routable to other networks (e.g. OSPF)
func (o GatewayNetworkOutput) RoutedForNetworks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GatewayNetwork) []string { return v.RoutedForNetworks }).(pulumi.StringArrayOutput)
}

func (o GatewayNetworkOutput) Subnet() pulumi.StringOutput {
	return o.ApplyT(func(v GatewayNetwork) string { return v.Subnet }).(pulumi.StringOutput)
}

func (o GatewayNetworkOutput) Subnet6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayNetwork) *string { return v.Subnet6 }).(pulumi.StringPtrOutput)
}

// Property key must be the user/tenant name (i.e. "printer-1") or a Variable (i.e. "{{myvar}}")
func (o GatewayNetworkOutput) Tenants() GatewayNetworkTenantsMapOutput {
	return o.ApplyT(func(v GatewayNetwork) map[string]GatewayNetworkTenants { return v.Tenants }).(GatewayNetworkTenantsMapOutput)
}

func (o GatewayNetworkOutput) VlanId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayNetwork) *string { return v.VlanId }).(pulumi.StringPtrOutput)
}

// Property key is the VPN name. Whether this network can be accessed from vpn
func (o GatewayNetworkOutput) VpnAccess() GatewayNetworkVpnAccessMapOutput {
	return o.ApplyT(func(v GatewayNetwork) map[string]GatewayNetworkVpnAccess { return v.VpnAccess }).(GatewayNetworkVpnAccessMapOutput)
}

type GatewayNetworkArrayOutput struct{ *pulumi.OutputState }

func (GatewayNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GatewayNetwork)(nil)).Elem()
}

func (o GatewayNetworkArrayOutput) ToGatewayNetworkArrayOutput() GatewayNetworkArrayOutput {
	return o
}

func (o GatewayNetworkArrayOutput) ToGatewayNetworkArrayOutputWithContext(ctx context.Context) GatewayNetworkArrayOutput {
	return o
}

func (o GatewayNetworkArrayOutput) Index(i pulumi.IntInput) GatewayNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GatewayNetwork {
		return vs[0].([]GatewayNetwork)[vs[1].(int)]
	}).(GatewayNetworkOutput)
}

type GatewayNetworkInternalAccess struct {
	Enabled *bool `pulumi:"enabled"`
}

// GatewayNetworkInternalAccessInput is an input type that accepts GatewayNetworkInternalAccessArgs and GatewayNetworkInternalAccessOutput values.
// You can construct a concrete instance of `GatewayNetworkInternalAccessInput` via:
//
//	GatewayNetworkInternalAccessArgs{...}
type GatewayNetworkInternalAccessInput interface {
	pulumi.Input

	ToGatewayNetworkInternalAccessOutput() GatewayNetworkInternalAccessOutput
	ToGatewayNetworkInternalAccessOutputWithContext(context.Context) GatewayNetworkInternalAccessOutput
}

type GatewayNetworkInternalAccessArgs struct {
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (GatewayNetworkInternalAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayNetworkInternalAccess)(nil)).Elem()
}

func (i GatewayNetworkInternalAccessArgs) ToGatewayNetworkInternalAccessOutput() GatewayNetworkInternalAccessOutput {
	return i.ToGatewayNetworkInternalAccessOutputWithContext(context.Background())
}

func (i GatewayNetworkInternalAccessArgs) ToGatewayNetworkInternalAccessOutputWithContext(ctx context.Context) GatewayNetworkInternalAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayNetworkInternalAccessOutput)
}

func (i GatewayNetworkInternalAccessArgs) ToGatewayNetworkInternalAccessPtrOutput() GatewayNetworkInternalAccessPtrOutput {
	return i.ToGatewayNetworkInternalAccessPtrOutputWithContext(context.Background())
}

func (i GatewayNetworkInternalAccessArgs) ToGatewayNetworkInternalAccessPtrOutputWithContext(ctx context.Context) GatewayNetworkInternalAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayNetworkInternalAccessOutput).ToGatewayNetworkInternalAccessPtrOutputWithContext(ctx)
}

// GatewayNetworkInternalAccessPtrInput is an input type that accepts GatewayNetworkInternalAccessArgs, GatewayNetworkInternalAccessPtr and GatewayNetworkInternalAccessPtrOutput values.
// You can construct a concrete instance of `GatewayNetworkInternalAccessPtrInput` via:
//
//	        GatewayNetworkInternalAccessArgs{...}
//
//	or:
//
//	        nil
type GatewayNetworkInternalAccessPtrInput interface {
	pulumi.Input

	ToGatewayNetworkInternalAccessPtrOutput() GatewayNetworkInternalAccessPtrOutput
	ToGatewayNetworkInternalAccessPtrOutputWithContext(context.Context) GatewayNetworkInternalAccessPtrOutput
}

type gatewayNetworkInternalAccessPtrType GatewayNetworkInternalAccessArgs

func GatewayNetworkInternalAccessPtr(v *GatewayNetworkInternalAccessArgs) GatewayNetworkInternalAccessPtrInput {
	return (*gatewayNetworkInternalAccessPtrType)(v)
}

func (*gatewayNetworkInternalAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayNetworkInternalAccess)(nil)).Elem()
}

func (i *gatewayNetworkInternalAccessPtrType) ToGatewayNetworkInternalAccessPtrOutput() GatewayNetworkInternalAccessPtrOutput {
	return i.ToGatewayNetworkInternalAccessPtrOutputWithContext(context.Background())
}

func (i *gatewayNetworkInternalAccessPtrType) ToGatewayNetworkInternalAccessPtrOutputWithContext(ctx context.Context) GatewayNetworkInternalAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayNetworkInternalAccessPtrOutput)
}

type GatewayNetworkInternalAccessOutput struct{ *pulumi.OutputState }

func (GatewayNetworkInternalAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayNetworkInternalAccess)(nil)).Elem()
}

func (o GatewayNetworkInternalAccessOutput) ToGatewayNetworkInternalAccessOutput() GatewayNetworkInternalAccessOutput {
	return o
}

func (o GatewayNetworkInternalAccessOutput) ToGatewayNetworkInternalAccessOutputWithContext(ctx context.Context) GatewayNetworkInternalAccessOutput {
	return o
}

func (o GatewayNetworkInternalAccessOutput) ToGatewayNetworkInternalAccessPtrOutput() GatewayNetworkInternalAccessPtrOutput {
	return o.ToGatewayNetworkInternalAccessPtrOutputWithContext(context.Background())
}

func (o GatewayNetworkInternalAccessOutput) ToGatewayNetworkInternalAccessPtrOutputWithContext(ctx context.Context) GatewayNetworkInternalAccessPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayNetworkInternalAccess) *GatewayNetworkInternalAccess {
		return &v
	}).(GatewayNetworkInternalAccessPtrOutput)
}

func (o GatewayNetworkInternalAccessOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GatewayNetworkInternalAccess) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type GatewayNetworkInternalAccessPtrOutput struct{ *pulumi.OutputState }

func (GatewayNetworkInternalAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayNetworkInternalAccess)(nil)).Elem()
}

func (o GatewayNetworkInternalAccessPtrOutput) ToGatewayNetworkInternalAccessPtrOutput() GatewayNetworkInternalAccessPtrOutput {
	return o
}

func (o GatewayNetworkInternalAccessPtrOutput) ToGatewayNetworkInternalAccessPtrOutputWithContext(ctx context.Context) GatewayNetworkInternalAccessPtrOutput {
	return o
}

func (o GatewayNetworkInternalAccessPtrOutput) Elem() GatewayNetworkInternalAccessOutput {
	return o.ApplyT(func(v *GatewayNetworkInternalAccess) GatewayNetworkInternalAccess {
		if v != nil {
			return *v
		}
		var ret GatewayNetworkInternalAccess
		return ret
	}).(GatewayNetworkInternalAccessOutput)
}

func (o GatewayNetworkInternalAccessPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GatewayNetworkInternalAccess) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type GatewayNetworkInternetAccess struct {
	CreateSimpleServicePolicy *bool `pulumi:"createSimpleServicePolicy"`
	// Property key can be an External IP (i.e. "63.16.0.3"), an External IP:Port (i.e. "63.16.0.3:443"), an External Port (i.e. ":443"), an External CIDR (i.e. "63.16.0.0/30"), an External CIDR:Port (i.e. "63.16.0.0/30:443") or a Variable (i.e. "{{myvar}}"). At least one of the `internalIp` or `port` must be defined
	DestinationNat map[string]GatewayNetworkInternetAccessDestinationNat `pulumi:"destinationNat"`
	Enabled        *bool                                                 `pulumi:"enabled"`
	// By default, all access is allowed, to only allow certain traffic, make `restricted`=`true` and define service_policies
	Restricted *bool `pulumi:"restricted"`
	// Property key may be an External IP Address (i.e. "63.16.0.3"), a CIDR (i.e. "63.16.0.12/20") or a Variable (i.e. "{{myvar}}")
	StaticNat map[string]GatewayNetworkInternetAccessStaticNat `pulumi:"staticNat"`
}

// GatewayNetworkInternetAccessInput is an input type that accepts GatewayNetworkInternetAccessArgs and GatewayNetworkInternetAccessOutput values.
// You can construct a concrete instance of `GatewayNetworkInternetAccessInput` via:
//
//	GatewayNetworkInternetAccessArgs{...}
type GatewayNetworkInternetAccessInput interface {
	pulumi.Input

	ToGatewayNetworkInternetAccessOutput() GatewayNetworkInternetAccessOutput
	ToGatewayNetworkInternetAccessOutputWithContext(context.Context) GatewayNetworkInternetAccessOutput
}

type GatewayNetworkInternetAccessArgs struct {
	CreateSimpleServicePolicy pulumi.BoolPtrInput `pulumi:"createSimpleServicePolicy"`
	// Property key can be an External IP (i.e. "63.16.0.3"), an External IP:Port (i.e. "63.16.0.3:443"), an External Port (i.e. ":443"), an External CIDR (i.e. "63.16.0.0/30"), an External CIDR:Port (i.e. "63.16.0.0/30:443") or a Variable (i.e. "{{myvar}}"). At least one of the `internalIp` or `port` must be defined
	DestinationNat GatewayNetworkInternetAccessDestinationNatMapInput `pulumi:"destinationNat"`
	Enabled        pulumi.BoolPtrInput                                `pulumi:"enabled"`
	// By default, all access is allowed, to only allow certain traffic, make `restricted`=`true` and define service_policies
	Restricted pulumi.BoolPtrInput `pulumi:"restricted"`
	// Property key may be an External IP Address (i.e. "63.16.0.3"), a CIDR (i.e. "63.16.0.12/20") or a Variable (i.e. "{{myvar}}")
	StaticNat GatewayNetworkInternetAccessStaticNatMapInput `pulumi:"staticNat"`
}

func (GatewayNetworkInternetAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayNetworkInternetAccess)(nil)).Elem()
}

func (i GatewayNetworkInternetAccessArgs) ToGatewayNetworkInternetAccessOutput() GatewayNetworkInternetAccessOutput {
	return i.ToGatewayNetworkInternetAccessOutputWithContext(context.Background())
}

func (i GatewayNetworkInternetAccessArgs) ToGatewayNetworkInternetAccessOutputWithContext(ctx context.Context) GatewayNetworkInternetAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayNetworkInternetAccessOutput)
}

func (i GatewayNetworkInternetAccessArgs) ToGatewayNetworkInternetAccessPtrOutput() GatewayNetworkInternetAccessPtrOutput {
	return i.ToGatewayNetworkInternetAccessPtrOutputWithContext(context.Background())
}

func (i GatewayNetworkInternetAccessArgs) ToGatewayNetworkInternetAccessPtrOutputWithContext(ctx context.Context) GatewayNetworkInternetAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayNetworkInternetAccessOutput).ToGatewayNetworkInternetAccessPtrOutputWithContext(ctx)
}

// GatewayNetworkInternetAccessPtrInput is an input type that accepts GatewayNetworkInternetAccessArgs, GatewayNetworkInternetAccessPtr and GatewayNetworkInternetAccessPtrOutput values.
// You can construct a concrete instance of `GatewayNetworkInternetAccessPtrInput` via:
//
//	        GatewayNetworkInternetAccessArgs{...}
//
//	or:
//
//	        nil
type GatewayNetworkInternetAccessPtrInput interface {
	pulumi.Input

	ToGatewayNetworkInternetAccessPtrOutput() GatewayNetworkInternetAccessPtrOutput
	ToGatewayNetworkInternetAccessPtrOutputWithContext(context.Context) GatewayNetworkInternetAccessPtrOutput
}

type gatewayNetworkInternetAccessPtrType GatewayNetworkInternetAccessArgs

func GatewayNetworkInternetAccessPtr(v *GatewayNetworkInternetAccessArgs) GatewayNetworkInternetAccessPtrInput {
	return (*gatewayNetworkInternetAccessPtrType)(v)
}

func (*gatewayNetworkInternetAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayNetworkInternetAccess)(nil)).Elem()
}

func (i *gatewayNetworkInternetAccessPtrType) ToGatewayNetworkInternetAccessPtrOutput() GatewayNetworkInternetAccessPtrOutput {
	return i.ToGatewayNetworkInternetAccessPtrOutputWithContext(context.Background())
}

func (i *gatewayNetworkInternetAccessPtrType) ToGatewayNetworkInternetAccessPtrOutputWithContext(ctx context.Context) GatewayNetworkInternetAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayNetworkInternetAccessPtrOutput)
}

type GatewayNetworkInternetAccessOutput struct{ *pulumi.OutputState }

func (GatewayNetworkInternetAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayNetworkInternetAccess)(nil)).Elem()
}

func (o GatewayNetworkInternetAccessOutput) ToGatewayNetworkInternetAccessOutput() GatewayNetworkInternetAccessOutput {
	return o
}

func (o GatewayNetworkInternetAccessOutput) ToGatewayNetworkInternetAccessOutputWithContext(ctx context.Context) GatewayNetworkInternetAccessOutput {
	return o
}

func (o GatewayNetworkInternetAccessOutput) ToGatewayNetworkInternetAccessPtrOutput() GatewayNetworkInternetAccessPtrOutput {
	return o.ToGatewayNetworkInternetAccessPtrOutputWithContext(context.Background())
}

func (o GatewayNetworkInternetAccessOutput) ToGatewayNetworkInternetAccessPtrOutputWithContext(ctx context.Context) GatewayNetworkInternetAccessPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayNetworkInternetAccess) *GatewayNetworkInternetAccess {
		return &v
	}).(GatewayNetworkInternetAccessPtrOutput)
}

func (o GatewayNetworkInternetAccessOutput) CreateSimpleServicePolicy() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GatewayNetworkInternetAccess) *bool { return v.CreateSimpleServicePolicy }).(pulumi.BoolPtrOutput)
}

// Property key can be an External IP (i.e. "63.16.0.3"), an External IP:Port (i.e. "63.16.0.3:443"), an External Port (i.e. ":443"), an External CIDR (i.e. "63.16.0.0/30"), an External CIDR:Port (i.e. "63.16.0.0/30:443") or a Variable (i.e. "{{myvar}}"). At least one of the `internalIp` or `port` must be defined
func (o GatewayNetworkInternetAccessOutput) DestinationNat() GatewayNetworkInternetAccessDestinationNatMapOutput {
	return o.ApplyT(func(v GatewayNetworkInternetAccess) map[string]GatewayNetworkInternetAccessDestinationNat {
		return v.DestinationNat
	}).(GatewayNetworkInternetAccessDestinationNatMapOutput)
}

func (o GatewayNetworkInternetAccessOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GatewayNetworkInternetAccess) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// By default, all access is allowed, to only allow certain traffic, make `restricted`=`true` and define service_policies
func (o GatewayNetworkInternetAccessOutput) Restricted() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GatewayNetworkInternetAccess) *bool { return v.Restricted }).(pulumi.BoolPtrOutput)
}

// Property key may be an External IP Address (i.e. "63.16.0.3"), a CIDR (i.e. "63.16.0.12/20") or a Variable (i.e. "{{myvar}}")
func (o GatewayNetworkInternetAccessOutput) StaticNat() GatewayNetworkInternetAccessStaticNatMapOutput {
	return o.ApplyT(func(v GatewayNetworkInternetAccess) map[string]GatewayNetworkInternetAccessStaticNat {
		return v.StaticNat
	}).(GatewayNetworkInternetAccessStaticNatMapOutput)
}

type GatewayNetworkInternetAccessPtrOutput struct{ *pulumi.OutputState }

func (GatewayNetworkInternetAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayNetworkInternetAccess)(nil)).Elem()
}

func (o GatewayNetworkInternetAccessPtrOutput) ToGatewayNetworkInternetAccessPtrOutput() GatewayNetworkInternetAccessPtrOutput {
	return o
}

func (o GatewayNetworkInternetAccessPtrOutput) ToGatewayNetworkInternetAccessPtrOutputWithContext(ctx context.Context) GatewayNetworkInternetAccessPtrOutput {
	return o
}

func (o GatewayNetworkInternetAccessPtrOutput) Elem() GatewayNetworkInternetAccessOutput {
	return o.ApplyT(func(v *GatewayNetworkInternetAccess) GatewayNetworkInternetAccess {
		if v != nil {
			return *v
		}
		var ret GatewayNetworkInternetAccess
		return ret
	}).(GatewayNetworkInternetAccessOutput)
}

func (o GatewayNetworkInternetAccessPtrOutput) CreateSimpleServicePolicy() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GatewayNetworkInternetAccess) *bool {
		if v == nil {
			return nil
		}
		return v.CreateSimpleServicePolicy
	}).(pulumi.BoolPtrOutput)
}

// Property key can be an External IP (i.e. "63.16.0.3"), an External IP:Port (i.e. "63.16.0.3:443"), an External Port (i.e. ":443"), an External CIDR (i.e. "63.16.0.0/30"), an External CIDR:Port (i.e. "63.16.0.0/30:443") or a Variable (i.e. "{{myvar}}"). At least one of the `internalIp` or `port` must be defined
func (o GatewayNetworkInternetAccessPtrOutput) DestinationNat() GatewayNetworkInternetAccessDestinationNatMapOutput {
	return o.ApplyT(func(v *GatewayNetworkInternetAccess) map[string]GatewayNetworkInternetAccessDestinationNat {
		if v == nil {
			return nil
		}
		return v.DestinationNat
	}).(GatewayNetworkInternetAccessDestinationNatMapOutput)
}

func (o GatewayNetworkInternetAccessPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GatewayNetworkInternetAccess) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// By default, all access is allowed, to only allow certain traffic, make `restricted`=`true` and define service_policies
func (o GatewayNetworkInternetAccessPtrOutput) Restricted() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GatewayNetworkInternetAccess) *bool {
		if v == nil {
			return nil
		}
		return v.Restricted
	}).(pulumi.BoolPtrOutput)
}

// Property key may be an External IP Address (i.e. "63.16.0.3"), a CIDR (i.e. "63.16.0.12/20") or a Variable (i.e. "{{myvar}}")
func (o GatewayNetworkInternetAccessPtrOutput) StaticNat() GatewayNetworkInternetAccessStaticNatMapOutput {
	return o.ApplyT(func(v *GatewayNetworkInternetAccess) map[string]GatewayNetworkInternetAccessStaticNat {
		if v == nil {
			return nil
		}
		return v.StaticNat
	}).(GatewayNetworkInternetAccessStaticNatMapOutput)
}

type GatewayNetworkInternetAccessDestinationNat struct {
	// The Destination NAT destination IP Address. Must be an IP (i.e. "192.168.70.30") or a Variable (i.e. "{{myvar}}")
	InternalIp *string `pulumi:"internalIp"`
	Name       *string `pulumi:"name"`
	// The Destination NAT destination IP Address. Must be a Port (i.e. "443") or a Variable (i.e. "{{myvar}}")
	Port *string `pulumi:"port"`
	// SRX Only. If not set, we configure the nat policies against all WAN ports for simplicity
	WanName *string `pulumi:"wanName"`
}

// GatewayNetworkInternetAccessDestinationNatInput is an input type that accepts GatewayNetworkInternetAccessDestinationNatArgs and GatewayNetworkInternetAccessDestinationNatOutput values.
// You can construct a concrete instance of `GatewayNetworkInternetAccessDestinationNatInput` via:
//
//	GatewayNetworkInternetAccessDestinationNatArgs{...}
type GatewayNetworkInternetAccessDestinationNatInput interface {
	pulumi.Input

	ToGatewayNetworkInternetAccessDestinationNatOutput() GatewayNetworkInternetAccessDestinationNatOutput
	ToGatewayNetworkInternetAccessDestinationNatOutputWithContext(context.Context) GatewayNetworkInternetAccessDestinationNatOutput
}

type GatewayNetworkInternetAccessDestinationNatArgs struct {
	// The Destination NAT destination IP Address. Must be an IP (i.e. "192.168.70.30") or a Variable (i.e. "{{myvar}}")
	InternalIp pulumi.StringPtrInput `pulumi:"internalIp"`
	Name       pulumi.StringPtrInput `pulumi:"name"`
	// The Destination NAT destination IP Address. Must be a Port (i.e. "443") or a Variable (i.e. "{{myvar}}")
	Port pulumi.StringPtrInput `pulumi:"port"`
	// SRX Only. If not set, we configure the nat policies against all WAN ports for simplicity
	WanName pulumi.StringPtrInput `pulumi:"wanName"`
}

func (GatewayNetworkInternetAccessDestinationNatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayNetworkInternetAccessDestinationNat)(nil)).Elem()
}

func (i GatewayNetworkInternetAccessDestinationNatArgs) ToGatewayNetworkInternetAccessDestinationNatOutput() GatewayNetworkInternetAccessDestinationNatOutput {
	return i.ToGatewayNetworkInternetAccessDestinationNatOutputWithContext(context.Background())
}

func (i GatewayNetworkInternetAccessDestinationNatArgs) ToGatewayNetworkInternetAccessDestinationNatOutputWithContext(ctx context.Context) GatewayNetworkInternetAccessDestinationNatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayNetworkInternetAccessDestinationNatOutput)
}

// GatewayNetworkInternetAccessDestinationNatMapInput is an input type that accepts GatewayNetworkInternetAccessDestinationNatMap and GatewayNetworkInternetAccessDestinationNatMapOutput values.
// You can construct a concrete instance of `GatewayNetworkInternetAccessDestinationNatMapInput` via:
//
//	GatewayNetworkInternetAccessDestinationNatMap{ "key": GatewayNetworkInternetAccessDestinationNatArgs{...} }
type GatewayNetworkInternetAccessDestinationNatMapInput interface {
	pulumi.Input

	ToGatewayNetworkInternetAccessDestinationNatMapOutput() GatewayNetworkInternetAccessDestinationNatMapOutput
	ToGatewayNetworkInternetAccessDestinationNatMapOutputWithContext(context.Context) GatewayNetworkInternetAccessDestinationNatMapOutput
}

type GatewayNetworkInternetAccessDestinationNatMap map[string]GatewayNetworkInternetAccessDestinationNatInput

func (GatewayNetworkInternetAccessDestinationNatMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]GatewayNetworkInternetAccessDestinationNat)(nil)).Elem()
}

func (i GatewayNetworkInternetAccessDestinationNatMap) ToGatewayNetworkInternetAccessDestinationNatMapOutput() GatewayNetworkInternetAccessDestinationNatMapOutput {
	return i.ToGatewayNetworkInternetAccessDestinationNatMapOutputWithContext(context.Background())
}

func (i GatewayNetworkInternetAccessDestinationNatMap) ToGatewayNetworkInternetAccessDestinationNatMapOutputWithContext(ctx context.Context) GatewayNetworkInternetAccessDestinationNatMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayNetworkInternetAccessDestinationNatMapOutput)
}

type GatewayNetworkInternetAccessDestinationNatOutput struct{ *pulumi.OutputState }

func (GatewayNetworkInternetAccessDestinationNatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayNetworkInternetAccessDestinationNat)(nil)).Elem()
}

func (o GatewayNetworkInternetAccessDestinationNatOutput) ToGatewayNetworkInternetAccessDestinationNatOutput() GatewayNetworkInternetAccessDestinationNatOutput {
	return o
}

func (o GatewayNetworkInternetAccessDestinationNatOutput) ToGatewayNetworkInternetAccessDestinationNatOutputWithContext(ctx context.Context) GatewayNetworkInternetAccessDestinationNatOutput {
	return o
}

// The Destination NAT destination IP Address. Must be an IP (i.e. "192.168.70.30") or a Variable (i.e. "{{myvar}}")
func (o GatewayNetworkInternetAccessDestinationNatOutput) InternalIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayNetworkInternetAccessDestinationNat) *string { return v.InternalIp }).(pulumi.StringPtrOutput)
}

func (o GatewayNetworkInternetAccessDestinationNatOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayNetworkInternetAccessDestinationNat) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The Destination NAT destination IP Address. Must be a Port (i.e. "443") or a Variable (i.e. "{{myvar}}")
func (o GatewayNetworkInternetAccessDestinationNatOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayNetworkInternetAccessDestinationNat) *string { return v.Port }).(pulumi.StringPtrOutput)
}

// SRX Only. If not set, we configure the nat policies against all WAN ports for simplicity
func (o GatewayNetworkInternetAccessDestinationNatOutput) WanName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayNetworkInternetAccessDestinationNat) *string { return v.WanName }).(pulumi.StringPtrOutput)
}

type GatewayNetworkInternetAccessDestinationNatMapOutput struct{ *pulumi.OutputState }

func (GatewayNetworkInternetAccessDestinationNatMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]GatewayNetworkInternetAccessDestinationNat)(nil)).Elem()
}

func (o GatewayNetworkInternetAccessDestinationNatMapOutput) ToGatewayNetworkInternetAccessDestinationNatMapOutput() GatewayNetworkInternetAccessDestinationNatMapOutput {
	return o
}

func (o GatewayNetworkInternetAccessDestinationNatMapOutput) ToGatewayNetworkInternetAccessDestinationNatMapOutputWithContext(ctx context.Context) GatewayNetworkInternetAccessDestinationNatMapOutput {
	return o
}

func (o GatewayNetworkInternetAccessDestinationNatMapOutput) MapIndex(k pulumi.StringInput) GatewayNetworkInternetAccessDestinationNatOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) GatewayNetworkInternetAccessDestinationNat {
		return vs[0].(map[string]GatewayNetworkInternetAccessDestinationNat)[vs[1].(string)]
	}).(GatewayNetworkInternetAccessDestinationNatOutput)
}

type GatewayNetworkInternetAccessStaticNat struct {
	// The Static NAT destination IP Address. Must be an IP Address (i.e. "192.168.70.3") or a Variable (i.e. "{{myvar}}")
	InternalIp string `pulumi:"internalIp"`
	Name       string `pulumi:"name"`
	// SRX Only. If not set, we configure the nat policies against all WAN ports for simplicity. Can be a Variable (i.e. "{{myvar}}")
	WanName *string `pulumi:"wanName"`
}

// GatewayNetworkInternetAccessStaticNatInput is an input type that accepts GatewayNetworkInternetAccessStaticNatArgs and GatewayNetworkInternetAccessStaticNatOutput values.
// You can construct a concrete instance of `GatewayNetworkInternetAccessStaticNatInput` via:
//
//	GatewayNetworkInternetAccessStaticNatArgs{...}
type GatewayNetworkInternetAccessStaticNatInput interface {
	pulumi.Input

	ToGatewayNetworkInternetAccessStaticNatOutput() GatewayNetworkInternetAccessStaticNatOutput
	ToGatewayNetworkInternetAccessStaticNatOutputWithContext(context.Context) GatewayNetworkInternetAccessStaticNatOutput
}

type GatewayNetworkInternetAccessStaticNatArgs struct {
	// The Static NAT destination IP Address. Must be an IP Address (i.e. "192.168.70.3") or a Variable (i.e. "{{myvar}}")
	InternalIp pulumi.StringInput `pulumi:"internalIp"`
	Name       pulumi.StringInput `pulumi:"name"`
	// SRX Only. If not set, we configure the nat policies against all WAN ports for simplicity. Can be a Variable (i.e. "{{myvar}}")
	WanName pulumi.StringPtrInput `pulumi:"wanName"`
}

func (GatewayNetworkInternetAccessStaticNatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayNetworkInternetAccessStaticNat)(nil)).Elem()
}

func (i GatewayNetworkInternetAccessStaticNatArgs) ToGatewayNetworkInternetAccessStaticNatOutput() GatewayNetworkInternetAccessStaticNatOutput {
	return i.ToGatewayNetworkInternetAccessStaticNatOutputWithContext(context.Background())
}

func (i GatewayNetworkInternetAccessStaticNatArgs) ToGatewayNetworkInternetAccessStaticNatOutputWithContext(ctx context.Context) GatewayNetworkInternetAccessStaticNatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayNetworkInternetAccessStaticNatOutput)
}

// GatewayNetworkInternetAccessStaticNatMapInput is an input type that accepts GatewayNetworkInternetAccessStaticNatMap and GatewayNetworkInternetAccessStaticNatMapOutput values.
// You can construct a concrete instance of `GatewayNetworkInternetAccessStaticNatMapInput` via:
//
//	GatewayNetworkInternetAccessStaticNatMap{ "key": GatewayNetworkInternetAccessStaticNatArgs{...} }
type GatewayNetworkInternetAccessStaticNatMapInput interface {
	pulumi.Input

	ToGatewayNetworkInternetAccessStaticNatMapOutput() GatewayNetworkInternetAccessStaticNatMapOutput
	ToGatewayNetworkInternetAccessStaticNatMapOutputWithContext(context.Context) GatewayNetworkInternetAccessStaticNatMapOutput
}

type GatewayNetworkInternetAccessStaticNatMap map[string]GatewayNetworkInternetAccessStaticNatInput

func (GatewayNetworkInternetAccessStaticNatMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]GatewayNetworkInternetAccessStaticNat)(nil)).Elem()
}

func (i GatewayNetworkInternetAccessStaticNatMap) ToGatewayNetworkInternetAccessStaticNatMapOutput() GatewayNetworkInternetAccessStaticNatMapOutput {
	return i.ToGatewayNetworkInternetAccessStaticNatMapOutputWithContext(context.Background())
}

func (i GatewayNetworkInternetAccessStaticNatMap) ToGatewayNetworkInternetAccessStaticNatMapOutputWithContext(ctx context.Context) GatewayNetworkInternetAccessStaticNatMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayNetworkInternetAccessStaticNatMapOutput)
}

type GatewayNetworkInternetAccessStaticNatOutput struct{ *pulumi.OutputState }

func (GatewayNetworkInternetAccessStaticNatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayNetworkInternetAccessStaticNat)(nil)).Elem()
}

func (o GatewayNetworkInternetAccessStaticNatOutput) ToGatewayNetworkInternetAccessStaticNatOutput() GatewayNetworkInternetAccessStaticNatOutput {
	return o
}

func (o GatewayNetworkInternetAccessStaticNatOutput) ToGatewayNetworkInternetAccessStaticNatOutputWithContext(ctx context.Context) GatewayNetworkInternetAccessStaticNatOutput {
	return o
}

// The Static NAT destination IP Address. Must be an IP Address (i.e. "192.168.70.3") or a Variable (i.e. "{{myvar}}")
func (o GatewayNetworkInternetAccessStaticNatOutput) InternalIp() pulumi.StringOutput {
	return o.ApplyT(func(v GatewayNetworkInternetAccessStaticNat) string { return v.InternalIp }).(pulumi.StringOutput)
}

func (o GatewayNetworkInternetAccessStaticNatOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GatewayNetworkInternetAccessStaticNat) string { return v.Name }).(pulumi.StringOutput)
}

// SRX Only. If not set, we configure the nat policies against all WAN ports for simplicity. Can be a Variable (i.e. "{{myvar}}")
func (o GatewayNetworkInternetAccessStaticNatOutput) WanName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayNetworkInternetAccessStaticNat) *string { return v.WanName }).(pulumi.StringPtrOutput)
}

type GatewayNetworkInternetAccessStaticNatMapOutput struct{ *pulumi.OutputState }

func (GatewayNetworkInternetAccessStaticNatMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]GatewayNetworkInternetAccessStaticNat)(nil)).Elem()
}

func (o GatewayNetworkInternetAccessStaticNatMapOutput) ToGatewayNetworkInternetAccessStaticNatMapOutput() GatewayNetworkInternetAccessStaticNatMapOutput {
	return o
}

func (o GatewayNetworkInternetAccessStaticNatMapOutput) ToGatewayNetworkInternetAccessStaticNatMapOutputWithContext(ctx context.Context) GatewayNetworkInternetAccessStaticNatMapOutput {
	return o
}

func (o GatewayNetworkInternetAccessStaticNatMapOutput) MapIndex(k pulumi.StringInput) GatewayNetworkInternetAccessStaticNatOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) GatewayNetworkInternetAccessStaticNat {
		return vs[0].(map[string]GatewayNetworkInternetAccessStaticNat)[vs[1].(string)]
	}).(GatewayNetworkInternetAccessStaticNatOutput)
}

type GatewayNetworkMulticast struct {
	// If the network will only be the source of the multicast traffic, IGMP can be disabled
	DisableIgmp *bool `pulumi:"disableIgmp"`
	Enabled     *bool `pulumi:"enabled"`
	// Group address to RP (rendezvous point) mapping. Property Key is the CIDR (example "225.1.0.3/32")
	Groups map[string]GatewayNetworkMulticastGroups `pulumi:"groups"`
}

// GatewayNetworkMulticastInput is an input type that accepts GatewayNetworkMulticastArgs and GatewayNetworkMulticastOutput values.
// You can construct a concrete instance of `GatewayNetworkMulticastInput` via:
//
//	GatewayNetworkMulticastArgs{...}
type GatewayNetworkMulticastInput interface {
	pulumi.Input

	ToGatewayNetworkMulticastOutput() GatewayNetworkMulticastOutput
	ToGatewayNetworkMulticastOutputWithContext(context.Context) GatewayNetworkMulticastOutput
}

type GatewayNetworkMulticastArgs struct {
	// If the network will only be the source of the multicast traffic, IGMP can be disabled
	DisableIgmp pulumi.BoolPtrInput `pulumi:"disableIgmp"`
	Enabled     pulumi.BoolPtrInput `pulumi:"enabled"`
	// Group address to RP (rendezvous point) mapping. Property Key is the CIDR (example "225.1.0.3/32")
	Groups GatewayNetworkMulticastGroupsMapInput `pulumi:"groups"`
}

func (GatewayNetworkMulticastArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayNetworkMulticast)(nil)).Elem()
}

func (i GatewayNetworkMulticastArgs) ToGatewayNetworkMulticastOutput() GatewayNetworkMulticastOutput {
	return i.ToGatewayNetworkMulticastOutputWithContext(context.Background())
}

func (i GatewayNetworkMulticastArgs) ToGatewayNetworkMulticastOutputWithContext(ctx context.Context) GatewayNetworkMulticastOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayNetworkMulticastOutput)
}

func (i GatewayNetworkMulticastArgs) ToGatewayNetworkMulticastPtrOutput() GatewayNetworkMulticastPtrOutput {
	return i.ToGatewayNetworkMulticastPtrOutputWithContext(context.Background())
}

func (i GatewayNetworkMulticastArgs) ToGatewayNetworkMulticastPtrOutputWithContext(ctx context.Context) GatewayNetworkMulticastPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayNetworkMulticastOutput).ToGatewayNetworkMulticastPtrOutputWithContext(ctx)
}

// GatewayNetworkMulticastPtrInput is an input type that accepts GatewayNetworkMulticastArgs, GatewayNetworkMulticastPtr and GatewayNetworkMulticastPtrOutput values.
// You can construct a concrete instance of `GatewayNetworkMulticastPtrInput` via:
//
//	        GatewayNetworkMulticastArgs{...}
//
//	or:
//
//	        nil
type GatewayNetworkMulticastPtrInput interface {
	pulumi.Input

	ToGatewayNetworkMulticastPtrOutput() GatewayNetworkMulticastPtrOutput
	ToGatewayNetworkMulticastPtrOutputWithContext(context.Context) GatewayNetworkMulticastPtrOutput
}

type gatewayNetworkMulticastPtrType GatewayNetworkMulticastArgs

func GatewayNetworkMulticastPtr(v *GatewayNetworkMulticastArgs) GatewayNetworkMulticastPtrInput {
	return (*gatewayNetworkMulticastPtrType)(v)
}

func (*gatewayNetworkMulticastPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayNetworkMulticast)(nil)).Elem()
}

func (i *gatewayNetworkMulticastPtrType) ToGatewayNetworkMulticastPtrOutput() GatewayNetworkMulticastPtrOutput {
	return i.ToGatewayNetworkMulticastPtrOutputWithContext(context.Background())
}

func (i *gatewayNetworkMulticastPtrType) ToGatewayNetworkMulticastPtrOutputWithContext(ctx context.Context) GatewayNetworkMulticastPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayNetworkMulticastPtrOutput)
}

type GatewayNetworkMulticastOutput struct{ *pulumi.OutputState }

func (GatewayNetworkMulticastOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayNetworkMulticast)(nil)).Elem()
}

func (o GatewayNetworkMulticastOutput) ToGatewayNetworkMulticastOutput() GatewayNetworkMulticastOutput {
	return o
}

func (o GatewayNetworkMulticastOutput) ToGatewayNetworkMulticastOutputWithContext(ctx context.Context) GatewayNetworkMulticastOutput {
	return o
}

func (o GatewayNetworkMulticastOutput) ToGatewayNetworkMulticastPtrOutput() GatewayNetworkMulticastPtrOutput {
	return o.ToGatewayNetworkMulticastPtrOutputWithContext(context.Background())
}

func (o GatewayNetworkMulticastOutput) ToGatewayNetworkMulticastPtrOutputWithContext(ctx context.Context) GatewayNetworkMulticastPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayNetworkMulticast) *GatewayNetworkMulticast {
		return &v
	}).(GatewayNetworkMulticastPtrOutput)
}

// If the network will only be the source of the multicast traffic, IGMP can be disabled
func (o GatewayNetworkMulticastOutput) DisableIgmp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GatewayNetworkMulticast) *bool { return v.DisableIgmp }).(pulumi.BoolPtrOutput)
}

func (o GatewayNetworkMulticastOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GatewayNetworkMulticast) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Group address to RP (rendezvous point) mapping. Property Key is the CIDR (example "225.1.0.3/32")
func (o GatewayNetworkMulticastOutput) Groups() GatewayNetworkMulticastGroupsMapOutput {
	return o.ApplyT(func(v GatewayNetworkMulticast) map[string]GatewayNetworkMulticastGroups { return v.Groups }).(GatewayNetworkMulticastGroupsMapOutput)
}

type GatewayNetworkMulticastPtrOutput struct{ *pulumi.OutputState }

func (GatewayNetworkMulticastPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayNetworkMulticast)(nil)).Elem()
}

func (o GatewayNetworkMulticastPtrOutput) ToGatewayNetworkMulticastPtrOutput() GatewayNetworkMulticastPtrOutput {
	return o
}

func (o GatewayNetworkMulticastPtrOutput) ToGatewayNetworkMulticastPtrOutputWithContext(ctx context.Context) GatewayNetworkMulticastPtrOutput {
	return o
}

func (o GatewayNetworkMulticastPtrOutput) Elem() GatewayNetworkMulticastOutput {
	return o.ApplyT(func(v *GatewayNetworkMulticast) GatewayNetworkMulticast {
		if v != nil {
			return *v
		}
		var ret GatewayNetworkMulticast
		return ret
	}).(GatewayNetworkMulticastOutput)
}

// If the network will only be the source of the multicast traffic, IGMP can be disabled
func (o GatewayNetworkMulticastPtrOutput) DisableIgmp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GatewayNetworkMulticast) *bool {
		if v == nil {
			return nil
		}
		return v.DisableIgmp
	}).(pulumi.BoolPtrOutput)
}

func (o GatewayNetworkMulticastPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GatewayNetworkMulticast) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Group address to RP (rendezvous point) mapping. Property Key is the CIDR (example "225.1.0.3/32")
func (o GatewayNetworkMulticastPtrOutput) Groups() GatewayNetworkMulticastGroupsMapOutput {
	return o.ApplyT(func(v *GatewayNetworkMulticast) map[string]GatewayNetworkMulticastGroups {
		if v == nil {
			return nil
		}
		return v.Groups
	}).(GatewayNetworkMulticastGroupsMapOutput)
}

type GatewayNetworkMulticastGroups struct {
	// RP (rendezvous point) IP Address
	RpIp *string `pulumi:"rpIp"`
}

// GatewayNetworkMulticastGroupsInput is an input type that accepts GatewayNetworkMulticastGroupsArgs and GatewayNetworkMulticastGroupsOutput values.
// You can construct a concrete instance of `GatewayNetworkMulticastGroupsInput` via:
//
//	GatewayNetworkMulticastGroupsArgs{...}
type GatewayNetworkMulticastGroupsInput interface {
	pulumi.Input

	ToGatewayNetworkMulticastGroupsOutput() GatewayNetworkMulticastGroupsOutput
	ToGatewayNetworkMulticastGroupsOutputWithContext(context.Context) GatewayNetworkMulticastGroupsOutput
}

type GatewayNetworkMulticastGroupsArgs struct {
	// RP (rendezvous point) IP Address
	RpIp pulumi.StringPtrInput `pulumi:"rpIp"`
}

func (GatewayNetworkMulticastGroupsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayNetworkMulticastGroups)(nil)).Elem()
}

func (i GatewayNetworkMulticastGroupsArgs) ToGatewayNetworkMulticastGroupsOutput() GatewayNetworkMulticastGroupsOutput {
	return i.ToGatewayNetworkMulticastGroupsOutputWithContext(context.Background())
}

func (i GatewayNetworkMulticastGroupsArgs) ToGatewayNetworkMulticastGroupsOutputWithContext(ctx context.Context) GatewayNetworkMulticastGroupsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayNetworkMulticastGroupsOutput)
}

// GatewayNetworkMulticastGroupsMapInput is an input type that accepts GatewayNetworkMulticastGroupsMap and GatewayNetworkMulticastGroupsMapOutput values.
// You can construct a concrete instance of `GatewayNetworkMulticastGroupsMapInput` via:
//
//	GatewayNetworkMulticastGroupsMap{ "key": GatewayNetworkMulticastGroupsArgs{...} }
type GatewayNetworkMulticastGroupsMapInput interface {
	pulumi.Input

	ToGatewayNetworkMulticastGroupsMapOutput() GatewayNetworkMulticastGroupsMapOutput
	ToGatewayNetworkMulticastGroupsMapOutputWithContext(context.Context) GatewayNetworkMulticastGroupsMapOutput
}

type GatewayNetworkMulticastGroupsMap map[string]GatewayNetworkMulticastGroupsInput

func (GatewayNetworkMulticastGroupsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]GatewayNetworkMulticastGroups)(nil)).Elem()
}

func (i GatewayNetworkMulticastGroupsMap) ToGatewayNetworkMulticastGroupsMapOutput() GatewayNetworkMulticastGroupsMapOutput {
	return i.ToGatewayNetworkMulticastGroupsMapOutputWithContext(context.Background())
}

func (i GatewayNetworkMulticastGroupsMap) ToGatewayNetworkMulticastGroupsMapOutputWithContext(ctx context.Context) GatewayNetworkMulticastGroupsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayNetworkMulticastGroupsMapOutput)
}

type GatewayNetworkMulticastGroupsOutput struct{ *pulumi.OutputState }

func (GatewayNetworkMulticastGroupsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayNetworkMulticastGroups)(nil)).Elem()
}

func (o GatewayNetworkMulticastGroupsOutput) ToGatewayNetworkMulticastGroupsOutput() GatewayNetworkMulticastGroupsOutput {
	return o
}

func (o GatewayNetworkMulticastGroupsOutput) ToGatewayNetworkMulticastGroupsOutputWithContext(ctx context.Context) GatewayNetworkMulticastGroupsOutput {
	return o
}

// RP (rendezvous point) IP Address
func (o GatewayNetworkMulticastGroupsOutput) RpIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayNetworkMulticastGroups) *string { return v.RpIp }).(pulumi.StringPtrOutput)
}

type GatewayNetworkMulticastGroupsMapOutput struct{ *pulumi.OutputState }

func (GatewayNetworkMulticastGroupsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]GatewayNetworkMulticastGroups)(nil)).Elem()
}

func (o GatewayNetworkMulticastGroupsMapOutput) ToGatewayNetworkMulticastGroupsMapOutput() GatewayNetworkMulticastGroupsMapOutput {
	return o
}

func (o GatewayNetworkMulticastGroupsMapOutput) ToGatewayNetworkMulticastGroupsMapOutputWithContext(ctx context.Context) GatewayNetworkMulticastGroupsMapOutput {
	return o
}

func (o GatewayNetworkMulticastGroupsMapOutput) MapIndex(k pulumi.StringInput) GatewayNetworkMulticastGroupsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) GatewayNetworkMulticastGroups {
		return vs[0].(map[string]GatewayNetworkMulticastGroups)[vs[1].(string)]
	}).(GatewayNetworkMulticastGroupsOutput)
}

type GatewayNetworkTenants struct {
	Addresses []string `pulumi:"addresses"`
}

// GatewayNetworkTenantsInput is an input type that accepts GatewayNetworkTenantsArgs and GatewayNetworkTenantsOutput values.
// You can construct a concrete instance of `GatewayNetworkTenantsInput` via:
//
//	GatewayNetworkTenantsArgs{...}
type GatewayNetworkTenantsInput interface {
	pulumi.Input

	ToGatewayNetworkTenantsOutput() GatewayNetworkTenantsOutput
	ToGatewayNetworkTenantsOutputWithContext(context.Context) GatewayNetworkTenantsOutput
}

type GatewayNetworkTenantsArgs struct {
	Addresses pulumi.StringArrayInput `pulumi:"addresses"`
}

func (GatewayNetworkTenantsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayNetworkTenants)(nil)).Elem()
}

func (i GatewayNetworkTenantsArgs) ToGatewayNetworkTenantsOutput() GatewayNetworkTenantsOutput {
	return i.ToGatewayNetworkTenantsOutputWithContext(context.Background())
}

func (i GatewayNetworkTenantsArgs) ToGatewayNetworkTenantsOutputWithContext(ctx context.Context) GatewayNetworkTenantsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayNetworkTenantsOutput)
}

// GatewayNetworkTenantsMapInput is an input type that accepts GatewayNetworkTenantsMap and GatewayNetworkTenantsMapOutput values.
// You can construct a concrete instance of `GatewayNetworkTenantsMapInput` via:
//
//	GatewayNetworkTenantsMap{ "key": GatewayNetworkTenantsArgs{...} }
type GatewayNetworkTenantsMapInput interface {
	pulumi.Input

	ToGatewayNetworkTenantsMapOutput() GatewayNetworkTenantsMapOutput
	ToGatewayNetworkTenantsMapOutputWithContext(context.Context) GatewayNetworkTenantsMapOutput
}

type GatewayNetworkTenantsMap map[string]GatewayNetworkTenantsInput

func (GatewayNetworkTenantsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]GatewayNetworkTenants)(nil)).Elem()
}

func (i GatewayNetworkTenantsMap) ToGatewayNetworkTenantsMapOutput() GatewayNetworkTenantsMapOutput {
	return i.ToGatewayNetworkTenantsMapOutputWithContext(context.Background())
}

func (i GatewayNetworkTenantsMap) ToGatewayNetworkTenantsMapOutputWithContext(ctx context.Context) GatewayNetworkTenantsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayNetworkTenantsMapOutput)
}

type GatewayNetworkTenantsOutput struct{ *pulumi.OutputState }

func (GatewayNetworkTenantsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayNetworkTenants)(nil)).Elem()
}

func (o GatewayNetworkTenantsOutput) ToGatewayNetworkTenantsOutput() GatewayNetworkTenantsOutput {
	return o
}

func (o GatewayNetworkTenantsOutput) ToGatewayNetworkTenantsOutputWithContext(ctx context.Context) GatewayNetworkTenantsOutput {
	return o
}

func (o GatewayNetworkTenantsOutput) Addresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GatewayNetworkTenants) []string { return v.Addresses }).(pulumi.StringArrayOutput)
}

type GatewayNetworkTenantsMapOutput struct{ *pulumi.OutputState }

func (GatewayNetworkTenantsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]GatewayNetworkTenants)(nil)).Elem()
}

func (o GatewayNetworkTenantsMapOutput) ToGatewayNetworkTenantsMapOutput() GatewayNetworkTenantsMapOutput {
	return o
}

func (o GatewayNetworkTenantsMapOutput) ToGatewayNetworkTenantsMapOutputWithContext(ctx context.Context) GatewayNetworkTenantsMapOutput {
	return o
}

func (o GatewayNetworkTenantsMapOutput) MapIndex(k pulumi.StringInput) GatewayNetworkTenantsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) GatewayNetworkTenants {
		return vs[0].(map[string]GatewayNetworkTenants)[vs[1].(string)]
	}).(GatewayNetworkTenantsOutput)
}

type GatewayNetworkVpnAccess struct {
	// If `routed`==`true`, whether to advertise an aggregated subnet toward HUB this is useful when there are multiple networks on SPOKE's side
	AdvertisedSubnet *string `pulumi:"advertisedSubnet"`
	// Whether to allow ping from vpn into this routed network
	AllowPing *bool `pulumi:"allowPing"`
	// Property key can be an External IP (i.e. "63.16.0.3"), an External IP:Port (i.e. "63.16.0.3:443"), an External Port (i.e. ":443"), an External CIDR (i.e. "63.16.0.0/30"), an External CIDR:Port (i.e. "63.16.0.0/30:443") or a Variable (i.e. "{{myvar}}"). At least one of the `internalIp` or `port` must be defined
	DestinationNat map[string]GatewayNetworkVpnAccessDestinationNat `pulumi:"destinationNat"`
	// If `routed`==`false` (usually at Spoke), but some hosts needs to be reachable from Hub, a subnet is required to create and advertise the route to Hub
	NatPool *string `pulumi:"natPool"`
	// toward LAN-side BGP peers
	NoReadvertiseToLanBgp *bool `pulumi:"noReadvertiseToLanBgp"`
	// toward LAN-side OSPF peers
	NoReadvertiseToLanOspf *bool `pulumi:"noReadvertiseToLanOspf"`
	// toward overlay, how HUB should deal with routes it received from Spokes
	NoReadvertiseToOverlay *bool `pulumi:"noReadvertiseToOverlay"`
	// By default, the routes are only readvertised toward the same vrf on spoke. To allow it to be leaked to other vrfs
	OtherVrfs []string `pulumi:"otherVrfs"`
	// Whether this network is routable
	Routed *bool `pulumi:"routed"`
	// If `routed`==`false` (usually at Spoke), but some hosts needs to be reachable from Hub
	SourceNat *GatewayNetworkVpnAccessSourceNat `pulumi:"sourceNat"`
	// Property key may be an External IP Address (i.e. "63.16.0.3"), a CIDR (i.e. "63.16.0.12/20") or a Variable (i.e. "{{myvar}}")
	StaticNat map[string]GatewayNetworkVpnAccessStaticNat `pulumi:"staticNat"`
	// toward overlay, how HUB should deal with routes it received from Spokes
	SummarizedSubnet *string `pulumi:"summarizedSubnet"`
	// toward LAN-side BGP peers
	SummarizedSubnetToLanBgp *string `pulumi:"summarizedSubnetToLanBgp"`
	// toward LAN-side OSPF peers
	SummarizedSubnetToLanOspf *string `pulumi:"summarizedSubnetToLanOspf"`
}

// GatewayNetworkVpnAccessInput is an input type that accepts GatewayNetworkVpnAccessArgs and GatewayNetworkVpnAccessOutput values.
// You can construct a concrete instance of `GatewayNetworkVpnAccessInput` via:
//
//	GatewayNetworkVpnAccessArgs{...}
type GatewayNetworkVpnAccessInput interface {
	pulumi.Input

	ToGatewayNetworkVpnAccessOutput() GatewayNetworkVpnAccessOutput
	ToGatewayNetworkVpnAccessOutputWithContext(context.Context) GatewayNetworkVpnAccessOutput
}

type GatewayNetworkVpnAccessArgs struct {
	// If `routed`==`true`, whether to advertise an aggregated subnet toward HUB this is useful when there are multiple networks on SPOKE's side
	AdvertisedSubnet pulumi.StringPtrInput `pulumi:"advertisedSubnet"`
	// Whether to allow ping from vpn into this routed network
	AllowPing pulumi.BoolPtrInput `pulumi:"allowPing"`
	// Property key can be an External IP (i.e. "63.16.0.3"), an External IP:Port (i.e. "63.16.0.3:443"), an External Port (i.e. ":443"), an External CIDR (i.e. "63.16.0.0/30"), an External CIDR:Port (i.e. "63.16.0.0/30:443") or a Variable (i.e. "{{myvar}}"). At least one of the `internalIp` or `port` must be defined
	DestinationNat GatewayNetworkVpnAccessDestinationNatMapInput `pulumi:"destinationNat"`
	// If `routed`==`false` (usually at Spoke), but some hosts needs to be reachable from Hub, a subnet is required to create and advertise the route to Hub
	NatPool pulumi.StringPtrInput `pulumi:"natPool"`
	// toward LAN-side BGP peers
	NoReadvertiseToLanBgp pulumi.BoolPtrInput `pulumi:"noReadvertiseToLanBgp"`
	// toward LAN-side OSPF peers
	NoReadvertiseToLanOspf pulumi.BoolPtrInput `pulumi:"noReadvertiseToLanOspf"`
	// toward overlay, how HUB should deal with routes it received from Spokes
	NoReadvertiseToOverlay pulumi.BoolPtrInput `pulumi:"noReadvertiseToOverlay"`
	// By default, the routes are only readvertised toward the same vrf on spoke. To allow it to be leaked to other vrfs
	OtherVrfs pulumi.StringArrayInput `pulumi:"otherVrfs"`
	// Whether this network is routable
	Routed pulumi.BoolPtrInput `pulumi:"routed"`
	// If `routed`==`false` (usually at Spoke), but some hosts needs to be reachable from Hub
	SourceNat GatewayNetworkVpnAccessSourceNatPtrInput `pulumi:"sourceNat"`
	// Property key may be an External IP Address (i.e. "63.16.0.3"), a CIDR (i.e. "63.16.0.12/20") or a Variable (i.e. "{{myvar}}")
	StaticNat GatewayNetworkVpnAccessStaticNatMapInput `pulumi:"staticNat"`
	// toward overlay, how HUB should deal with routes it received from Spokes
	SummarizedSubnet pulumi.StringPtrInput `pulumi:"summarizedSubnet"`
	// toward LAN-side BGP peers
	SummarizedSubnetToLanBgp pulumi.StringPtrInput `pulumi:"summarizedSubnetToLanBgp"`
	// toward LAN-side OSPF peers
	SummarizedSubnetToLanOspf pulumi.StringPtrInput `pulumi:"summarizedSubnetToLanOspf"`
}

func (GatewayNetworkVpnAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayNetworkVpnAccess)(nil)).Elem()
}

func (i GatewayNetworkVpnAccessArgs) ToGatewayNetworkVpnAccessOutput() GatewayNetworkVpnAccessOutput {
	return i.ToGatewayNetworkVpnAccessOutputWithContext(context.Background())
}

func (i GatewayNetworkVpnAccessArgs) ToGatewayNetworkVpnAccessOutputWithContext(ctx context.Context) GatewayNetworkVpnAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayNetworkVpnAccessOutput)
}

// GatewayNetworkVpnAccessMapInput is an input type that accepts GatewayNetworkVpnAccessMap and GatewayNetworkVpnAccessMapOutput values.
// You can construct a concrete instance of `GatewayNetworkVpnAccessMapInput` via:
//
//	GatewayNetworkVpnAccessMap{ "key": GatewayNetworkVpnAccessArgs{...} }
type GatewayNetworkVpnAccessMapInput interface {
	pulumi.Input

	ToGatewayNetworkVpnAccessMapOutput() GatewayNetworkVpnAccessMapOutput
	ToGatewayNetworkVpnAccessMapOutputWithContext(context.Context) GatewayNetworkVpnAccessMapOutput
}

type GatewayNetworkVpnAccessMap map[string]GatewayNetworkVpnAccessInput

func (GatewayNetworkVpnAccessMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]GatewayNetworkVpnAccess)(nil)).Elem()
}

func (i GatewayNetworkVpnAccessMap) ToGatewayNetworkVpnAccessMapOutput() GatewayNetworkVpnAccessMapOutput {
	return i.ToGatewayNetworkVpnAccessMapOutputWithContext(context.Background())
}

func (i GatewayNetworkVpnAccessMap) ToGatewayNetworkVpnAccessMapOutputWithContext(ctx context.Context) GatewayNetworkVpnAccessMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayNetworkVpnAccessMapOutput)
}

type GatewayNetworkVpnAccessOutput struct{ *pulumi.OutputState }

func (GatewayNetworkVpnAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayNetworkVpnAccess)(nil)).Elem()
}

func (o GatewayNetworkVpnAccessOutput) ToGatewayNetworkVpnAccessOutput() GatewayNetworkVpnAccessOutput {
	return o
}

func (o GatewayNetworkVpnAccessOutput) ToGatewayNetworkVpnAccessOutputWithContext(ctx context.Context) GatewayNetworkVpnAccessOutput {
	return o
}

// If `routed`==`true`, whether to advertise an aggregated subnet toward HUB this is useful when there are multiple networks on SPOKE's side
func (o GatewayNetworkVpnAccessOutput) AdvertisedSubnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayNetworkVpnAccess) *string { return v.AdvertisedSubnet }).(pulumi.StringPtrOutput)
}

// Whether to allow ping from vpn into this routed network
func (o GatewayNetworkVpnAccessOutput) AllowPing() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GatewayNetworkVpnAccess) *bool { return v.AllowPing }).(pulumi.BoolPtrOutput)
}

// Property key can be an External IP (i.e. "63.16.0.3"), an External IP:Port (i.e. "63.16.0.3:443"), an External Port (i.e. ":443"), an External CIDR (i.e. "63.16.0.0/30"), an External CIDR:Port (i.e. "63.16.0.0/30:443") or a Variable (i.e. "{{myvar}}"). At least one of the `internalIp` or `port` must be defined
func (o GatewayNetworkVpnAccessOutput) DestinationNat() GatewayNetworkVpnAccessDestinationNatMapOutput {
	return o.ApplyT(func(v GatewayNetworkVpnAccess) map[string]GatewayNetworkVpnAccessDestinationNat {
		return v.DestinationNat
	}).(GatewayNetworkVpnAccessDestinationNatMapOutput)
}

// If `routed`==`false` (usually at Spoke), but some hosts needs to be reachable from Hub, a subnet is required to create and advertise the route to Hub
func (o GatewayNetworkVpnAccessOutput) NatPool() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayNetworkVpnAccess) *string { return v.NatPool }).(pulumi.StringPtrOutput)
}

// toward LAN-side BGP peers
func (o GatewayNetworkVpnAccessOutput) NoReadvertiseToLanBgp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GatewayNetworkVpnAccess) *bool { return v.NoReadvertiseToLanBgp }).(pulumi.BoolPtrOutput)
}

// toward LAN-side OSPF peers
func (o GatewayNetworkVpnAccessOutput) NoReadvertiseToLanOspf() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GatewayNetworkVpnAccess) *bool { return v.NoReadvertiseToLanOspf }).(pulumi.BoolPtrOutput)
}

// toward overlay, how HUB should deal with routes it received from Spokes
func (o GatewayNetworkVpnAccessOutput) NoReadvertiseToOverlay() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GatewayNetworkVpnAccess) *bool { return v.NoReadvertiseToOverlay }).(pulumi.BoolPtrOutput)
}

// By default, the routes are only readvertised toward the same vrf on spoke. To allow it to be leaked to other vrfs
func (o GatewayNetworkVpnAccessOutput) OtherVrfs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GatewayNetworkVpnAccess) []string { return v.OtherVrfs }).(pulumi.StringArrayOutput)
}

// Whether this network is routable
func (o GatewayNetworkVpnAccessOutput) Routed() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GatewayNetworkVpnAccess) *bool { return v.Routed }).(pulumi.BoolPtrOutput)
}

// If `routed`==`false` (usually at Spoke), but some hosts needs to be reachable from Hub
func (o GatewayNetworkVpnAccessOutput) SourceNat() GatewayNetworkVpnAccessSourceNatPtrOutput {
	return o.ApplyT(func(v GatewayNetworkVpnAccess) *GatewayNetworkVpnAccessSourceNat { return v.SourceNat }).(GatewayNetworkVpnAccessSourceNatPtrOutput)
}

// Property key may be an External IP Address (i.e. "63.16.0.3"), a CIDR (i.e. "63.16.0.12/20") or a Variable (i.e. "{{myvar}}")
func (o GatewayNetworkVpnAccessOutput) StaticNat() GatewayNetworkVpnAccessStaticNatMapOutput {
	return o.ApplyT(func(v GatewayNetworkVpnAccess) map[string]GatewayNetworkVpnAccessStaticNat { return v.StaticNat }).(GatewayNetworkVpnAccessStaticNatMapOutput)
}

// toward overlay, how HUB should deal with routes it received from Spokes
func (o GatewayNetworkVpnAccessOutput) SummarizedSubnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayNetworkVpnAccess) *string { return v.SummarizedSubnet }).(pulumi.StringPtrOutput)
}

// toward LAN-side BGP peers
func (o GatewayNetworkVpnAccessOutput) SummarizedSubnetToLanBgp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayNetworkVpnAccess) *string { return v.SummarizedSubnetToLanBgp }).(pulumi.StringPtrOutput)
}

// toward LAN-side OSPF peers
func (o GatewayNetworkVpnAccessOutput) SummarizedSubnetToLanOspf() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayNetworkVpnAccess) *string { return v.SummarizedSubnetToLanOspf }).(pulumi.StringPtrOutput)
}

type GatewayNetworkVpnAccessMapOutput struct{ *pulumi.OutputState }

func (GatewayNetworkVpnAccessMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]GatewayNetworkVpnAccess)(nil)).Elem()
}

func (o GatewayNetworkVpnAccessMapOutput) ToGatewayNetworkVpnAccessMapOutput() GatewayNetworkVpnAccessMapOutput {
	return o
}

func (o GatewayNetworkVpnAccessMapOutput) ToGatewayNetworkVpnAccessMapOutputWithContext(ctx context.Context) GatewayNetworkVpnAccessMapOutput {
	return o
}

func (o GatewayNetworkVpnAccessMapOutput) MapIndex(k pulumi.StringInput) GatewayNetworkVpnAccessOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) GatewayNetworkVpnAccess {
		return vs[0].(map[string]GatewayNetworkVpnAccess)[vs[1].(string)]
	}).(GatewayNetworkVpnAccessOutput)
}

type GatewayNetworkVpnAccessDestinationNat struct {
	// The Destination NAT destination IP Address. Must be an IP (i.e. "192.168.70.30") or a Variable (i.e. "{{myvar}}")
	InternalIp *string `pulumi:"internalIp"`
	Name       *string `pulumi:"name"`
	Port       *string `pulumi:"port"`
}

// GatewayNetworkVpnAccessDestinationNatInput is an input type that accepts GatewayNetworkVpnAccessDestinationNatArgs and GatewayNetworkVpnAccessDestinationNatOutput values.
// You can construct a concrete instance of `GatewayNetworkVpnAccessDestinationNatInput` via:
//
//	GatewayNetworkVpnAccessDestinationNatArgs{...}
type GatewayNetworkVpnAccessDestinationNatInput interface {
	pulumi.Input

	ToGatewayNetworkVpnAccessDestinationNatOutput() GatewayNetworkVpnAccessDestinationNatOutput
	ToGatewayNetworkVpnAccessDestinationNatOutputWithContext(context.Context) GatewayNetworkVpnAccessDestinationNatOutput
}

type GatewayNetworkVpnAccessDestinationNatArgs struct {
	// The Destination NAT destination IP Address. Must be an IP (i.e. "192.168.70.30") or a Variable (i.e. "{{myvar}}")
	InternalIp pulumi.StringPtrInput `pulumi:"internalIp"`
	Name       pulumi.StringPtrInput `pulumi:"name"`
	Port       pulumi.StringPtrInput `pulumi:"port"`
}

func (GatewayNetworkVpnAccessDestinationNatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayNetworkVpnAccessDestinationNat)(nil)).Elem()
}

func (i GatewayNetworkVpnAccessDestinationNatArgs) ToGatewayNetworkVpnAccessDestinationNatOutput() GatewayNetworkVpnAccessDestinationNatOutput {
	return i.ToGatewayNetworkVpnAccessDestinationNatOutputWithContext(context.Background())
}

func (i GatewayNetworkVpnAccessDestinationNatArgs) ToGatewayNetworkVpnAccessDestinationNatOutputWithContext(ctx context.Context) GatewayNetworkVpnAccessDestinationNatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayNetworkVpnAccessDestinationNatOutput)
}

// GatewayNetworkVpnAccessDestinationNatMapInput is an input type that accepts GatewayNetworkVpnAccessDestinationNatMap and GatewayNetworkVpnAccessDestinationNatMapOutput values.
// You can construct a concrete instance of `GatewayNetworkVpnAccessDestinationNatMapInput` via:
//
//	GatewayNetworkVpnAccessDestinationNatMap{ "key": GatewayNetworkVpnAccessDestinationNatArgs{...} }
type GatewayNetworkVpnAccessDestinationNatMapInput interface {
	pulumi.Input

	ToGatewayNetworkVpnAccessDestinationNatMapOutput() GatewayNetworkVpnAccessDestinationNatMapOutput
	ToGatewayNetworkVpnAccessDestinationNatMapOutputWithContext(context.Context) GatewayNetworkVpnAccessDestinationNatMapOutput
}

type GatewayNetworkVpnAccessDestinationNatMap map[string]GatewayNetworkVpnAccessDestinationNatInput

func (GatewayNetworkVpnAccessDestinationNatMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]GatewayNetworkVpnAccessDestinationNat)(nil)).Elem()
}

func (i GatewayNetworkVpnAccessDestinationNatMap) ToGatewayNetworkVpnAccessDestinationNatMapOutput() GatewayNetworkVpnAccessDestinationNatMapOutput {
	return i.ToGatewayNetworkVpnAccessDestinationNatMapOutputWithContext(context.Background())
}

func (i GatewayNetworkVpnAccessDestinationNatMap) ToGatewayNetworkVpnAccessDestinationNatMapOutputWithContext(ctx context.Context) GatewayNetworkVpnAccessDestinationNatMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayNetworkVpnAccessDestinationNatMapOutput)
}

type GatewayNetworkVpnAccessDestinationNatOutput struct{ *pulumi.OutputState }

func (GatewayNetworkVpnAccessDestinationNatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayNetworkVpnAccessDestinationNat)(nil)).Elem()
}

func (o GatewayNetworkVpnAccessDestinationNatOutput) ToGatewayNetworkVpnAccessDestinationNatOutput() GatewayNetworkVpnAccessDestinationNatOutput {
	return o
}

func (o GatewayNetworkVpnAccessDestinationNatOutput) ToGatewayNetworkVpnAccessDestinationNatOutputWithContext(ctx context.Context) GatewayNetworkVpnAccessDestinationNatOutput {
	return o
}

// The Destination NAT destination IP Address. Must be an IP (i.e. "192.168.70.30") or a Variable (i.e. "{{myvar}}")
func (o GatewayNetworkVpnAccessDestinationNatOutput) InternalIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayNetworkVpnAccessDestinationNat) *string { return v.InternalIp }).(pulumi.StringPtrOutput)
}

func (o GatewayNetworkVpnAccessDestinationNatOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayNetworkVpnAccessDestinationNat) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o GatewayNetworkVpnAccessDestinationNatOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayNetworkVpnAccessDestinationNat) *string { return v.Port }).(pulumi.StringPtrOutput)
}

type GatewayNetworkVpnAccessDestinationNatMapOutput struct{ *pulumi.OutputState }

func (GatewayNetworkVpnAccessDestinationNatMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]GatewayNetworkVpnAccessDestinationNat)(nil)).Elem()
}

func (o GatewayNetworkVpnAccessDestinationNatMapOutput) ToGatewayNetworkVpnAccessDestinationNatMapOutput() GatewayNetworkVpnAccessDestinationNatMapOutput {
	return o
}

func (o GatewayNetworkVpnAccessDestinationNatMapOutput) ToGatewayNetworkVpnAccessDestinationNatMapOutputWithContext(ctx context.Context) GatewayNetworkVpnAccessDestinationNatMapOutput {
	return o
}

func (o GatewayNetworkVpnAccessDestinationNatMapOutput) MapIndex(k pulumi.StringInput) GatewayNetworkVpnAccessDestinationNatOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) GatewayNetworkVpnAccessDestinationNat {
		return vs[0].(map[string]GatewayNetworkVpnAccessDestinationNat)[vs[1].(string)]
	}).(GatewayNetworkVpnAccessDestinationNatOutput)
}

type GatewayNetworkVpnAccessSourceNat struct {
	ExternalIp *string `pulumi:"externalIp"`
}

// GatewayNetworkVpnAccessSourceNatInput is an input type that accepts GatewayNetworkVpnAccessSourceNatArgs and GatewayNetworkVpnAccessSourceNatOutput values.
// You can construct a concrete instance of `GatewayNetworkVpnAccessSourceNatInput` via:
//
//	GatewayNetworkVpnAccessSourceNatArgs{...}
type GatewayNetworkVpnAccessSourceNatInput interface {
	pulumi.Input

	ToGatewayNetworkVpnAccessSourceNatOutput() GatewayNetworkVpnAccessSourceNatOutput
	ToGatewayNetworkVpnAccessSourceNatOutputWithContext(context.Context) GatewayNetworkVpnAccessSourceNatOutput
}

type GatewayNetworkVpnAccessSourceNatArgs struct {
	ExternalIp pulumi.StringPtrInput `pulumi:"externalIp"`
}

func (GatewayNetworkVpnAccessSourceNatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayNetworkVpnAccessSourceNat)(nil)).Elem()
}

func (i GatewayNetworkVpnAccessSourceNatArgs) ToGatewayNetworkVpnAccessSourceNatOutput() GatewayNetworkVpnAccessSourceNatOutput {
	return i.ToGatewayNetworkVpnAccessSourceNatOutputWithContext(context.Background())
}

func (i GatewayNetworkVpnAccessSourceNatArgs) ToGatewayNetworkVpnAccessSourceNatOutputWithContext(ctx context.Context) GatewayNetworkVpnAccessSourceNatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayNetworkVpnAccessSourceNatOutput)
}

func (i GatewayNetworkVpnAccessSourceNatArgs) ToGatewayNetworkVpnAccessSourceNatPtrOutput() GatewayNetworkVpnAccessSourceNatPtrOutput {
	return i.ToGatewayNetworkVpnAccessSourceNatPtrOutputWithContext(context.Background())
}

func (i GatewayNetworkVpnAccessSourceNatArgs) ToGatewayNetworkVpnAccessSourceNatPtrOutputWithContext(ctx context.Context) GatewayNetworkVpnAccessSourceNatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayNetworkVpnAccessSourceNatOutput).ToGatewayNetworkVpnAccessSourceNatPtrOutputWithContext(ctx)
}

// GatewayNetworkVpnAccessSourceNatPtrInput is an input type that accepts GatewayNetworkVpnAccessSourceNatArgs, GatewayNetworkVpnAccessSourceNatPtr and GatewayNetworkVpnAccessSourceNatPtrOutput values.
// You can construct a concrete instance of `GatewayNetworkVpnAccessSourceNatPtrInput` via:
//
//	        GatewayNetworkVpnAccessSourceNatArgs{...}
//
//	or:
//
//	        nil
type GatewayNetworkVpnAccessSourceNatPtrInput interface {
	pulumi.Input

	ToGatewayNetworkVpnAccessSourceNatPtrOutput() GatewayNetworkVpnAccessSourceNatPtrOutput
	ToGatewayNetworkVpnAccessSourceNatPtrOutputWithContext(context.Context) GatewayNetworkVpnAccessSourceNatPtrOutput
}

type gatewayNetworkVpnAccessSourceNatPtrType GatewayNetworkVpnAccessSourceNatArgs

func GatewayNetworkVpnAccessSourceNatPtr(v *GatewayNetworkVpnAccessSourceNatArgs) GatewayNetworkVpnAccessSourceNatPtrInput {
	return (*gatewayNetworkVpnAccessSourceNatPtrType)(v)
}

func (*gatewayNetworkVpnAccessSourceNatPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayNetworkVpnAccessSourceNat)(nil)).Elem()
}

func (i *gatewayNetworkVpnAccessSourceNatPtrType) ToGatewayNetworkVpnAccessSourceNatPtrOutput() GatewayNetworkVpnAccessSourceNatPtrOutput {
	return i.ToGatewayNetworkVpnAccessSourceNatPtrOutputWithContext(context.Background())
}

func (i *gatewayNetworkVpnAccessSourceNatPtrType) ToGatewayNetworkVpnAccessSourceNatPtrOutputWithContext(ctx context.Context) GatewayNetworkVpnAccessSourceNatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayNetworkVpnAccessSourceNatPtrOutput)
}

type GatewayNetworkVpnAccessSourceNatOutput struct{ *pulumi.OutputState }

func (GatewayNetworkVpnAccessSourceNatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayNetworkVpnAccessSourceNat)(nil)).Elem()
}

func (o GatewayNetworkVpnAccessSourceNatOutput) ToGatewayNetworkVpnAccessSourceNatOutput() GatewayNetworkVpnAccessSourceNatOutput {
	return o
}

func (o GatewayNetworkVpnAccessSourceNatOutput) ToGatewayNetworkVpnAccessSourceNatOutputWithContext(ctx context.Context) GatewayNetworkVpnAccessSourceNatOutput {
	return o
}

func (o GatewayNetworkVpnAccessSourceNatOutput) ToGatewayNetworkVpnAccessSourceNatPtrOutput() GatewayNetworkVpnAccessSourceNatPtrOutput {
	return o.ToGatewayNetworkVpnAccessSourceNatPtrOutputWithContext(context.Background())
}

func (o GatewayNetworkVpnAccessSourceNatOutput) ToGatewayNetworkVpnAccessSourceNatPtrOutputWithContext(ctx context.Context) GatewayNetworkVpnAccessSourceNatPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayNetworkVpnAccessSourceNat) *GatewayNetworkVpnAccessSourceNat {
		return &v
	}).(GatewayNetworkVpnAccessSourceNatPtrOutput)
}

func (o GatewayNetworkVpnAccessSourceNatOutput) ExternalIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayNetworkVpnAccessSourceNat) *string { return v.ExternalIp }).(pulumi.StringPtrOutput)
}

type GatewayNetworkVpnAccessSourceNatPtrOutput struct{ *pulumi.OutputState }

func (GatewayNetworkVpnAccessSourceNatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayNetworkVpnAccessSourceNat)(nil)).Elem()
}

func (o GatewayNetworkVpnAccessSourceNatPtrOutput) ToGatewayNetworkVpnAccessSourceNatPtrOutput() GatewayNetworkVpnAccessSourceNatPtrOutput {
	return o
}

func (o GatewayNetworkVpnAccessSourceNatPtrOutput) ToGatewayNetworkVpnAccessSourceNatPtrOutputWithContext(ctx context.Context) GatewayNetworkVpnAccessSourceNatPtrOutput {
	return o
}

func (o GatewayNetworkVpnAccessSourceNatPtrOutput) Elem() GatewayNetworkVpnAccessSourceNatOutput {
	return o.ApplyT(func(v *GatewayNetworkVpnAccessSourceNat) GatewayNetworkVpnAccessSourceNat {
		if v != nil {
			return *v
		}
		var ret GatewayNetworkVpnAccessSourceNat
		return ret
	}).(GatewayNetworkVpnAccessSourceNatOutput)
}

func (o GatewayNetworkVpnAccessSourceNatPtrOutput) ExternalIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayNetworkVpnAccessSourceNat) *string {
		if v == nil {
			return nil
		}
		return v.ExternalIp
	}).(pulumi.StringPtrOutput)
}

type GatewayNetworkVpnAccessStaticNat struct {
	// The Static NAT destination IP Address. Must be an IP Address (i.e. "192.168.70.3") or a Variable (i.e. "{{myvar}}")
	InternalIp string `pulumi:"internalIp"`
	Name       string `pulumi:"name"`
}

// GatewayNetworkVpnAccessStaticNatInput is an input type that accepts GatewayNetworkVpnAccessStaticNatArgs and GatewayNetworkVpnAccessStaticNatOutput values.
// You can construct a concrete instance of `GatewayNetworkVpnAccessStaticNatInput` via:
//
//	GatewayNetworkVpnAccessStaticNatArgs{...}
type GatewayNetworkVpnAccessStaticNatInput interface {
	pulumi.Input

	ToGatewayNetworkVpnAccessStaticNatOutput() GatewayNetworkVpnAccessStaticNatOutput
	ToGatewayNetworkVpnAccessStaticNatOutputWithContext(context.Context) GatewayNetworkVpnAccessStaticNatOutput
}

type GatewayNetworkVpnAccessStaticNatArgs struct {
	// The Static NAT destination IP Address. Must be an IP Address (i.e. "192.168.70.3") or a Variable (i.e. "{{myvar}}")
	InternalIp pulumi.StringInput `pulumi:"internalIp"`
	Name       pulumi.StringInput `pulumi:"name"`
}

func (GatewayNetworkVpnAccessStaticNatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayNetworkVpnAccessStaticNat)(nil)).Elem()
}

func (i GatewayNetworkVpnAccessStaticNatArgs) ToGatewayNetworkVpnAccessStaticNatOutput() GatewayNetworkVpnAccessStaticNatOutput {
	return i.ToGatewayNetworkVpnAccessStaticNatOutputWithContext(context.Background())
}

func (i GatewayNetworkVpnAccessStaticNatArgs) ToGatewayNetworkVpnAccessStaticNatOutputWithContext(ctx context.Context) GatewayNetworkVpnAccessStaticNatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayNetworkVpnAccessStaticNatOutput)
}

// GatewayNetworkVpnAccessStaticNatMapInput is an input type that accepts GatewayNetworkVpnAccessStaticNatMap and GatewayNetworkVpnAccessStaticNatMapOutput values.
// You can construct a concrete instance of `GatewayNetworkVpnAccessStaticNatMapInput` via:
//
//	GatewayNetworkVpnAccessStaticNatMap{ "key": GatewayNetworkVpnAccessStaticNatArgs{...} }
type GatewayNetworkVpnAccessStaticNatMapInput interface {
	pulumi.Input

	ToGatewayNetworkVpnAccessStaticNatMapOutput() GatewayNetworkVpnAccessStaticNatMapOutput
	ToGatewayNetworkVpnAccessStaticNatMapOutputWithContext(context.Context) GatewayNetworkVpnAccessStaticNatMapOutput
}

type GatewayNetworkVpnAccessStaticNatMap map[string]GatewayNetworkVpnAccessStaticNatInput

func (GatewayNetworkVpnAccessStaticNatMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]GatewayNetworkVpnAccessStaticNat)(nil)).Elem()
}

func (i GatewayNetworkVpnAccessStaticNatMap) ToGatewayNetworkVpnAccessStaticNatMapOutput() GatewayNetworkVpnAccessStaticNatMapOutput {
	return i.ToGatewayNetworkVpnAccessStaticNatMapOutputWithContext(context.Background())
}

func (i GatewayNetworkVpnAccessStaticNatMap) ToGatewayNetworkVpnAccessStaticNatMapOutputWithContext(ctx context.Context) GatewayNetworkVpnAccessStaticNatMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayNetworkVpnAccessStaticNatMapOutput)
}

type GatewayNetworkVpnAccessStaticNatOutput struct{ *pulumi.OutputState }

func (GatewayNetworkVpnAccessStaticNatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayNetworkVpnAccessStaticNat)(nil)).Elem()
}

func (o GatewayNetworkVpnAccessStaticNatOutput) ToGatewayNetworkVpnAccessStaticNatOutput() GatewayNetworkVpnAccessStaticNatOutput {
	return o
}

func (o GatewayNetworkVpnAccessStaticNatOutput) ToGatewayNetworkVpnAccessStaticNatOutputWithContext(ctx context.Context) GatewayNetworkVpnAccessStaticNatOutput {
	return o
}

// The Static NAT destination IP Address. Must be an IP Address (i.e. "192.168.70.3") or a Variable (i.e. "{{myvar}}")
func (o GatewayNetworkVpnAccessStaticNatOutput) InternalIp() pulumi.StringOutput {
	return o.ApplyT(func(v GatewayNetworkVpnAccessStaticNat) string { return v.InternalIp }).(pulumi.StringOutput)
}

func (o GatewayNetworkVpnAccessStaticNatOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GatewayNetworkVpnAccessStaticNat) string { return v.Name }).(pulumi.StringOutput)
}

type GatewayNetworkVpnAccessStaticNatMapOutput struct{ *pulumi.OutputState }

func (GatewayNetworkVpnAccessStaticNatMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]GatewayNetworkVpnAccessStaticNat)(nil)).Elem()
}

func (o GatewayNetworkVpnAccessStaticNatMapOutput) ToGatewayNetworkVpnAccessStaticNatMapOutput() GatewayNetworkVpnAccessStaticNatMapOutput {
	return o
}

func (o GatewayNetworkVpnAccessStaticNatMapOutput) ToGatewayNetworkVpnAccessStaticNatMapOutputWithContext(ctx context.Context) GatewayNetworkVpnAccessStaticNatMapOutput {
	return o
}

func (o GatewayNetworkVpnAccessStaticNatMapOutput) MapIndex(k pulumi.StringInput) GatewayNetworkVpnAccessStaticNatOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) GatewayNetworkVpnAccessStaticNat {
		return vs[0].(map[string]GatewayNetworkVpnAccessStaticNat)[vs[1].(string)]
	}).(GatewayNetworkVpnAccessStaticNatOutput)
}

type GatewayOobIpConfig struct {
	// If `type`==`static`
	Gateway *string `pulumi:"gateway"`
	// If `type`==`static`
	Ip *string `pulumi:"ip"`
	// If `type`==`static`
	Netmask *string `pulumi:"netmask"`
	// For HA Cluster, node1 can have different IP Config
	Node1 *GatewayOobIpConfigNode1 `pulumi:"node1"`
	// enum: `dhcp`, `static`
	Type *string `pulumi:"type"`
	// If supported on the platform. If enabled, DNS will be using this routing-instance, too
	UseMgmtVrf *bool `pulumi:"useMgmtVrf"`
	// For host-out traffic (NTP/TACPLUS/RADIUS/SYSLOG/SNMP), if alternative source network/ip is desired
	UseMgmtVrfForHostOut *bool   `pulumi:"useMgmtVrfForHostOut"`
	VlanId               *string `pulumi:"vlanId"`
}

// GatewayOobIpConfigInput is an input type that accepts GatewayOobIpConfigArgs and GatewayOobIpConfigOutput values.
// You can construct a concrete instance of `GatewayOobIpConfigInput` via:
//
//	GatewayOobIpConfigArgs{...}
type GatewayOobIpConfigInput interface {
	pulumi.Input

	ToGatewayOobIpConfigOutput() GatewayOobIpConfigOutput
	ToGatewayOobIpConfigOutputWithContext(context.Context) GatewayOobIpConfigOutput
}

type GatewayOobIpConfigArgs struct {
	// If `type`==`static`
	Gateway pulumi.StringPtrInput `pulumi:"gateway"`
	// If `type`==`static`
	Ip pulumi.StringPtrInput `pulumi:"ip"`
	// If `type`==`static`
	Netmask pulumi.StringPtrInput `pulumi:"netmask"`
	// For HA Cluster, node1 can have different IP Config
	Node1 GatewayOobIpConfigNode1PtrInput `pulumi:"node1"`
	// enum: `dhcp`, `static`
	Type pulumi.StringPtrInput `pulumi:"type"`
	// If supported on the platform. If enabled, DNS will be using this routing-instance, too
	UseMgmtVrf pulumi.BoolPtrInput `pulumi:"useMgmtVrf"`
	// For host-out traffic (NTP/TACPLUS/RADIUS/SYSLOG/SNMP), if alternative source network/ip is desired
	UseMgmtVrfForHostOut pulumi.BoolPtrInput   `pulumi:"useMgmtVrfForHostOut"`
	VlanId               pulumi.StringPtrInput `pulumi:"vlanId"`
}

func (GatewayOobIpConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayOobIpConfig)(nil)).Elem()
}

func (i GatewayOobIpConfigArgs) ToGatewayOobIpConfigOutput() GatewayOobIpConfigOutput {
	return i.ToGatewayOobIpConfigOutputWithContext(context.Background())
}

func (i GatewayOobIpConfigArgs) ToGatewayOobIpConfigOutputWithContext(ctx context.Context) GatewayOobIpConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayOobIpConfigOutput)
}

func (i GatewayOobIpConfigArgs) ToGatewayOobIpConfigPtrOutput() GatewayOobIpConfigPtrOutput {
	return i.ToGatewayOobIpConfigPtrOutputWithContext(context.Background())
}

func (i GatewayOobIpConfigArgs) ToGatewayOobIpConfigPtrOutputWithContext(ctx context.Context) GatewayOobIpConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayOobIpConfigOutput).ToGatewayOobIpConfigPtrOutputWithContext(ctx)
}

// GatewayOobIpConfigPtrInput is an input type that accepts GatewayOobIpConfigArgs, GatewayOobIpConfigPtr and GatewayOobIpConfigPtrOutput values.
// You can construct a concrete instance of `GatewayOobIpConfigPtrInput` via:
//
//	        GatewayOobIpConfigArgs{...}
//
//	or:
//
//	        nil
type GatewayOobIpConfigPtrInput interface {
	pulumi.Input

	ToGatewayOobIpConfigPtrOutput() GatewayOobIpConfigPtrOutput
	ToGatewayOobIpConfigPtrOutputWithContext(context.Context) GatewayOobIpConfigPtrOutput
}

type gatewayOobIpConfigPtrType GatewayOobIpConfigArgs

func GatewayOobIpConfigPtr(v *GatewayOobIpConfigArgs) GatewayOobIpConfigPtrInput {
	return (*gatewayOobIpConfigPtrType)(v)
}

func (*gatewayOobIpConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayOobIpConfig)(nil)).Elem()
}

func (i *gatewayOobIpConfigPtrType) ToGatewayOobIpConfigPtrOutput() GatewayOobIpConfigPtrOutput {
	return i.ToGatewayOobIpConfigPtrOutputWithContext(context.Background())
}

func (i *gatewayOobIpConfigPtrType) ToGatewayOobIpConfigPtrOutputWithContext(ctx context.Context) GatewayOobIpConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayOobIpConfigPtrOutput)
}

type GatewayOobIpConfigOutput struct{ *pulumi.OutputState }

func (GatewayOobIpConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayOobIpConfig)(nil)).Elem()
}

func (o GatewayOobIpConfigOutput) ToGatewayOobIpConfigOutput() GatewayOobIpConfigOutput {
	return o
}

func (o GatewayOobIpConfigOutput) ToGatewayOobIpConfigOutputWithContext(ctx context.Context) GatewayOobIpConfigOutput {
	return o
}

func (o GatewayOobIpConfigOutput) ToGatewayOobIpConfigPtrOutput() GatewayOobIpConfigPtrOutput {
	return o.ToGatewayOobIpConfigPtrOutputWithContext(context.Background())
}

func (o GatewayOobIpConfigOutput) ToGatewayOobIpConfigPtrOutputWithContext(ctx context.Context) GatewayOobIpConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayOobIpConfig) *GatewayOobIpConfig {
		return &v
	}).(GatewayOobIpConfigPtrOutput)
}

// If `type`==`static`
func (o GatewayOobIpConfigOutput) Gateway() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayOobIpConfig) *string { return v.Gateway }).(pulumi.StringPtrOutput)
}

// If `type`==`static`
func (o GatewayOobIpConfigOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayOobIpConfig) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

// If `type`==`static`
func (o GatewayOobIpConfigOutput) Netmask() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayOobIpConfig) *string { return v.Netmask }).(pulumi.StringPtrOutput)
}

// For HA Cluster, node1 can have different IP Config
func (o GatewayOobIpConfigOutput) Node1() GatewayOobIpConfigNode1PtrOutput {
	return o.ApplyT(func(v GatewayOobIpConfig) *GatewayOobIpConfigNode1 { return v.Node1 }).(GatewayOobIpConfigNode1PtrOutput)
}

// enum: `dhcp`, `static`
func (o GatewayOobIpConfigOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayOobIpConfig) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// If supported on the platform. If enabled, DNS will be using this routing-instance, too
func (o GatewayOobIpConfigOutput) UseMgmtVrf() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GatewayOobIpConfig) *bool { return v.UseMgmtVrf }).(pulumi.BoolPtrOutput)
}

// For host-out traffic (NTP/TACPLUS/RADIUS/SYSLOG/SNMP), if alternative source network/ip is desired
func (o GatewayOobIpConfigOutput) UseMgmtVrfForHostOut() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GatewayOobIpConfig) *bool { return v.UseMgmtVrfForHostOut }).(pulumi.BoolPtrOutput)
}

func (o GatewayOobIpConfigOutput) VlanId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayOobIpConfig) *string { return v.VlanId }).(pulumi.StringPtrOutput)
}

type GatewayOobIpConfigPtrOutput struct{ *pulumi.OutputState }

func (GatewayOobIpConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayOobIpConfig)(nil)).Elem()
}

func (o GatewayOobIpConfigPtrOutput) ToGatewayOobIpConfigPtrOutput() GatewayOobIpConfigPtrOutput {
	return o
}

func (o GatewayOobIpConfigPtrOutput) ToGatewayOobIpConfigPtrOutputWithContext(ctx context.Context) GatewayOobIpConfigPtrOutput {
	return o
}

func (o GatewayOobIpConfigPtrOutput) Elem() GatewayOobIpConfigOutput {
	return o.ApplyT(func(v *GatewayOobIpConfig) GatewayOobIpConfig {
		if v != nil {
			return *v
		}
		var ret GatewayOobIpConfig
		return ret
	}).(GatewayOobIpConfigOutput)
}

// If `type`==`static`
func (o GatewayOobIpConfigPtrOutput) Gateway() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayOobIpConfig) *string {
		if v == nil {
			return nil
		}
		return v.Gateway
	}).(pulumi.StringPtrOutput)
}

// If `type`==`static`
func (o GatewayOobIpConfigPtrOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayOobIpConfig) *string {
		if v == nil {
			return nil
		}
		return v.Ip
	}).(pulumi.StringPtrOutput)
}

// If `type`==`static`
func (o GatewayOobIpConfigPtrOutput) Netmask() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayOobIpConfig) *string {
		if v == nil {
			return nil
		}
		return v.Netmask
	}).(pulumi.StringPtrOutput)
}

// For HA Cluster, node1 can have different IP Config
func (o GatewayOobIpConfigPtrOutput) Node1() GatewayOobIpConfigNode1PtrOutput {
	return o.ApplyT(func(v *GatewayOobIpConfig) *GatewayOobIpConfigNode1 {
		if v == nil {
			return nil
		}
		return v.Node1
	}).(GatewayOobIpConfigNode1PtrOutput)
}

// enum: `dhcp`, `static`
func (o GatewayOobIpConfigPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayOobIpConfig) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// If supported on the platform. If enabled, DNS will be using this routing-instance, too
func (o GatewayOobIpConfigPtrOutput) UseMgmtVrf() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GatewayOobIpConfig) *bool {
		if v == nil {
			return nil
		}
		return v.UseMgmtVrf
	}).(pulumi.BoolPtrOutput)
}

// For host-out traffic (NTP/TACPLUS/RADIUS/SYSLOG/SNMP), if alternative source network/ip is desired
func (o GatewayOobIpConfigPtrOutput) UseMgmtVrfForHostOut() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GatewayOobIpConfig) *bool {
		if v == nil {
			return nil
		}
		return v.UseMgmtVrfForHostOut
	}).(pulumi.BoolPtrOutput)
}

func (o GatewayOobIpConfigPtrOutput) VlanId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayOobIpConfig) *string {
		if v == nil {
			return nil
		}
		return v.VlanId
	}).(pulumi.StringPtrOutput)
}

type GatewayOobIpConfigNode1 struct {
	// If `type`==`static`
	Gateway *string `pulumi:"gateway"`
	Ip      *string `pulumi:"ip"`
	// Used only if `subnet` is not specified in `networks`
	Netmask *string `pulumi:"netmask"`
	// enum: `dhcp`, `static`
	Type *string `pulumi:"type"`
	// If supported on the platform. If enabled, DNS will be using this routing-instance, too
	UseMgmtVrf *bool `pulumi:"useMgmtVrf"`
	// Whether to use `mgmtJunos` for host-out traffic (NTP/TACPLUS/RADIUS/SYSLOG/SNMP), if alternative source network/ip is desired
	UseMgmtVrfForHostOut *bool   `pulumi:"useMgmtVrfForHostOut"`
	VlanId               *string `pulumi:"vlanId"`
}

// GatewayOobIpConfigNode1Input is an input type that accepts GatewayOobIpConfigNode1Args and GatewayOobIpConfigNode1Output values.
// You can construct a concrete instance of `GatewayOobIpConfigNode1Input` via:
//
//	GatewayOobIpConfigNode1Args{...}
type GatewayOobIpConfigNode1Input interface {
	pulumi.Input

	ToGatewayOobIpConfigNode1Output() GatewayOobIpConfigNode1Output
	ToGatewayOobIpConfigNode1OutputWithContext(context.Context) GatewayOobIpConfigNode1Output
}

type GatewayOobIpConfigNode1Args struct {
	// If `type`==`static`
	Gateway pulumi.StringPtrInput `pulumi:"gateway"`
	Ip      pulumi.StringPtrInput `pulumi:"ip"`
	// Used only if `subnet` is not specified in `networks`
	Netmask pulumi.StringPtrInput `pulumi:"netmask"`
	// enum: `dhcp`, `static`
	Type pulumi.StringPtrInput `pulumi:"type"`
	// If supported on the platform. If enabled, DNS will be using this routing-instance, too
	UseMgmtVrf pulumi.BoolPtrInput `pulumi:"useMgmtVrf"`
	// Whether to use `mgmtJunos` for host-out traffic (NTP/TACPLUS/RADIUS/SYSLOG/SNMP), if alternative source network/ip is desired
	UseMgmtVrfForHostOut pulumi.BoolPtrInput   `pulumi:"useMgmtVrfForHostOut"`
	VlanId               pulumi.StringPtrInput `pulumi:"vlanId"`
}

func (GatewayOobIpConfigNode1Args) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayOobIpConfigNode1)(nil)).Elem()
}

func (i GatewayOobIpConfigNode1Args) ToGatewayOobIpConfigNode1Output() GatewayOobIpConfigNode1Output {
	return i.ToGatewayOobIpConfigNode1OutputWithContext(context.Background())
}

func (i GatewayOobIpConfigNode1Args) ToGatewayOobIpConfigNode1OutputWithContext(ctx context.Context) GatewayOobIpConfigNode1Output {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayOobIpConfigNode1Output)
}

func (i GatewayOobIpConfigNode1Args) ToGatewayOobIpConfigNode1PtrOutput() GatewayOobIpConfigNode1PtrOutput {
	return i.ToGatewayOobIpConfigNode1PtrOutputWithContext(context.Background())
}

func (i GatewayOobIpConfigNode1Args) ToGatewayOobIpConfigNode1PtrOutputWithContext(ctx context.Context) GatewayOobIpConfigNode1PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayOobIpConfigNode1Output).ToGatewayOobIpConfigNode1PtrOutputWithContext(ctx)
}

// GatewayOobIpConfigNode1PtrInput is an input type that accepts GatewayOobIpConfigNode1Args, GatewayOobIpConfigNode1Ptr and GatewayOobIpConfigNode1PtrOutput values.
// You can construct a concrete instance of `GatewayOobIpConfigNode1PtrInput` via:
//
//	        GatewayOobIpConfigNode1Args{...}
//
//	or:
//
//	        nil
type GatewayOobIpConfigNode1PtrInput interface {
	pulumi.Input

	ToGatewayOobIpConfigNode1PtrOutput() GatewayOobIpConfigNode1PtrOutput
	ToGatewayOobIpConfigNode1PtrOutputWithContext(context.Context) GatewayOobIpConfigNode1PtrOutput
}

type gatewayOobIpConfigNode1PtrType GatewayOobIpConfigNode1Args

func GatewayOobIpConfigNode1Ptr(v *GatewayOobIpConfigNode1Args) GatewayOobIpConfigNode1PtrInput {
	return (*gatewayOobIpConfigNode1PtrType)(v)
}

func (*gatewayOobIpConfigNode1PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayOobIpConfigNode1)(nil)).Elem()
}

func (i *gatewayOobIpConfigNode1PtrType) ToGatewayOobIpConfigNode1PtrOutput() GatewayOobIpConfigNode1PtrOutput {
	return i.ToGatewayOobIpConfigNode1PtrOutputWithContext(context.Background())
}

func (i *gatewayOobIpConfigNode1PtrType) ToGatewayOobIpConfigNode1PtrOutputWithContext(ctx context.Context) GatewayOobIpConfigNode1PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayOobIpConfigNode1PtrOutput)
}

type GatewayOobIpConfigNode1Output struct{ *pulumi.OutputState }

func (GatewayOobIpConfigNode1Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayOobIpConfigNode1)(nil)).Elem()
}

func (o GatewayOobIpConfigNode1Output) ToGatewayOobIpConfigNode1Output() GatewayOobIpConfigNode1Output {
	return o
}

func (o GatewayOobIpConfigNode1Output) ToGatewayOobIpConfigNode1OutputWithContext(ctx context.Context) GatewayOobIpConfigNode1Output {
	return o
}

func (o GatewayOobIpConfigNode1Output) ToGatewayOobIpConfigNode1PtrOutput() GatewayOobIpConfigNode1PtrOutput {
	return o.ToGatewayOobIpConfigNode1PtrOutputWithContext(context.Background())
}

func (o GatewayOobIpConfigNode1Output) ToGatewayOobIpConfigNode1PtrOutputWithContext(ctx context.Context) GatewayOobIpConfigNode1PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayOobIpConfigNode1) *GatewayOobIpConfigNode1 {
		return &v
	}).(GatewayOobIpConfigNode1PtrOutput)
}

// If `type`==`static`
func (o GatewayOobIpConfigNode1Output) Gateway() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayOobIpConfigNode1) *string { return v.Gateway }).(pulumi.StringPtrOutput)
}

func (o GatewayOobIpConfigNode1Output) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayOobIpConfigNode1) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

// Used only if `subnet` is not specified in `networks`
func (o GatewayOobIpConfigNode1Output) Netmask() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayOobIpConfigNode1) *string { return v.Netmask }).(pulumi.StringPtrOutput)
}

// enum: `dhcp`, `static`
func (o GatewayOobIpConfigNode1Output) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayOobIpConfigNode1) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// If supported on the platform. If enabled, DNS will be using this routing-instance, too
func (o GatewayOobIpConfigNode1Output) UseMgmtVrf() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GatewayOobIpConfigNode1) *bool { return v.UseMgmtVrf }).(pulumi.BoolPtrOutput)
}

// Whether to use `mgmtJunos` for host-out traffic (NTP/TACPLUS/RADIUS/SYSLOG/SNMP), if alternative source network/ip is desired
func (o GatewayOobIpConfigNode1Output) UseMgmtVrfForHostOut() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GatewayOobIpConfigNode1) *bool { return v.UseMgmtVrfForHostOut }).(pulumi.BoolPtrOutput)
}

func (o GatewayOobIpConfigNode1Output) VlanId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayOobIpConfigNode1) *string { return v.VlanId }).(pulumi.StringPtrOutput)
}

type GatewayOobIpConfigNode1PtrOutput struct{ *pulumi.OutputState }

func (GatewayOobIpConfigNode1PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayOobIpConfigNode1)(nil)).Elem()
}

func (o GatewayOobIpConfigNode1PtrOutput) ToGatewayOobIpConfigNode1PtrOutput() GatewayOobIpConfigNode1PtrOutput {
	return o
}

func (o GatewayOobIpConfigNode1PtrOutput) ToGatewayOobIpConfigNode1PtrOutputWithContext(ctx context.Context) GatewayOobIpConfigNode1PtrOutput {
	return o
}

func (o GatewayOobIpConfigNode1PtrOutput) Elem() GatewayOobIpConfigNode1Output {
	return o.ApplyT(func(v *GatewayOobIpConfigNode1) GatewayOobIpConfigNode1 {
		if v != nil {
			return *v
		}
		var ret GatewayOobIpConfigNode1
		return ret
	}).(GatewayOobIpConfigNode1Output)
}

// If `type`==`static`
func (o GatewayOobIpConfigNode1PtrOutput) Gateway() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayOobIpConfigNode1) *string {
		if v == nil {
			return nil
		}
		return v.Gateway
	}).(pulumi.StringPtrOutput)
}

func (o GatewayOobIpConfigNode1PtrOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayOobIpConfigNode1) *string {
		if v == nil {
			return nil
		}
		return v.Ip
	}).(pulumi.StringPtrOutput)
}

// Used only if `subnet` is not specified in `networks`
func (o GatewayOobIpConfigNode1PtrOutput) Netmask() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayOobIpConfigNode1) *string {
		if v == nil {
			return nil
		}
		return v.Netmask
	}).(pulumi.StringPtrOutput)
}

// enum: `dhcp`, `static`
func (o GatewayOobIpConfigNode1PtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayOobIpConfigNode1) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// If supported on the platform. If enabled, DNS will be using this routing-instance, too
func (o GatewayOobIpConfigNode1PtrOutput) UseMgmtVrf() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GatewayOobIpConfigNode1) *bool {
		if v == nil {
			return nil
		}
		return v.UseMgmtVrf
	}).(pulumi.BoolPtrOutput)
}

// Whether to use `mgmtJunos` for host-out traffic (NTP/TACPLUS/RADIUS/SYSLOG/SNMP), if alternative source network/ip is desired
func (o GatewayOobIpConfigNode1PtrOutput) UseMgmtVrfForHostOut() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GatewayOobIpConfigNode1) *bool {
		if v == nil {
			return nil
		}
		return v.UseMgmtVrfForHostOut
	}).(pulumi.BoolPtrOutput)
}

func (o GatewayOobIpConfigNode1PtrOutput) VlanId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayOobIpConfigNode1) *string {
		if v == nil {
			return nil
		}
		return v.VlanId
	}).(pulumi.StringPtrOutput)
}

type GatewayPathPreferences struct {
	Paths []GatewayPathPreferencesPath `pulumi:"paths"`
	// enum: `ecmp`, `ordered`, `weighted`
	Strategy *string `pulumi:"strategy"`
}

// GatewayPathPreferencesInput is an input type that accepts GatewayPathPreferencesArgs and GatewayPathPreferencesOutput values.
// You can construct a concrete instance of `GatewayPathPreferencesInput` via:
//
//	GatewayPathPreferencesArgs{...}
type GatewayPathPreferencesInput interface {
	pulumi.Input

	ToGatewayPathPreferencesOutput() GatewayPathPreferencesOutput
	ToGatewayPathPreferencesOutputWithContext(context.Context) GatewayPathPreferencesOutput
}

type GatewayPathPreferencesArgs struct {
	Paths GatewayPathPreferencesPathArrayInput `pulumi:"paths"`
	// enum: `ecmp`, `ordered`, `weighted`
	Strategy pulumi.StringPtrInput `pulumi:"strategy"`
}

func (GatewayPathPreferencesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayPathPreferences)(nil)).Elem()
}

func (i GatewayPathPreferencesArgs) ToGatewayPathPreferencesOutput() GatewayPathPreferencesOutput {
	return i.ToGatewayPathPreferencesOutputWithContext(context.Background())
}

func (i GatewayPathPreferencesArgs) ToGatewayPathPreferencesOutputWithContext(ctx context.Context) GatewayPathPreferencesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayPathPreferencesOutput)
}

// GatewayPathPreferencesMapInput is an input type that accepts GatewayPathPreferencesMap and GatewayPathPreferencesMapOutput values.
// You can construct a concrete instance of `GatewayPathPreferencesMapInput` via:
//
//	GatewayPathPreferencesMap{ "key": GatewayPathPreferencesArgs{...} }
type GatewayPathPreferencesMapInput interface {
	pulumi.Input

	ToGatewayPathPreferencesMapOutput() GatewayPathPreferencesMapOutput
	ToGatewayPathPreferencesMapOutputWithContext(context.Context) GatewayPathPreferencesMapOutput
}

type GatewayPathPreferencesMap map[string]GatewayPathPreferencesInput

func (GatewayPathPreferencesMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]GatewayPathPreferences)(nil)).Elem()
}

func (i GatewayPathPreferencesMap) ToGatewayPathPreferencesMapOutput() GatewayPathPreferencesMapOutput {
	return i.ToGatewayPathPreferencesMapOutputWithContext(context.Background())
}

func (i GatewayPathPreferencesMap) ToGatewayPathPreferencesMapOutputWithContext(ctx context.Context) GatewayPathPreferencesMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayPathPreferencesMapOutput)
}

type GatewayPathPreferencesOutput struct{ *pulumi.OutputState }

func (GatewayPathPreferencesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayPathPreferences)(nil)).Elem()
}

func (o GatewayPathPreferencesOutput) ToGatewayPathPreferencesOutput() GatewayPathPreferencesOutput {
	return o
}

func (o GatewayPathPreferencesOutput) ToGatewayPathPreferencesOutputWithContext(ctx context.Context) GatewayPathPreferencesOutput {
	return o
}

func (o GatewayPathPreferencesOutput) Paths() GatewayPathPreferencesPathArrayOutput {
	return o.ApplyT(func(v GatewayPathPreferences) []GatewayPathPreferencesPath { return v.Paths }).(GatewayPathPreferencesPathArrayOutput)
}

// enum: `ecmp`, `ordered`, `weighted`
func (o GatewayPathPreferencesOutput) Strategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayPathPreferences) *string { return v.Strategy }).(pulumi.StringPtrOutput)
}

type GatewayPathPreferencesMapOutput struct{ *pulumi.OutputState }

func (GatewayPathPreferencesMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]GatewayPathPreferences)(nil)).Elem()
}

func (o GatewayPathPreferencesMapOutput) ToGatewayPathPreferencesMapOutput() GatewayPathPreferencesMapOutput {
	return o
}

func (o GatewayPathPreferencesMapOutput) ToGatewayPathPreferencesMapOutputWithContext(ctx context.Context) GatewayPathPreferencesMapOutput {
	return o
}

func (o GatewayPathPreferencesMapOutput) MapIndex(k pulumi.StringInput) GatewayPathPreferencesOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) GatewayPathPreferences {
		return vs[0].(map[string]GatewayPathPreferences)[vs[1].(string)]
	}).(GatewayPathPreferencesOutput)
}

type GatewayPathPreferencesPath struct {
	Cost *int `pulumi:"cost"`
	// For SSR Only. `true`, if this specific path is undesired
	Disabled *bool `pulumi:"disabled"`
	// Only if `type`==`local`, if a different gateway is desired
	GatewayIp *string `pulumi:"gatewayIp"`
	// Only if `type`==`vpn`, if this vpn path can be used for internet
	InternetAccess *bool `pulumi:"internetAccess"`
	// Required when
	//   * `type`==`vpn`: the name of the VPN Path to use
	//   * `type`==`wan`: the name of the WAN interface to use
	Name *string `pulumi:"name"`
	// Required when `type`==`local`
	Networks []string `pulumi:"networks"`
	// If `type`==`local`, if destination IP is to be replaced
	TargetIps []string `pulumi:"targetIps"`
	// enum: `local`, `tunnel`, `vpn`, `wan`
	Type *string `pulumi:"type"`
	// Optional if `type`==`vpn`
	WanName *string `pulumi:"wanName"`
}

// GatewayPathPreferencesPathInput is an input type that accepts GatewayPathPreferencesPathArgs and GatewayPathPreferencesPathOutput values.
// You can construct a concrete instance of `GatewayPathPreferencesPathInput` via:
//
//	GatewayPathPreferencesPathArgs{...}
type GatewayPathPreferencesPathInput interface {
	pulumi.Input

	ToGatewayPathPreferencesPathOutput() GatewayPathPreferencesPathOutput
	ToGatewayPathPreferencesPathOutputWithContext(context.Context) GatewayPathPreferencesPathOutput
}

type GatewayPathPreferencesPathArgs struct {
	Cost pulumi.IntPtrInput `pulumi:"cost"`
	// For SSR Only. `true`, if this specific path is undesired
	Disabled pulumi.BoolPtrInput `pulumi:"disabled"`
	// Only if `type`==`local`, if a different gateway is desired
	GatewayIp pulumi.StringPtrInput `pulumi:"gatewayIp"`
	// Only if `type`==`vpn`, if this vpn path can be used for internet
	InternetAccess pulumi.BoolPtrInput `pulumi:"internetAccess"`
	// Required when
	//   * `type`==`vpn`: the name of the VPN Path to use
	//   * `type`==`wan`: the name of the WAN interface to use
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Required when `type`==`local`
	Networks pulumi.StringArrayInput `pulumi:"networks"`
	// If `type`==`local`, if destination IP is to be replaced
	TargetIps pulumi.StringArrayInput `pulumi:"targetIps"`
	// enum: `local`, `tunnel`, `vpn`, `wan`
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Optional if `type`==`vpn`
	WanName pulumi.StringPtrInput `pulumi:"wanName"`
}

func (GatewayPathPreferencesPathArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayPathPreferencesPath)(nil)).Elem()
}

func (i GatewayPathPreferencesPathArgs) ToGatewayPathPreferencesPathOutput() GatewayPathPreferencesPathOutput {
	return i.ToGatewayPathPreferencesPathOutputWithContext(context.Background())
}

func (i GatewayPathPreferencesPathArgs) ToGatewayPathPreferencesPathOutputWithContext(ctx context.Context) GatewayPathPreferencesPathOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayPathPreferencesPathOutput)
}

// GatewayPathPreferencesPathArrayInput is an input type that accepts GatewayPathPreferencesPathArray and GatewayPathPreferencesPathArrayOutput values.
// You can construct a concrete instance of `GatewayPathPreferencesPathArrayInput` via:
//
//	GatewayPathPreferencesPathArray{ GatewayPathPreferencesPathArgs{...} }
type GatewayPathPreferencesPathArrayInput interface {
	pulumi.Input

	ToGatewayPathPreferencesPathArrayOutput() GatewayPathPreferencesPathArrayOutput
	ToGatewayPathPreferencesPathArrayOutputWithContext(context.Context) GatewayPathPreferencesPathArrayOutput
}

type GatewayPathPreferencesPathArray []GatewayPathPreferencesPathInput

func (GatewayPathPreferencesPathArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GatewayPathPreferencesPath)(nil)).Elem()
}

func (i GatewayPathPreferencesPathArray) ToGatewayPathPreferencesPathArrayOutput() GatewayPathPreferencesPathArrayOutput {
	return i.ToGatewayPathPreferencesPathArrayOutputWithContext(context.Background())
}

func (i GatewayPathPreferencesPathArray) ToGatewayPathPreferencesPathArrayOutputWithContext(ctx context.Context) GatewayPathPreferencesPathArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayPathPreferencesPathArrayOutput)
}

type GatewayPathPreferencesPathOutput struct{ *pulumi.OutputState }

func (GatewayPathPreferencesPathOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayPathPreferencesPath)(nil)).Elem()
}

func (o GatewayPathPreferencesPathOutput) ToGatewayPathPreferencesPathOutput() GatewayPathPreferencesPathOutput {
	return o
}

func (o GatewayPathPreferencesPathOutput) ToGatewayPathPreferencesPathOutputWithContext(ctx context.Context) GatewayPathPreferencesPathOutput {
	return o
}

func (o GatewayPathPreferencesPathOutput) Cost() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GatewayPathPreferencesPath) *int { return v.Cost }).(pulumi.IntPtrOutput)
}

// For SSR Only. `true`, if this specific path is undesired
func (o GatewayPathPreferencesPathOutput) Disabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GatewayPathPreferencesPath) *bool { return v.Disabled }).(pulumi.BoolPtrOutput)
}

// Only if `type`==`local`, if a different gateway is desired
func (o GatewayPathPreferencesPathOutput) GatewayIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayPathPreferencesPath) *string { return v.GatewayIp }).(pulumi.StringPtrOutput)
}

// Only if `type`==`vpn`, if this vpn path can be used for internet
func (o GatewayPathPreferencesPathOutput) InternetAccess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GatewayPathPreferencesPath) *bool { return v.InternetAccess }).(pulumi.BoolPtrOutput)
}

// Required when
//   - `type`==`vpn`: the name of the VPN Path to use
//   - `type`==`wan`: the name of the WAN interface to use
func (o GatewayPathPreferencesPathOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayPathPreferencesPath) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Required when `type`==`local`
func (o GatewayPathPreferencesPathOutput) Networks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GatewayPathPreferencesPath) []string { return v.Networks }).(pulumi.StringArrayOutput)
}

// If `type`==`local`, if destination IP is to be replaced
func (o GatewayPathPreferencesPathOutput) TargetIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GatewayPathPreferencesPath) []string { return v.TargetIps }).(pulumi.StringArrayOutput)
}

// enum: `local`, `tunnel`, `vpn`, `wan`
func (o GatewayPathPreferencesPathOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayPathPreferencesPath) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Optional if `type`==`vpn`
func (o GatewayPathPreferencesPathOutput) WanName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayPathPreferencesPath) *string { return v.WanName }).(pulumi.StringPtrOutput)
}

type GatewayPathPreferencesPathArrayOutput struct{ *pulumi.OutputState }

func (GatewayPathPreferencesPathArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GatewayPathPreferencesPath)(nil)).Elem()
}

func (o GatewayPathPreferencesPathArrayOutput) ToGatewayPathPreferencesPathArrayOutput() GatewayPathPreferencesPathArrayOutput {
	return o
}

func (o GatewayPathPreferencesPathArrayOutput) ToGatewayPathPreferencesPathArrayOutputWithContext(ctx context.Context) GatewayPathPreferencesPathArrayOutput {
	return o
}

func (o GatewayPathPreferencesPathArrayOutput) Index(i pulumi.IntInput) GatewayPathPreferencesPathOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GatewayPathPreferencesPath {
		return vs[0].([]GatewayPathPreferencesPath)[vs[1].(int)]
	}).(GatewayPathPreferencesPathOutput)
}

type GatewayPortConfig struct {
	// If `aggregated`==`true`. To disable LCP support for the AE interface
	AeDisableLacp *bool `pulumi:"aeDisableLacp"`
	// If `aggregated`==`true`. Users could force to use the designated AE name (must be an integer between 0 and 127)
	AeIdx *string `pulumi:"aeIdx"`
	// For SRX Only, if `aggregated`==`true`.Sets the state of the interface as UP when the peer has limited LACP capability. Use case: When a device connected to this AE port is ZTPing for the first time, it will not have LACP configured on the other end. **Note:** Turning this on will enable force-up on one of the interfaces in the bundle only
	AeLacpForceUp *bool `pulumi:"aeLacpForceUp"`
	Aggregated    *bool `pulumi:"aggregated"`
	// To generate port up/down alarm, set it to true
	Critical *bool `pulumi:"critical"`
	// Interface Description. Can be a variable (i.e. "{{myvar}}")
	Description    *string `pulumi:"description"`
	DisableAutoneg *bool   `pulumi:"disableAutoneg"`
	// Port admin up (true) / down (false)
	Disabled *bool `pulumi:"disabled"`
	// if `wanType`==`dsl`. enum: `adsl`, `vdsl`
	DslType *string `pulumi:"dslType"`
	// If `wanType`==`dsl`, 16 bit int
	DslVci *int `pulumi:"dslVci"`
	// If `wanType`==`dsl`, 8 bit int
	DslVpi *int `pulumi:"dslVpi"`
	// enum: `auto`, `full`, `half`
	Duplex *string `pulumi:"duplex"`
	// Junos IP Config
	IpConfig *GatewayPortConfigIpConfig `pulumi:"ipConfig"`
	// If `wanType`==`lte`
	LteApn *string `pulumi:"lteApn"`
	// if `wanType`==`lte`. enum: `chap`, `none`, `pap`
	LteAuth   *string `pulumi:"lteAuth"`
	LteBackup *bool   `pulumi:"lteBackup"`
	// If `wanType`==`lte`
	LtePassword *string `pulumi:"ltePassword"`
	// If `wanType`==`lte`
	LteUsername *string `pulumi:"lteUsername"`
	Mtu         *int    `pulumi:"mtu"`
	// Name that we'll use to derive config
	Name *string `pulumi:"name"`
	// if `usage`==`lan`, name of the `org.Network` resource
	Networks []string `pulumi:"networks"`
	// For Q-in-Q
	OuterVlanId *int  `pulumi:"outerVlanId"`
	PoeDisabled *bool `pulumi:"poeDisabled"`
	// Only for SRX and if `usage`==`lan`, the name of the Network to be used as the Untagged VLAN
	PortNetwork *string `pulumi:"portNetwork"`
	// Whether to preserve dscp when sending traffic over VPN (SSR-only)
	PreserveDscp *bool `pulumi:"preserveDscp"`
	// If HA mode
	Redundant *bool `pulumi:"redundant"`
	// If HA mode, SRX Only - support redundancy-group. 1-128 for physical SRX, 1-64 for virtual SRX
	RedundantGroup *int `pulumi:"redundantGroup"`
	// For SRX only and if HA Mode
	RethIdx *string `pulumi:"rethIdx"`
	// If HA mode
	RethNode *string `pulumi:"rethNode"`
	// SSR only - supporting vlan-based redundancy (matching the size of `networks`)
	RethNodes []string `pulumi:"rethNodes"`
	Speed     *string  `pulumi:"speed"`
	// When SSR is running as VM, this is required on certain hosting platforms
	SsrNoVirtualMac *bool `pulumi:"ssrNoVirtualMac"`
	// For SSR only
	SvrPortRange   *string                          `pulumi:"svrPortRange"`
	TrafficShaping *GatewayPortConfigTrafficShaping `pulumi:"trafficShaping"`
	// port usage name. enum: `haControl`, `haData`, `lan`, `wan`
	Usage  string  `pulumi:"usage"`
	VlanId *string `pulumi:"vlanId"`
	// Property key is the VPN name
	VpnPaths map[string]GatewayPortConfigVpnPaths `pulumi:"vpnPaths"`
	// Only when `wanType`==`broadband`. enum: `default`, `max`, `recommended`
	WanArpPolicer *string `pulumi:"wanArpPolicer"`
	// Only if `usage`==`wan`, optional. If spoke should reach this port by a different IP
	WanExtIp *string `pulumi:"wanExtIp"`
	// Only if `usage`==`wan`. Property Key is the destination CIDR (e.g. "100.100.100.0/24")
	WanExtraRoutes map[string]GatewayPortConfigWanExtraRoutes `pulumi:"wanExtraRoutes"`
	// Only if `usage`==`wan`. If some networks are connected to this WAN port, it can be added here so policies can be defined
	WanNetworks []string `pulumi:"wanNetworks"`
	// Only if `usage`==`wan`
	WanProbeOverride *GatewayPortConfigWanProbeOverride `pulumi:"wanProbeOverride"`
	// Only if `usage`==`wan`, optional. By default, source-NAT is performed on all WAN Ports using the interface-ip
	WanSourceNat *GatewayPortConfigWanSourceNat `pulumi:"wanSourceNat"`
	// Only if `usage`==`wan`. enum: `broadband`, `dsl`, `lte`
	WanType *string `pulumi:"wanType"`
}

// GatewayPortConfigInput is an input type that accepts GatewayPortConfigArgs and GatewayPortConfigOutput values.
// You can construct a concrete instance of `GatewayPortConfigInput` via:
//
//	GatewayPortConfigArgs{...}
type GatewayPortConfigInput interface {
	pulumi.Input

	ToGatewayPortConfigOutput() GatewayPortConfigOutput
	ToGatewayPortConfigOutputWithContext(context.Context) GatewayPortConfigOutput
}

type GatewayPortConfigArgs struct {
	// If `aggregated`==`true`. To disable LCP support for the AE interface
	AeDisableLacp pulumi.BoolPtrInput `pulumi:"aeDisableLacp"`
	// If `aggregated`==`true`. Users could force to use the designated AE name (must be an integer between 0 and 127)
	AeIdx pulumi.StringPtrInput `pulumi:"aeIdx"`
	// For SRX Only, if `aggregated`==`true`.Sets the state of the interface as UP when the peer has limited LACP capability. Use case: When a device connected to this AE port is ZTPing for the first time, it will not have LACP configured on the other end. **Note:** Turning this on will enable force-up on one of the interfaces in the bundle only
	AeLacpForceUp pulumi.BoolPtrInput `pulumi:"aeLacpForceUp"`
	Aggregated    pulumi.BoolPtrInput `pulumi:"aggregated"`
	// To generate port up/down alarm, set it to true
	Critical pulumi.BoolPtrInput `pulumi:"critical"`
	// Interface Description. Can be a variable (i.e. "{{myvar}}")
	Description    pulumi.StringPtrInput `pulumi:"description"`
	DisableAutoneg pulumi.BoolPtrInput   `pulumi:"disableAutoneg"`
	// Port admin up (true) / down (false)
	Disabled pulumi.BoolPtrInput `pulumi:"disabled"`
	// if `wanType`==`dsl`. enum: `adsl`, `vdsl`
	DslType pulumi.StringPtrInput `pulumi:"dslType"`
	// If `wanType`==`dsl`, 16 bit int
	DslVci pulumi.IntPtrInput `pulumi:"dslVci"`
	// If `wanType`==`dsl`, 8 bit int
	DslVpi pulumi.IntPtrInput `pulumi:"dslVpi"`
	// enum: `auto`, `full`, `half`
	Duplex pulumi.StringPtrInput `pulumi:"duplex"`
	// Junos IP Config
	IpConfig GatewayPortConfigIpConfigPtrInput `pulumi:"ipConfig"`
	// If `wanType`==`lte`
	LteApn pulumi.StringPtrInput `pulumi:"lteApn"`
	// if `wanType`==`lte`. enum: `chap`, `none`, `pap`
	LteAuth   pulumi.StringPtrInput `pulumi:"lteAuth"`
	LteBackup pulumi.BoolPtrInput   `pulumi:"lteBackup"`
	// If `wanType`==`lte`
	LtePassword pulumi.StringPtrInput `pulumi:"ltePassword"`
	// If `wanType`==`lte`
	LteUsername pulumi.StringPtrInput `pulumi:"lteUsername"`
	Mtu         pulumi.IntPtrInput    `pulumi:"mtu"`
	// Name that we'll use to derive config
	Name pulumi.StringPtrInput `pulumi:"name"`
	// if `usage`==`lan`, name of the `org.Network` resource
	Networks pulumi.StringArrayInput `pulumi:"networks"`
	// For Q-in-Q
	OuterVlanId pulumi.IntPtrInput  `pulumi:"outerVlanId"`
	PoeDisabled pulumi.BoolPtrInput `pulumi:"poeDisabled"`
	// Only for SRX and if `usage`==`lan`, the name of the Network to be used as the Untagged VLAN
	PortNetwork pulumi.StringPtrInput `pulumi:"portNetwork"`
	// Whether to preserve dscp when sending traffic over VPN (SSR-only)
	PreserveDscp pulumi.BoolPtrInput `pulumi:"preserveDscp"`
	// If HA mode
	Redundant pulumi.BoolPtrInput `pulumi:"redundant"`
	// If HA mode, SRX Only - support redundancy-group. 1-128 for physical SRX, 1-64 for virtual SRX
	RedundantGroup pulumi.IntPtrInput `pulumi:"redundantGroup"`
	// For SRX only and if HA Mode
	RethIdx pulumi.StringPtrInput `pulumi:"rethIdx"`
	// If HA mode
	RethNode pulumi.StringPtrInput `pulumi:"rethNode"`
	// SSR only - supporting vlan-based redundancy (matching the size of `networks`)
	RethNodes pulumi.StringArrayInput `pulumi:"rethNodes"`
	Speed     pulumi.StringPtrInput   `pulumi:"speed"`
	// When SSR is running as VM, this is required on certain hosting platforms
	SsrNoVirtualMac pulumi.BoolPtrInput `pulumi:"ssrNoVirtualMac"`
	// For SSR only
	SvrPortRange   pulumi.StringPtrInput                   `pulumi:"svrPortRange"`
	TrafficShaping GatewayPortConfigTrafficShapingPtrInput `pulumi:"trafficShaping"`
	// port usage name. enum: `haControl`, `haData`, `lan`, `wan`
	Usage  pulumi.StringInput    `pulumi:"usage"`
	VlanId pulumi.StringPtrInput `pulumi:"vlanId"`
	// Property key is the VPN name
	VpnPaths GatewayPortConfigVpnPathsMapInput `pulumi:"vpnPaths"`
	// Only when `wanType`==`broadband`. enum: `default`, `max`, `recommended`
	WanArpPolicer pulumi.StringPtrInput `pulumi:"wanArpPolicer"`
	// Only if `usage`==`wan`, optional. If spoke should reach this port by a different IP
	WanExtIp pulumi.StringPtrInput `pulumi:"wanExtIp"`
	// Only if `usage`==`wan`. Property Key is the destination CIDR (e.g. "100.100.100.0/24")
	WanExtraRoutes GatewayPortConfigWanExtraRoutesMapInput `pulumi:"wanExtraRoutes"`
	// Only if `usage`==`wan`. If some networks are connected to this WAN port, it can be added here so policies can be defined
	WanNetworks pulumi.StringArrayInput `pulumi:"wanNetworks"`
	// Only if `usage`==`wan`
	WanProbeOverride GatewayPortConfigWanProbeOverridePtrInput `pulumi:"wanProbeOverride"`
	// Only if `usage`==`wan`, optional. By default, source-NAT is performed on all WAN Ports using the interface-ip
	WanSourceNat GatewayPortConfigWanSourceNatPtrInput `pulumi:"wanSourceNat"`
	// Only if `usage`==`wan`. enum: `broadband`, `dsl`, `lte`
	WanType pulumi.StringPtrInput `pulumi:"wanType"`
}

func (GatewayPortConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayPortConfig)(nil)).Elem()
}

func (i GatewayPortConfigArgs) ToGatewayPortConfigOutput() GatewayPortConfigOutput {
	return i.ToGatewayPortConfigOutputWithContext(context.Background())
}

func (i GatewayPortConfigArgs) ToGatewayPortConfigOutputWithContext(ctx context.Context) GatewayPortConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayPortConfigOutput)
}

// GatewayPortConfigMapInput is an input type that accepts GatewayPortConfigMap and GatewayPortConfigMapOutput values.
// You can construct a concrete instance of `GatewayPortConfigMapInput` via:
//
//	GatewayPortConfigMap{ "key": GatewayPortConfigArgs{...} }
type GatewayPortConfigMapInput interface {
	pulumi.Input

	ToGatewayPortConfigMapOutput() GatewayPortConfigMapOutput
	ToGatewayPortConfigMapOutputWithContext(context.Context) GatewayPortConfigMapOutput
}

type GatewayPortConfigMap map[string]GatewayPortConfigInput

func (GatewayPortConfigMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]GatewayPortConfig)(nil)).Elem()
}

func (i GatewayPortConfigMap) ToGatewayPortConfigMapOutput() GatewayPortConfigMapOutput {
	return i.ToGatewayPortConfigMapOutputWithContext(context.Background())
}

func (i GatewayPortConfigMap) ToGatewayPortConfigMapOutputWithContext(ctx context.Context) GatewayPortConfigMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayPortConfigMapOutput)
}

type GatewayPortConfigOutput struct{ *pulumi.OutputState }

func (GatewayPortConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayPortConfig)(nil)).Elem()
}

func (o GatewayPortConfigOutput) ToGatewayPortConfigOutput() GatewayPortConfigOutput {
	return o
}

func (o GatewayPortConfigOutput) ToGatewayPortConfigOutputWithContext(ctx context.Context) GatewayPortConfigOutput {
	return o
}

// If `aggregated`==`true`. To disable LCP support for the AE interface
func (o GatewayPortConfigOutput) AeDisableLacp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GatewayPortConfig) *bool { return v.AeDisableLacp }).(pulumi.BoolPtrOutput)
}

// If `aggregated`==`true`. Users could force to use the designated AE name (must be an integer between 0 and 127)
func (o GatewayPortConfigOutput) AeIdx() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayPortConfig) *string { return v.AeIdx }).(pulumi.StringPtrOutput)
}

// For SRX Only, if `aggregated`==`true`.Sets the state of the interface as UP when the peer has limited LACP capability. Use case: When a device connected to this AE port is ZTPing for the first time, it will not have LACP configured on the other end. **Note:** Turning this on will enable force-up on one of the interfaces in the bundle only
func (o GatewayPortConfigOutput) AeLacpForceUp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GatewayPortConfig) *bool { return v.AeLacpForceUp }).(pulumi.BoolPtrOutput)
}

func (o GatewayPortConfigOutput) Aggregated() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GatewayPortConfig) *bool { return v.Aggregated }).(pulumi.BoolPtrOutput)
}

// To generate port up/down alarm, set it to true
func (o GatewayPortConfigOutput) Critical() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GatewayPortConfig) *bool { return v.Critical }).(pulumi.BoolPtrOutput)
}

// Interface Description. Can be a variable (i.e. "{{myvar}}")
func (o GatewayPortConfigOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayPortConfig) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o GatewayPortConfigOutput) DisableAutoneg() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GatewayPortConfig) *bool { return v.DisableAutoneg }).(pulumi.BoolPtrOutput)
}

// Port admin up (true) / down (false)
func (o GatewayPortConfigOutput) Disabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GatewayPortConfig) *bool { return v.Disabled }).(pulumi.BoolPtrOutput)
}

// if `wanType`==`dsl`. enum: `adsl`, `vdsl`
func (o GatewayPortConfigOutput) DslType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayPortConfig) *string { return v.DslType }).(pulumi.StringPtrOutput)
}

// If `wanType`==`dsl`, 16 bit int
func (o GatewayPortConfigOutput) DslVci() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GatewayPortConfig) *int { return v.DslVci }).(pulumi.IntPtrOutput)
}

// If `wanType`==`dsl`, 8 bit int
func (o GatewayPortConfigOutput) DslVpi() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GatewayPortConfig) *int { return v.DslVpi }).(pulumi.IntPtrOutput)
}

// enum: `auto`, `full`, `half`
func (o GatewayPortConfigOutput) Duplex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayPortConfig) *string { return v.Duplex }).(pulumi.StringPtrOutput)
}

// Junos IP Config
func (o GatewayPortConfigOutput) IpConfig() GatewayPortConfigIpConfigPtrOutput {
	return o.ApplyT(func(v GatewayPortConfig) *GatewayPortConfigIpConfig { return v.IpConfig }).(GatewayPortConfigIpConfigPtrOutput)
}

// If `wanType`==`lte`
func (o GatewayPortConfigOutput) LteApn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayPortConfig) *string { return v.LteApn }).(pulumi.StringPtrOutput)
}

// if `wanType`==`lte`. enum: `chap`, `none`, `pap`
func (o GatewayPortConfigOutput) LteAuth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayPortConfig) *string { return v.LteAuth }).(pulumi.StringPtrOutput)
}

func (o GatewayPortConfigOutput) LteBackup() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GatewayPortConfig) *bool { return v.LteBackup }).(pulumi.BoolPtrOutput)
}

// If `wanType`==`lte`
func (o GatewayPortConfigOutput) LtePassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayPortConfig) *string { return v.LtePassword }).(pulumi.StringPtrOutput)
}

// If `wanType`==`lte`
func (o GatewayPortConfigOutput) LteUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayPortConfig) *string { return v.LteUsername }).(pulumi.StringPtrOutput)
}

func (o GatewayPortConfigOutput) Mtu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GatewayPortConfig) *int { return v.Mtu }).(pulumi.IntPtrOutput)
}

// Name that we'll use to derive config
func (o GatewayPortConfigOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayPortConfig) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// if `usage`==`lan`, name of the `org.Network` resource
func (o GatewayPortConfigOutput) Networks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GatewayPortConfig) []string { return v.Networks }).(pulumi.StringArrayOutput)
}

// For Q-in-Q
func (o GatewayPortConfigOutput) OuterVlanId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GatewayPortConfig) *int { return v.OuterVlanId }).(pulumi.IntPtrOutput)
}

func (o GatewayPortConfigOutput) PoeDisabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GatewayPortConfig) *bool { return v.PoeDisabled }).(pulumi.BoolPtrOutput)
}

// Only for SRX and if `usage`==`lan`, the name of the Network to be used as the Untagged VLAN
func (o GatewayPortConfigOutput) PortNetwork() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayPortConfig) *string { return v.PortNetwork }).(pulumi.StringPtrOutput)
}

// Whether to preserve dscp when sending traffic over VPN (SSR-only)
func (o GatewayPortConfigOutput) PreserveDscp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GatewayPortConfig) *bool { return v.PreserveDscp }).(pulumi.BoolPtrOutput)
}

// If HA mode
func (o GatewayPortConfigOutput) Redundant() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GatewayPortConfig) *bool { return v.Redundant }).(pulumi.BoolPtrOutput)
}

// If HA mode, SRX Only - support redundancy-group. 1-128 for physical SRX, 1-64 for virtual SRX
func (o GatewayPortConfigOutput) RedundantGroup() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GatewayPortConfig) *int { return v.RedundantGroup }).(pulumi.IntPtrOutput)
}

// For SRX only and if HA Mode
func (o GatewayPortConfigOutput) RethIdx() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayPortConfig) *string { return v.RethIdx }).(pulumi.StringPtrOutput)
}

// If HA mode
func (o GatewayPortConfigOutput) RethNode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayPortConfig) *string { return v.RethNode }).(pulumi.StringPtrOutput)
}

// SSR only - supporting vlan-based redundancy (matching the size of `networks`)
func (o GatewayPortConfigOutput) RethNodes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GatewayPortConfig) []string { return v.RethNodes }).(pulumi.StringArrayOutput)
}

func (o GatewayPortConfigOutput) Speed() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayPortConfig) *string { return v.Speed }).(pulumi.StringPtrOutput)
}

// When SSR is running as VM, this is required on certain hosting platforms
func (o GatewayPortConfigOutput) SsrNoVirtualMac() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GatewayPortConfig) *bool { return v.SsrNoVirtualMac }).(pulumi.BoolPtrOutput)
}

// For SSR only
func (o GatewayPortConfigOutput) SvrPortRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayPortConfig) *string { return v.SvrPortRange }).(pulumi.StringPtrOutput)
}

func (o GatewayPortConfigOutput) TrafficShaping() GatewayPortConfigTrafficShapingPtrOutput {
	return o.ApplyT(func(v GatewayPortConfig) *GatewayPortConfigTrafficShaping { return v.TrafficShaping }).(GatewayPortConfigTrafficShapingPtrOutput)
}

// port usage name. enum: `haControl`, `haData`, `lan`, `wan`
func (o GatewayPortConfigOutput) Usage() pulumi.StringOutput {
	return o.ApplyT(func(v GatewayPortConfig) string { return v.Usage }).(pulumi.StringOutput)
}

func (o GatewayPortConfigOutput) VlanId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayPortConfig) *string { return v.VlanId }).(pulumi.StringPtrOutput)
}

// Property key is the VPN name
func (o GatewayPortConfigOutput) VpnPaths() GatewayPortConfigVpnPathsMapOutput {
	return o.ApplyT(func(v GatewayPortConfig) map[string]GatewayPortConfigVpnPaths { return v.VpnPaths }).(GatewayPortConfigVpnPathsMapOutput)
}

// Only when `wanType`==`broadband`. enum: `default`, `max`, `recommended`
func (o GatewayPortConfigOutput) WanArpPolicer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayPortConfig) *string { return v.WanArpPolicer }).(pulumi.StringPtrOutput)
}

// Only if `usage`==`wan`, optional. If spoke should reach this port by a different IP
func (o GatewayPortConfigOutput) WanExtIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayPortConfig) *string { return v.WanExtIp }).(pulumi.StringPtrOutput)
}

// Only if `usage`==`wan`. Property Key is the destination CIDR (e.g. "100.100.100.0/24")
func (o GatewayPortConfigOutput) WanExtraRoutes() GatewayPortConfigWanExtraRoutesMapOutput {
	return o.ApplyT(func(v GatewayPortConfig) map[string]GatewayPortConfigWanExtraRoutes { return v.WanExtraRoutes }).(GatewayPortConfigWanExtraRoutesMapOutput)
}

// Only if `usage`==`wan`. If some networks are connected to this WAN port, it can be added here so policies can be defined
func (o GatewayPortConfigOutput) WanNetworks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GatewayPortConfig) []string { return v.WanNetworks }).(pulumi.StringArrayOutput)
}

// Only if `usage`==`wan`
func (o GatewayPortConfigOutput) WanProbeOverride() GatewayPortConfigWanProbeOverridePtrOutput {
	return o.ApplyT(func(v GatewayPortConfig) *GatewayPortConfigWanProbeOverride { return v.WanProbeOverride }).(GatewayPortConfigWanProbeOverridePtrOutput)
}

// Only if `usage`==`wan`, optional. By default, source-NAT is performed on all WAN Ports using the interface-ip
func (o GatewayPortConfigOutput) WanSourceNat() GatewayPortConfigWanSourceNatPtrOutput {
	return o.ApplyT(func(v GatewayPortConfig) *GatewayPortConfigWanSourceNat { return v.WanSourceNat }).(GatewayPortConfigWanSourceNatPtrOutput)
}

// Only if `usage`==`wan`. enum: `broadband`, `dsl`, `lte`
func (o GatewayPortConfigOutput) WanType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayPortConfig) *string { return v.WanType }).(pulumi.StringPtrOutput)
}

type GatewayPortConfigMapOutput struct{ *pulumi.OutputState }

func (GatewayPortConfigMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]GatewayPortConfig)(nil)).Elem()
}

func (o GatewayPortConfigMapOutput) ToGatewayPortConfigMapOutput() GatewayPortConfigMapOutput {
	return o
}

func (o GatewayPortConfigMapOutput) ToGatewayPortConfigMapOutputWithContext(ctx context.Context) GatewayPortConfigMapOutput {
	return o
}

func (o GatewayPortConfigMapOutput) MapIndex(k pulumi.StringInput) GatewayPortConfigOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) GatewayPortConfig {
		return vs[0].(map[string]GatewayPortConfig)[vs[1].(string)]
	}).(GatewayPortConfigOutput)
}

type GatewayPortConfigIpConfig struct {
	// Except for out-of_band interface (vme/em0/fxp0)
	Dns []string `pulumi:"dns"`
	// Except for out-of_band interface (vme/em0/fxp0)
	DnsSuffixes []string `pulumi:"dnsSuffixes"`
	// Except for out-of_band interface (vme/em0/fxp0). Interface Default Gateway IP Address (i.e. "192.168.1.1") or a Variable (i.e. "{{myvar}}")
	Gateway *string `pulumi:"gateway"`
	// Interface IP Address (i.e. "192.168.1.8") or a Variable (i.e. "{{myvar}}")
	Ip *string `pulumi:"ip"`
	// Used only if `subnet` is not specified in `networks`. Interface Netmask (i.e. "/24") or a Variable (i.e. "{{myvar}}")
	Netmask *string `pulumi:"netmask"`
	// Optional, the network to be used for mgmt
	Network *string `pulumi:"network"`
	// If `type`==`pppoe`
	PoserPassword *string `pulumi:"poserPassword"`
	// if `type`==`pppoe`. enum: `chap`, `none`, `pap`
	PppoeAuth *string `pulumi:"pppoeAuth"`
	// If `type`==`pppoe`
	PppoeUsername *string `pulumi:"pppoeUsername"`
	// enum: `dhcp`, `pppoe`, `static`
	Type *string `pulumi:"type"`
}

// GatewayPortConfigIpConfigInput is an input type that accepts GatewayPortConfigIpConfigArgs and GatewayPortConfigIpConfigOutput values.
// You can construct a concrete instance of `GatewayPortConfigIpConfigInput` via:
//
//	GatewayPortConfigIpConfigArgs{...}
type GatewayPortConfigIpConfigInput interface {
	pulumi.Input

	ToGatewayPortConfigIpConfigOutput() GatewayPortConfigIpConfigOutput
	ToGatewayPortConfigIpConfigOutputWithContext(context.Context) GatewayPortConfigIpConfigOutput
}

type GatewayPortConfigIpConfigArgs struct {
	// Except for out-of_band interface (vme/em0/fxp0)
	Dns pulumi.StringArrayInput `pulumi:"dns"`
	// Except for out-of_band interface (vme/em0/fxp0)
	DnsSuffixes pulumi.StringArrayInput `pulumi:"dnsSuffixes"`
	// Except for out-of_band interface (vme/em0/fxp0). Interface Default Gateway IP Address (i.e. "192.168.1.1") or a Variable (i.e. "{{myvar}}")
	Gateway pulumi.StringPtrInput `pulumi:"gateway"`
	// Interface IP Address (i.e. "192.168.1.8") or a Variable (i.e. "{{myvar}}")
	Ip pulumi.StringPtrInput `pulumi:"ip"`
	// Used only if `subnet` is not specified in `networks`. Interface Netmask (i.e. "/24") or a Variable (i.e. "{{myvar}}")
	Netmask pulumi.StringPtrInput `pulumi:"netmask"`
	// Optional, the network to be used for mgmt
	Network pulumi.StringPtrInput `pulumi:"network"`
	// If `type`==`pppoe`
	PoserPassword pulumi.StringPtrInput `pulumi:"poserPassword"`
	// if `type`==`pppoe`. enum: `chap`, `none`, `pap`
	PppoeAuth pulumi.StringPtrInput `pulumi:"pppoeAuth"`
	// If `type`==`pppoe`
	PppoeUsername pulumi.StringPtrInput `pulumi:"pppoeUsername"`
	// enum: `dhcp`, `pppoe`, `static`
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (GatewayPortConfigIpConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayPortConfigIpConfig)(nil)).Elem()
}

func (i GatewayPortConfigIpConfigArgs) ToGatewayPortConfigIpConfigOutput() GatewayPortConfigIpConfigOutput {
	return i.ToGatewayPortConfigIpConfigOutputWithContext(context.Background())
}

func (i GatewayPortConfigIpConfigArgs) ToGatewayPortConfigIpConfigOutputWithContext(ctx context.Context) GatewayPortConfigIpConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayPortConfigIpConfigOutput)
}

func (i GatewayPortConfigIpConfigArgs) ToGatewayPortConfigIpConfigPtrOutput() GatewayPortConfigIpConfigPtrOutput {
	return i.ToGatewayPortConfigIpConfigPtrOutputWithContext(context.Background())
}

func (i GatewayPortConfigIpConfigArgs) ToGatewayPortConfigIpConfigPtrOutputWithContext(ctx context.Context) GatewayPortConfigIpConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayPortConfigIpConfigOutput).ToGatewayPortConfigIpConfigPtrOutputWithContext(ctx)
}

// GatewayPortConfigIpConfigPtrInput is an input type that accepts GatewayPortConfigIpConfigArgs, GatewayPortConfigIpConfigPtr and GatewayPortConfigIpConfigPtrOutput values.
// You can construct a concrete instance of `GatewayPortConfigIpConfigPtrInput` via:
//
//	        GatewayPortConfigIpConfigArgs{...}
//
//	or:
//
//	        nil
type GatewayPortConfigIpConfigPtrInput interface {
	pulumi.Input

	ToGatewayPortConfigIpConfigPtrOutput() GatewayPortConfigIpConfigPtrOutput
	ToGatewayPortConfigIpConfigPtrOutputWithContext(context.Context) GatewayPortConfigIpConfigPtrOutput
}

type gatewayPortConfigIpConfigPtrType GatewayPortConfigIpConfigArgs

func GatewayPortConfigIpConfigPtr(v *GatewayPortConfigIpConfigArgs) GatewayPortConfigIpConfigPtrInput {
	return (*gatewayPortConfigIpConfigPtrType)(v)
}

func (*gatewayPortConfigIpConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayPortConfigIpConfig)(nil)).Elem()
}

func (i *gatewayPortConfigIpConfigPtrType) ToGatewayPortConfigIpConfigPtrOutput() GatewayPortConfigIpConfigPtrOutput {
	return i.ToGatewayPortConfigIpConfigPtrOutputWithContext(context.Background())
}

func (i *gatewayPortConfigIpConfigPtrType) ToGatewayPortConfigIpConfigPtrOutputWithContext(ctx context.Context) GatewayPortConfigIpConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayPortConfigIpConfigPtrOutput)
}

type GatewayPortConfigIpConfigOutput struct{ *pulumi.OutputState }

func (GatewayPortConfigIpConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayPortConfigIpConfig)(nil)).Elem()
}

func (o GatewayPortConfigIpConfigOutput) ToGatewayPortConfigIpConfigOutput() GatewayPortConfigIpConfigOutput {
	return o
}

func (o GatewayPortConfigIpConfigOutput) ToGatewayPortConfigIpConfigOutputWithContext(ctx context.Context) GatewayPortConfigIpConfigOutput {
	return o
}

func (o GatewayPortConfigIpConfigOutput) ToGatewayPortConfigIpConfigPtrOutput() GatewayPortConfigIpConfigPtrOutput {
	return o.ToGatewayPortConfigIpConfigPtrOutputWithContext(context.Background())
}

func (o GatewayPortConfigIpConfigOutput) ToGatewayPortConfigIpConfigPtrOutputWithContext(ctx context.Context) GatewayPortConfigIpConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayPortConfigIpConfig) *GatewayPortConfigIpConfig {
		return &v
	}).(GatewayPortConfigIpConfigPtrOutput)
}

// Except for out-of_band interface (vme/em0/fxp0)
func (o GatewayPortConfigIpConfigOutput) Dns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GatewayPortConfigIpConfig) []string { return v.Dns }).(pulumi.StringArrayOutput)
}

// Except for out-of_band interface (vme/em0/fxp0)
func (o GatewayPortConfigIpConfigOutput) DnsSuffixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GatewayPortConfigIpConfig) []string { return v.DnsSuffixes }).(pulumi.StringArrayOutput)
}

// Except for out-of_band interface (vme/em0/fxp0). Interface Default Gateway IP Address (i.e. "192.168.1.1") or a Variable (i.e. "{{myvar}}")
func (o GatewayPortConfigIpConfigOutput) Gateway() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayPortConfigIpConfig) *string { return v.Gateway }).(pulumi.StringPtrOutput)
}

// Interface IP Address (i.e. "192.168.1.8") or a Variable (i.e. "{{myvar}}")
func (o GatewayPortConfigIpConfigOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayPortConfigIpConfig) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

// Used only if `subnet` is not specified in `networks`. Interface Netmask (i.e. "/24") or a Variable (i.e. "{{myvar}}")
func (o GatewayPortConfigIpConfigOutput) Netmask() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayPortConfigIpConfig) *string { return v.Netmask }).(pulumi.StringPtrOutput)
}

// Optional, the network to be used for mgmt
func (o GatewayPortConfigIpConfigOutput) Network() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayPortConfigIpConfig) *string { return v.Network }).(pulumi.StringPtrOutput)
}

// If `type`==`pppoe`
func (o GatewayPortConfigIpConfigOutput) PoserPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayPortConfigIpConfig) *string { return v.PoserPassword }).(pulumi.StringPtrOutput)
}

// if `type`==`pppoe`. enum: `chap`, `none`, `pap`
func (o GatewayPortConfigIpConfigOutput) PppoeAuth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayPortConfigIpConfig) *string { return v.PppoeAuth }).(pulumi.StringPtrOutput)
}

// If `type`==`pppoe`
func (o GatewayPortConfigIpConfigOutput) PppoeUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayPortConfigIpConfig) *string { return v.PppoeUsername }).(pulumi.StringPtrOutput)
}

// enum: `dhcp`, `pppoe`, `static`
func (o GatewayPortConfigIpConfigOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayPortConfigIpConfig) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type GatewayPortConfigIpConfigPtrOutput struct{ *pulumi.OutputState }

func (GatewayPortConfigIpConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayPortConfigIpConfig)(nil)).Elem()
}

func (o GatewayPortConfigIpConfigPtrOutput) ToGatewayPortConfigIpConfigPtrOutput() GatewayPortConfigIpConfigPtrOutput {
	return o
}

func (o GatewayPortConfigIpConfigPtrOutput) ToGatewayPortConfigIpConfigPtrOutputWithContext(ctx context.Context) GatewayPortConfigIpConfigPtrOutput {
	return o
}

func (o GatewayPortConfigIpConfigPtrOutput) Elem() GatewayPortConfigIpConfigOutput {
	return o.ApplyT(func(v *GatewayPortConfigIpConfig) GatewayPortConfigIpConfig {
		if v != nil {
			return *v
		}
		var ret GatewayPortConfigIpConfig
		return ret
	}).(GatewayPortConfigIpConfigOutput)
}

// Except for out-of_band interface (vme/em0/fxp0)
func (o GatewayPortConfigIpConfigPtrOutput) Dns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GatewayPortConfigIpConfig) []string {
		if v == nil {
			return nil
		}
		return v.Dns
	}).(pulumi.StringArrayOutput)
}

// Except for out-of_band interface (vme/em0/fxp0)
func (o GatewayPortConfigIpConfigPtrOutput) DnsSuffixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GatewayPortConfigIpConfig) []string {
		if v == nil {
			return nil
		}
		return v.DnsSuffixes
	}).(pulumi.StringArrayOutput)
}

// Except for out-of_band interface (vme/em0/fxp0). Interface Default Gateway IP Address (i.e. "192.168.1.1") or a Variable (i.e. "{{myvar}}")
func (o GatewayPortConfigIpConfigPtrOutput) Gateway() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayPortConfigIpConfig) *string {
		if v == nil {
			return nil
		}
		return v.Gateway
	}).(pulumi.StringPtrOutput)
}

// Interface IP Address (i.e. "192.168.1.8") or a Variable (i.e. "{{myvar}}")
func (o GatewayPortConfigIpConfigPtrOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayPortConfigIpConfig) *string {
		if v == nil {
			return nil
		}
		return v.Ip
	}).(pulumi.StringPtrOutput)
}

// Used only if `subnet` is not specified in `networks`. Interface Netmask (i.e. "/24") or a Variable (i.e. "{{myvar}}")
func (o GatewayPortConfigIpConfigPtrOutput) Netmask() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayPortConfigIpConfig) *string {
		if v == nil {
			return nil
		}
		return v.Netmask
	}).(pulumi.StringPtrOutput)
}

// Optional, the network to be used for mgmt
func (o GatewayPortConfigIpConfigPtrOutput) Network() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayPortConfigIpConfig) *string {
		if v == nil {
			return nil
		}
		return v.Network
	}).(pulumi.StringPtrOutput)
}

// If `type`==`pppoe`
func (o GatewayPortConfigIpConfigPtrOutput) PoserPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayPortConfigIpConfig) *string {
		if v == nil {
			return nil
		}
		return v.PoserPassword
	}).(pulumi.StringPtrOutput)
}

// if `type`==`pppoe`. enum: `chap`, `none`, `pap`
func (o GatewayPortConfigIpConfigPtrOutput) PppoeAuth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayPortConfigIpConfig) *string {
		if v == nil {
			return nil
		}
		return v.PppoeAuth
	}).(pulumi.StringPtrOutput)
}

// If `type`==`pppoe`
func (o GatewayPortConfigIpConfigPtrOutput) PppoeUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayPortConfigIpConfig) *string {
		if v == nil {
			return nil
		}
		return v.PppoeUsername
	}).(pulumi.StringPtrOutput)
}

// enum: `dhcp`, `pppoe`, `static`
func (o GatewayPortConfigIpConfigPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayPortConfigIpConfig) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

type GatewayPortConfigTrafficShaping struct {
	// percentages for different class of traffic: high / medium / low / best-effort. Sum must be equal to 100
	ClassPercentages []int `pulumi:"classPercentages"`
	Enabled          *bool `pulumi:"enabled"`
	// Interface Transmit Cap in kbps
	MaxTxKbps *int `pulumi:"maxTxKbps"`
}

// GatewayPortConfigTrafficShapingInput is an input type that accepts GatewayPortConfigTrafficShapingArgs and GatewayPortConfigTrafficShapingOutput values.
// You can construct a concrete instance of `GatewayPortConfigTrafficShapingInput` via:
//
//	GatewayPortConfigTrafficShapingArgs{...}
type GatewayPortConfigTrafficShapingInput interface {
	pulumi.Input

	ToGatewayPortConfigTrafficShapingOutput() GatewayPortConfigTrafficShapingOutput
	ToGatewayPortConfigTrafficShapingOutputWithContext(context.Context) GatewayPortConfigTrafficShapingOutput
}

type GatewayPortConfigTrafficShapingArgs struct {
	// percentages for different class of traffic: high / medium / low / best-effort. Sum must be equal to 100
	ClassPercentages pulumi.IntArrayInput `pulumi:"classPercentages"`
	Enabled          pulumi.BoolPtrInput  `pulumi:"enabled"`
	// Interface Transmit Cap in kbps
	MaxTxKbps pulumi.IntPtrInput `pulumi:"maxTxKbps"`
}

func (GatewayPortConfigTrafficShapingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayPortConfigTrafficShaping)(nil)).Elem()
}

func (i GatewayPortConfigTrafficShapingArgs) ToGatewayPortConfigTrafficShapingOutput() GatewayPortConfigTrafficShapingOutput {
	return i.ToGatewayPortConfigTrafficShapingOutputWithContext(context.Background())
}

func (i GatewayPortConfigTrafficShapingArgs) ToGatewayPortConfigTrafficShapingOutputWithContext(ctx context.Context) GatewayPortConfigTrafficShapingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayPortConfigTrafficShapingOutput)
}

func (i GatewayPortConfigTrafficShapingArgs) ToGatewayPortConfigTrafficShapingPtrOutput() GatewayPortConfigTrafficShapingPtrOutput {
	return i.ToGatewayPortConfigTrafficShapingPtrOutputWithContext(context.Background())
}

func (i GatewayPortConfigTrafficShapingArgs) ToGatewayPortConfigTrafficShapingPtrOutputWithContext(ctx context.Context) GatewayPortConfigTrafficShapingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayPortConfigTrafficShapingOutput).ToGatewayPortConfigTrafficShapingPtrOutputWithContext(ctx)
}

// GatewayPortConfigTrafficShapingPtrInput is an input type that accepts GatewayPortConfigTrafficShapingArgs, GatewayPortConfigTrafficShapingPtr and GatewayPortConfigTrafficShapingPtrOutput values.
// You can construct a concrete instance of `GatewayPortConfigTrafficShapingPtrInput` via:
//
//	        GatewayPortConfigTrafficShapingArgs{...}
//
//	or:
//
//	        nil
type GatewayPortConfigTrafficShapingPtrInput interface {
	pulumi.Input

	ToGatewayPortConfigTrafficShapingPtrOutput() GatewayPortConfigTrafficShapingPtrOutput
	ToGatewayPortConfigTrafficShapingPtrOutputWithContext(context.Context) GatewayPortConfigTrafficShapingPtrOutput
}

type gatewayPortConfigTrafficShapingPtrType GatewayPortConfigTrafficShapingArgs

func GatewayPortConfigTrafficShapingPtr(v *GatewayPortConfigTrafficShapingArgs) GatewayPortConfigTrafficShapingPtrInput {
	return (*gatewayPortConfigTrafficShapingPtrType)(v)
}

func (*gatewayPortConfigTrafficShapingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayPortConfigTrafficShaping)(nil)).Elem()
}

func (i *gatewayPortConfigTrafficShapingPtrType) ToGatewayPortConfigTrafficShapingPtrOutput() GatewayPortConfigTrafficShapingPtrOutput {
	return i.ToGatewayPortConfigTrafficShapingPtrOutputWithContext(context.Background())
}

func (i *gatewayPortConfigTrafficShapingPtrType) ToGatewayPortConfigTrafficShapingPtrOutputWithContext(ctx context.Context) GatewayPortConfigTrafficShapingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayPortConfigTrafficShapingPtrOutput)
}

type GatewayPortConfigTrafficShapingOutput struct{ *pulumi.OutputState }

func (GatewayPortConfigTrafficShapingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayPortConfigTrafficShaping)(nil)).Elem()
}

func (o GatewayPortConfigTrafficShapingOutput) ToGatewayPortConfigTrafficShapingOutput() GatewayPortConfigTrafficShapingOutput {
	return o
}

func (o GatewayPortConfigTrafficShapingOutput) ToGatewayPortConfigTrafficShapingOutputWithContext(ctx context.Context) GatewayPortConfigTrafficShapingOutput {
	return o
}

func (o GatewayPortConfigTrafficShapingOutput) ToGatewayPortConfigTrafficShapingPtrOutput() GatewayPortConfigTrafficShapingPtrOutput {
	return o.ToGatewayPortConfigTrafficShapingPtrOutputWithContext(context.Background())
}

func (o GatewayPortConfigTrafficShapingOutput) ToGatewayPortConfigTrafficShapingPtrOutputWithContext(ctx context.Context) GatewayPortConfigTrafficShapingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayPortConfigTrafficShaping) *GatewayPortConfigTrafficShaping {
		return &v
	}).(GatewayPortConfigTrafficShapingPtrOutput)
}

// percentages for different class of traffic: high / medium / low / best-effort. Sum must be equal to 100
func (o GatewayPortConfigTrafficShapingOutput) ClassPercentages() pulumi.IntArrayOutput {
	return o.ApplyT(func(v GatewayPortConfigTrafficShaping) []int { return v.ClassPercentages }).(pulumi.IntArrayOutput)
}

func (o GatewayPortConfigTrafficShapingOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GatewayPortConfigTrafficShaping) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Interface Transmit Cap in kbps
func (o GatewayPortConfigTrafficShapingOutput) MaxTxKbps() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GatewayPortConfigTrafficShaping) *int { return v.MaxTxKbps }).(pulumi.IntPtrOutput)
}

type GatewayPortConfigTrafficShapingPtrOutput struct{ *pulumi.OutputState }

func (GatewayPortConfigTrafficShapingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayPortConfigTrafficShaping)(nil)).Elem()
}

func (o GatewayPortConfigTrafficShapingPtrOutput) ToGatewayPortConfigTrafficShapingPtrOutput() GatewayPortConfigTrafficShapingPtrOutput {
	return o
}

func (o GatewayPortConfigTrafficShapingPtrOutput) ToGatewayPortConfigTrafficShapingPtrOutputWithContext(ctx context.Context) GatewayPortConfigTrafficShapingPtrOutput {
	return o
}

func (o GatewayPortConfigTrafficShapingPtrOutput) Elem() GatewayPortConfigTrafficShapingOutput {
	return o.ApplyT(func(v *GatewayPortConfigTrafficShaping) GatewayPortConfigTrafficShaping {
		if v != nil {
			return *v
		}
		var ret GatewayPortConfigTrafficShaping
		return ret
	}).(GatewayPortConfigTrafficShapingOutput)
}

// percentages for different class of traffic: high / medium / low / best-effort. Sum must be equal to 100
func (o GatewayPortConfigTrafficShapingPtrOutput) ClassPercentages() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *GatewayPortConfigTrafficShaping) []int {
		if v == nil {
			return nil
		}
		return v.ClassPercentages
	}).(pulumi.IntArrayOutput)
}

func (o GatewayPortConfigTrafficShapingPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GatewayPortConfigTrafficShaping) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Interface Transmit Cap in kbps
func (o GatewayPortConfigTrafficShapingPtrOutput) MaxTxKbps() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GatewayPortConfigTrafficShaping) *int {
		if v == nil {
			return nil
		}
		return v.MaxTxKbps
	}).(pulumi.IntPtrOutput)
}

type GatewayPortConfigVpnPaths struct {
	// Only if the VPN `type`==`hubSpoke`. enum: `broadband`, `lte`
	BfdProfile *string `pulumi:"bfdProfile"`
	// Only if the VPN `type`==`hubSpoke`. Whether to use tunnel mode. SSR only
	BfdUseTunnelMode *bool `pulumi:"bfdUseTunnelMode"`
	// Only if the VPN `type`==`hubSpoke`. For a given VPN, when `path_selection.strategy`==`simple`, the preference for a path (lower is preferred)
	Preference *int `pulumi:"preference"`
	// If the VPN `type`==`hubSpoke`, enum: `hub`, `spoke`. If the VPN `type`==`mesh`, enum: `mesh`
	Role           *string                                  `pulumi:"role"`
	TrafficShaping *GatewayPortConfigVpnPathsTrafficShaping `pulumi:"trafficShaping"`
}

// GatewayPortConfigVpnPathsInput is an input type that accepts GatewayPortConfigVpnPathsArgs and GatewayPortConfigVpnPathsOutput values.
// You can construct a concrete instance of `GatewayPortConfigVpnPathsInput` via:
//
//	GatewayPortConfigVpnPathsArgs{...}
type GatewayPortConfigVpnPathsInput interface {
	pulumi.Input

	ToGatewayPortConfigVpnPathsOutput() GatewayPortConfigVpnPathsOutput
	ToGatewayPortConfigVpnPathsOutputWithContext(context.Context) GatewayPortConfigVpnPathsOutput
}

type GatewayPortConfigVpnPathsArgs struct {
	// Only if the VPN `type`==`hubSpoke`. enum: `broadband`, `lte`
	BfdProfile pulumi.StringPtrInput `pulumi:"bfdProfile"`
	// Only if the VPN `type`==`hubSpoke`. Whether to use tunnel mode. SSR only
	BfdUseTunnelMode pulumi.BoolPtrInput `pulumi:"bfdUseTunnelMode"`
	// Only if the VPN `type`==`hubSpoke`. For a given VPN, when `path_selection.strategy`==`simple`, the preference for a path (lower is preferred)
	Preference pulumi.IntPtrInput `pulumi:"preference"`
	// If the VPN `type`==`hubSpoke`, enum: `hub`, `spoke`. If the VPN `type`==`mesh`, enum: `mesh`
	Role           pulumi.StringPtrInput                           `pulumi:"role"`
	TrafficShaping GatewayPortConfigVpnPathsTrafficShapingPtrInput `pulumi:"trafficShaping"`
}

func (GatewayPortConfigVpnPathsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayPortConfigVpnPaths)(nil)).Elem()
}

func (i GatewayPortConfigVpnPathsArgs) ToGatewayPortConfigVpnPathsOutput() GatewayPortConfigVpnPathsOutput {
	return i.ToGatewayPortConfigVpnPathsOutputWithContext(context.Background())
}

func (i GatewayPortConfigVpnPathsArgs) ToGatewayPortConfigVpnPathsOutputWithContext(ctx context.Context) GatewayPortConfigVpnPathsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayPortConfigVpnPathsOutput)
}

// GatewayPortConfigVpnPathsMapInput is an input type that accepts GatewayPortConfigVpnPathsMap and GatewayPortConfigVpnPathsMapOutput values.
// You can construct a concrete instance of `GatewayPortConfigVpnPathsMapInput` via:
//
//	GatewayPortConfigVpnPathsMap{ "key": GatewayPortConfigVpnPathsArgs{...} }
type GatewayPortConfigVpnPathsMapInput interface {
	pulumi.Input

	ToGatewayPortConfigVpnPathsMapOutput() GatewayPortConfigVpnPathsMapOutput
	ToGatewayPortConfigVpnPathsMapOutputWithContext(context.Context) GatewayPortConfigVpnPathsMapOutput
}

type GatewayPortConfigVpnPathsMap map[string]GatewayPortConfigVpnPathsInput

func (GatewayPortConfigVpnPathsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]GatewayPortConfigVpnPaths)(nil)).Elem()
}

func (i GatewayPortConfigVpnPathsMap) ToGatewayPortConfigVpnPathsMapOutput() GatewayPortConfigVpnPathsMapOutput {
	return i.ToGatewayPortConfigVpnPathsMapOutputWithContext(context.Background())
}

func (i GatewayPortConfigVpnPathsMap) ToGatewayPortConfigVpnPathsMapOutputWithContext(ctx context.Context) GatewayPortConfigVpnPathsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayPortConfigVpnPathsMapOutput)
}

type GatewayPortConfigVpnPathsOutput struct{ *pulumi.OutputState }

func (GatewayPortConfigVpnPathsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayPortConfigVpnPaths)(nil)).Elem()
}

func (o GatewayPortConfigVpnPathsOutput) ToGatewayPortConfigVpnPathsOutput() GatewayPortConfigVpnPathsOutput {
	return o
}

func (o GatewayPortConfigVpnPathsOutput) ToGatewayPortConfigVpnPathsOutputWithContext(ctx context.Context) GatewayPortConfigVpnPathsOutput {
	return o
}

// Only if the VPN `type`==`hubSpoke`. enum: `broadband`, `lte`
func (o GatewayPortConfigVpnPathsOutput) BfdProfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayPortConfigVpnPaths) *string { return v.BfdProfile }).(pulumi.StringPtrOutput)
}

// Only if the VPN `type`==`hubSpoke`. Whether to use tunnel mode. SSR only
func (o GatewayPortConfigVpnPathsOutput) BfdUseTunnelMode() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GatewayPortConfigVpnPaths) *bool { return v.BfdUseTunnelMode }).(pulumi.BoolPtrOutput)
}

// Only if the VPN `type`==`hubSpoke`. For a given VPN, when `path_selection.strategy`==`simple`, the preference for a path (lower is preferred)
func (o GatewayPortConfigVpnPathsOutput) Preference() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GatewayPortConfigVpnPaths) *int { return v.Preference }).(pulumi.IntPtrOutput)
}

// If the VPN `type`==`hubSpoke`, enum: `hub`, `spoke`. If the VPN `type`==`mesh`, enum: `mesh`
func (o GatewayPortConfigVpnPathsOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayPortConfigVpnPaths) *string { return v.Role }).(pulumi.StringPtrOutput)
}

func (o GatewayPortConfigVpnPathsOutput) TrafficShaping() GatewayPortConfigVpnPathsTrafficShapingPtrOutput {
	return o.ApplyT(func(v GatewayPortConfigVpnPaths) *GatewayPortConfigVpnPathsTrafficShaping { return v.TrafficShaping }).(GatewayPortConfigVpnPathsTrafficShapingPtrOutput)
}

type GatewayPortConfigVpnPathsMapOutput struct{ *pulumi.OutputState }

func (GatewayPortConfigVpnPathsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]GatewayPortConfigVpnPaths)(nil)).Elem()
}

func (o GatewayPortConfigVpnPathsMapOutput) ToGatewayPortConfigVpnPathsMapOutput() GatewayPortConfigVpnPathsMapOutput {
	return o
}

func (o GatewayPortConfigVpnPathsMapOutput) ToGatewayPortConfigVpnPathsMapOutputWithContext(ctx context.Context) GatewayPortConfigVpnPathsMapOutput {
	return o
}

func (o GatewayPortConfigVpnPathsMapOutput) MapIndex(k pulumi.StringInput) GatewayPortConfigVpnPathsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) GatewayPortConfigVpnPaths {
		return vs[0].(map[string]GatewayPortConfigVpnPaths)[vs[1].(string)]
	}).(GatewayPortConfigVpnPathsOutput)
}

type GatewayPortConfigVpnPathsTrafficShaping struct {
	// percentages for different class of traffic: high / medium / low / best-effort. Sum must be equal to 100
	ClassPercentages []int `pulumi:"classPercentages"`
	Enabled          *bool `pulumi:"enabled"`
	// Interface Transmit Cap in kbps
	MaxTxKbps *int `pulumi:"maxTxKbps"`
}

// GatewayPortConfigVpnPathsTrafficShapingInput is an input type that accepts GatewayPortConfigVpnPathsTrafficShapingArgs and GatewayPortConfigVpnPathsTrafficShapingOutput values.
// You can construct a concrete instance of `GatewayPortConfigVpnPathsTrafficShapingInput` via:
//
//	GatewayPortConfigVpnPathsTrafficShapingArgs{...}
type GatewayPortConfigVpnPathsTrafficShapingInput interface {
	pulumi.Input

	ToGatewayPortConfigVpnPathsTrafficShapingOutput() GatewayPortConfigVpnPathsTrafficShapingOutput
	ToGatewayPortConfigVpnPathsTrafficShapingOutputWithContext(context.Context) GatewayPortConfigVpnPathsTrafficShapingOutput
}

type GatewayPortConfigVpnPathsTrafficShapingArgs struct {
	// percentages for different class of traffic: high / medium / low / best-effort. Sum must be equal to 100
	ClassPercentages pulumi.IntArrayInput `pulumi:"classPercentages"`
	Enabled          pulumi.BoolPtrInput  `pulumi:"enabled"`
	// Interface Transmit Cap in kbps
	MaxTxKbps pulumi.IntPtrInput `pulumi:"maxTxKbps"`
}

func (GatewayPortConfigVpnPathsTrafficShapingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayPortConfigVpnPathsTrafficShaping)(nil)).Elem()
}

func (i GatewayPortConfigVpnPathsTrafficShapingArgs) ToGatewayPortConfigVpnPathsTrafficShapingOutput() GatewayPortConfigVpnPathsTrafficShapingOutput {
	return i.ToGatewayPortConfigVpnPathsTrafficShapingOutputWithContext(context.Background())
}

func (i GatewayPortConfigVpnPathsTrafficShapingArgs) ToGatewayPortConfigVpnPathsTrafficShapingOutputWithContext(ctx context.Context) GatewayPortConfigVpnPathsTrafficShapingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayPortConfigVpnPathsTrafficShapingOutput)
}

func (i GatewayPortConfigVpnPathsTrafficShapingArgs) ToGatewayPortConfigVpnPathsTrafficShapingPtrOutput() GatewayPortConfigVpnPathsTrafficShapingPtrOutput {
	return i.ToGatewayPortConfigVpnPathsTrafficShapingPtrOutputWithContext(context.Background())
}

func (i GatewayPortConfigVpnPathsTrafficShapingArgs) ToGatewayPortConfigVpnPathsTrafficShapingPtrOutputWithContext(ctx context.Context) GatewayPortConfigVpnPathsTrafficShapingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayPortConfigVpnPathsTrafficShapingOutput).ToGatewayPortConfigVpnPathsTrafficShapingPtrOutputWithContext(ctx)
}

// GatewayPortConfigVpnPathsTrafficShapingPtrInput is an input type that accepts GatewayPortConfigVpnPathsTrafficShapingArgs, GatewayPortConfigVpnPathsTrafficShapingPtr and GatewayPortConfigVpnPathsTrafficShapingPtrOutput values.
// You can construct a concrete instance of `GatewayPortConfigVpnPathsTrafficShapingPtrInput` via:
//
//	        GatewayPortConfigVpnPathsTrafficShapingArgs{...}
//
//	or:
//
//	        nil
type GatewayPortConfigVpnPathsTrafficShapingPtrInput interface {
	pulumi.Input

	ToGatewayPortConfigVpnPathsTrafficShapingPtrOutput() GatewayPortConfigVpnPathsTrafficShapingPtrOutput
	ToGatewayPortConfigVpnPathsTrafficShapingPtrOutputWithContext(context.Context) GatewayPortConfigVpnPathsTrafficShapingPtrOutput
}

type gatewayPortConfigVpnPathsTrafficShapingPtrType GatewayPortConfigVpnPathsTrafficShapingArgs

func GatewayPortConfigVpnPathsTrafficShapingPtr(v *GatewayPortConfigVpnPathsTrafficShapingArgs) GatewayPortConfigVpnPathsTrafficShapingPtrInput {
	return (*gatewayPortConfigVpnPathsTrafficShapingPtrType)(v)
}

func (*gatewayPortConfigVpnPathsTrafficShapingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayPortConfigVpnPathsTrafficShaping)(nil)).Elem()
}

func (i *gatewayPortConfigVpnPathsTrafficShapingPtrType) ToGatewayPortConfigVpnPathsTrafficShapingPtrOutput() GatewayPortConfigVpnPathsTrafficShapingPtrOutput {
	return i.ToGatewayPortConfigVpnPathsTrafficShapingPtrOutputWithContext(context.Background())
}

func (i *gatewayPortConfigVpnPathsTrafficShapingPtrType) ToGatewayPortConfigVpnPathsTrafficShapingPtrOutputWithContext(ctx context.Context) GatewayPortConfigVpnPathsTrafficShapingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayPortConfigVpnPathsTrafficShapingPtrOutput)
}

type GatewayPortConfigVpnPathsTrafficShapingOutput struct{ *pulumi.OutputState }

func (GatewayPortConfigVpnPathsTrafficShapingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayPortConfigVpnPathsTrafficShaping)(nil)).Elem()
}

func (o GatewayPortConfigVpnPathsTrafficShapingOutput) ToGatewayPortConfigVpnPathsTrafficShapingOutput() GatewayPortConfigVpnPathsTrafficShapingOutput {
	return o
}

func (o GatewayPortConfigVpnPathsTrafficShapingOutput) ToGatewayPortConfigVpnPathsTrafficShapingOutputWithContext(ctx context.Context) GatewayPortConfigVpnPathsTrafficShapingOutput {
	return o
}

func (o GatewayPortConfigVpnPathsTrafficShapingOutput) ToGatewayPortConfigVpnPathsTrafficShapingPtrOutput() GatewayPortConfigVpnPathsTrafficShapingPtrOutput {
	return o.ToGatewayPortConfigVpnPathsTrafficShapingPtrOutputWithContext(context.Background())
}

func (o GatewayPortConfigVpnPathsTrafficShapingOutput) ToGatewayPortConfigVpnPathsTrafficShapingPtrOutputWithContext(ctx context.Context) GatewayPortConfigVpnPathsTrafficShapingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayPortConfigVpnPathsTrafficShaping) *GatewayPortConfigVpnPathsTrafficShaping {
		return &v
	}).(GatewayPortConfigVpnPathsTrafficShapingPtrOutput)
}

// percentages for different class of traffic: high / medium / low / best-effort. Sum must be equal to 100
func (o GatewayPortConfigVpnPathsTrafficShapingOutput) ClassPercentages() pulumi.IntArrayOutput {
	return o.ApplyT(func(v GatewayPortConfigVpnPathsTrafficShaping) []int { return v.ClassPercentages }).(pulumi.IntArrayOutput)
}

func (o GatewayPortConfigVpnPathsTrafficShapingOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GatewayPortConfigVpnPathsTrafficShaping) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Interface Transmit Cap in kbps
func (o GatewayPortConfigVpnPathsTrafficShapingOutput) MaxTxKbps() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GatewayPortConfigVpnPathsTrafficShaping) *int { return v.MaxTxKbps }).(pulumi.IntPtrOutput)
}

type GatewayPortConfigVpnPathsTrafficShapingPtrOutput struct{ *pulumi.OutputState }

func (GatewayPortConfigVpnPathsTrafficShapingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayPortConfigVpnPathsTrafficShaping)(nil)).Elem()
}

func (o GatewayPortConfigVpnPathsTrafficShapingPtrOutput) ToGatewayPortConfigVpnPathsTrafficShapingPtrOutput() GatewayPortConfigVpnPathsTrafficShapingPtrOutput {
	return o
}

func (o GatewayPortConfigVpnPathsTrafficShapingPtrOutput) ToGatewayPortConfigVpnPathsTrafficShapingPtrOutputWithContext(ctx context.Context) GatewayPortConfigVpnPathsTrafficShapingPtrOutput {
	return o
}

func (o GatewayPortConfigVpnPathsTrafficShapingPtrOutput) Elem() GatewayPortConfigVpnPathsTrafficShapingOutput {
	return o.ApplyT(func(v *GatewayPortConfigVpnPathsTrafficShaping) GatewayPortConfigVpnPathsTrafficShaping {
		if v != nil {
			return *v
		}
		var ret GatewayPortConfigVpnPathsTrafficShaping
		return ret
	}).(GatewayPortConfigVpnPathsTrafficShapingOutput)
}

// percentages for different class of traffic: high / medium / low / best-effort. Sum must be equal to 100
func (o GatewayPortConfigVpnPathsTrafficShapingPtrOutput) ClassPercentages() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *GatewayPortConfigVpnPathsTrafficShaping) []int {
		if v == nil {
			return nil
		}
		return v.ClassPercentages
	}).(pulumi.IntArrayOutput)
}

func (o GatewayPortConfigVpnPathsTrafficShapingPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GatewayPortConfigVpnPathsTrafficShaping) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Interface Transmit Cap in kbps
func (o GatewayPortConfigVpnPathsTrafficShapingPtrOutput) MaxTxKbps() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GatewayPortConfigVpnPathsTrafficShaping) *int {
		if v == nil {
			return nil
		}
		return v.MaxTxKbps
	}).(pulumi.IntPtrOutput)
}

type GatewayPortConfigWanExtraRoutes struct {
	Via *string `pulumi:"via"`
}

// GatewayPortConfigWanExtraRoutesInput is an input type that accepts GatewayPortConfigWanExtraRoutesArgs and GatewayPortConfigWanExtraRoutesOutput values.
// You can construct a concrete instance of `GatewayPortConfigWanExtraRoutesInput` via:
//
//	GatewayPortConfigWanExtraRoutesArgs{...}
type GatewayPortConfigWanExtraRoutesInput interface {
	pulumi.Input

	ToGatewayPortConfigWanExtraRoutesOutput() GatewayPortConfigWanExtraRoutesOutput
	ToGatewayPortConfigWanExtraRoutesOutputWithContext(context.Context) GatewayPortConfigWanExtraRoutesOutput
}

type GatewayPortConfigWanExtraRoutesArgs struct {
	Via pulumi.StringPtrInput `pulumi:"via"`
}

func (GatewayPortConfigWanExtraRoutesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayPortConfigWanExtraRoutes)(nil)).Elem()
}

func (i GatewayPortConfigWanExtraRoutesArgs) ToGatewayPortConfigWanExtraRoutesOutput() GatewayPortConfigWanExtraRoutesOutput {
	return i.ToGatewayPortConfigWanExtraRoutesOutputWithContext(context.Background())
}

func (i GatewayPortConfigWanExtraRoutesArgs) ToGatewayPortConfigWanExtraRoutesOutputWithContext(ctx context.Context) GatewayPortConfigWanExtraRoutesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayPortConfigWanExtraRoutesOutput)
}

// GatewayPortConfigWanExtraRoutesMapInput is an input type that accepts GatewayPortConfigWanExtraRoutesMap and GatewayPortConfigWanExtraRoutesMapOutput values.
// You can construct a concrete instance of `GatewayPortConfigWanExtraRoutesMapInput` via:
//
//	GatewayPortConfigWanExtraRoutesMap{ "key": GatewayPortConfigWanExtraRoutesArgs{...} }
type GatewayPortConfigWanExtraRoutesMapInput interface {
	pulumi.Input

	ToGatewayPortConfigWanExtraRoutesMapOutput() GatewayPortConfigWanExtraRoutesMapOutput
	ToGatewayPortConfigWanExtraRoutesMapOutputWithContext(context.Context) GatewayPortConfigWanExtraRoutesMapOutput
}

type GatewayPortConfigWanExtraRoutesMap map[string]GatewayPortConfigWanExtraRoutesInput

func (GatewayPortConfigWanExtraRoutesMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]GatewayPortConfigWanExtraRoutes)(nil)).Elem()
}

func (i GatewayPortConfigWanExtraRoutesMap) ToGatewayPortConfigWanExtraRoutesMapOutput() GatewayPortConfigWanExtraRoutesMapOutput {
	return i.ToGatewayPortConfigWanExtraRoutesMapOutputWithContext(context.Background())
}

func (i GatewayPortConfigWanExtraRoutesMap) ToGatewayPortConfigWanExtraRoutesMapOutputWithContext(ctx context.Context) GatewayPortConfigWanExtraRoutesMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayPortConfigWanExtraRoutesMapOutput)
}

type GatewayPortConfigWanExtraRoutesOutput struct{ *pulumi.OutputState }

func (GatewayPortConfigWanExtraRoutesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayPortConfigWanExtraRoutes)(nil)).Elem()
}

func (o GatewayPortConfigWanExtraRoutesOutput) ToGatewayPortConfigWanExtraRoutesOutput() GatewayPortConfigWanExtraRoutesOutput {
	return o
}

func (o GatewayPortConfigWanExtraRoutesOutput) ToGatewayPortConfigWanExtraRoutesOutputWithContext(ctx context.Context) GatewayPortConfigWanExtraRoutesOutput {
	return o
}

func (o GatewayPortConfigWanExtraRoutesOutput) Via() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayPortConfigWanExtraRoutes) *string { return v.Via }).(pulumi.StringPtrOutput)
}

type GatewayPortConfigWanExtraRoutesMapOutput struct{ *pulumi.OutputState }

func (GatewayPortConfigWanExtraRoutesMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]GatewayPortConfigWanExtraRoutes)(nil)).Elem()
}

func (o GatewayPortConfigWanExtraRoutesMapOutput) ToGatewayPortConfigWanExtraRoutesMapOutput() GatewayPortConfigWanExtraRoutesMapOutput {
	return o
}

func (o GatewayPortConfigWanExtraRoutesMapOutput) ToGatewayPortConfigWanExtraRoutesMapOutputWithContext(ctx context.Context) GatewayPortConfigWanExtraRoutesMapOutput {
	return o
}

func (o GatewayPortConfigWanExtraRoutesMapOutput) MapIndex(k pulumi.StringInput) GatewayPortConfigWanExtraRoutesOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) GatewayPortConfigWanExtraRoutes {
		return vs[0].(map[string]GatewayPortConfigWanExtraRoutes)[vs[1].(string)]
	}).(GatewayPortConfigWanExtraRoutesOutput)
}

type GatewayPortConfigWanProbeOverride struct {
	Ips []string `pulumi:"ips"`
	// enum: `broadband`, `lte`
	ProbeProfile *string `pulumi:"probeProfile"`
}

// GatewayPortConfigWanProbeOverrideInput is an input type that accepts GatewayPortConfigWanProbeOverrideArgs and GatewayPortConfigWanProbeOverrideOutput values.
// You can construct a concrete instance of `GatewayPortConfigWanProbeOverrideInput` via:
//
//	GatewayPortConfigWanProbeOverrideArgs{...}
type GatewayPortConfigWanProbeOverrideInput interface {
	pulumi.Input

	ToGatewayPortConfigWanProbeOverrideOutput() GatewayPortConfigWanProbeOverrideOutput
	ToGatewayPortConfigWanProbeOverrideOutputWithContext(context.Context) GatewayPortConfigWanProbeOverrideOutput
}

type GatewayPortConfigWanProbeOverrideArgs struct {
	Ips pulumi.StringArrayInput `pulumi:"ips"`
	// enum: `broadband`, `lte`
	ProbeProfile pulumi.StringPtrInput `pulumi:"probeProfile"`
}

func (GatewayPortConfigWanProbeOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayPortConfigWanProbeOverride)(nil)).Elem()
}

func (i GatewayPortConfigWanProbeOverrideArgs) ToGatewayPortConfigWanProbeOverrideOutput() GatewayPortConfigWanProbeOverrideOutput {
	return i.ToGatewayPortConfigWanProbeOverrideOutputWithContext(context.Background())
}

func (i GatewayPortConfigWanProbeOverrideArgs) ToGatewayPortConfigWanProbeOverrideOutputWithContext(ctx context.Context) GatewayPortConfigWanProbeOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayPortConfigWanProbeOverrideOutput)
}

func (i GatewayPortConfigWanProbeOverrideArgs) ToGatewayPortConfigWanProbeOverridePtrOutput() GatewayPortConfigWanProbeOverridePtrOutput {
	return i.ToGatewayPortConfigWanProbeOverridePtrOutputWithContext(context.Background())
}

func (i GatewayPortConfigWanProbeOverrideArgs) ToGatewayPortConfigWanProbeOverridePtrOutputWithContext(ctx context.Context) GatewayPortConfigWanProbeOverridePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayPortConfigWanProbeOverrideOutput).ToGatewayPortConfigWanProbeOverridePtrOutputWithContext(ctx)
}

// GatewayPortConfigWanProbeOverridePtrInput is an input type that accepts GatewayPortConfigWanProbeOverrideArgs, GatewayPortConfigWanProbeOverridePtr and GatewayPortConfigWanProbeOverridePtrOutput values.
// You can construct a concrete instance of `GatewayPortConfigWanProbeOverridePtrInput` via:
//
//	        GatewayPortConfigWanProbeOverrideArgs{...}
//
//	or:
//
//	        nil
type GatewayPortConfigWanProbeOverridePtrInput interface {
	pulumi.Input

	ToGatewayPortConfigWanProbeOverridePtrOutput() GatewayPortConfigWanProbeOverridePtrOutput
	ToGatewayPortConfigWanProbeOverridePtrOutputWithContext(context.Context) GatewayPortConfigWanProbeOverridePtrOutput
}

type gatewayPortConfigWanProbeOverridePtrType GatewayPortConfigWanProbeOverrideArgs

func GatewayPortConfigWanProbeOverridePtr(v *GatewayPortConfigWanProbeOverrideArgs) GatewayPortConfigWanProbeOverridePtrInput {
	return (*gatewayPortConfigWanProbeOverridePtrType)(v)
}

func (*gatewayPortConfigWanProbeOverridePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayPortConfigWanProbeOverride)(nil)).Elem()
}

func (i *gatewayPortConfigWanProbeOverridePtrType) ToGatewayPortConfigWanProbeOverridePtrOutput() GatewayPortConfigWanProbeOverridePtrOutput {
	return i.ToGatewayPortConfigWanProbeOverridePtrOutputWithContext(context.Background())
}

func (i *gatewayPortConfigWanProbeOverridePtrType) ToGatewayPortConfigWanProbeOverridePtrOutputWithContext(ctx context.Context) GatewayPortConfigWanProbeOverridePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayPortConfigWanProbeOverridePtrOutput)
}

type GatewayPortConfigWanProbeOverrideOutput struct{ *pulumi.OutputState }

func (GatewayPortConfigWanProbeOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayPortConfigWanProbeOverride)(nil)).Elem()
}

func (o GatewayPortConfigWanProbeOverrideOutput) ToGatewayPortConfigWanProbeOverrideOutput() GatewayPortConfigWanProbeOverrideOutput {
	return o
}

func (o GatewayPortConfigWanProbeOverrideOutput) ToGatewayPortConfigWanProbeOverrideOutputWithContext(ctx context.Context) GatewayPortConfigWanProbeOverrideOutput {
	return o
}

func (o GatewayPortConfigWanProbeOverrideOutput) ToGatewayPortConfigWanProbeOverridePtrOutput() GatewayPortConfigWanProbeOverridePtrOutput {
	return o.ToGatewayPortConfigWanProbeOverridePtrOutputWithContext(context.Background())
}

func (o GatewayPortConfigWanProbeOverrideOutput) ToGatewayPortConfigWanProbeOverridePtrOutputWithContext(ctx context.Context) GatewayPortConfigWanProbeOverridePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayPortConfigWanProbeOverride) *GatewayPortConfigWanProbeOverride {
		return &v
	}).(GatewayPortConfigWanProbeOverridePtrOutput)
}

func (o GatewayPortConfigWanProbeOverrideOutput) Ips() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GatewayPortConfigWanProbeOverride) []string { return v.Ips }).(pulumi.StringArrayOutput)
}

// enum: `broadband`, `lte`
func (o GatewayPortConfigWanProbeOverrideOutput) ProbeProfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayPortConfigWanProbeOverride) *string { return v.ProbeProfile }).(pulumi.StringPtrOutput)
}

type GatewayPortConfigWanProbeOverridePtrOutput struct{ *pulumi.OutputState }

func (GatewayPortConfigWanProbeOverridePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayPortConfigWanProbeOverride)(nil)).Elem()
}

func (o GatewayPortConfigWanProbeOverridePtrOutput) ToGatewayPortConfigWanProbeOverridePtrOutput() GatewayPortConfigWanProbeOverridePtrOutput {
	return o
}

func (o GatewayPortConfigWanProbeOverridePtrOutput) ToGatewayPortConfigWanProbeOverridePtrOutputWithContext(ctx context.Context) GatewayPortConfigWanProbeOverridePtrOutput {
	return o
}

func (o GatewayPortConfigWanProbeOverridePtrOutput) Elem() GatewayPortConfigWanProbeOverrideOutput {
	return o.ApplyT(func(v *GatewayPortConfigWanProbeOverride) GatewayPortConfigWanProbeOverride {
		if v != nil {
			return *v
		}
		var ret GatewayPortConfigWanProbeOverride
		return ret
	}).(GatewayPortConfigWanProbeOverrideOutput)
}

func (o GatewayPortConfigWanProbeOverridePtrOutput) Ips() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GatewayPortConfigWanProbeOverride) []string {
		if v == nil {
			return nil
		}
		return v.Ips
	}).(pulumi.StringArrayOutput)
}

// enum: `broadband`, `lte`
func (o GatewayPortConfigWanProbeOverridePtrOutput) ProbeProfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayPortConfigWanProbeOverride) *string {
		if v == nil {
			return nil
		}
		return v.ProbeProfile
	}).(pulumi.StringPtrOutput)
}

type GatewayPortConfigWanSourceNat struct {
	// Or to disable the source-nat
	Disabled *bool `pulumi:"disabled"`
	// If alternative natPool is desired
	NatPool *string `pulumi:"natPool"`
}

// GatewayPortConfigWanSourceNatInput is an input type that accepts GatewayPortConfigWanSourceNatArgs and GatewayPortConfigWanSourceNatOutput values.
// You can construct a concrete instance of `GatewayPortConfigWanSourceNatInput` via:
//
//	GatewayPortConfigWanSourceNatArgs{...}
type GatewayPortConfigWanSourceNatInput interface {
	pulumi.Input

	ToGatewayPortConfigWanSourceNatOutput() GatewayPortConfigWanSourceNatOutput
	ToGatewayPortConfigWanSourceNatOutputWithContext(context.Context) GatewayPortConfigWanSourceNatOutput
}

type GatewayPortConfigWanSourceNatArgs struct {
	// Or to disable the source-nat
	Disabled pulumi.BoolPtrInput `pulumi:"disabled"`
	// If alternative natPool is desired
	NatPool pulumi.StringPtrInput `pulumi:"natPool"`
}

func (GatewayPortConfigWanSourceNatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayPortConfigWanSourceNat)(nil)).Elem()
}

func (i GatewayPortConfigWanSourceNatArgs) ToGatewayPortConfigWanSourceNatOutput() GatewayPortConfigWanSourceNatOutput {
	return i.ToGatewayPortConfigWanSourceNatOutputWithContext(context.Background())
}

func (i GatewayPortConfigWanSourceNatArgs) ToGatewayPortConfigWanSourceNatOutputWithContext(ctx context.Context) GatewayPortConfigWanSourceNatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayPortConfigWanSourceNatOutput)
}

func (i GatewayPortConfigWanSourceNatArgs) ToGatewayPortConfigWanSourceNatPtrOutput() GatewayPortConfigWanSourceNatPtrOutput {
	return i.ToGatewayPortConfigWanSourceNatPtrOutputWithContext(context.Background())
}

func (i GatewayPortConfigWanSourceNatArgs) ToGatewayPortConfigWanSourceNatPtrOutputWithContext(ctx context.Context) GatewayPortConfigWanSourceNatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayPortConfigWanSourceNatOutput).ToGatewayPortConfigWanSourceNatPtrOutputWithContext(ctx)
}

// GatewayPortConfigWanSourceNatPtrInput is an input type that accepts GatewayPortConfigWanSourceNatArgs, GatewayPortConfigWanSourceNatPtr and GatewayPortConfigWanSourceNatPtrOutput values.
// You can construct a concrete instance of `GatewayPortConfigWanSourceNatPtrInput` via:
//
//	        GatewayPortConfigWanSourceNatArgs{...}
//
//	or:
//
//	        nil
type GatewayPortConfigWanSourceNatPtrInput interface {
	pulumi.Input

	ToGatewayPortConfigWanSourceNatPtrOutput() GatewayPortConfigWanSourceNatPtrOutput
	ToGatewayPortConfigWanSourceNatPtrOutputWithContext(context.Context) GatewayPortConfigWanSourceNatPtrOutput
}

type gatewayPortConfigWanSourceNatPtrType GatewayPortConfigWanSourceNatArgs

func GatewayPortConfigWanSourceNatPtr(v *GatewayPortConfigWanSourceNatArgs) GatewayPortConfigWanSourceNatPtrInput {
	return (*gatewayPortConfigWanSourceNatPtrType)(v)
}

func (*gatewayPortConfigWanSourceNatPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayPortConfigWanSourceNat)(nil)).Elem()
}

func (i *gatewayPortConfigWanSourceNatPtrType) ToGatewayPortConfigWanSourceNatPtrOutput() GatewayPortConfigWanSourceNatPtrOutput {
	return i.ToGatewayPortConfigWanSourceNatPtrOutputWithContext(context.Background())
}

func (i *gatewayPortConfigWanSourceNatPtrType) ToGatewayPortConfigWanSourceNatPtrOutputWithContext(ctx context.Context) GatewayPortConfigWanSourceNatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayPortConfigWanSourceNatPtrOutput)
}

type GatewayPortConfigWanSourceNatOutput struct{ *pulumi.OutputState }

func (GatewayPortConfigWanSourceNatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayPortConfigWanSourceNat)(nil)).Elem()
}

func (o GatewayPortConfigWanSourceNatOutput) ToGatewayPortConfigWanSourceNatOutput() GatewayPortConfigWanSourceNatOutput {
	return o
}

func (o GatewayPortConfigWanSourceNatOutput) ToGatewayPortConfigWanSourceNatOutputWithContext(ctx context.Context) GatewayPortConfigWanSourceNatOutput {
	return o
}

func (o GatewayPortConfigWanSourceNatOutput) ToGatewayPortConfigWanSourceNatPtrOutput() GatewayPortConfigWanSourceNatPtrOutput {
	return o.ToGatewayPortConfigWanSourceNatPtrOutputWithContext(context.Background())
}

func (o GatewayPortConfigWanSourceNatOutput) ToGatewayPortConfigWanSourceNatPtrOutputWithContext(ctx context.Context) GatewayPortConfigWanSourceNatPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayPortConfigWanSourceNat) *GatewayPortConfigWanSourceNat {
		return &v
	}).(GatewayPortConfigWanSourceNatPtrOutput)
}

// Or to disable the source-nat
func (o GatewayPortConfigWanSourceNatOutput) Disabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GatewayPortConfigWanSourceNat) *bool { return v.Disabled }).(pulumi.BoolPtrOutput)
}

// If alternative natPool is desired
func (o GatewayPortConfigWanSourceNatOutput) NatPool() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayPortConfigWanSourceNat) *string { return v.NatPool }).(pulumi.StringPtrOutput)
}

type GatewayPortConfigWanSourceNatPtrOutput struct{ *pulumi.OutputState }

func (GatewayPortConfigWanSourceNatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayPortConfigWanSourceNat)(nil)).Elem()
}

func (o GatewayPortConfigWanSourceNatPtrOutput) ToGatewayPortConfigWanSourceNatPtrOutput() GatewayPortConfigWanSourceNatPtrOutput {
	return o
}

func (o GatewayPortConfigWanSourceNatPtrOutput) ToGatewayPortConfigWanSourceNatPtrOutputWithContext(ctx context.Context) GatewayPortConfigWanSourceNatPtrOutput {
	return o
}

func (o GatewayPortConfigWanSourceNatPtrOutput) Elem() GatewayPortConfigWanSourceNatOutput {
	return o.ApplyT(func(v *GatewayPortConfigWanSourceNat) GatewayPortConfigWanSourceNat {
		if v != nil {
			return *v
		}
		var ret GatewayPortConfigWanSourceNat
		return ret
	}).(GatewayPortConfigWanSourceNatOutput)
}

// Or to disable the source-nat
func (o GatewayPortConfigWanSourceNatPtrOutput) Disabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GatewayPortConfigWanSourceNat) *bool {
		if v == nil {
			return nil
		}
		return v.Disabled
	}).(pulumi.BoolPtrOutput)
}

// If alternative natPool is desired
func (o GatewayPortConfigWanSourceNatPtrOutput) NatPool() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayPortConfigWanSourceNat) *string {
		if v == nil {
			return nil
		}
		return v.NatPool
	}).(pulumi.StringPtrOutput)
}

type GatewayPortMirroring struct {
	PortMirror *GatewayPortMirroringPortMirror `pulumi:"portMirror"`
}

// GatewayPortMirroringInput is an input type that accepts GatewayPortMirroringArgs and GatewayPortMirroringOutput values.
// You can construct a concrete instance of `GatewayPortMirroringInput` via:
//
//	GatewayPortMirroringArgs{...}
type GatewayPortMirroringInput interface {
	pulumi.Input

	ToGatewayPortMirroringOutput() GatewayPortMirroringOutput
	ToGatewayPortMirroringOutputWithContext(context.Context) GatewayPortMirroringOutput
}

type GatewayPortMirroringArgs struct {
	PortMirror GatewayPortMirroringPortMirrorPtrInput `pulumi:"portMirror"`
}

func (GatewayPortMirroringArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayPortMirroring)(nil)).Elem()
}

func (i GatewayPortMirroringArgs) ToGatewayPortMirroringOutput() GatewayPortMirroringOutput {
	return i.ToGatewayPortMirroringOutputWithContext(context.Background())
}

func (i GatewayPortMirroringArgs) ToGatewayPortMirroringOutputWithContext(ctx context.Context) GatewayPortMirroringOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayPortMirroringOutput)
}

func (i GatewayPortMirroringArgs) ToGatewayPortMirroringPtrOutput() GatewayPortMirroringPtrOutput {
	return i.ToGatewayPortMirroringPtrOutputWithContext(context.Background())
}

func (i GatewayPortMirroringArgs) ToGatewayPortMirroringPtrOutputWithContext(ctx context.Context) GatewayPortMirroringPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayPortMirroringOutput).ToGatewayPortMirroringPtrOutputWithContext(ctx)
}

// GatewayPortMirroringPtrInput is an input type that accepts GatewayPortMirroringArgs, GatewayPortMirroringPtr and GatewayPortMirroringPtrOutput values.
// You can construct a concrete instance of `GatewayPortMirroringPtrInput` via:
//
//	        GatewayPortMirroringArgs{...}
//
//	or:
//
//	        nil
type GatewayPortMirroringPtrInput interface {
	pulumi.Input

	ToGatewayPortMirroringPtrOutput() GatewayPortMirroringPtrOutput
	ToGatewayPortMirroringPtrOutputWithContext(context.Context) GatewayPortMirroringPtrOutput
}

type gatewayPortMirroringPtrType GatewayPortMirroringArgs

func GatewayPortMirroringPtr(v *GatewayPortMirroringArgs) GatewayPortMirroringPtrInput {
	return (*gatewayPortMirroringPtrType)(v)
}

func (*gatewayPortMirroringPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayPortMirroring)(nil)).Elem()
}

func (i *gatewayPortMirroringPtrType) ToGatewayPortMirroringPtrOutput() GatewayPortMirroringPtrOutput {
	return i.ToGatewayPortMirroringPtrOutputWithContext(context.Background())
}

func (i *gatewayPortMirroringPtrType) ToGatewayPortMirroringPtrOutputWithContext(ctx context.Context) GatewayPortMirroringPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayPortMirroringPtrOutput)
}

type GatewayPortMirroringOutput struct{ *pulumi.OutputState }

func (GatewayPortMirroringOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayPortMirroring)(nil)).Elem()
}

func (o GatewayPortMirroringOutput) ToGatewayPortMirroringOutput() GatewayPortMirroringOutput {
	return o
}

func (o GatewayPortMirroringOutput) ToGatewayPortMirroringOutputWithContext(ctx context.Context) GatewayPortMirroringOutput {
	return o
}

func (o GatewayPortMirroringOutput) ToGatewayPortMirroringPtrOutput() GatewayPortMirroringPtrOutput {
	return o.ToGatewayPortMirroringPtrOutputWithContext(context.Background())
}

func (o GatewayPortMirroringOutput) ToGatewayPortMirroringPtrOutputWithContext(ctx context.Context) GatewayPortMirroringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayPortMirroring) *GatewayPortMirroring {
		return &v
	}).(GatewayPortMirroringPtrOutput)
}

func (o GatewayPortMirroringOutput) PortMirror() GatewayPortMirroringPortMirrorPtrOutput {
	return o.ApplyT(func(v GatewayPortMirroring) *GatewayPortMirroringPortMirror { return v.PortMirror }).(GatewayPortMirroringPortMirrorPtrOutput)
}

type GatewayPortMirroringPtrOutput struct{ *pulumi.OutputState }

func (GatewayPortMirroringPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayPortMirroring)(nil)).Elem()
}

func (o GatewayPortMirroringPtrOutput) ToGatewayPortMirroringPtrOutput() GatewayPortMirroringPtrOutput {
	return o
}

func (o GatewayPortMirroringPtrOutput) ToGatewayPortMirroringPtrOutputWithContext(ctx context.Context) GatewayPortMirroringPtrOutput {
	return o
}

func (o GatewayPortMirroringPtrOutput) Elem() GatewayPortMirroringOutput {
	return o.ApplyT(func(v *GatewayPortMirroring) GatewayPortMirroring {
		if v != nil {
			return *v
		}
		var ret GatewayPortMirroring
		return ret
	}).(GatewayPortMirroringOutput)
}

func (o GatewayPortMirroringPtrOutput) PortMirror() GatewayPortMirroringPortMirrorPtrOutput {
	return o.ApplyT(func(v *GatewayPortMirroring) *GatewayPortMirroringPortMirror {
		if v == nil {
			return nil
		}
		return v.PortMirror
	}).(GatewayPortMirroringPortMirrorPtrOutput)
}

type GatewayPortMirroringPortMirror struct {
	FamilyType     *string  `pulumi:"familyType"`
	IngressPortIds []string `pulumi:"ingressPortIds"`
	OutputPortId   *string  `pulumi:"outputPortId"`
	Rate           *int     `pulumi:"rate"`
	RunLength      *int     `pulumi:"runLength"`
}

// GatewayPortMirroringPortMirrorInput is an input type that accepts GatewayPortMirroringPortMirrorArgs and GatewayPortMirroringPortMirrorOutput values.
// You can construct a concrete instance of `GatewayPortMirroringPortMirrorInput` via:
//
//	GatewayPortMirroringPortMirrorArgs{...}
type GatewayPortMirroringPortMirrorInput interface {
	pulumi.Input

	ToGatewayPortMirroringPortMirrorOutput() GatewayPortMirroringPortMirrorOutput
	ToGatewayPortMirroringPortMirrorOutputWithContext(context.Context) GatewayPortMirroringPortMirrorOutput
}

type GatewayPortMirroringPortMirrorArgs struct {
	FamilyType     pulumi.StringPtrInput   `pulumi:"familyType"`
	IngressPortIds pulumi.StringArrayInput `pulumi:"ingressPortIds"`
	OutputPortId   pulumi.StringPtrInput   `pulumi:"outputPortId"`
	Rate           pulumi.IntPtrInput      `pulumi:"rate"`
	RunLength      pulumi.IntPtrInput      `pulumi:"runLength"`
}

func (GatewayPortMirroringPortMirrorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayPortMirroringPortMirror)(nil)).Elem()
}

func (i GatewayPortMirroringPortMirrorArgs) ToGatewayPortMirroringPortMirrorOutput() GatewayPortMirroringPortMirrorOutput {
	return i.ToGatewayPortMirroringPortMirrorOutputWithContext(context.Background())
}

func (i GatewayPortMirroringPortMirrorArgs) ToGatewayPortMirroringPortMirrorOutputWithContext(ctx context.Context) GatewayPortMirroringPortMirrorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayPortMirroringPortMirrorOutput)
}

func (i GatewayPortMirroringPortMirrorArgs) ToGatewayPortMirroringPortMirrorPtrOutput() GatewayPortMirroringPortMirrorPtrOutput {
	return i.ToGatewayPortMirroringPortMirrorPtrOutputWithContext(context.Background())
}

func (i GatewayPortMirroringPortMirrorArgs) ToGatewayPortMirroringPortMirrorPtrOutputWithContext(ctx context.Context) GatewayPortMirroringPortMirrorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayPortMirroringPortMirrorOutput).ToGatewayPortMirroringPortMirrorPtrOutputWithContext(ctx)
}

// GatewayPortMirroringPortMirrorPtrInput is an input type that accepts GatewayPortMirroringPortMirrorArgs, GatewayPortMirroringPortMirrorPtr and GatewayPortMirroringPortMirrorPtrOutput values.
// You can construct a concrete instance of `GatewayPortMirroringPortMirrorPtrInput` via:
//
//	        GatewayPortMirroringPortMirrorArgs{...}
//
//	or:
//
//	        nil
type GatewayPortMirroringPortMirrorPtrInput interface {
	pulumi.Input

	ToGatewayPortMirroringPortMirrorPtrOutput() GatewayPortMirroringPortMirrorPtrOutput
	ToGatewayPortMirroringPortMirrorPtrOutputWithContext(context.Context) GatewayPortMirroringPortMirrorPtrOutput
}

type gatewayPortMirroringPortMirrorPtrType GatewayPortMirroringPortMirrorArgs

func GatewayPortMirroringPortMirrorPtr(v *GatewayPortMirroringPortMirrorArgs) GatewayPortMirroringPortMirrorPtrInput {
	return (*gatewayPortMirroringPortMirrorPtrType)(v)
}

func (*gatewayPortMirroringPortMirrorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayPortMirroringPortMirror)(nil)).Elem()
}

func (i *gatewayPortMirroringPortMirrorPtrType) ToGatewayPortMirroringPortMirrorPtrOutput() GatewayPortMirroringPortMirrorPtrOutput {
	return i.ToGatewayPortMirroringPortMirrorPtrOutputWithContext(context.Background())
}

func (i *gatewayPortMirroringPortMirrorPtrType) ToGatewayPortMirroringPortMirrorPtrOutputWithContext(ctx context.Context) GatewayPortMirroringPortMirrorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayPortMirroringPortMirrorPtrOutput)
}

type GatewayPortMirroringPortMirrorOutput struct{ *pulumi.OutputState }

func (GatewayPortMirroringPortMirrorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayPortMirroringPortMirror)(nil)).Elem()
}

func (o GatewayPortMirroringPortMirrorOutput) ToGatewayPortMirroringPortMirrorOutput() GatewayPortMirroringPortMirrorOutput {
	return o
}

func (o GatewayPortMirroringPortMirrorOutput) ToGatewayPortMirroringPortMirrorOutputWithContext(ctx context.Context) GatewayPortMirroringPortMirrorOutput {
	return o
}

func (o GatewayPortMirroringPortMirrorOutput) ToGatewayPortMirroringPortMirrorPtrOutput() GatewayPortMirroringPortMirrorPtrOutput {
	return o.ToGatewayPortMirroringPortMirrorPtrOutputWithContext(context.Background())
}

func (o GatewayPortMirroringPortMirrorOutput) ToGatewayPortMirroringPortMirrorPtrOutputWithContext(ctx context.Context) GatewayPortMirroringPortMirrorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayPortMirroringPortMirror) *GatewayPortMirroringPortMirror {
		return &v
	}).(GatewayPortMirroringPortMirrorPtrOutput)
}

func (o GatewayPortMirroringPortMirrorOutput) FamilyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayPortMirroringPortMirror) *string { return v.FamilyType }).(pulumi.StringPtrOutput)
}

func (o GatewayPortMirroringPortMirrorOutput) IngressPortIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GatewayPortMirroringPortMirror) []string { return v.IngressPortIds }).(pulumi.StringArrayOutput)
}

func (o GatewayPortMirroringPortMirrorOutput) OutputPortId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayPortMirroringPortMirror) *string { return v.OutputPortId }).(pulumi.StringPtrOutput)
}

func (o GatewayPortMirroringPortMirrorOutput) Rate() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GatewayPortMirroringPortMirror) *int { return v.Rate }).(pulumi.IntPtrOutput)
}

func (o GatewayPortMirroringPortMirrorOutput) RunLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GatewayPortMirroringPortMirror) *int { return v.RunLength }).(pulumi.IntPtrOutput)
}

type GatewayPortMirroringPortMirrorPtrOutput struct{ *pulumi.OutputState }

func (GatewayPortMirroringPortMirrorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayPortMirroringPortMirror)(nil)).Elem()
}

func (o GatewayPortMirroringPortMirrorPtrOutput) ToGatewayPortMirroringPortMirrorPtrOutput() GatewayPortMirroringPortMirrorPtrOutput {
	return o
}

func (o GatewayPortMirroringPortMirrorPtrOutput) ToGatewayPortMirroringPortMirrorPtrOutputWithContext(ctx context.Context) GatewayPortMirroringPortMirrorPtrOutput {
	return o
}

func (o GatewayPortMirroringPortMirrorPtrOutput) Elem() GatewayPortMirroringPortMirrorOutput {
	return o.ApplyT(func(v *GatewayPortMirroringPortMirror) GatewayPortMirroringPortMirror {
		if v != nil {
			return *v
		}
		var ret GatewayPortMirroringPortMirror
		return ret
	}).(GatewayPortMirroringPortMirrorOutput)
}

func (o GatewayPortMirroringPortMirrorPtrOutput) FamilyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayPortMirroringPortMirror) *string {
		if v == nil {
			return nil
		}
		return v.FamilyType
	}).(pulumi.StringPtrOutput)
}

func (o GatewayPortMirroringPortMirrorPtrOutput) IngressPortIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GatewayPortMirroringPortMirror) []string {
		if v == nil {
			return nil
		}
		return v.IngressPortIds
	}).(pulumi.StringArrayOutput)
}

func (o GatewayPortMirroringPortMirrorPtrOutput) OutputPortId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayPortMirroringPortMirror) *string {
		if v == nil {
			return nil
		}
		return v.OutputPortId
	}).(pulumi.StringPtrOutput)
}

func (o GatewayPortMirroringPortMirrorPtrOutput) Rate() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GatewayPortMirroringPortMirror) *int {
		if v == nil {
			return nil
		}
		return v.Rate
	}).(pulumi.IntPtrOutput)
}

func (o GatewayPortMirroringPortMirrorPtrOutput) RunLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GatewayPortMirroringPortMirror) *int {
		if v == nil {
			return nil
		}
		return v.RunLength
	}).(pulumi.IntPtrOutput)
}

type GatewayRoutingPolicies struct {
	// zero or more criteria/filter can be specified to match the term, all criteria have to be met
	Terms []GatewayRoutingPoliciesTerm `pulumi:"terms"`
}

// GatewayRoutingPoliciesInput is an input type that accepts GatewayRoutingPoliciesArgs and GatewayRoutingPoliciesOutput values.
// You can construct a concrete instance of `GatewayRoutingPoliciesInput` via:
//
//	GatewayRoutingPoliciesArgs{...}
type GatewayRoutingPoliciesInput interface {
	pulumi.Input

	ToGatewayRoutingPoliciesOutput() GatewayRoutingPoliciesOutput
	ToGatewayRoutingPoliciesOutputWithContext(context.Context) GatewayRoutingPoliciesOutput
}

type GatewayRoutingPoliciesArgs struct {
	// zero or more criteria/filter can be specified to match the term, all criteria have to be met
	Terms GatewayRoutingPoliciesTermArrayInput `pulumi:"terms"`
}

func (GatewayRoutingPoliciesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRoutingPolicies)(nil)).Elem()
}

func (i GatewayRoutingPoliciesArgs) ToGatewayRoutingPoliciesOutput() GatewayRoutingPoliciesOutput {
	return i.ToGatewayRoutingPoliciesOutputWithContext(context.Background())
}

func (i GatewayRoutingPoliciesArgs) ToGatewayRoutingPoliciesOutputWithContext(ctx context.Context) GatewayRoutingPoliciesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRoutingPoliciesOutput)
}

// GatewayRoutingPoliciesMapInput is an input type that accepts GatewayRoutingPoliciesMap and GatewayRoutingPoliciesMapOutput values.
// You can construct a concrete instance of `GatewayRoutingPoliciesMapInput` via:
//
//	GatewayRoutingPoliciesMap{ "key": GatewayRoutingPoliciesArgs{...} }
type GatewayRoutingPoliciesMapInput interface {
	pulumi.Input

	ToGatewayRoutingPoliciesMapOutput() GatewayRoutingPoliciesMapOutput
	ToGatewayRoutingPoliciesMapOutputWithContext(context.Context) GatewayRoutingPoliciesMapOutput
}

type GatewayRoutingPoliciesMap map[string]GatewayRoutingPoliciesInput

func (GatewayRoutingPoliciesMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]GatewayRoutingPolicies)(nil)).Elem()
}

func (i GatewayRoutingPoliciesMap) ToGatewayRoutingPoliciesMapOutput() GatewayRoutingPoliciesMapOutput {
	return i.ToGatewayRoutingPoliciesMapOutputWithContext(context.Background())
}

func (i GatewayRoutingPoliciesMap) ToGatewayRoutingPoliciesMapOutputWithContext(ctx context.Context) GatewayRoutingPoliciesMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRoutingPoliciesMapOutput)
}

type GatewayRoutingPoliciesOutput struct{ *pulumi.OutputState }

func (GatewayRoutingPoliciesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRoutingPolicies)(nil)).Elem()
}

func (o GatewayRoutingPoliciesOutput) ToGatewayRoutingPoliciesOutput() GatewayRoutingPoliciesOutput {
	return o
}

func (o GatewayRoutingPoliciesOutput) ToGatewayRoutingPoliciesOutputWithContext(ctx context.Context) GatewayRoutingPoliciesOutput {
	return o
}

// zero or more criteria/filter can be specified to match the term, all criteria have to be met
func (o GatewayRoutingPoliciesOutput) Terms() GatewayRoutingPoliciesTermArrayOutput {
	return o.ApplyT(func(v GatewayRoutingPolicies) []GatewayRoutingPoliciesTerm { return v.Terms }).(GatewayRoutingPoliciesTermArrayOutput)
}

type GatewayRoutingPoliciesMapOutput struct{ *pulumi.OutputState }

func (GatewayRoutingPoliciesMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]GatewayRoutingPolicies)(nil)).Elem()
}

func (o GatewayRoutingPoliciesMapOutput) ToGatewayRoutingPoliciesMapOutput() GatewayRoutingPoliciesMapOutput {
	return o
}

func (o GatewayRoutingPoliciesMapOutput) ToGatewayRoutingPoliciesMapOutputWithContext(ctx context.Context) GatewayRoutingPoliciesMapOutput {
	return o
}

func (o GatewayRoutingPoliciesMapOutput) MapIndex(k pulumi.StringInput) GatewayRoutingPoliciesOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) GatewayRoutingPolicies {
		return vs[0].(map[string]GatewayRoutingPolicies)[vs[1].(string)]
	}).(GatewayRoutingPoliciesOutput)
}

type GatewayRoutingPoliciesTerm struct {
	// When used as import policy
	Action *GatewayRoutingPoliciesTermAction `pulumi:"action"`
	// zero or more criteria/filter can be specified to match the term, all criteria have to be met
	Matching *GatewayRoutingPoliciesTermMatching `pulumi:"matching"`
}

// GatewayRoutingPoliciesTermInput is an input type that accepts GatewayRoutingPoliciesTermArgs and GatewayRoutingPoliciesTermOutput values.
// You can construct a concrete instance of `GatewayRoutingPoliciesTermInput` via:
//
//	GatewayRoutingPoliciesTermArgs{...}
type GatewayRoutingPoliciesTermInput interface {
	pulumi.Input

	ToGatewayRoutingPoliciesTermOutput() GatewayRoutingPoliciesTermOutput
	ToGatewayRoutingPoliciesTermOutputWithContext(context.Context) GatewayRoutingPoliciesTermOutput
}

type GatewayRoutingPoliciesTermArgs struct {
	// When used as import policy
	Action GatewayRoutingPoliciesTermActionPtrInput `pulumi:"action"`
	// zero or more criteria/filter can be specified to match the term, all criteria have to be met
	Matching GatewayRoutingPoliciesTermMatchingPtrInput `pulumi:"matching"`
}

func (GatewayRoutingPoliciesTermArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRoutingPoliciesTerm)(nil)).Elem()
}

func (i GatewayRoutingPoliciesTermArgs) ToGatewayRoutingPoliciesTermOutput() GatewayRoutingPoliciesTermOutput {
	return i.ToGatewayRoutingPoliciesTermOutputWithContext(context.Background())
}

func (i GatewayRoutingPoliciesTermArgs) ToGatewayRoutingPoliciesTermOutputWithContext(ctx context.Context) GatewayRoutingPoliciesTermOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRoutingPoliciesTermOutput)
}

// GatewayRoutingPoliciesTermArrayInput is an input type that accepts GatewayRoutingPoliciesTermArray and GatewayRoutingPoliciesTermArrayOutput values.
// You can construct a concrete instance of `GatewayRoutingPoliciesTermArrayInput` via:
//
//	GatewayRoutingPoliciesTermArray{ GatewayRoutingPoliciesTermArgs{...} }
type GatewayRoutingPoliciesTermArrayInput interface {
	pulumi.Input

	ToGatewayRoutingPoliciesTermArrayOutput() GatewayRoutingPoliciesTermArrayOutput
	ToGatewayRoutingPoliciesTermArrayOutputWithContext(context.Context) GatewayRoutingPoliciesTermArrayOutput
}

type GatewayRoutingPoliciesTermArray []GatewayRoutingPoliciesTermInput

func (GatewayRoutingPoliciesTermArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GatewayRoutingPoliciesTerm)(nil)).Elem()
}

func (i GatewayRoutingPoliciesTermArray) ToGatewayRoutingPoliciesTermArrayOutput() GatewayRoutingPoliciesTermArrayOutput {
	return i.ToGatewayRoutingPoliciesTermArrayOutputWithContext(context.Background())
}

func (i GatewayRoutingPoliciesTermArray) ToGatewayRoutingPoliciesTermArrayOutputWithContext(ctx context.Context) GatewayRoutingPoliciesTermArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRoutingPoliciesTermArrayOutput)
}

type GatewayRoutingPoliciesTermOutput struct{ *pulumi.OutputState }

func (GatewayRoutingPoliciesTermOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRoutingPoliciesTerm)(nil)).Elem()
}

func (o GatewayRoutingPoliciesTermOutput) ToGatewayRoutingPoliciesTermOutput() GatewayRoutingPoliciesTermOutput {
	return o
}

func (o GatewayRoutingPoliciesTermOutput) ToGatewayRoutingPoliciesTermOutputWithContext(ctx context.Context) GatewayRoutingPoliciesTermOutput {
	return o
}

// When used as import policy
func (o GatewayRoutingPoliciesTermOutput) Action() GatewayRoutingPoliciesTermActionPtrOutput {
	return o.ApplyT(func(v GatewayRoutingPoliciesTerm) *GatewayRoutingPoliciesTermAction { return v.Action }).(GatewayRoutingPoliciesTermActionPtrOutput)
}

// zero or more criteria/filter can be specified to match the term, all criteria have to be met
func (o GatewayRoutingPoliciesTermOutput) Matching() GatewayRoutingPoliciesTermMatchingPtrOutput {
	return o.ApplyT(func(v GatewayRoutingPoliciesTerm) *GatewayRoutingPoliciesTermMatching { return v.Matching }).(GatewayRoutingPoliciesTermMatchingPtrOutput)
}

type GatewayRoutingPoliciesTermArrayOutput struct{ *pulumi.OutputState }

func (GatewayRoutingPoliciesTermArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GatewayRoutingPoliciesTerm)(nil)).Elem()
}

func (o GatewayRoutingPoliciesTermArrayOutput) ToGatewayRoutingPoliciesTermArrayOutput() GatewayRoutingPoliciesTermArrayOutput {
	return o
}

func (o GatewayRoutingPoliciesTermArrayOutput) ToGatewayRoutingPoliciesTermArrayOutputWithContext(ctx context.Context) GatewayRoutingPoliciesTermArrayOutput {
	return o
}

func (o GatewayRoutingPoliciesTermArrayOutput) Index(i pulumi.IntInput) GatewayRoutingPoliciesTermOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GatewayRoutingPoliciesTerm {
		return vs[0].([]GatewayRoutingPoliciesTerm)[vs[1].(int)]
	}).(GatewayRoutingPoliciesTermOutput)
}

type GatewayRoutingPoliciesTermAction struct {
	Accept         *bool    `pulumi:"accept"`
	AddCommunities []string `pulumi:"addCommunities"`
	// For SSR, hub decides how VRF routes are leaked on spoke
	AddTargetVrfs []string `pulumi:"addTargetVrfs"`
	// When used as export policy, optional
	Communities []string `pulumi:"communities"`
	// When used as export policy, optional. To exclude certain AS
	ExcludeAsPaths     []string `pulumi:"excludeAsPaths"`
	ExcludeCommunities []string `pulumi:"excludeCommunities"`
	// When used as export policy, optional
	ExportCommunities []string `pulumi:"exportCommunities"`
	// Optional, for an import policy, localPreference can be changed
	LocalPreference *string `pulumi:"localPreference"`
	// When used as export policy, optional. By default, the local AS will be prepended, to change it
	PrependAsPaths []string `pulumi:"prependAsPaths"`
}

// GatewayRoutingPoliciesTermActionInput is an input type that accepts GatewayRoutingPoliciesTermActionArgs and GatewayRoutingPoliciesTermActionOutput values.
// You can construct a concrete instance of `GatewayRoutingPoliciesTermActionInput` via:
//
//	GatewayRoutingPoliciesTermActionArgs{...}
type GatewayRoutingPoliciesTermActionInput interface {
	pulumi.Input

	ToGatewayRoutingPoliciesTermActionOutput() GatewayRoutingPoliciesTermActionOutput
	ToGatewayRoutingPoliciesTermActionOutputWithContext(context.Context) GatewayRoutingPoliciesTermActionOutput
}

type GatewayRoutingPoliciesTermActionArgs struct {
	Accept         pulumi.BoolPtrInput     `pulumi:"accept"`
	AddCommunities pulumi.StringArrayInput `pulumi:"addCommunities"`
	// For SSR, hub decides how VRF routes are leaked on spoke
	AddTargetVrfs pulumi.StringArrayInput `pulumi:"addTargetVrfs"`
	// When used as export policy, optional
	Communities pulumi.StringArrayInput `pulumi:"communities"`
	// When used as export policy, optional. To exclude certain AS
	ExcludeAsPaths     pulumi.StringArrayInput `pulumi:"excludeAsPaths"`
	ExcludeCommunities pulumi.StringArrayInput `pulumi:"excludeCommunities"`
	// When used as export policy, optional
	ExportCommunities pulumi.StringArrayInput `pulumi:"exportCommunities"`
	// Optional, for an import policy, localPreference can be changed
	LocalPreference pulumi.StringPtrInput `pulumi:"localPreference"`
	// When used as export policy, optional. By default, the local AS will be prepended, to change it
	PrependAsPaths pulumi.StringArrayInput `pulumi:"prependAsPaths"`
}

func (GatewayRoutingPoliciesTermActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRoutingPoliciesTermAction)(nil)).Elem()
}

func (i GatewayRoutingPoliciesTermActionArgs) ToGatewayRoutingPoliciesTermActionOutput() GatewayRoutingPoliciesTermActionOutput {
	return i.ToGatewayRoutingPoliciesTermActionOutputWithContext(context.Background())
}

func (i GatewayRoutingPoliciesTermActionArgs) ToGatewayRoutingPoliciesTermActionOutputWithContext(ctx context.Context) GatewayRoutingPoliciesTermActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRoutingPoliciesTermActionOutput)
}

func (i GatewayRoutingPoliciesTermActionArgs) ToGatewayRoutingPoliciesTermActionPtrOutput() GatewayRoutingPoliciesTermActionPtrOutput {
	return i.ToGatewayRoutingPoliciesTermActionPtrOutputWithContext(context.Background())
}

func (i GatewayRoutingPoliciesTermActionArgs) ToGatewayRoutingPoliciesTermActionPtrOutputWithContext(ctx context.Context) GatewayRoutingPoliciesTermActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRoutingPoliciesTermActionOutput).ToGatewayRoutingPoliciesTermActionPtrOutputWithContext(ctx)
}

// GatewayRoutingPoliciesTermActionPtrInput is an input type that accepts GatewayRoutingPoliciesTermActionArgs, GatewayRoutingPoliciesTermActionPtr and GatewayRoutingPoliciesTermActionPtrOutput values.
// You can construct a concrete instance of `GatewayRoutingPoliciesTermActionPtrInput` via:
//
//	        GatewayRoutingPoliciesTermActionArgs{...}
//
//	or:
//
//	        nil
type GatewayRoutingPoliciesTermActionPtrInput interface {
	pulumi.Input

	ToGatewayRoutingPoliciesTermActionPtrOutput() GatewayRoutingPoliciesTermActionPtrOutput
	ToGatewayRoutingPoliciesTermActionPtrOutputWithContext(context.Context) GatewayRoutingPoliciesTermActionPtrOutput
}

type gatewayRoutingPoliciesTermActionPtrType GatewayRoutingPoliciesTermActionArgs

func GatewayRoutingPoliciesTermActionPtr(v *GatewayRoutingPoliciesTermActionArgs) GatewayRoutingPoliciesTermActionPtrInput {
	return (*gatewayRoutingPoliciesTermActionPtrType)(v)
}

func (*gatewayRoutingPoliciesTermActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRoutingPoliciesTermAction)(nil)).Elem()
}

func (i *gatewayRoutingPoliciesTermActionPtrType) ToGatewayRoutingPoliciesTermActionPtrOutput() GatewayRoutingPoliciesTermActionPtrOutput {
	return i.ToGatewayRoutingPoliciesTermActionPtrOutputWithContext(context.Background())
}

func (i *gatewayRoutingPoliciesTermActionPtrType) ToGatewayRoutingPoliciesTermActionPtrOutputWithContext(ctx context.Context) GatewayRoutingPoliciesTermActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRoutingPoliciesTermActionPtrOutput)
}

type GatewayRoutingPoliciesTermActionOutput struct{ *pulumi.OutputState }

func (GatewayRoutingPoliciesTermActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRoutingPoliciesTermAction)(nil)).Elem()
}

func (o GatewayRoutingPoliciesTermActionOutput) ToGatewayRoutingPoliciesTermActionOutput() GatewayRoutingPoliciesTermActionOutput {
	return o
}

func (o GatewayRoutingPoliciesTermActionOutput) ToGatewayRoutingPoliciesTermActionOutputWithContext(ctx context.Context) GatewayRoutingPoliciesTermActionOutput {
	return o
}

func (o GatewayRoutingPoliciesTermActionOutput) ToGatewayRoutingPoliciesTermActionPtrOutput() GatewayRoutingPoliciesTermActionPtrOutput {
	return o.ToGatewayRoutingPoliciesTermActionPtrOutputWithContext(context.Background())
}

func (o GatewayRoutingPoliciesTermActionOutput) ToGatewayRoutingPoliciesTermActionPtrOutputWithContext(ctx context.Context) GatewayRoutingPoliciesTermActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayRoutingPoliciesTermAction) *GatewayRoutingPoliciesTermAction {
		return &v
	}).(GatewayRoutingPoliciesTermActionPtrOutput)
}

func (o GatewayRoutingPoliciesTermActionOutput) Accept() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GatewayRoutingPoliciesTermAction) *bool { return v.Accept }).(pulumi.BoolPtrOutput)
}

func (o GatewayRoutingPoliciesTermActionOutput) AddCommunities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GatewayRoutingPoliciesTermAction) []string { return v.AddCommunities }).(pulumi.StringArrayOutput)
}

// For SSR, hub decides how VRF routes are leaked on spoke
func (o GatewayRoutingPoliciesTermActionOutput) AddTargetVrfs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GatewayRoutingPoliciesTermAction) []string { return v.AddTargetVrfs }).(pulumi.StringArrayOutput)
}

// When used as export policy, optional
func (o GatewayRoutingPoliciesTermActionOutput) Communities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GatewayRoutingPoliciesTermAction) []string { return v.Communities }).(pulumi.StringArrayOutput)
}

// When used as export policy, optional. To exclude certain AS
func (o GatewayRoutingPoliciesTermActionOutput) ExcludeAsPaths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GatewayRoutingPoliciesTermAction) []string { return v.ExcludeAsPaths }).(pulumi.StringArrayOutput)
}

func (o GatewayRoutingPoliciesTermActionOutput) ExcludeCommunities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GatewayRoutingPoliciesTermAction) []string { return v.ExcludeCommunities }).(pulumi.StringArrayOutput)
}

// When used as export policy, optional
func (o GatewayRoutingPoliciesTermActionOutput) ExportCommunities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GatewayRoutingPoliciesTermAction) []string { return v.ExportCommunities }).(pulumi.StringArrayOutput)
}

// Optional, for an import policy, localPreference can be changed
func (o GatewayRoutingPoliciesTermActionOutput) LocalPreference() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayRoutingPoliciesTermAction) *string { return v.LocalPreference }).(pulumi.StringPtrOutput)
}

// When used as export policy, optional. By default, the local AS will be prepended, to change it
func (o GatewayRoutingPoliciesTermActionOutput) PrependAsPaths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GatewayRoutingPoliciesTermAction) []string { return v.PrependAsPaths }).(pulumi.StringArrayOutput)
}

type GatewayRoutingPoliciesTermActionPtrOutput struct{ *pulumi.OutputState }

func (GatewayRoutingPoliciesTermActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRoutingPoliciesTermAction)(nil)).Elem()
}

func (o GatewayRoutingPoliciesTermActionPtrOutput) ToGatewayRoutingPoliciesTermActionPtrOutput() GatewayRoutingPoliciesTermActionPtrOutput {
	return o
}

func (o GatewayRoutingPoliciesTermActionPtrOutput) ToGatewayRoutingPoliciesTermActionPtrOutputWithContext(ctx context.Context) GatewayRoutingPoliciesTermActionPtrOutput {
	return o
}

func (o GatewayRoutingPoliciesTermActionPtrOutput) Elem() GatewayRoutingPoliciesTermActionOutput {
	return o.ApplyT(func(v *GatewayRoutingPoliciesTermAction) GatewayRoutingPoliciesTermAction {
		if v != nil {
			return *v
		}
		var ret GatewayRoutingPoliciesTermAction
		return ret
	}).(GatewayRoutingPoliciesTermActionOutput)
}

func (o GatewayRoutingPoliciesTermActionPtrOutput) Accept() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GatewayRoutingPoliciesTermAction) *bool {
		if v == nil {
			return nil
		}
		return v.Accept
	}).(pulumi.BoolPtrOutput)
}

func (o GatewayRoutingPoliciesTermActionPtrOutput) AddCommunities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GatewayRoutingPoliciesTermAction) []string {
		if v == nil {
			return nil
		}
		return v.AddCommunities
	}).(pulumi.StringArrayOutput)
}

// For SSR, hub decides how VRF routes are leaked on spoke
func (o GatewayRoutingPoliciesTermActionPtrOutput) AddTargetVrfs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GatewayRoutingPoliciesTermAction) []string {
		if v == nil {
			return nil
		}
		return v.AddTargetVrfs
	}).(pulumi.StringArrayOutput)
}

// When used as export policy, optional
func (o GatewayRoutingPoliciesTermActionPtrOutput) Communities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GatewayRoutingPoliciesTermAction) []string {
		if v == nil {
			return nil
		}
		return v.Communities
	}).(pulumi.StringArrayOutput)
}

// When used as export policy, optional. To exclude certain AS
func (o GatewayRoutingPoliciesTermActionPtrOutput) ExcludeAsPaths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GatewayRoutingPoliciesTermAction) []string {
		if v == nil {
			return nil
		}
		return v.ExcludeAsPaths
	}).(pulumi.StringArrayOutput)
}

func (o GatewayRoutingPoliciesTermActionPtrOutput) ExcludeCommunities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GatewayRoutingPoliciesTermAction) []string {
		if v == nil {
			return nil
		}
		return v.ExcludeCommunities
	}).(pulumi.StringArrayOutput)
}

// When used as export policy, optional
func (o GatewayRoutingPoliciesTermActionPtrOutput) ExportCommunities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GatewayRoutingPoliciesTermAction) []string {
		if v == nil {
			return nil
		}
		return v.ExportCommunities
	}).(pulumi.StringArrayOutput)
}

// Optional, for an import policy, localPreference can be changed
func (o GatewayRoutingPoliciesTermActionPtrOutput) LocalPreference() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayRoutingPoliciesTermAction) *string {
		if v == nil {
			return nil
		}
		return v.LocalPreference
	}).(pulumi.StringPtrOutput)
}

// When used as export policy, optional. By default, the local AS will be prepended, to change it
func (o GatewayRoutingPoliciesTermActionPtrOutput) PrependAsPaths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GatewayRoutingPoliciesTermAction) []string {
		if v == nil {
			return nil
		}
		return v.PrependAsPaths
	}).(pulumi.StringArrayOutput)
}

type GatewayRoutingPoliciesTermMatching struct {
	// takes regular expression
	AsPaths     []string `pulumi:"asPaths"`
	Communities []string `pulumi:"communities"`
	Networks    []string `pulumi:"networks"`
	// zero or more criteria/filter can be specified to match the term, all criteria have to be met
	Prefixes []string `pulumi:"prefixes"`
	// `direct`, `bgp`, `osp`, `static`, `aggregate`...
	Protocols   []string                                       `pulumi:"protocols"`
	RouteExists *GatewayRoutingPoliciesTermMatchingRouteExists `pulumi:"routeExists"`
	// overlay-facing criteria (used for bgpConfig where via=vpn)
	VpnNeighborMacs []string                                      `pulumi:"vpnNeighborMacs"`
	VpnPathSla      *GatewayRoutingPoliciesTermMatchingVpnPathSla `pulumi:"vpnPathSla"`
	// overlay-facing criteria (used for bgpConfig where via=vpn). ordered-
	VpnPaths []string `pulumi:"vpnPaths"`
}

// GatewayRoutingPoliciesTermMatchingInput is an input type that accepts GatewayRoutingPoliciesTermMatchingArgs and GatewayRoutingPoliciesTermMatchingOutput values.
// You can construct a concrete instance of `GatewayRoutingPoliciesTermMatchingInput` via:
//
//	GatewayRoutingPoliciesTermMatchingArgs{...}
type GatewayRoutingPoliciesTermMatchingInput interface {
	pulumi.Input

	ToGatewayRoutingPoliciesTermMatchingOutput() GatewayRoutingPoliciesTermMatchingOutput
	ToGatewayRoutingPoliciesTermMatchingOutputWithContext(context.Context) GatewayRoutingPoliciesTermMatchingOutput
}

type GatewayRoutingPoliciesTermMatchingArgs struct {
	// takes regular expression
	AsPaths     pulumi.StringArrayInput `pulumi:"asPaths"`
	Communities pulumi.StringArrayInput `pulumi:"communities"`
	Networks    pulumi.StringArrayInput `pulumi:"networks"`
	// zero or more criteria/filter can be specified to match the term, all criteria have to be met
	Prefixes pulumi.StringArrayInput `pulumi:"prefixes"`
	// `direct`, `bgp`, `osp`, `static`, `aggregate`...
	Protocols   pulumi.StringArrayInput                               `pulumi:"protocols"`
	RouteExists GatewayRoutingPoliciesTermMatchingRouteExistsPtrInput `pulumi:"routeExists"`
	// overlay-facing criteria (used for bgpConfig where via=vpn)
	VpnNeighborMacs pulumi.StringArrayInput                              `pulumi:"vpnNeighborMacs"`
	VpnPathSla      GatewayRoutingPoliciesTermMatchingVpnPathSlaPtrInput `pulumi:"vpnPathSla"`
	// overlay-facing criteria (used for bgpConfig where via=vpn). ordered-
	VpnPaths pulumi.StringArrayInput `pulumi:"vpnPaths"`
}

func (GatewayRoutingPoliciesTermMatchingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRoutingPoliciesTermMatching)(nil)).Elem()
}

func (i GatewayRoutingPoliciesTermMatchingArgs) ToGatewayRoutingPoliciesTermMatchingOutput() GatewayRoutingPoliciesTermMatchingOutput {
	return i.ToGatewayRoutingPoliciesTermMatchingOutputWithContext(context.Background())
}

func (i GatewayRoutingPoliciesTermMatchingArgs) ToGatewayRoutingPoliciesTermMatchingOutputWithContext(ctx context.Context) GatewayRoutingPoliciesTermMatchingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRoutingPoliciesTermMatchingOutput)
}

func (i GatewayRoutingPoliciesTermMatchingArgs) ToGatewayRoutingPoliciesTermMatchingPtrOutput() GatewayRoutingPoliciesTermMatchingPtrOutput {
	return i.ToGatewayRoutingPoliciesTermMatchingPtrOutputWithContext(context.Background())
}

func (i GatewayRoutingPoliciesTermMatchingArgs) ToGatewayRoutingPoliciesTermMatchingPtrOutputWithContext(ctx context.Context) GatewayRoutingPoliciesTermMatchingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRoutingPoliciesTermMatchingOutput).ToGatewayRoutingPoliciesTermMatchingPtrOutputWithContext(ctx)
}

// GatewayRoutingPoliciesTermMatchingPtrInput is an input type that accepts GatewayRoutingPoliciesTermMatchingArgs, GatewayRoutingPoliciesTermMatchingPtr and GatewayRoutingPoliciesTermMatchingPtrOutput values.
// You can construct a concrete instance of `GatewayRoutingPoliciesTermMatchingPtrInput` via:
//
//	        GatewayRoutingPoliciesTermMatchingArgs{...}
//
//	or:
//
//	        nil
type GatewayRoutingPoliciesTermMatchingPtrInput interface {
	pulumi.Input

	ToGatewayRoutingPoliciesTermMatchingPtrOutput() GatewayRoutingPoliciesTermMatchingPtrOutput
	ToGatewayRoutingPoliciesTermMatchingPtrOutputWithContext(context.Context) GatewayRoutingPoliciesTermMatchingPtrOutput
}

type gatewayRoutingPoliciesTermMatchingPtrType GatewayRoutingPoliciesTermMatchingArgs

func GatewayRoutingPoliciesTermMatchingPtr(v *GatewayRoutingPoliciesTermMatchingArgs) GatewayRoutingPoliciesTermMatchingPtrInput {
	return (*gatewayRoutingPoliciesTermMatchingPtrType)(v)
}

func (*gatewayRoutingPoliciesTermMatchingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRoutingPoliciesTermMatching)(nil)).Elem()
}

func (i *gatewayRoutingPoliciesTermMatchingPtrType) ToGatewayRoutingPoliciesTermMatchingPtrOutput() GatewayRoutingPoliciesTermMatchingPtrOutput {
	return i.ToGatewayRoutingPoliciesTermMatchingPtrOutputWithContext(context.Background())
}

func (i *gatewayRoutingPoliciesTermMatchingPtrType) ToGatewayRoutingPoliciesTermMatchingPtrOutputWithContext(ctx context.Context) GatewayRoutingPoliciesTermMatchingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRoutingPoliciesTermMatchingPtrOutput)
}

type GatewayRoutingPoliciesTermMatchingOutput struct{ *pulumi.OutputState }

func (GatewayRoutingPoliciesTermMatchingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRoutingPoliciesTermMatching)(nil)).Elem()
}

func (o GatewayRoutingPoliciesTermMatchingOutput) ToGatewayRoutingPoliciesTermMatchingOutput() GatewayRoutingPoliciesTermMatchingOutput {
	return o
}

func (o GatewayRoutingPoliciesTermMatchingOutput) ToGatewayRoutingPoliciesTermMatchingOutputWithContext(ctx context.Context) GatewayRoutingPoliciesTermMatchingOutput {
	return o
}

func (o GatewayRoutingPoliciesTermMatchingOutput) ToGatewayRoutingPoliciesTermMatchingPtrOutput() GatewayRoutingPoliciesTermMatchingPtrOutput {
	return o.ToGatewayRoutingPoliciesTermMatchingPtrOutputWithContext(context.Background())
}

func (o GatewayRoutingPoliciesTermMatchingOutput) ToGatewayRoutingPoliciesTermMatchingPtrOutputWithContext(ctx context.Context) GatewayRoutingPoliciesTermMatchingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayRoutingPoliciesTermMatching) *GatewayRoutingPoliciesTermMatching {
		return &v
	}).(GatewayRoutingPoliciesTermMatchingPtrOutput)
}

// takes regular expression
func (o GatewayRoutingPoliciesTermMatchingOutput) AsPaths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GatewayRoutingPoliciesTermMatching) []string { return v.AsPaths }).(pulumi.StringArrayOutput)
}

func (o GatewayRoutingPoliciesTermMatchingOutput) Communities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GatewayRoutingPoliciesTermMatching) []string { return v.Communities }).(pulumi.StringArrayOutput)
}

func (o GatewayRoutingPoliciesTermMatchingOutput) Networks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GatewayRoutingPoliciesTermMatching) []string { return v.Networks }).(pulumi.StringArrayOutput)
}

// zero or more criteria/filter can be specified to match the term, all criteria have to be met
func (o GatewayRoutingPoliciesTermMatchingOutput) Prefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GatewayRoutingPoliciesTermMatching) []string { return v.Prefixes }).(pulumi.StringArrayOutput)
}

// `direct`, `bgp`, `osp`, `static`, `aggregate`...
func (o GatewayRoutingPoliciesTermMatchingOutput) Protocols() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GatewayRoutingPoliciesTermMatching) []string { return v.Protocols }).(pulumi.StringArrayOutput)
}

func (o GatewayRoutingPoliciesTermMatchingOutput) RouteExists() GatewayRoutingPoliciesTermMatchingRouteExistsPtrOutput {
	return o.ApplyT(func(v GatewayRoutingPoliciesTermMatching) *GatewayRoutingPoliciesTermMatchingRouteExists {
		return v.RouteExists
	}).(GatewayRoutingPoliciesTermMatchingRouteExistsPtrOutput)
}

// overlay-facing criteria (used for bgpConfig where via=vpn)
func (o GatewayRoutingPoliciesTermMatchingOutput) VpnNeighborMacs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GatewayRoutingPoliciesTermMatching) []string { return v.VpnNeighborMacs }).(pulumi.StringArrayOutput)
}

func (o GatewayRoutingPoliciesTermMatchingOutput) VpnPathSla() GatewayRoutingPoliciesTermMatchingVpnPathSlaPtrOutput {
	return o.ApplyT(func(v GatewayRoutingPoliciesTermMatching) *GatewayRoutingPoliciesTermMatchingVpnPathSla {
		return v.VpnPathSla
	}).(GatewayRoutingPoliciesTermMatchingVpnPathSlaPtrOutput)
}

// overlay-facing criteria (used for bgpConfig where via=vpn). ordered-
func (o GatewayRoutingPoliciesTermMatchingOutput) VpnPaths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GatewayRoutingPoliciesTermMatching) []string { return v.VpnPaths }).(pulumi.StringArrayOutput)
}

type GatewayRoutingPoliciesTermMatchingPtrOutput struct{ *pulumi.OutputState }

func (GatewayRoutingPoliciesTermMatchingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRoutingPoliciesTermMatching)(nil)).Elem()
}

func (o GatewayRoutingPoliciesTermMatchingPtrOutput) ToGatewayRoutingPoliciesTermMatchingPtrOutput() GatewayRoutingPoliciesTermMatchingPtrOutput {
	return o
}

func (o GatewayRoutingPoliciesTermMatchingPtrOutput) ToGatewayRoutingPoliciesTermMatchingPtrOutputWithContext(ctx context.Context) GatewayRoutingPoliciesTermMatchingPtrOutput {
	return o
}

func (o GatewayRoutingPoliciesTermMatchingPtrOutput) Elem() GatewayRoutingPoliciesTermMatchingOutput {
	return o.ApplyT(func(v *GatewayRoutingPoliciesTermMatching) GatewayRoutingPoliciesTermMatching {
		if v != nil {
			return *v
		}
		var ret GatewayRoutingPoliciesTermMatching
		return ret
	}).(GatewayRoutingPoliciesTermMatchingOutput)
}

// takes regular expression
func (o GatewayRoutingPoliciesTermMatchingPtrOutput) AsPaths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GatewayRoutingPoliciesTermMatching) []string {
		if v == nil {
			return nil
		}
		return v.AsPaths
	}).(pulumi.StringArrayOutput)
}

func (o GatewayRoutingPoliciesTermMatchingPtrOutput) Communities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GatewayRoutingPoliciesTermMatching) []string {
		if v == nil {
			return nil
		}
		return v.Communities
	}).(pulumi.StringArrayOutput)
}

func (o GatewayRoutingPoliciesTermMatchingPtrOutput) Networks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GatewayRoutingPoliciesTermMatching) []string {
		if v == nil {
			return nil
		}
		return v.Networks
	}).(pulumi.StringArrayOutput)
}

// zero or more criteria/filter can be specified to match the term, all criteria have to be met
func (o GatewayRoutingPoliciesTermMatchingPtrOutput) Prefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GatewayRoutingPoliciesTermMatching) []string {
		if v == nil {
			return nil
		}
		return v.Prefixes
	}).(pulumi.StringArrayOutput)
}

// `direct`, `bgp`, `osp`, `static`, `aggregate`...
func (o GatewayRoutingPoliciesTermMatchingPtrOutput) Protocols() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GatewayRoutingPoliciesTermMatching) []string {
		if v == nil {
			return nil
		}
		return v.Protocols
	}).(pulumi.StringArrayOutput)
}

func (o GatewayRoutingPoliciesTermMatchingPtrOutput) RouteExists() GatewayRoutingPoliciesTermMatchingRouteExistsPtrOutput {
	return o.ApplyT(func(v *GatewayRoutingPoliciesTermMatching) *GatewayRoutingPoliciesTermMatchingRouteExists {
		if v == nil {
			return nil
		}
		return v.RouteExists
	}).(GatewayRoutingPoliciesTermMatchingRouteExistsPtrOutput)
}

// overlay-facing criteria (used for bgpConfig where via=vpn)
func (o GatewayRoutingPoliciesTermMatchingPtrOutput) VpnNeighborMacs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GatewayRoutingPoliciesTermMatching) []string {
		if v == nil {
			return nil
		}
		return v.VpnNeighborMacs
	}).(pulumi.StringArrayOutput)
}

func (o GatewayRoutingPoliciesTermMatchingPtrOutput) VpnPathSla() GatewayRoutingPoliciesTermMatchingVpnPathSlaPtrOutput {
	return o.ApplyT(func(v *GatewayRoutingPoliciesTermMatching) *GatewayRoutingPoliciesTermMatchingVpnPathSla {
		if v == nil {
			return nil
		}
		return v.VpnPathSla
	}).(GatewayRoutingPoliciesTermMatchingVpnPathSlaPtrOutput)
}

// overlay-facing criteria (used for bgpConfig where via=vpn). ordered-
func (o GatewayRoutingPoliciesTermMatchingPtrOutput) VpnPaths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GatewayRoutingPoliciesTermMatching) []string {
		if v == nil {
			return nil
		}
		return v.VpnPaths
	}).(pulumi.StringArrayOutput)
}

type GatewayRoutingPoliciesTermMatchingRouteExists struct {
	Route *string `pulumi:"route"`
	// Name of the vrf instance, it can also be the name of the VPN or wan if they
	VrfName *string `pulumi:"vrfName"`
}

// GatewayRoutingPoliciesTermMatchingRouteExistsInput is an input type that accepts GatewayRoutingPoliciesTermMatchingRouteExistsArgs and GatewayRoutingPoliciesTermMatchingRouteExistsOutput values.
// You can construct a concrete instance of `GatewayRoutingPoliciesTermMatchingRouteExistsInput` via:
//
//	GatewayRoutingPoliciesTermMatchingRouteExistsArgs{...}
type GatewayRoutingPoliciesTermMatchingRouteExistsInput interface {
	pulumi.Input

	ToGatewayRoutingPoliciesTermMatchingRouteExistsOutput() GatewayRoutingPoliciesTermMatchingRouteExistsOutput
	ToGatewayRoutingPoliciesTermMatchingRouteExistsOutputWithContext(context.Context) GatewayRoutingPoliciesTermMatchingRouteExistsOutput
}

type GatewayRoutingPoliciesTermMatchingRouteExistsArgs struct {
	Route pulumi.StringPtrInput `pulumi:"route"`
	// Name of the vrf instance, it can also be the name of the VPN or wan if they
	VrfName pulumi.StringPtrInput `pulumi:"vrfName"`
}

func (GatewayRoutingPoliciesTermMatchingRouteExistsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRoutingPoliciesTermMatchingRouteExists)(nil)).Elem()
}

func (i GatewayRoutingPoliciesTermMatchingRouteExistsArgs) ToGatewayRoutingPoliciesTermMatchingRouteExistsOutput() GatewayRoutingPoliciesTermMatchingRouteExistsOutput {
	return i.ToGatewayRoutingPoliciesTermMatchingRouteExistsOutputWithContext(context.Background())
}

func (i GatewayRoutingPoliciesTermMatchingRouteExistsArgs) ToGatewayRoutingPoliciesTermMatchingRouteExistsOutputWithContext(ctx context.Context) GatewayRoutingPoliciesTermMatchingRouteExistsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRoutingPoliciesTermMatchingRouteExistsOutput)
}

func (i GatewayRoutingPoliciesTermMatchingRouteExistsArgs) ToGatewayRoutingPoliciesTermMatchingRouteExistsPtrOutput() GatewayRoutingPoliciesTermMatchingRouteExistsPtrOutput {
	return i.ToGatewayRoutingPoliciesTermMatchingRouteExistsPtrOutputWithContext(context.Background())
}

func (i GatewayRoutingPoliciesTermMatchingRouteExistsArgs) ToGatewayRoutingPoliciesTermMatchingRouteExistsPtrOutputWithContext(ctx context.Context) GatewayRoutingPoliciesTermMatchingRouteExistsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRoutingPoliciesTermMatchingRouteExistsOutput).ToGatewayRoutingPoliciesTermMatchingRouteExistsPtrOutputWithContext(ctx)
}

// GatewayRoutingPoliciesTermMatchingRouteExistsPtrInput is an input type that accepts GatewayRoutingPoliciesTermMatchingRouteExistsArgs, GatewayRoutingPoliciesTermMatchingRouteExistsPtr and GatewayRoutingPoliciesTermMatchingRouteExistsPtrOutput values.
// You can construct a concrete instance of `GatewayRoutingPoliciesTermMatchingRouteExistsPtrInput` via:
//
//	        GatewayRoutingPoliciesTermMatchingRouteExistsArgs{...}
//
//	or:
//
//	        nil
type GatewayRoutingPoliciesTermMatchingRouteExistsPtrInput interface {
	pulumi.Input

	ToGatewayRoutingPoliciesTermMatchingRouteExistsPtrOutput() GatewayRoutingPoliciesTermMatchingRouteExistsPtrOutput
	ToGatewayRoutingPoliciesTermMatchingRouteExistsPtrOutputWithContext(context.Context) GatewayRoutingPoliciesTermMatchingRouteExistsPtrOutput
}

type gatewayRoutingPoliciesTermMatchingRouteExistsPtrType GatewayRoutingPoliciesTermMatchingRouteExistsArgs

func GatewayRoutingPoliciesTermMatchingRouteExistsPtr(v *GatewayRoutingPoliciesTermMatchingRouteExistsArgs) GatewayRoutingPoliciesTermMatchingRouteExistsPtrInput {
	return (*gatewayRoutingPoliciesTermMatchingRouteExistsPtrType)(v)
}

func (*gatewayRoutingPoliciesTermMatchingRouteExistsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRoutingPoliciesTermMatchingRouteExists)(nil)).Elem()
}

func (i *gatewayRoutingPoliciesTermMatchingRouteExistsPtrType) ToGatewayRoutingPoliciesTermMatchingRouteExistsPtrOutput() GatewayRoutingPoliciesTermMatchingRouteExistsPtrOutput {
	return i.ToGatewayRoutingPoliciesTermMatchingRouteExistsPtrOutputWithContext(context.Background())
}

func (i *gatewayRoutingPoliciesTermMatchingRouteExistsPtrType) ToGatewayRoutingPoliciesTermMatchingRouteExistsPtrOutputWithContext(ctx context.Context) GatewayRoutingPoliciesTermMatchingRouteExistsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRoutingPoliciesTermMatchingRouteExistsPtrOutput)
}

type GatewayRoutingPoliciesTermMatchingRouteExistsOutput struct{ *pulumi.OutputState }

func (GatewayRoutingPoliciesTermMatchingRouteExistsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRoutingPoliciesTermMatchingRouteExists)(nil)).Elem()
}

func (o GatewayRoutingPoliciesTermMatchingRouteExistsOutput) ToGatewayRoutingPoliciesTermMatchingRouteExistsOutput() GatewayRoutingPoliciesTermMatchingRouteExistsOutput {
	return o
}

func (o GatewayRoutingPoliciesTermMatchingRouteExistsOutput) ToGatewayRoutingPoliciesTermMatchingRouteExistsOutputWithContext(ctx context.Context) GatewayRoutingPoliciesTermMatchingRouteExistsOutput {
	return o
}

func (o GatewayRoutingPoliciesTermMatchingRouteExistsOutput) ToGatewayRoutingPoliciesTermMatchingRouteExistsPtrOutput() GatewayRoutingPoliciesTermMatchingRouteExistsPtrOutput {
	return o.ToGatewayRoutingPoliciesTermMatchingRouteExistsPtrOutputWithContext(context.Background())
}

func (o GatewayRoutingPoliciesTermMatchingRouteExistsOutput) ToGatewayRoutingPoliciesTermMatchingRouteExistsPtrOutputWithContext(ctx context.Context) GatewayRoutingPoliciesTermMatchingRouteExistsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayRoutingPoliciesTermMatchingRouteExists) *GatewayRoutingPoliciesTermMatchingRouteExists {
		return &v
	}).(GatewayRoutingPoliciesTermMatchingRouteExistsPtrOutput)
}

func (o GatewayRoutingPoliciesTermMatchingRouteExistsOutput) Route() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayRoutingPoliciesTermMatchingRouteExists) *string { return v.Route }).(pulumi.StringPtrOutput)
}

// Name of the vrf instance, it can also be the name of the VPN or wan if they
func (o GatewayRoutingPoliciesTermMatchingRouteExistsOutput) VrfName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayRoutingPoliciesTermMatchingRouteExists) *string { return v.VrfName }).(pulumi.StringPtrOutput)
}

type GatewayRoutingPoliciesTermMatchingRouteExistsPtrOutput struct{ *pulumi.OutputState }

func (GatewayRoutingPoliciesTermMatchingRouteExistsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRoutingPoliciesTermMatchingRouteExists)(nil)).Elem()
}

func (o GatewayRoutingPoliciesTermMatchingRouteExistsPtrOutput) ToGatewayRoutingPoliciesTermMatchingRouteExistsPtrOutput() GatewayRoutingPoliciesTermMatchingRouteExistsPtrOutput {
	return o
}

func (o GatewayRoutingPoliciesTermMatchingRouteExistsPtrOutput) ToGatewayRoutingPoliciesTermMatchingRouteExistsPtrOutputWithContext(ctx context.Context) GatewayRoutingPoliciesTermMatchingRouteExistsPtrOutput {
	return o
}

func (o GatewayRoutingPoliciesTermMatchingRouteExistsPtrOutput) Elem() GatewayRoutingPoliciesTermMatchingRouteExistsOutput {
	return o.ApplyT(func(v *GatewayRoutingPoliciesTermMatchingRouteExists) GatewayRoutingPoliciesTermMatchingRouteExists {
		if v != nil {
			return *v
		}
		var ret GatewayRoutingPoliciesTermMatchingRouteExists
		return ret
	}).(GatewayRoutingPoliciesTermMatchingRouteExistsOutput)
}

func (o GatewayRoutingPoliciesTermMatchingRouteExistsPtrOutput) Route() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayRoutingPoliciesTermMatchingRouteExists) *string {
		if v == nil {
			return nil
		}
		return v.Route
	}).(pulumi.StringPtrOutput)
}

// Name of the vrf instance, it can also be the name of the VPN or wan if they
func (o GatewayRoutingPoliciesTermMatchingRouteExistsPtrOutput) VrfName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayRoutingPoliciesTermMatchingRouteExists) *string {
		if v == nil {
			return nil
		}
		return v.VrfName
	}).(pulumi.StringPtrOutput)
}

type GatewayRoutingPoliciesTermMatchingVpnPathSla struct {
	MaxJitter  *int `pulumi:"maxJitter"`
	MaxLatency *int `pulumi:"maxLatency"`
	MaxLoss    *int `pulumi:"maxLoss"`
}

// GatewayRoutingPoliciesTermMatchingVpnPathSlaInput is an input type that accepts GatewayRoutingPoliciesTermMatchingVpnPathSlaArgs and GatewayRoutingPoliciesTermMatchingVpnPathSlaOutput values.
// You can construct a concrete instance of `GatewayRoutingPoliciesTermMatchingVpnPathSlaInput` via:
//
//	GatewayRoutingPoliciesTermMatchingVpnPathSlaArgs{...}
type GatewayRoutingPoliciesTermMatchingVpnPathSlaInput interface {
	pulumi.Input

	ToGatewayRoutingPoliciesTermMatchingVpnPathSlaOutput() GatewayRoutingPoliciesTermMatchingVpnPathSlaOutput
	ToGatewayRoutingPoliciesTermMatchingVpnPathSlaOutputWithContext(context.Context) GatewayRoutingPoliciesTermMatchingVpnPathSlaOutput
}

type GatewayRoutingPoliciesTermMatchingVpnPathSlaArgs struct {
	MaxJitter  pulumi.IntPtrInput `pulumi:"maxJitter"`
	MaxLatency pulumi.IntPtrInput `pulumi:"maxLatency"`
	MaxLoss    pulumi.IntPtrInput `pulumi:"maxLoss"`
}

func (GatewayRoutingPoliciesTermMatchingVpnPathSlaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRoutingPoliciesTermMatchingVpnPathSla)(nil)).Elem()
}

func (i GatewayRoutingPoliciesTermMatchingVpnPathSlaArgs) ToGatewayRoutingPoliciesTermMatchingVpnPathSlaOutput() GatewayRoutingPoliciesTermMatchingVpnPathSlaOutput {
	return i.ToGatewayRoutingPoliciesTermMatchingVpnPathSlaOutputWithContext(context.Background())
}

func (i GatewayRoutingPoliciesTermMatchingVpnPathSlaArgs) ToGatewayRoutingPoliciesTermMatchingVpnPathSlaOutputWithContext(ctx context.Context) GatewayRoutingPoliciesTermMatchingVpnPathSlaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRoutingPoliciesTermMatchingVpnPathSlaOutput)
}

func (i GatewayRoutingPoliciesTermMatchingVpnPathSlaArgs) ToGatewayRoutingPoliciesTermMatchingVpnPathSlaPtrOutput() GatewayRoutingPoliciesTermMatchingVpnPathSlaPtrOutput {
	return i.ToGatewayRoutingPoliciesTermMatchingVpnPathSlaPtrOutputWithContext(context.Background())
}

func (i GatewayRoutingPoliciesTermMatchingVpnPathSlaArgs) ToGatewayRoutingPoliciesTermMatchingVpnPathSlaPtrOutputWithContext(ctx context.Context) GatewayRoutingPoliciesTermMatchingVpnPathSlaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRoutingPoliciesTermMatchingVpnPathSlaOutput).ToGatewayRoutingPoliciesTermMatchingVpnPathSlaPtrOutputWithContext(ctx)
}

// GatewayRoutingPoliciesTermMatchingVpnPathSlaPtrInput is an input type that accepts GatewayRoutingPoliciesTermMatchingVpnPathSlaArgs, GatewayRoutingPoliciesTermMatchingVpnPathSlaPtr and GatewayRoutingPoliciesTermMatchingVpnPathSlaPtrOutput values.
// You can construct a concrete instance of `GatewayRoutingPoliciesTermMatchingVpnPathSlaPtrInput` via:
//
//	        GatewayRoutingPoliciesTermMatchingVpnPathSlaArgs{...}
//
//	or:
//
//	        nil
type GatewayRoutingPoliciesTermMatchingVpnPathSlaPtrInput interface {
	pulumi.Input

	ToGatewayRoutingPoliciesTermMatchingVpnPathSlaPtrOutput() GatewayRoutingPoliciesTermMatchingVpnPathSlaPtrOutput
	ToGatewayRoutingPoliciesTermMatchingVpnPathSlaPtrOutputWithContext(context.Context) GatewayRoutingPoliciesTermMatchingVpnPathSlaPtrOutput
}

type gatewayRoutingPoliciesTermMatchingVpnPathSlaPtrType GatewayRoutingPoliciesTermMatchingVpnPathSlaArgs

func GatewayRoutingPoliciesTermMatchingVpnPathSlaPtr(v *GatewayRoutingPoliciesTermMatchingVpnPathSlaArgs) GatewayRoutingPoliciesTermMatchingVpnPathSlaPtrInput {
	return (*gatewayRoutingPoliciesTermMatchingVpnPathSlaPtrType)(v)
}

func (*gatewayRoutingPoliciesTermMatchingVpnPathSlaPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRoutingPoliciesTermMatchingVpnPathSla)(nil)).Elem()
}

func (i *gatewayRoutingPoliciesTermMatchingVpnPathSlaPtrType) ToGatewayRoutingPoliciesTermMatchingVpnPathSlaPtrOutput() GatewayRoutingPoliciesTermMatchingVpnPathSlaPtrOutput {
	return i.ToGatewayRoutingPoliciesTermMatchingVpnPathSlaPtrOutputWithContext(context.Background())
}

func (i *gatewayRoutingPoliciesTermMatchingVpnPathSlaPtrType) ToGatewayRoutingPoliciesTermMatchingVpnPathSlaPtrOutputWithContext(ctx context.Context) GatewayRoutingPoliciesTermMatchingVpnPathSlaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRoutingPoliciesTermMatchingVpnPathSlaPtrOutput)
}

type GatewayRoutingPoliciesTermMatchingVpnPathSlaOutput struct{ *pulumi.OutputState }

func (GatewayRoutingPoliciesTermMatchingVpnPathSlaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRoutingPoliciesTermMatchingVpnPathSla)(nil)).Elem()
}

func (o GatewayRoutingPoliciesTermMatchingVpnPathSlaOutput) ToGatewayRoutingPoliciesTermMatchingVpnPathSlaOutput() GatewayRoutingPoliciesTermMatchingVpnPathSlaOutput {
	return o
}

func (o GatewayRoutingPoliciesTermMatchingVpnPathSlaOutput) ToGatewayRoutingPoliciesTermMatchingVpnPathSlaOutputWithContext(ctx context.Context) GatewayRoutingPoliciesTermMatchingVpnPathSlaOutput {
	return o
}

func (o GatewayRoutingPoliciesTermMatchingVpnPathSlaOutput) ToGatewayRoutingPoliciesTermMatchingVpnPathSlaPtrOutput() GatewayRoutingPoliciesTermMatchingVpnPathSlaPtrOutput {
	return o.ToGatewayRoutingPoliciesTermMatchingVpnPathSlaPtrOutputWithContext(context.Background())
}

func (o GatewayRoutingPoliciesTermMatchingVpnPathSlaOutput) ToGatewayRoutingPoliciesTermMatchingVpnPathSlaPtrOutputWithContext(ctx context.Context) GatewayRoutingPoliciesTermMatchingVpnPathSlaPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayRoutingPoliciesTermMatchingVpnPathSla) *GatewayRoutingPoliciesTermMatchingVpnPathSla {
		return &v
	}).(GatewayRoutingPoliciesTermMatchingVpnPathSlaPtrOutput)
}

func (o GatewayRoutingPoliciesTermMatchingVpnPathSlaOutput) MaxJitter() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GatewayRoutingPoliciesTermMatchingVpnPathSla) *int { return v.MaxJitter }).(pulumi.IntPtrOutput)
}

func (o GatewayRoutingPoliciesTermMatchingVpnPathSlaOutput) MaxLatency() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GatewayRoutingPoliciesTermMatchingVpnPathSla) *int { return v.MaxLatency }).(pulumi.IntPtrOutput)
}

func (o GatewayRoutingPoliciesTermMatchingVpnPathSlaOutput) MaxLoss() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GatewayRoutingPoliciesTermMatchingVpnPathSla) *int { return v.MaxLoss }).(pulumi.IntPtrOutput)
}

type GatewayRoutingPoliciesTermMatchingVpnPathSlaPtrOutput struct{ *pulumi.OutputState }

func (GatewayRoutingPoliciesTermMatchingVpnPathSlaPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRoutingPoliciesTermMatchingVpnPathSla)(nil)).Elem()
}

func (o GatewayRoutingPoliciesTermMatchingVpnPathSlaPtrOutput) ToGatewayRoutingPoliciesTermMatchingVpnPathSlaPtrOutput() GatewayRoutingPoliciesTermMatchingVpnPathSlaPtrOutput {
	return o
}

func (o GatewayRoutingPoliciesTermMatchingVpnPathSlaPtrOutput) ToGatewayRoutingPoliciesTermMatchingVpnPathSlaPtrOutputWithContext(ctx context.Context) GatewayRoutingPoliciesTermMatchingVpnPathSlaPtrOutput {
	return o
}

func (o GatewayRoutingPoliciesTermMatchingVpnPathSlaPtrOutput) Elem() GatewayRoutingPoliciesTermMatchingVpnPathSlaOutput {
	return o.ApplyT(func(v *GatewayRoutingPoliciesTermMatchingVpnPathSla) GatewayRoutingPoliciesTermMatchingVpnPathSla {
		if v != nil {
			return *v
		}
		var ret GatewayRoutingPoliciesTermMatchingVpnPathSla
		return ret
	}).(GatewayRoutingPoliciesTermMatchingVpnPathSlaOutput)
}

func (o GatewayRoutingPoliciesTermMatchingVpnPathSlaPtrOutput) MaxJitter() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GatewayRoutingPoliciesTermMatchingVpnPathSla) *int {
		if v == nil {
			return nil
		}
		return v.MaxJitter
	}).(pulumi.IntPtrOutput)
}

func (o GatewayRoutingPoliciesTermMatchingVpnPathSlaPtrOutput) MaxLatency() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GatewayRoutingPoliciesTermMatchingVpnPathSla) *int {
		if v == nil {
			return nil
		}
		return v.MaxLatency
	}).(pulumi.IntPtrOutput)
}

func (o GatewayRoutingPoliciesTermMatchingVpnPathSlaPtrOutput) MaxLoss() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GatewayRoutingPoliciesTermMatchingVpnPathSla) *int {
		if v == nil {
			return nil
		}
		return v.MaxLoss
	}).(pulumi.IntPtrOutput)
}

type GatewayServicePolicy struct {
	// Required when `servicepolicyId` is not defined, optional otherwise (override the servicepolicy action). enum: `allow`, `deny`
	Action *string `pulumi:"action"`
	// For SRX-only
	Antivirus *GatewayServicePolicyAntivirus `pulumi:"antivirus"`
	// For SRX Only
	Appqoe *GatewayServicePolicyAppqoe `pulumi:"appqoe"`
	Ewfs   []GatewayServicePolicyEwf   `pulumi:"ewfs"`
	Idp    *GatewayServicePolicyIdp    `pulumi:"idp"`
	// access within the same VRF
	LocalRouting *bool `pulumi:"localRouting"`
	// Required when `servicepolicyId` is not defined, optional otherwise (override the servicepolicy name)
	Name *string `pulumi:"name"`
	// By default, we derive all paths available and use them. Optionally, you can customize by using `pathPreference`
	PathPreference *string `pulumi:"pathPreference"`
	// Used to link servicepolicy defined at org level and overwrite some attributes
	ServicepolicyId *string `pulumi:"servicepolicyId"`
	// Required when `servicepolicyId` is not defined. List of Applications / Destinations
	Services []string `pulumi:"services"`
	// For SRX-only
	SslProxy *GatewayServicePolicySslProxy `pulumi:"sslProxy"`
	// Required when `servicepolicyId` is not defined. List of Networks / Users
	Tenants []string `pulumi:"tenants"`
}

// GatewayServicePolicyInput is an input type that accepts GatewayServicePolicyArgs and GatewayServicePolicyOutput values.
// You can construct a concrete instance of `GatewayServicePolicyInput` via:
//
//	GatewayServicePolicyArgs{...}
type GatewayServicePolicyInput interface {
	pulumi.Input

	ToGatewayServicePolicyOutput() GatewayServicePolicyOutput
	ToGatewayServicePolicyOutputWithContext(context.Context) GatewayServicePolicyOutput
}

type GatewayServicePolicyArgs struct {
	// Required when `servicepolicyId` is not defined, optional otherwise (override the servicepolicy action). enum: `allow`, `deny`
	Action pulumi.StringPtrInput `pulumi:"action"`
	// For SRX-only
	Antivirus GatewayServicePolicyAntivirusPtrInput `pulumi:"antivirus"`
	// For SRX Only
	Appqoe GatewayServicePolicyAppqoePtrInput `pulumi:"appqoe"`
	Ewfs   GatewayServicePolicyEwfArrayInput  `pulumi:"ewfs"`
	Idp    GatewayServicePolicyIdpPtrInput    `pulumi:"idp"`
	// access within the same VRF
	LocalRouting pulumi.BoolPtrInput `pulumi:"localRouting"`
	// Required when `servicepolicyId` is not defined, optional otherwise (override the servicepolicy name)
	Name pulumi.StringPtrInput `pulumi:"name"`
	// By default, we derive all paths available and use them. Optionally, you can customize by using `pathPreference`
	PathPreference pulumi.StringPtrInput `pulumi:"pathPreference"`
	// Used to link servicepolicy defined at org level and overwrite some attributes
	ServicepolicyId pulumi.StringPtrInput `pulumi:"servicepolicyId"`
	// Required when `servicepolicyId` is not defined. List of Applications / Destinations
	Services pulumi.StringArrayInput `pulumi:"services"`
	// For SRX-only
	SslProxy GatewayServicePolicySslProxyPtrInput `pulumi:"sslProxy"`
	// Required when `servicepolicyId` is not defined. List of Networks / Users
	Tenants pulumi.StringArrayInput `pulumi:"tenants"`
}

func (GatewayServicePolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayServicePolicy)(nil)).Elem()
}

func (i GatewayServicePolicyArgs) ToGatewayServicePolicyOutput() GatewayServicePolicyOutput {
	return i.ToGatewayServicePolicyOutputWithContext(context.Background())
}

func (i GatewayServicePolicyArgs) ToGatewayServicePolicyOutputWithContext(ctx context.Context) GatewayServicePolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayServicePolicyOutput)
}

// GatewayServicePolicyArrayInput is an input type that accepts GatewayServicePolicyArray and GatewayServicePolicyArrayOutput values.
// You can construct a concrete instance of `GatewayServicePolicyArrayInput` via:
//
//	GatewayServicePolicyArray{ GatewayServicePolicyArgs{...} }
type GatewayServicePolicyArrayInput interface {
	pulumi.Input

	ToGatewayServicePolicyArrayOutput() GatewayServicePolicyArrayOutput
	ToGatewayServicePolicyArrayOutputWithContext(context.Context) GatewayServicePolicyArrayOutput
}

type GatewayServicePolicyArray []GatewayServicePolicyInput

func (GatewayServicePolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GatewayServicePolicy)(nil)).Elem()
}

func (i GatewayServicePolicyArray) ToGatewayServicePolicyArrayOutput() GatewayServicePolicyArrayOutput {
	return i.ToGatewayServicePolicyArrayOutputWithContext(context.Background())
}

func (i GatewayServicePolicyArray) ToGatewayServicePolicyArrayOutputWithContext(ctx context.Context) GatewayServicePolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayServicePolicyArrayOutput)
}

type GatewayServicePolicyOutput struct{ *pulumi.OutputState }

func (GatewayServicePolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayServicePolicy)(nil)).Elem()
}

func (o GatewayServicePolicyOutput) ToGatewayServicePolicyOutput() GatewayServicePolicyOutput {
	return o
}

func (o GatewayServicePolicyOutput) ToGatewayServicePolicyOutputWithContext(ctx context.Context) GatewayServicePolicyOutput {
	return o
}

// Required when `servicepolicyId` is not defined, optional otherwise (override the servicepolicy action). enum: `allow`, `deny`
func (o GatewayServicePolicyOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayServicePolicy) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// For SRX-only
func (o GatewayServicePolicyOutput) Antivirus() GatewayServicePolicyAntivirusPtrOutput {
	return o.ApplyT(func(v GatewayServicePolicy) *GatewayServicePolicyAntivirus { return v.Antivirus }).(GatewayServicePolicyAntivirusPtrOutput)
}

// For SRX Only
func (o GatewayServicePolicyOutput) Appqoe() GatewayServicePolicyAppqoePtrOutput {
	return o.ApplyT(func(v GatewayServicePolicy) *GatewayServicePolicyAppqoe { return v.Appqoe }).(GatewayServicePolicyAppqoePtrOutput)
}

func (o GatewayServicePolicyOutput) Ewfs() GatewayServicePolicyEwfArrayOutput {
	return o.ApplyT(func(v GatewayServicePolicy) []GatewayServicePolicyEwf { return v.Ewfs }).(GatewayServicePolicyEwfArrayOutput)
}

func (o GatewayServicePolicyOutput) Idp() GatewayServicePolicyIdpPtrOutput {
	return o.ApplyT(func(v GatewayServicePolicy) *GatewayServicePolicyIdp { return v.Idp }).(GatewayServicePolicyIdpPtrOutput)
}

// access within the same VRF
func (o GatewayServicePolicyOutput) LocalRouting() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GatewayServicePolicy) *bool { return v.LocalRouting }).(pulumi.BoolPtrOutput)
}

// Required when `servicepolicyId` is not defined, optional otherwise (override the servicepolicy name)
func (o GatewayServicePolicyOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayServicePolicy) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// By default, we derive all paths available and use them. Optionally, you can customize by using `pathPreference`
func (o GatewayServicePolicyOutput) PathPreference() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayServicePolicy) *string { return v.PathPreference }).(pulumi.StringPtrOutput)
}

// Used to link servicepolicy defined at org level and overwrite some attributes
func (o GatewayServicePolicyOutput) ServicepolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayServicePolicy) *string { return v.ServicepolicyId }).(pulumi.StringPtrOutput)
}

// Required when `servicepolicyId` is not defined. List of Applications / Destinations
func (o GatewayServicePolicyOutput) Services() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GatewayServicePolicy) []string { return v.Services }).(pulumi.StringArrayOutput)
}

// For SRX-only
func (o GatewayServicePolicyOutput) SslProxy() GatewayServicePolicySslProxyPtrOutput {
	return o.ApplyT(func(v GatewayServicePolicy) *GatewayServicePolicySslProxy { return v.SslProxy }).(GatewayServicePolicySslProxyPtrOutput)
}

// Required when `servicepolicyId` is not defined. List of Networks / Users
func (o GatewayServicePolicyOutput) Tenants() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GatewayServicePolicy) []string { return v.Tenants }).(pulumi.StringArrayOutput)
}

type GatewayServicePolicyArrayOutput struct{ *pulumi.OutputState }

func (GatewayServicePolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GatewayServicePolicy)(nil)).Elem()
}

func (o GatewayServicePolicyArrayOutput) ToGatewayServicePolicyArrayOutput() GatewayServicePolicyArrayOutput {
	return o
}

func (o GatewayServicePolicyArrayOutput) ToGatewayServicePolicyArrayOutputWithContext(ctx context.Context) GatewayServicePolicyArrayOutput {
	return o
}

func (o GatewayServicePolicyArrayOutput) Index(i pulumi.IntInput) GatewayServicePolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GatewayServicePolicy {
		return vs[0].([]GatewayServicePolicy)[vs[1].(int)]
	}).(GatewayServicePolicyOutput)
}

type GatewayServicePolicyAntivirus struct {
	// org-level AV Profile can be used, this takes precedence over 'profile'
	AvprofileId *string `pulumi:"avprofileId"`
	Enabled     *bool   `pulumi:"enabled"`
	// Default / noftp / httponly / or keys from av_profiles
	Profile *string `pulumi:"profile"`
}

// GatewayServicePolicyAntivirusInput is an input type that accepts GatewayServicePolicyAntivirusArgs and GatewayServicePolicyAntivirusOutput values.
// You can construct a concrete instance of `GatewayServicePolicyAntivirusInput` via:
//
//	GatewayServicePolicyAntivirusArgs{...}
type GatewayServicePolicyAntivirusInput interface {
	pulumi.Input

	ToGatewayServicePolicyAntivirusOutput() GatewayServicePolicyAntivirusOutput
	ToGatewayServicePolicyAntivirusOutputWithContext(context.Context) GatewayServicePolicyAntivirusOutput
}

type GatewayServicePolicyAntivirusArgs struct {
	// org-level AV Profile can be used, this takes precedence over 'profile'
	AvprofileId pulumi.StringPtrInput `pulumi:"avprofileId"`
	Enabled     pulumi.BoolPtrInput   `pulumi:"enabled"`
	// Default / noftp / httponly / or keys from av_profiles
	Profile pulumi.StringPtrInput `pulumi:"profile"`
}

func (GatewayServicePolicyAntivirusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayServicePolicyAntivirus)(nil)).Elem()
}

func (i GatewayServicePolicyAntivirusArgs) ToGatewayServicePolicyAntivirusOutput() GatewayServicePolicyAntivirusOutput {
	return i.ToGatewayServicePolicyAntivirusOutputWithContext(context.Background())
}

func (i GatewayServicePolicyAntivirusArgs) ToGatewayServicePolicyAntivirusOutputWithContext(ctx context.Context) GatewayServicePolicyAntivirusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayServicePolicyAntivirusOutput)
}

func (i GatewayServicePolicyAntivirusArgs) ToGatewayServicePolicyAntivirusPtrOutput() GatewayServicePolicyAntivirusPtrOutput {
	return i.ToGatewayServicePolicyAntivirusPtrOutputWithContext(context.Background())
}

func (i GatewayServicePolicyAntivirusArgs) ToGatewayServicePolicyAntivirusPtrOutputWithContext(ctx context.Context) GatewayServicePolicyAntivirusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayServicePolicyAntivirusOutput).ToGatewayServicePolicyAntivirusPtrOutputWithContext(ctx)
}

// GatewayServicePolicyAntivirusPtrInput is an input type that accepts GatewayServicePolicyAntivirusArgs, GatewayServicePolicyAntivirusPtr and GatewayServicePolicyAntivirusPtrOutput values.
// You can construct a concrete instance of `GatewayServicePolicyAntivirusPtrInput` via:
//
//	        GatewayServicePolicyAntivirusArgs{...}
//
//	or:
//
//	        nil
type GatewayServicePolicyAntivirusPtrInput interface {
	pulumi.Input

	ToGatewayServicePolicyAntivirusPtrOutput() GatewayServicePolicyAntivirusPtrOutput
	ToGatewayServicePolicyAntivirusPtrOutputWithContext(context.Context) GatewayServicePolicyAntivirusPtrOutput
}

type gatewayServicePolicyAntivirusPtrType GatewayServicePolicyAntivirusArgs

func GatewayServicePolicyAntivirusPtr(v *GatewayServicePolicyAntivirusArgs) GatewayServicePolicyAntivirusPtrInput {
	return (*gatewayServicePolicyAntivirusPtrType)(v)
}

func (*gatewayServicePolicyAntivirusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayServicePolicyAntivirus)(nil)).Elem()
}

func (i *gatewayServicePolicyAntivirusPtrType) ToGatewayServicePolicyAntivirusPtrOutput() GatewayServicePolicyAntivirusPtrOutput {
	return i.ToGatewayServicePolicyAntivirusPtrOutputWithContext(context.Background())
}

func (i *gatewayServicePolicyAntivirusPtrType) ToGatewayServicePolicyAntivirusPtrOutputWithContext(ctx context.Context) GatewayServicePolicyAntivirusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayServicePolicyAntivirusPtrOutput)
}

type GatewayServicePolicyAntivirusOutput struct{ *pulumi.OutputState }

func (GatewayServicePolicyAntivirusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayServicePolicyAntivirus)(nil)).Elem()
}

func (o GatewayServicePolicyAntivirusOutput) ToGatewayServicePolicyAntivirusOutput() GatewayServicePolicyAntivirusOutput {
	return o
}

func (o GatewayServicePolicyAntivirusOutput) ToGatewayServicePolicyAntivirusOutputWithContext(ctx context.Context) GatewayServicePolicyAntivirusOutput {
	return o
}

func (o GatewayServicePolicyAntivirusOutput) ToGatewayServicePolicyAntivirusPtrOutput() GatewayServicePolicyAntivirusPtrOutput {
	return o.ToGatewayServicePolicyAntivirusPtrOutputWithContext(context.Background())
}

func (o GatewayServicePolicyAntivirusOutput) ToGatewayServicePolicyAntivirusPtrOutputWithContext(ctx context.Context) GatewayServicePolicyAntivirusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayServicePolicyAntivirus) *GatewayServicePolicyAntivirus {
		return &v
	}).(GatewayServicePolicyAntivirusPtrOutput)
}

// org-level AV Profile can be used, this takes precedence over 'profile'
func (o GatewayServicePolicyAntivirusOutput) AvprofileId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayServicePolicyAntivirus) *string { return v.AvprofileId }).(pulumi.StringPtrOutput)
}

func (o GatewayServicePolicyAntivirusOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GatewayServicePolicyAntivirus) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Default / noftp / httponly / or keys from av_profiles
func (o GatewayServicePolicyAntivirusOutput) Profile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayServicePolicyAntivirus) *string { return v.Profile }).(pulumi.StringPtrOutput)
}

type GatewayServicePolicyAntivirusPtrOutput struct{ *pulumi.OutputState }

func (GatewayServicePolicyAntivirusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayServicePolicyAntivirus)(nil)).Elem()
}

func (o GatewayServicePolicyAntivirusPtrOutput) ToGatewayServicePolicyAntivirusPtrOutput() GatewayServicePolicyAntivirusPtrOutput {
	return o
}

func (o GatewayServicePolicyAntivirusPtrOutput) ToGatewayServicePolicyAntivirusPtrOutputWithContext(ctx context.Context) GatewayServicePolicyAntivirusPtrOutput {
	return o
}

func (o GatewayServicePolicyAntivirusPtrOutput) Elem() GatewayServicePolicyAntivirusOutput {
	return o.ApplyT(func(v *GatewayServicePolicyAntivirus) GatewayServicePolicyAntivirus {
		if v != nil {
			return *v
		}
		var ret GatewayServicePolicyAntivirus
		return ret
	}).(GatewayServicePolicyAntivirusOutput)
}

// org-level AV Profile can be used, this takes precedence over 'profile'
func (o GatewayServicePolicyAntivirusPtrOutput) AvprofileId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayServicePolicyAntivirus) *string {
		if v == nil {
			return nil
		}
		return v.AvprofileId
	}).(pulumi.StringPtrOutput)
}

func (o GatewayServicePolicyAntivirusPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GatewayServicePolicyAntivirus) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Default / noftp / httponly / or keys from av_profiles
func (o GatewayServicePolicyAntivirusPtrOutput) Profile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayServicePolicyAntivirus) *string {
		if v == nil {
			return nil
		}
		return v.Profile
	}).(pulumi.StringPtrOutput)
}

type GatewayServicePolicyAppqoe struct {
	Enabled *bool `pulumi:"enabled"`
}

// GatewayServicePolicyAppqoeInput is an input type that accepts GatewayServicePolicyAppqoeArgs and GatewayServicePolicyAppqoeOutput values.
// You can construct a concrete instance of `GatewayServicePolicyAppqoeInput` via:
//
//	GatewayServicePolicyAppqoeArgs{...}
type GatewayServicePolicyAppqoeInput interface {
	pulumi.Input

	ToGatewayServicePolicyAppqoeOutput() GatewayServicePolicyAppqoeOutput
	ToGatewayServicePolicyAppqoeOutputWithContext(context.Context) GatewayServicePolicyAppqoeOutput
}

type GatewayServicePolicyAppqoeArgs struct {
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (GatewayServicePolicyAppqoeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayServicePolicyAppqoe)(nil)).Elem()
}

func (i GatewayServicePolicyAppqoeArgs) ToGatewayServicePolicyAppqoeOutput() GatewayServicePolicyAppqoeOutput {
	return i.ToGatewayServicePolicyAppqoeOutputWithContext(context.Background())
}

func (i GatewayServicePolicyAppqoeArgs) ToGatewayServicePolicyAppqoeOutputWithContext(ctx context.Context) GatewayServicePolicyAppqoeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayServicePolicyAppqoeOutput)
}

func (i GatewayServicePolicyAppqoeArgs) ToGatewayServicePolicyAppqoePtrOutput() GatewayServicePolicyAppqoePtrOutput {
	return i.ToGatewayServicePolicyAppqoePtrOutputWithContext(context.Background())
}

func (i GatewayServicePolicyAppqoeArgs) ToGatewayServicePolicyAppqoePtrOutputWithContext(ctx context.Context) GatewayServicePolicyAppqoePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayServicePolicyAppqoeOutput).ToGatewayServicePolicyAppqoePtrOutputWithContext(ctx)
}

// GatewayServicePolicyAppqoePtrInput is an input type that accepts GatewayServicePolicyAppqoeArgs, GatewayServicePolicyAppqoePtr and GatewayServicePolicyAppqoePtrOutput values.
// You can construct a concrete instance of `GatewayServicePolicyAppqoePtrInput` via:
//
//	        GatewayServicePolicyAppqoeArgs{...}
//
//	or:
//
//	        nil
type GatewayServicePolicyAppqoePtrInput interface {
	pulumi.Input

	ToGatewayServicePolicyAppqoePtrOutput() GatewayServicePolicyAppqoePtrOutput
	ToGatewayServicePolicyAppqoePtrOutputWithContext(context.Context) GatewayServicePolicyAppqoePtrOutput
}

type gatewayServicePolicyAppqoePtrType GatewayServicePolicyAppqoeArgs

func GatewayServicePolicyAppqoePtr(v *GatewayServicePolicyAppqoeArgs) GatewayServicePolicyAppqoePtrInput {
	return (*gatewayServicePolicyAppqoePtrType)(v)
}

func (*gatewayServicePolicyAppqoePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayServicePolicyAppqoe)(nil)).Elem()
}

func (i *gatewayServicePolicyAppqoePtrType) ToGatewayServicePolicyAppqoePtrOutput() GatewayServicePolicyAppqoePtrOutput {
	return i.ToGatewayServicePolicyAppqoePtrOutputWithContext(context.Background())
}

func (i *gatewayServicePolicyAppqoePtrType) ToGatewayServicePolicyAppqoePtrOutputWithContext(ctx context.Context) GatewayServicePolicyAppqoePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayServicePolicyAppqoePtrOutput)
}

type GatewayServicePolicyAppqoeOutput struct{ *pulumi.OutputState }

func (GatewayServicePolicyAppqoeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayServicePolicyAppqoe)(nil)).Elem()
}

func (o GatewayServicePolicyAppqoeOutput) ToGatewayServicePolicyAppqoeOutput() GatewayServicePolicyAppqoeOutput {
	return o
}

func (o GatewayServicePolicyAppqoeOutput) ToGatewayServicePolicyAppqoeOutputWithContext(ctx context.Context) GatewayServicePolicyAppqoeOutput {
	return o
}

func (o GatewayServicePolicyAppqoeOutput) ToGatewayServicePolicyAppqoePtrOutput() GatewayServicePolicyAppqoePtrOutput {
	return o.ToGatewayServicePolicyAppqoePtrOutputWithContext(context.Background())
}

func (o GatewayServicePolicyAppqoeOutput) ToGatewayServicePolicyAppqoePtrOutputWithContext(ctx context.Context) GatewayServicePolicyAppqoePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayServicePolicyAppqoe) *GatewayServicePolicyAppqoe {
		return &v
	}).(GatewayServicePolicyAppqoePtrOutput)
}

func (o GatewayServicePolicyAppqoeOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GatewayServicePolicyAppqoe) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type GatewayServicePolicyAppqoePtrOutput struct{ *pulumi.OutputState }

func (GatewayServicePolicyAppqoePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayServicePolicyAppqoe)(nil)).Elem()
}

func (o GatewayServicePolicyAppqoePtrOutput) ToGatewayServicePolicyAppqoePtrOutput() GatewayServicePolicyAppqoePtrOutput {
	return o
}

func (o GatewayServicePolicyAppqoePtrOutput) ToGatewayServicePolicyAppqoePtrOutputWithContext(ctx context.Context) GatewayServicePolicyAppqoePtrOutput {
	return o
}

func (o GatewayServicePolicyAppqoePtrOutput) Elem() GatewayServicePolicyAppqoeOutput {
	return o.ApplyT(func(v *GatewayServicePolicyAppqoe) GatewayServicePolicyAppqoe {
		if v != nil {
			return *v
		}
		var ret GatewayServicePolicyAppqoe
		return ret
	}).(GatewayServicePolicyAppqoeOutput)
}

func (o GatewayServicePolicyAppqoePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GatewayServicePolicyAppqoe) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type GatewayServicePolicyEwf struct {
	AlertOnly    *bool   `pulumi:"alertOnly"`
	BlockMessage *string `pulumi:"blockMessage"`
	Enabled      *bool   `pulumi:"enabled"`
	// enum: `critical`, `standard`, `strict`
	Profile *string `pulumi:"profile"`
}

// GatewayServicePolicyEwfInput is an input type that accepts GatewayServicePolicyEwfArgs and GatewayServicePolicyEwfOutput values.
// You can construct a concrete instance of `GatewayServicePolicyEwfInput` via:
//
//	GatewayServicePolicyEwfArgs{...}
type GatewayServicePolicyEwfInput interface {
	pulumi.Input

	ToGatewayServicePolicyEwfOutput() GatewayServicePolicyEwfOutput
	ToGatewayServicePolicyEwfOutputWithContext(context.Context) GatewayServicePolicyEwfOutput
}

type GatewayServicePolicyEwfArgs struct {
	AlertOnly    pulumi.BoolPtrInput   `pulumi:"alertOnly"`
	BlockMessage pulumi.StringPtrInput `pulumi:"blockMessage"`
	Enabled      pulumi.BoolPtrInput   `pulumi:"enabled"`
	// enum: `critical`, `standard`, `strict`
	Profile pulumi.StringPtrInput `pulumi:"profile"`
}

func (GatewayServicePolicyEwfArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayServicePolicyEwf)(nil)).Elem()
}

func (i GatewayServicePolicyEwfArgs) ToGatewayServicePolicyEwfOutput() GatewayServicePolicyEwfOutput {
	return i.ToGatewayServicePolicyEwfOutputWithContext(context.Background())
}

func (i GatewayServicePolicyEwfArgs) ToGatewayServicePolicyEwfOutputWithContext(ctx context.Context) GatewayServicePolicyEwfOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayServicePolicyEwfOutput)
}

// GatewayServicePolicyEwfArrayInput is an input type that accepts GatewayServicePolicyEwfArray and GatewayServicePolicyEwfArrayOutput values.
// You can construct a concrete instance of `GatewayServicePolicyEwfArrayInput` via:
//
//	GatewayServicePolicyEwfArray{ GatewayServicePolicyEwfArgs{...} }
type GatewayServicePolicyEwfArrayInput interface {
	pulumi.Input

	ToGatewayServicePolicyEwfArrayOutput() GatewayServicePolicyEwfArrayOutput
	ToGatewayServicePolicyEwfArrayOutputWithContext(context.Context) GatewayServicePolicyEwfArrayOutput
}

type GatewayServicePolicyEwfArray []GatewayServicePolicyEwfInput

func (GatewayServicePolicyEwfArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GatewayServicePolicyEwf)(nil)).Elem()
}

func (i GatewayServicePolicyEwfArray) ToGatewayServicePolicyEwfArrayOutput() GatewayServicePolicyEwfArrayOutput {
	return i.ToGatewayServicePolicyEwfArrayOutputWithContext(context.Background())
}

func (i GatewayServicePolicyEwfArray) ToGatewayServicePolicyEwfArrayOutputWithContext(ctx context.Context) GatewayServicePolicyEwfArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayServicePolicyEwfArrayOutput)
}

type GatewayServicePolicyEwfOutput struct{ *pulumi.OutputState }

func (GatewayServicePolicyEwfOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayServicePolicyEwf)(nil)).Elem()
}

func (o GatewayServicePolicyEwfOutput) ToGatewayServicePolicyEwfOutput() GatewayServicePolicyEwfOutput {
	return o
}

func (o GatewayServicePolicyEwfOutput) ToGatewayServicePolicyEwfOutputWithContext(ctx context.Context) GatewayServicePolicyEwfOutput {
	return o
}

func (o GatewayServicePolicyEwfOutput) AlertOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GatewayServicePolicyEwf) *bool { return v.AlertOnly }).(pulumi.BoolPtrOutput)
}

func (o GatewayServicePolicyEwfOutput) BlockMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayServicePolicyEwf) *string { return v.BlockMessage }).(pulumi.StringPtrOutput)
}

func (o GatewayServicePolicyEwfOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GatewayServicePolicyEwf) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// enum: `critical`, `standard`, `strict`
func (o GatewayServicePolicyEwfOutput) Profile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayServicePolicyEwf) *string { return v.Profile }).(pulumi.StringPtrOutput)
}

type GatewayServicePolicyEwfArrayOutput struct{ *pulumi.OutputState }

func (GatewayServicePolicyEwfArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GatewayServicePolicyEwf)(nil)).Elem()
}

func (o GatewayServicePolicyEwfArrayOutput) ToGatewayServicePolicyEwfArrayOutput() GatewayServicePolicyEwfArrayOutput {
	return o
}

func (o GatewayServicePolicyEwfArrayOutput) ToGatewayServicePolicyEwfArrayOutputWithContext(ctx context.Context) GatewayServicePolicyEwfArrayOutput {
	return o
}

func (o GatewayServicePolicyEwfArrayOutput) Index(i pulumi.IntInput) GatewayServicePolicyEwfOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GatewayServicePolicyEwf {
		return vs[0].([]GatewayServicePolicyEwf)[vs[1].(int)]
	}).(GatewayServicePolicyEwfOutput)
}

type GatewayServicePolicyIdp struct {
	AlertOnly *bool `pulumi:"alertOnly"`
	Enabled   *bool `pulumi:"enabled"`
	// org_level IDP Profile can be used, this takes precedence over `profile`
	IdpprofileId *string `pulumi:"idpprofileId"`
	// enum: `Custom`, `strict` (default), `standard` or keys from idp_profiles
	Profile *string `pulumi:"profile"`
}

// GatewayServicePolicyIdpInput is an input type that accepts GatewayServicePolicyIdpArgs and GatewayServicePolicyIdpOutput values.
// You can construct a concrete instance of `GatewayServicePolicyIdpInput` via:
//
//	GatewayServicePolicyIdpArgs{...}
type GatewayServicePolicyIdpInput interface {
	pulumi.Input

	ToGatewayServicePolicyIdpOutput() GatewayServicePolicyIdpOutput
	ToGatewayServicePolicyIdpOutputWithContext(context.Context) GatewayServicePolicyIdpOutput
}

type GatewayServicePolicyIdpArgs struct {
	AlertOnly pulumi.BoolPtrInput `pulumi:"alertOnly"`
	Enabled   pulumi.BoolPtrInput `pulumi:"enabled"`
	// org_level IDP Profile can be used, this takes precedence over `profile`
	IdpprofileId pulumi.StringPtrInput `pulumi:"idpprofileId"`
	// enum: `Custom`, `strict` (default), `standard` or keys from idp_profiles
	Profile pulumi.StringPtrInput `pulumi:"profile"`
}

func (GatewayServicePolicyIdpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayServicePolicyIdp)(nil)).Elem()
}

func (i GatewayServicePolicyIdpArgs) ToGatewayServicePolicyIdpOutput() GatewayServicePolicyIdpOutput {
	return i.ToGatewayServicePolicyIdpOutputWithContext(context.Background())
}

func (i GatewayServicePolicyIdpArgs) ToGatewayServicePolicyIdpOutputWithContext(ctx context.Context) GatewayServicePolicyIdpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayServicePolicyIdpOutput)
}

func (i GatewayServicePolicyIdpArgs) ToGatewayServicePolicyIdpPtrOutput() GatewayServicePolicyIdpPtrOutput {
	return i.ToGatewayServicePolicyIdpPtrOutputWithContext(context.Background())
}

func (i GatewayServicePolicyIdpArgs) ToGatewayServicePolicyIdpPtrOutputWithContext(ctx context.Context) GatewayServicePolicyIdpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayServicePolicyIdpOutput).ToGatewayServicePolicyIdpPtrOutputWithContext(ctx)
}

// GatewayServicePolicyIdpPtrInput is an input type that accepts GatewayServicePolicyIdpArgs, GatewayServicePolicyIdpPtr and GatewayServicePolicyIdpPtrOutput values.
// You can construct a concrete instance of `GatewayServicePolicyIdpPtrInput` via:
//
//	        GatewayServicePolicyIdpArgs{...}
//
//	or:
//
//	        nil
type GatewayServicePolicyIdpPtrInput interface {
	pulumi.Input

	ToGatewayServicePolicyIdpPtrOutput() GatewayServicePolicyIdpPtrOutput
	ToGatewayServicePolicyIdpPtrOutputWithContext(context.Context) GatewayServicePolicyIdpPtrOutput
}

type gatewayServicePolicyIdpPtrType GatewayServicePolicyIdpArgs

func GatewayServicePolicyIdpPtr(v *GatewayServicePolicyIdpArgs) GatewayServicePolicyIdpPtrInput {
	return (*gatewayServicePolicyIdpPtrType)(v)
}

func (*gatewayServicePolicyIdpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayServicePolicyIdp)(nil)).Elem()
}

func (i *gatewayServicePolicyIdpPtrType) ToGatewayServicePolicyIdpPtrOutput() GatewayServicePolicyIdpPtrOutput {
	return i.ToGatewayServicePolicyIdpPtrOutputWithContext(context.Background())
}

func (i *gatewayServicePolicyIdpPtrType) ToGatewayServicePolicyIdpPtrOutputWithContext(ctx context.Context) GatewayServicePolicyIdpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayServicePolicyIdpPtrOutput)
}

type GatewayServicePolicyIdpOutput struct{ *pulumi.OutputState }

func (GatewayServicePolicyIdpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayServicePolicyIdp)(nil)).Elem()
}

func (o GatewayServicePolicyIdpOutput) ToGatewayServicePolicyIdpOutput() GatewayServicePolicyIdpOutput {
	return o
}

func (o GatewayServicePolicyIdpOutput) ToGatewayServicePolicyIdpOutputWithContext(ctx context.Context) GatewayServicePolicyIdpOutput {
	return o
}

func (o GatewayServicePolicyIdpOutput) ToGatewayServicePolicyIdpPtrOutput() GatewayServicePolicyIdpPtrOutput {
	return o.ToGatewayServicePolicyIdpPtrOutputWithContext(context.Background())
}

func (o GatewayServicePolicyIdpOutput) ToGatewayServicePolicyIdpPtrOutputWithContext(ctx context.Context) GatewayServicePolicyIdpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayServicePolicyIdp) *GatewayServicePolicyIdp {
		return &v
	}).(GatewayServicePolicyIdpPtrOutput)
}

func (o GatewayServicePolicyIdpOutput) AlertOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GatewayServicePolicyIdp) *bool { return v.AlertOnly }).(pulumi.BoolPtrOutput)
}

func (o GatewayServicePolicyIdpOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GatewayServicePolicyIdp) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// org_level IDP Profile can be used, this takes precedence over `profile`
func (o GatewayServicePolicyIdpOutput) IdpprofileId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayServicePolicyIdp) *string { return v.IdpprofileId }).(pulumi.StringPtrOutput)
}

// enum: `Custom`, `strict` (default), `standard` or keys from idp_profiles
func (o GatewayServicePolicyIdpOutput) Profile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayServicePolicyIdp) *string { return v.Profile }).(pulumi.StringPtrOutput)
}

type GatewayServicePolicyIdpPtrOutput struct{ *pulumi.OutputState }

func (GatewayServicePolicyIdpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayServicePolicyIdp)(nil)).Elem()
}

func (o GatewayServicePolicyIdpPtrOutput) ToGatewayServicePolicyIdpPtrOutput() GatewayServicePolicyIdpPtrOutput {
	return o
}

func (o GatewayServicePolicyIdpPtrOutput) ToGatewayServicePolicyIdpPtrOutputWithContext(ctx context.Context) GatewayServicePolicyIdpPtrOutput {
	return o
}

func (o GatewayServicePolicyIdpPtrOutput) Elem() GatewayServicePolicyIdpOutput {
	return o.ApplyT(func(v *GatewayServicePolicyIdp) GatewayServicePolicyIdp {
		if v != nil {
			return *v
		}
		var ret GatewayServicePolicyIdp
		return ret
	}).(GatewayServicePolicyIdpOutput)
}

func (o GatewayServicePolicyIdpPtrOutput) AlertOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GatewayServicePolicyIdp) *bool {
		if v == nil {
			return nil
		}
		return v.AlertOnly
	}).(pulumi.BoolPtrOutput)
}

func (o GatewayServicePolicyIdpPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GatewayServicePolicyIdp) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// org_level IDP Profile can be used, this takes precedence over `profile`
func (o GatewayServicePolicyIdpPtrOutput) IdpprofileId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayServicePolicyIdp) *string {
		if v == nil {
			return nil
		}
		return v.IdpprofileId
	}).(pulumi.StringPtrOutput)
}

// enum: `Custom`, `strict` (default), `standard` or keys from idp_profiles
func (o GatewayServicePolicyIdpPtrOutput) Profile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayServicePolicyIdp) *string {
		if v == nil {
			return nil
		}
		return v.Profile
	}).(pulumi.StringPtrOutput)
}

type GatewayServicePolicySslProxy struct {
	// enum: `medium`, `strong`, `weak`
	CiphersCategory *string `pulumi:"ciphersCategory"`
	Enabled         *bool   `pulumi:"enabled"`
}

// GatewayServicePolicySslProxyInput is an input type that accepts GatewayServicePolicySslProxyArgs and GatewayServicePolicySslProxyOutput values.
// You can construct a concrete instance of `GatewayServicePolicySslProxyInput` via:
//
//	GatewayServicePolicySslProxyArgs{...}
type GatewayServicePolicySslProxyInput interface {
	pulumi.Input

	ToGatewayServicePolicySslProxyOutput() GatewayServicePolicySslProxyOutput
	ToGatewayServicePolicySslProxyOutputWithContext(context.Context) GatewayServicePolicySslProxyOutput
}

type GatewayServicePolicySslProxyArgs struct {
	// enum: `medium`, `strong`, `weak`
	CiphersCategory pulumi.StringPtrInput `pulumi:"ciphersCategory"`
	Enabled         pulumi.BoolPtrInput   `pulumi:"enabled"`
}

func (GatewayServicePolicySslProxyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayServicePolicySslProxy)(nil)).Elem()
}

func (i GatewayServicePolicySslProxyArgs) ToGatewayServicePolicySslProxyOutput() GatewayServicePolicySslProxyOutput {
	return i.ToGatewayServicePolicySslProxyOutputWithContext(context.Background())
}

func (i GatewayServicePolicySslProxyArgs) ToGatewayServicePolicySslProxyOutputWithContext(ctx context.Context) GatewayServicePolicySslProxyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayServicePolicySslProxyOutput)
}

func (i GatewayServicePolicySslProxyArgs) ToGatewayServicePolicySslProxyPtrOutput() GatewayServicePolicySslProxyPtrOutput {
	return i.ToGatewayServicePolicySslProxyPtrOutputWithContext(context.Background())
}

func (i GatewayServicePolicySslProxyArgs) ToGatewayServicePolicySslProxyPtrOutputWithContext(ctx context.Context) GatewayServicePolicySslProxyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayServicePolicySslProxyOutput).ToGatewayServicePolicySslProxyPtrOutputWithContext(ctx)
}

// GatewayServicePolicySslProxyPtrInput is an input type that accepts GatewayServicePolicySslProxyArgs, GatewayServicePolicySslProxyPtr and GatewayServicePolicySslProxyPtrOutput values.
// You can construct a concrete instance of `GatewayServicePolicySslProxyPtrInput` via:
//
//	        GatewayServicePolicySslProxyArgs{...}
//
//	or:
//
//	        nil
type GatewayServicePolicySslProxyPtrInput interface {
	pulumi.Input

	ToGatewayServicePolicySslProxyPtrOutput() GatewayServicePolicySslProxyPtrOutput
	ToGatewayServicePolicySslProxyPtrOutputWithContext(context.Context) GatewayServicePolicySslProxyPtrOutput
}

type gatewayServicePolicySslProxyPtrType GatewayServicePolicySslProxyArgs

func GatewayServicePolicySslProxyPtr(v *GatewayServicePolicySslProxyArgs) GatewayServicePolicySslProxyPtrInput {
	return (*gatewayServicePolicySslProxyPtrType)(v)
}

func (*gatewayServicePolicySslProxyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayServicePolicySslProxy)(nil)).Elem()
}

func (i *gatewayServicePolicySslProxyPtrType) ToGatewayServicePolicySslProxyPtrOutput() GatewayServicePolicySslProxyPtrOutput {
	return i.ToGatewayServicePolicySslProxyPtrOutputWithContext(context.Background())
}

func (i *gatewayServicePolicySslProxyPtrType) ToGatewayServicePolicySslProxyPtrOutputWithContext(ctx context.Context) GatewayServicePolicySslProxyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayServicePolicySslProxyPtrOutput)
}

type GatewayServicePolicySslProxyOutput struct{ *pulumi.OutputState }

func (GatewayServicePolicySslProxyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayServicePolicySslProxy)(nil)).Elem()
}

func (o GatewayServicePolicySslProxyOutput) ToGatewayServicePolicySslProxyOutput() GatewayServicePolicySslProxyOutput {
	return o
}

func (o GatewayServicePolicySslProxyOutput) ToGatewayServicePolicySslProxyOutputWithContext(ctx context.Context) GatewayServicePolicySslProxyOutput {
	return o
}

func (o GatewayServicePolicySslProxyOutput) ToGatewayServicePolicySslProxyPtrOutput() GatewayServicePolicySslProxyPtrOutput {
	return o.ToGatewayServicePolicySslProxyPtrOutputWithContext(context.Background())
}

func (o GatewayServicePolicySslProxyOutput) ToGatewayServicePolicySslProxyPtrOutputWithContext(ctx context.Context) GatewayServicePolicySslProxyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayServicePolicySslProxy) *GatewayServicePolicySslProxy {
		return &v
	}).(GatewayServicePolicySslProxyPtrOutput)
}

// enum: `medium`, `strong`, `weak`
func (o GatewayServicePolicySslProxyOutput) CiphersCategory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayServicePolicySslProxy) *string { return v.CiphersCategory }).(pulumi.StringPtrOutput)
}

func (o GatewayServicePolicySslProxyOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GatewayServicePolicySslProxy) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type GatewayServicePolicySslProxyPtrOutput struct{ *pulumi.OutputState }

func (GatewayServicePolicySslProxyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayServicePolicySslProxy)(nil)).Elem()
}

func (o GatewayServicePolicySslProxyPtrOutput) ToGatewayServicePolicySslProxyPtrOutput() GatewayServicePolicySslProxyPtrOutput {
	return o
}

func (o GatewayServicePolicySslProxyPtrOutput) ToGatewayServicePolicySslProxyPtrOutputWithContext(ctx context.Context) GatewayServicePolicySslProxyPtrOutput {
	return o
}

func (o GatewayServicePolicySslProxyPtrOutput) Elem() GatewayServicePolicySslProxyOutput {
	return o.ApplyT(func(v *GatewayServicePolicySslProxy) GatewayServicePolicySslProxy {
		if v != nil {
			return *v
		}
		var ret GatewayServicePolicySslProxy
		return ret
	}).(GatewayServicePolicySslProxyOutput)
}

// enum: `medium`, `strong`, `weak`
func (o GatewayServicePolicySslProxyPtrOutput) CiphersCategory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayServicePolicySslProxy) *string {
		if v == nil {
			return nil
		}
		return v.CiphersCategory
	}).(pulumi.StringPtrOutput)
}

func (o GatewayServicePolicySslProxyPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GatewayServicePolicySslProxy) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type GatewayTunnelConfigs struct {
	AutoProvision *GatewayTunnelConfigsAutoProvision `pulumi:"autoProvision"`
	// Only if `provider`==`custom-ipsec`. Must be between 180 and 86400
	IkeLifetime *int `pulumi:"ikeLifetime"`
	// Only if `provider`==`custom-ipsec`. enum: `aggressive`, `main`
	IkeMode *string `pulumi:"ikeMode"`
	// If `provider`==`custom-ipsec`
	IkeProposals []GatewayTunnelConfigsIkeProposal `pulumi:"ikeProposals"`
	// Only if `provider`==`custom-ipsec`. Must be between 180 and 86400
	IpsecLifetime *int `pulumi:"ipsecLifetime"`
	// Only if  `provider`==`custom-ipsec`
	IpsecProposals []GatewayTunnelConfigsIpsecProposal `pulumi:"ipsecProposals"`
	// Required if `provider`==`zscaler-ipsec`, `provider`==`jse-ipsec` or `provider`==`custom-ipsec`
	LocalId *string `pulumi:"localId"`
	// Required if `provider`==`zscaler-gre`, `provider`==`jse-ipsec`. enum: `active-active`, `active-standby`
	Mode *string `pulumi:"mode"`
	// If `provider`==`custom-ipsec`, networks reachable via this tunnel
	Networks []string `pulumi:"networks"`
	// Only if `provider`==`zscaler-ipsec`, `provider`==`jse-ipsec` or `provider`==`custom-ipsec`
	Primary *GatewayTunnelConfigsPrimary `pulumi:"primary"`
	// Only if `provider`==`custom-ipsec`
	Probe *GatewayTunnelConfigsProbe `pulumi:"probe"`
	// Only if `provider`==`custom-ipsec`. enum: `gre`, `ipsec`
	Protocol *string `pulumi:"protocol"`
	// Only if `auto_provision.enabled`==`false`. enum: `custom-ipsec`, `custom-gre`, `jse-ipsec`, `zscaler-gre`, `zscaler-ipsec`
	Provider *string `pulumi:"provider"`
	// Required if `provider`==`zscaler-ipsec`, `provider`==`jse-ipsec` or `provider`==`custom-ipsec`
	Psk *string `pulumi:"psk"`
	// Only if `provider`==`zscaler-ipsec`, `provider`==`jse-ipsec` or `provider`==`custom-ipsec`
	Secondary *GatewayTunnelConfigsSecondary `pulumi:"secondary"`
	// Only if `provider`==`custom-gre` or `provider`==`custom-ipsec`. enum: `1`, `2`
	Version *string `pulumi:"version"`
}

// GatewayTunnelConfigsInput is an input type that accepts GatewayTunnelConfigsArgs and GatewayTunnelConfigsOutput values.
// You can construct a concrete instance of `GatewayTunnelConfigsInput` via:
//
//	GatewayTunnelConfigsArgs{...}
type GatewayTunnelConfigsInput interface {
	pulumi.Input

	ToGatewayTunnelConfigsOutput() GatewayTunnelConfigsOutput
	ToGatewayTunnelConfigsOutputWithContext(context.Context) GatewayTunnelConfigsOutput
}

type GatewayTunnelConfigsArgs struct {
	AutoProvision GatewayTunnelConfigsAutoProvisionPtrInput `pulumi:"autoProvision"`
	// Only if `provider`==`custom-ipsec`. Must be between 180 and 86400
	IkeLifetime pulumi.IntPtrInput `pulumi:"ikeLifetime"`
	// Only if `provider`==`custom-ipsec`. enum: `aggressive`, `main`
	IkeMode pulumi.StringPtrInput `pulumi:"ikeMode"`
	// If `provider`==`custom-ipsec`
	IkeProposals GatewayTunnelConfigsIkeProposalArrayInput `pulumi:"ikeProposals"`
	// Only if `provider`==`custom-ipsec`. Must be between 180 and 86400
	IpsecLifetime pulumi.IntPtrInput `pulumi:"ipsecLifetime"`
	// Only if  `provider`==`custom-ipsec`
	IpsecProposals GatewayTunnelConfigsIpsecProposalArrayInput `pulumi:"ipsecProposals"`
	// Required if `provider`==`zscaler-ipsec`, `provider`==`jse-ipsec` or `provider`==`custom-ipsec`
	LocalId pulumi.StringPtrInput `pulumi:"localId"`
	// Required if `provider`==`zscaler-gre`, `provider`==`jse-ipsec`. enum: `active-active`, `active-standby`
	Mode pulumi.StringPtrInput `pulumi:"mode"`
	// If `provider`==`custom-ipsec`, networks reachable via this tunnel
	Networks pulumi.StringArrayInput `pulumi:"networks"`
	// Only if `provider`==`zscaler-ipsec`, `provider`==`jse-ipsec` or `provider`==`custom-ipsec`
	Primary GatewayTunnelConfigsPrimaryPtrInput `pulumi:"primary"`
	// Only if `provider`==`custom-ipsec`
	Probe GatewayTunnelConfigsProbePtrInput `pulumi:"probe"`
	// Only if `provider`==`custom-ipsec`. enum: `gre`, `ipsec`
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// Only if `auto_provision.enabled`==`false`. enum: `custom-ipsec`, `custom-gre`, `jse-ipsec`, `zscaler-gre`, `zscaler-ipsec`
	Provider pulumi.StringPtrInput `pulumi:"provider"`
	// Required if `provider`==`zscaler-ipsec`, `provider`==`jse-ipsec` or `provider`==`custom-ipsec`
	Psk pulumi.StringPtrInput `pulumi:"psk"`
	// Only if `provider`==`zscaler-ipsec`, `provider`==`jse-ipsec` or `provider`==`custom-ipsec`
	Secondary GatewayTunnelConfigsSecondaryPtrInput `pulumi:"secondary"`
	// Only if `provider`==`custom-gre` or `provider`==`custom-ipsec`. enum: `1`, `2`
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (GatewayTunnelConfigsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayTunnelConfigs)(nil)).Elem()
}

func (i GatewayTunnelConfigsArgs) ToGatewayTunnelConfigsOutput() GatewayTunnelConfigsOutput {
	return i.ToGatewayTunnelConfigsOutputWithContext(context.Background())
}

func (i GatewayTunnelConfigsArgs) ToGatewayTunnelConfigsOutputWithContext(ctx context.Context) GatewayTunnelConfigsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayTunnelConfigsOutput)
}

// GatewayTunnelConfigsMapInput is an input type that accepts GatewayTunnelConfigsMap and GatewayTunnelConfigsMapOutput values.
// You can construct a concrete instance of `GatewayTunnelConfigsMapInput` via:
//
//	GatewayTunnelConfigsMap{ "key": GatewayTunnelConfigsArgs{...} }
type GatewayTunnelConfigsMapInput interface {
	pulumi.Input

	ToGatewayTunnelConfigsMapOutput() GatewayTunnelConfigsMapOutput
	ToGatewayTunnelConfigsMapOutputWithContext(context.Context) GatewayTunnelConfigsMapOutput
}

type GatewayTunnelConfigsMap map[string]GatewayTunnelConfigsInput

func (GatewayTunnelConfigsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]GatewayTunnelConfigs)(nil)).Elem()
}

func (i GatewayTunnelConfigsMap) ToGatewayTunnelConfigsMapOutput() GatewayTunnelConfigsMapOutput {
	return i.ToGatewayTunnelConfigsMapOutputWithContext(context.Background())
}

func (i GatewayTunnelConfigsMap) ToGatewayTunnelConfigsMapOutputWithContext(ctx context.Context) GatewayTunnelConfigsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayTunnelConfigsMapOutput)
}

type GatewayTunnelConfigsOutput struct{ *pulumi.OutputState }

func (GatewayTunnelConfigsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayTunnelConfigs)(nil)).Elem()
}

func (o GatewayTunnelConfigsOutput) ToGatewayTunnelConfigsOutput() GatewayTunnelConfigsOutput {
	return o
}

func (o GatewayTunnelConfigsOutput) ToGatewayTunnelConfigsOutputWithContext(ctx context.Context) GatewayTunnelConfigsOutput {
	return o
}

func (o GatewayTunnelConfigsOutput) AutoProvision() GatewayTunnelConfigsAutoProvisionPtrOutput {
	return o.ApplyT(func(v GatewayTunnelConfigs) *GatewayTunnelConfigsAutoProvision { return v.AutoProvision }).(GatewayTunnelConfigsAutoProvisionPtrOutput)
}

// Only if `provider`==`custom-ipsec`. Must be between 180 and 86400
func (o GatewayTunnelConfigsOutput) IkeLifetime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GatewayTunnelConfigs) *int { return v.IkeLifetime }).(pulumi.IntPtrOutput)
}

// Only if `provider`==`custom-ipsec`. enum: `aggressive`, `main`
func (o GatewayTunnelConfigsOutput) IkeMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayTunnelConfigs) *string { return v.IkeMode }).(pulumi.StringPtrOutput)
}

// If `provider`==`custom-ipsec`
func (o GatewayTunnelConfigsOutput) IkeProposals() GatewayTunnelConfigsIkeProposalArrayOutput {
	return o.ApplyT(func(v GatewayTunnelConfigs) []GatewayTunnelConfigsIkeProposal { return v.IkeProposals }).(GatewayTunnelConfigsIkeProposalArrayOutput)
}

// Only if `provider`==`custom-ipsec`. Must be between 180 and 86400
func (o GatewayTunnelConfigsOutput) IpsecLifetime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GatewayTunnelConfigs) *int { return v.IpsecLifetime }).(pulumi.IntPtrOutput)
}

// Only if  `provider`==`custom-ipsec`
func (o GatewayTunnelConfigsOutput) IpsecProposals() GatewayTunnelConfigsIpsecProposalArrayOutput {
	return o.ApplyT(func(v GatewayTunnelConfigs) []GatewayTunnelConfigsIpsecProposal { return v.IpsecProposals }).(GatewayTunnelConfigsIpsecProposalArrayOutput)
}

// Required if `provider`==`zscaler-ipsec`, `provider`==`jse-ipsec` or `provider`==`custom-ipsec`
func (o GatewayTunnelConfigsOutput) LocalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayTunnelConfigs) *string { return v.LocalId }).(pulumi.StringPtrOutput)
}

// Required if `provider`==`zscaler-gre`, `provider`==`jse-ipsec`. enum: `active-active`, `active-standby`
func (o GatewayTunnelConfigsOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayTunnelConfigs) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// If `provider`==`custom-ipsec`, networks reachable via this tunnel
func (o GatewayTunnelConfigsOutput) Networks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GatewayTunnelConfigs) []string { return v.Networks }).(pulumi.StringArrayOutput)
}

// Only if `provider`==`zscaler-ipsec`, `provider`==`jse-ipsec` or `provider`==`custom-ipsec`
func (o GatewayTunnelConfigsOutput) Primary() GatewayTunnelConfigsPrimaryPtrOutput {
	return o.ApplyT(func(v GatewayTunnelConfigs) *GatewayTunnelConfigsPrimary { return v.Primary }).(GatewayTunnelConfigsPrimaryPtrOutput)
}

// Only if `provider`==`custom-ipsec`
func (o GatewayTunnelConfigsOutput) Probe() GatewayTunnelConfigsProbePtrOutput {
	return o.ApplyT(func(v GatewayTunnelConfigs) *GatewayTunnelConfigsProbe { return v.Probe }).(GatewayTunnelConfigsProbePtrOutput)
}

// Only if `provider`==`custom-ipsec`. enum: `gre`, `ipsec`
func (o GatewayTunnelConfigsOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayTunnelConfigs) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// Only if `auto_provision.enabled`==`false`. enum: `custom-ipsec`, `custom-gre`, `jse-ipsec`, `zscaler-gre`, `zscaler-ipsec`
func (o GatewayTunnelConfigsOutput) Provider() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayTunnelConfigs) *string { return v.Provider }).(pulumi.StringPtrOutput)
}

// Required if `provider`==`zscaler-ipsec`, `provider`==`jse-ipsec` or `provider`==`custom-ipsec`
func (o GatewayTunnelConfigsOutput) Psk() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayTunnelConfigs) *string { return v.Psk }).(pulumi.StringPtrOutput)
}

// Only if `provider`==`zscaler-ipsec`, `provider`==`jse-ipsec` or `provider`==`custom-ipsec`
func (o GatewayTunnelConfigsOutput) Secondary() GatewayTunnelConfigsSecondaryPtrOutput {
	return o.ApplyT(func(v GatewayTunnelConfigs) *GatewayTunnelConfigsSecondary { return v.Secondary }).(GatewayTunnelConfigsSecondaryPtrOutput)
}

// Only if `provider`==`custom-gre` or `provider`==`custom-ipsec`. enum: `1`, `2`
func (o GatewayTunnelConfigsOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayTunnelConfigs) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type GatewayTunnelConfigsMapOutput struct{ *pulumi.OutputState }

func (GatewayTunnelConfigsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]GatewayTunnelConfigs)(nil)).Elem()
}

func (o GatewayTunnelConfigsMapOutput) ToGatewayTunnelConfigsMapOutput() GatewayTunnelConfigsMapOutput {
	return o
}

func (o GatewayTunnelConfigsMapOutput) ToGatewayTunnelConfigsMapOutputWithContext(ctx context.Context) GatewayTunnelConfigsMapOutput {
	return o
}

func (o GatewayTunnelConfigsMapOutput) MapIndex(k pulumi.StringInput) GatewayTunnelConfigsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) GatewayTunnelConfigs {
		return vs[0].(map[string]GatewayTunnelConfigs)[vs[1].(string)]
	}).(GatewayTunnelConfigsOutput)
}

type GatewayTunnelConfigsAutoProvision struct {
	Enable *bool `pulumi:"enable"`
	// API override for POP selection
	Latlng  *GatewayTunnelConfigsAutoProvisionLatlng  `pulumi:"latlng"`
	Primary *GatewayTunnelConfigsAutoProvisionPrimary `pulumi:"primary"`
	// enum: `jse-ipsec`, `zscaler-ipsec`
	Provider string `pulumi:"provider"`
	// API override for POP selection
	Region    *string                                     `pulumi:"region"`
	Secondary *GatewayTunnelConfigsAutoProvisionSecondary `pulumi:"secondary"`
}

// GatewayTunnelConfigsAutoProvisionInput is an input type that accepts GatewayTunnelConfigsAutoProvisionArgs and GatewayTunnelConfigsAutoProvisionOutput values.
// You can construct a concrete instance of `GatewayTunnelConfigsAutoProvisionInput` via:
//
//	GatewayTunnelConfigsAutoProvisionArgs{...}
type GatewayTunnelConfigsAutoProvisionInput interface {
	pulumi.Input

	ToGatewayTunnelConfigsAutoProvisionOutput() GatewayTunnelConfigsAutoProvisionOutput
	ToGatewayTunnelConfigsAutoProvisionOutputWithContext(context.Context) GatewayTunnelConfigsAutoProvisionOutput
}

type GatewayTunnelConfigsAutoProvisionArgs struct {
	Enable pulumi.BoolPtrInput `pulumi:"enable"`
	// API override for POP selection
	Latlng  GatewayTunnelConfigsAutoProvisionLatlngPtrInput  `pulumi:"latlng"`
	Primary GatewayTunnelConfigsAutoProvisionPrimaryPtrInput `pulumi:"primary"`
	// enum: `jse-ipsec`, `zscaler-ipsec`
	Provider pulumi.StringInput `pulumi:"provider"`
	// API override for POP selection
	Region    pulumi.StringPtrInput                              `pulumi:"region"`
	Secondary GatewayTunnelConfigsAutoProvisionSecondaryPtrInput `pulumi:"secondary"`
}

func (GatewayTunnelConfigsAutoProvisionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayTunnelConfigsAutoProvision)(nil)).Elem()
}

func (i GatewayTunnelConfigsAutoProvisionArgs) ToGatewayTunnelConfigsAutoProvisionOutput() GatewayTunnelConfigsAutoProvisionOutput {
	return i.ToGatewayTunnelConfigsAutoProvisionOutputWithContext(context.Background())
}

func (i GatewayTunnelConfigsAutoProvisionArgs) ToGatewayTunnelConfigsAutoProvisionOutputWithContext(ctx context.Context) GatewayTunnelConfigsAutoProvisionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayTunnelConfigsAutoProvisionOutput)
}

func (i GatewayTunnelConfigsAutoProvisionArgs) ToGatewayTunnelConfigsAutoProvisionPtrOutput() GatewayTunnelConfigsAutoProvisionPtrOutput {
	return i.ToGatewayTunnelConfigsAutoProvisionPtrOutputWithContext(context.Background())
}

func (i GatewayTunnelConfigsAutoProvisionArgs) ToGatewayTunnelConfigsAutoProvisionPtrOutputWithContext(ctx context.Context) GatewayTunnelConfigsAutoProvisionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayTunnelConfigsAutoProvisionOutput).ToGatewayTunnelConfigsAutoProvisionPtrOutputWithContext(ctx)
}

// GatewayTunnelConfigsAutoProvisionPtrInput is an input type that accepts GatewayTunnelConfigsAutoProvisionArgs, GatewayTunnelConfigsAutoProvisionPtr and GatewayTunnelConfigsAutoProvisionPtrOutput values.
// You can construct a concrete instance of `GatewayTunnelConfigsAutoProvisionPtrInput` via:
//
//	        GatewayTunnelConfigsAutoProvisionArgs{...}
//
//	or:
//
//	        nil
type GatewayTunnelConfigsAutoProvisionPtrInput interface {
	pulumi.Input

	ToGatewayTunnelConfigsAutoProvisionPtrOutput() GatewayTunnelConfigsAutoProvisionPtrOutput
	ToGatewayTunnelConfigsAutoProvisionPtrOutputWithContext(context.Context) GatewayTunnelConfigsAutoProvisionPtrOutput
}

type gatewayTunnelConfigsAutoProvisionPtrType GatewayTunnelConfigsAutoProvisionArgs

func GatewayTunnelConfigsAutoProvisionPtr(v *GatewayTunnelConfigsAutoProvisionArgs) GatewayTunnelConfigsAutoProvisionPtrInput {
	return (*gatewayTunnelConfigsAutoProvisionPtrType)(v)
}

func (*gatewayTunnelConfigsAutoProvisionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayTunnelConfigsAutoProvision)(nil)).Elem()
}

func (i *gatewayTunnelConfigsAutoProvisionPtrType) ToGatewayTunnelConfigsAutoProvisionPtrOutput() GatewayTunnelConfigsAutoProvisionPtrOutput {
	return i.ToGatewayTunnelConfigsAutoProvisionPtrOutputWithContext(context.Background())
}

func (i *gatewayTunnelConfigsAutoProvisionPtrType) ToGatewayTunnelConfigsAutoProvisionPtrOutputWithContext(ctx context.Context) GatewayTunnelConfigsAutoProvisionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayTunnelConfigsAutoProvisionPtrOutput)
}

type GatewayTunnelConfigsAutoProvisionOutput struct{ *pulumi.OutputState }

func (GatewayTunnelConfigsAutoProvisionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayTunnelConfigsAutoProvision)(nil)).Elem()
}

func (o GatewayTunnelConfigsAutoProvisionOutput) ToGatewayTunnelConfigsAutoProvisionOutput() GatewayTunnelConfigsAutoProvisionOutput {
	return o
}

func (o GatewayTunnelConfigsAutoProvisionOutput) ToGatewayTunnelConfigsAutoProvisionOutputWithContext(ctx context.Context) GatewayTunnelConfigsAutoProvisionOutput {
	return o
}

func (o GatewayTunnelConfigsAutoProvisionOutput) ToGatewayTunnelConfigsAutoProvisionPtrOutput() GatewayTunnelConfigsAutoProvisionPtrOutput {
	return o.ToGatewayTunnelConfigsAutoProvisionPtrOutputWithContext(context.Background())
}

func (o GatewayTunnelConfigsAutoProvisionOutput) ToGatewayTunnelConfigsAutoProvisionPtrOutputWithContext(ctx context.Context) GatewayTunnelConfigsAutoProvisionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayTunnelConfigsAutoProvision) *GatewayTunnelConfigsAutoProvision {
		return &v
	}).(GatewayTunnelConfigsAutoProvisionPtrOutput)
}

func (o GatewayTunnelConfigsAutoProvisionOutput) Enable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GatewayTunnelConfigsAutoProvision) *bool { return v.Enable }).(pulumi.BoolPtrOutput)
}

// API override for POP selection
func (o GatewayTunnelConfigsAutoProvisionOutput) Latlng() GatewayTunnelConfigsAutoProvisionLatlngPtrOutput {
	return o.ApplyT(func(v GatewayTunnelConfigsAutoProvision) *GatewayTunnelConfigsAutoProvisionLatlng { return v.Latlng }).(GatewayTunnelConfigsAutoProvisionLatlngPtrOutput)
}

func (o GatewayTunnelConfigsAutoProvisionOutput) Primary() GatewayTunnelConfigsAutoProvisionPrimaryPtrOutput {
	return o.ApplyT(func(v GatewayTunnelConfigsAutoProvision) *GatewayTunnelConfigsAutoProvisionPrimary { return v.Primary }).(GatewayTunnelConfigsAutoProvisionPrimaryPtrOutput)
}

// enum: `jse-ipsec`, `zscaler-ipsec`
func (o GatewayTunnelConfigsAutoProvisionOutput) Provider() pulumi.StringOutput {
	return o.ApplyT(func(v GatewayTunnelConfigsAutoProvision) string { return v.Provider }).(pulumi.StringOutput)
}

// API override for POP selection
func (o GatewayTunnelConfigsAutoProvisionOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayTunnelConfigsAutoProvision) *string { return v.Region }).(pulumi.StringPtrOutput)
}

func (o GatewayTunnelConfigsAutoProvisionOutput) Secondary() GatewayTunnelConfigsAutoProvisionSecondaryPtrOutput {
	return o.ApplyT(func(v GatewayTunnelConfigsAutoProvision) *GatewayTunnelConfigsAutoProvisionSecondary {
		return v.Secondary
	}).(GatewayTunnelConfigsAutoProvisionSecondaryPtrOutput)
}

type GatewayTunnelConfigsAutoProvisionPtrOutput struct{ *pulumi.OutputState }

func (GatewayTunnelConfigsAutoProvisionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayTunnelConfigsAutoProvision)(nil)).Elem()
}

func (o GatewayTunnelConfigsAutoProvisionPtrOutput) ToGatewayTunnelConfigsAutoProvisionPtrOutput() GatewayTunnelConfigsAutoProvisionPtrOutput {
	return o
}

func (o GatewayTunnelConfigsAutoProvisionPtrOutput) ToGatewayTunnelConfigsAutoProvisionPtrOutputWithContext(ctx context.Context) GatewayTunnelConfigsAutoProvisionPtrOutput {
	return o
}

func (o GatewayTunnelConfigsAutoProvisionPtrOutput) Elem() GatewayTunnelConfigsAutoProvisionOutput {
	return o.ApplyT(func(v *GatewayTunnelConfigsAutoProvision) GatewayTunnelConfigsAutoProvision {
		if v != nil {
			return *v
		}
		var ret GatewayTunnelConfigsAutoProvision
		return ret
	}).(GatewayTunnelConfigsAutoProvisionOutput)
}

func (o GatewayTunnelConfigsAutoProvisionPtrOutput) Enable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GatewayTunnelConfigsAutoProvision) *bool {
		if v == nil {
			return nil
		}
		return v.Enable
	}).(pulumi.BoolPtrOutput)
}

// API override for POP selection
func (o GatewayTunnelConfigsAutoProvisionPtrOutput) Latlng() GatewayTunnelConfigsAutoProvisionLatlngPtrOutput {
	return o.ApplyT(func(v *GatewayTunnelConfigsAutoProvision) *GatewayTunnelConfigsAutoProvisionLatlng {
		if v == nil {
			return nil
		}
		return v.Latlng
	}).(GatewayTunnelConfigsAutoProvisionLatlngPtrOutput)
}

func (o GatewayTunnelConfigsAutoProvisionPtrOutput) Primary() GatewayTunnelConfigsAutoProvisionPrimaryPtrOutput {
	return o.ApplyT(func(v *GatewayTunnelConfigsAutoProvision) *GatewayTunnelConfigsAutoProvisionPrimary {
		if v == nil {
			return nil
		}
		return v.Primary
	}).(GatewayTunnelConfigsAutoProvisionPrimaryPtrOutput)
}

// enum: `jse-ipsec`, `zscaler-ipsec`
func (o GatewayTunnelConfigsAutoProvisionPtrOutput) Provider() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayTunnelConfigsAutoProvision) *string {
		if v == nil {
			return nil
		}
		return &v.Provider
	}).(pulumi.StringPtrOutput)
}

// API override for POP selection
func (o GatewayTunnelConfigsAutoProvisionPtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayTunnelConfigsAutoProvision) *string {
		if v == nil {
			return nil
		}
		return v.Region
	}).(pulumi.StringPtrOutput)
}

func (o GatewayTunnelConfigsAutoProvisionPtrOutput) Secondary() GatewayTunnelConfigsAutoProvisionSecondaryPtrOutput {
	return o.ApplyT(func(v *GatewayTunnelConfigsAutoProvision) *GatewayTunnelConfigsAutoProvisionSecondary {
		if v == nil {
			return nil
		}
		return v.Secondary
	}).(GatewayTunnelConfigsAutoProvisionSecondaryPtrOutput)
}

type GatewayTunnelConfigsAutoProvisionLatlng struct {
	Lat float64 `pulumi:"lat"`
	Lng float64 `pulumi:"lng"`
}

// GatewayTunnelConfigsAutoProvisionLatlngInput is an input type that accepts GatewayTunnelConfigsAutoProvisionLatlngArgs and GatewayTunnelConfigsAutoProvisionLatlngOutput values.
// You can construct a concrete instance of `GatewayTunnelConfigsAutoProvisionLatlngInput` via:
//
//	GatewayTunnelConfigsAutoProvisionLatlngArgs{...}
type GatewayTunnelConfigsAutoProvisionLatlngInput interface {
	pulumi.Input

	ToGatewayTunnelConfigsAutoProvisionLatlngOutput() GatewayTunnelConfigsAutoProvisionLatlngOutput
	ToGatewayTunnelConfigsAutoProvisionLatlngOutputWithContext(context.Context) GatewayTunnelConfigsAutoProvisionLatlngOutput
}

type GatewayTunnelConfigsAutoProvisionLatlngArgs struct {
	Lat pulumi.Float64Input `pulumi:"lat"`
	Lng pulumi.Float64Input `pulumi:"lng"`
}

func (GatewayTunnelConfigsAutoProvisionLatlngArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayTunnelConfigsAutoProvisionLatlng)(nil)).Elem()
}

func (i GatewayTunnelConfigsAutoProvisionLatlngArgs) ToGatewayTunnelConfigsAutoProvisionLatlngOutput() GatewayTunnelConfigsAutoProvisionLatlngOutput {
	return i.ToGatewayTunnelConfigsAutoProvisionLatlngOutputWithContext(context.Background())
}

func (i GatewayTunnelConfigsAutoProvisionLatlngArgs) ToGatewayTunnelConfigsAutoProvisionLatlngOutputWithContext(ctx context.Context) GatewayTunnelConfigsAutoProvisionLatlngOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayTunnelConfigsAutoProvisionLatlngOutput)
}

func (i GatewayTunnelConfigsAutoProvisionLatlngArgs) ToGatewayTunnelConfigsAutoProvisionLatlngPtrOutput() GatewayTunnelConfigsAutoProvisionLatlngPtrOutput {
	return i.ToGatewayTunnelConfigsAutoProvisionLatlngPtrOutputWithContext(context.Background())
}

func (i GatewayTunnelConfigsAutoProvisionLatlngArgs) ToGatewayTunnelConfigsAutoProvisionLatlngPtrOutputWithContext(ctx context.Context) GatewayTunnelConfigsAutoProvisionLatlngPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayTunnelConfigsAutoProvisionLatlngOutput).ToGatewayTunnelConfigsAutoProvisionLatlngPtrOutputWithContext(ctx)
}

// GatewayTunnelConfigsAutoProvisionLatlngPtrInput is an input type that accepts GatewayTunnelConfigsAutoProvisionLatlngArgs, GatewayTunnelConfigsAutoProvisionLatlngPtr and GatewayTunnelConfigsAutoProvisionLatlngPtrOutput values.
// You can construct a concrete instance of `GatewayTunnelConfigsAutoProvisionLatlngPtrInput` via:
//
//	        GatewayTunnelConfigsAutoProvisionLatlngArgs{...}
//
//	or:
//
//	        nil
type GatewayTunnelConfigsAutoProvisionLatlngPtrInput interface {
	pulumi.Input

	ToGatewayTunnelConfigsAutoProvisionLatlngPtrOutput() GatewayTunnelConfigsAutoProvisionLatlngPtrOutput
	ToGatewayTunnelConfigsAutoProvisionLatlngPtrOutputWithContext(context.Context) GatewayTunnelConfigsAutoProvisionLatlngPtrOutput
}

type gatewayTunnelConfigsAutoProvisionLatlngPtrType GatewayTunnelConfigsAutoProvisionLatlngArgs

func GatewayTunnelConfigsAutoProvisionLatlngPtr(v *GatewayTunnelConfigsAutoProvisionLatlngArgs) GatewayTunnelConfigsAutoProvisionLatlngPtrInput {
	return (*gatewayTunnelConfigsAutoProvisionLatlngPtrType)(v)
}

func (*gatewayTunnelConfigsAutoProvisionLatlngPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayTunnelConfigsAutoProvisionLatlng)(nil)).Elem()
}

func (i *gatewayTunnelConfigsAutoProvisionLatlngPtrType) ToGatewayTunnelConfigsAutoProvisionLatlngPtrOutput() GatewayTunnelConfigsAutoProvisionLatlngPtrOutput {
	return i.ToGatewayTunnelConfigsAutoProvisionLatlngPtrOutputWithContext(context.Background())
}

func (i *gatewayTunnelConfigsAutoProvisionLatlngPtrType) ToGatewayTunnelConfigsAutoProvisionLatlngPtrOutputWithContext(ctx context.Context) GatewayTunnelConfigsAutoProvisionLatlngPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayTunnelConfigsAutoProvisionLatlngPtrOutput)
}

type GatewayTunnelConfigsAutoProvisionLatlngOutput struct{ *pulumi.OutputState }

func (GatewayTunnelConfigsAutoProvisionLatlngOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayTunnelConfigsAutoProvisionLatlng)(nil)).Elem()
}

func (o GatewayTunnelConfigsAutoProvisionLatlngOutput) ToGatewayTunnelConfigsAutoProvisionLatlngOutput() GatewayTunnelConfigsAutoProvisionLatlngOutput {
	return o
}

func (o GatewayTunnelConfigsAutoProvisionLatlngOutput) ToGatewayTunnelConfigsAutoProvisionLatlngOutputWithContext(ctx context.Context) GatewayTunnelConfigsAutoProvisionLatlngOutput {
	return o
}

func (o GatewayTunnelConfigsAutoProvisionLatlngOutput) ToGatewayTunnelConfigsAutoProvisionLatlngPtrOutput() GatewayTunnelConfigsAutoProvisionLatlngPtrOutput {
	return o.ToGatewayTunnelConfigsAutoProvisionLatlngPtrOutputWithContext(context.Background())
}

func (o GatewayTunnelConfigsAutoProvisionLatlngOutput) ToGatewayTunnelConfigsAutoProvisionLatlngPtrOutputWithContext(ctx context.Context) GatewayTunnelConfigsAutoProvisionLatlngPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayTunnelConfigsAutoProvisionLatlng) *GatewayTunnelConfigsAutoProvisionLatlng {
		return &v
	}).(GatewayTunnelConfigsAutoProvisionLatlngPtrOutput)
}

func (o GatewayTunnelConfigsAutoProvisionLatlngOutput) Lat() pulumi.Float64Output {
	return o.ApplyT(func(v GatewayTunnelConfigsAutoProvisionLatlng) float64 { return v.Lat }).(pulumi.Float64Output)
}

func (o GatewayTunnelConfigsAutoProvisionLatlngOutput) Lng() pulumi.Float64Output {
	return o.ApplyT(func(v GatewayTunnelConfigsAutoProvisionLatlng) float64 { return v.Lng }).(pulumi.Float64Output)
}

type GatewayTunnelConfigsAutoProvisionLatlngPtrOutput struct{ *pulumi.OutputState }

func (GatewayTunnelConfigsAutoProvisionLatlngPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayTunnelConfigsAutoProvisionLatlng)(nil)).Elem()
}

func (o GatewayTunnelConfigsAutoProvisionLatlngPtrOutput) ToGatewayTunnelConfigsAutoProvisionLatlngPtrOutput() GatewayTunnelConfigsAutoProvisionLatlngPtrOutput {
	return o
}

func (o GatewayTunnelConfigsAutoProvisionLatlngPtrOutput) ToGatewayTunnelConfigsAutoProvisionLatlngPtrOutputWithContext(ctx context.Context) GatewayTunnelConfigsAutoProvisionLatlngPtrOutput {
	return o
}

func (o GatewayTunnelConfigsAutoProvisionLatlngPtrOutput) Elem() GatewayTunnelConfigsAutoProvisionLatlngOutput {
	return o.ApplyT(func(v *GatewayTunnelConfigsAutoProvisionLatlng) GatewayTunnelConfigsAutoProvisionLatlng {
		if v != nil {
			return *v
		}
		var ret GatewayTunnelConfigsAutoProvisionLatlng
		return ret
	}).(GatewayTunnelConfigsAutoProvisionLatlngOutput)
}

func (o GatewayTunnelConfigsAutoProvisionLatlngPtrOutput) Lat() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *GatewayTunnelConfigsAutoProvisionLatlng) *float64 {
		if v == nil {
			return nil
		}
		return &v.Lat
	}).(pulumi.Float64PtrOutput)
}

func (o GatewayTunnelConfigsAutoProvisionLatlngPtrOutput) Lng() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *GatewayTunnelConfigsAutoProvisionLatlng) *float64 {
		if v == nil {
			return nil
		}
		return &v.Lng
	}).(pulumi.Float64PtrOutput)
}

type GatewayTunnelConfigsAutoProvisionPrimary struct {
	ProbeIps []string `pulumi:"probeIps"`
	// Optional, only needed if `varsOnly`==`false`
	WanNames []string `pulumi:"wanNames"`
}

// GatewayTunnelConfigsAutoProvisionPrimaryInput is an input type that accepts GatewayTunnelConfigsAutoProvisionPrimaryArgs and GatewayTunnelConfigsAutoProvisionPrimaryOutput values.
// You can construct a concrete instance of `GatewayTunnelConfigsAutoProvisionPrimaryInput` via:
//
//	GatewayTunnelConfigsAutoProvisionPrimaryArgs{...}
type GatewayTunnelConfigsAutoProvisionPrimaryInput interface {
	pulumi.Input

	ToGatewayTunnelConfigsAutoProvisionPrimaryOutput() GatewayTunnelConfigsAutoProvisionPrimaryOutput
	ToGatewayTunnelConfigsAutoProvisionPrimaryOutputWithContext(context.Context) GatewayTunnelConfigsAutoProvisionPrimaryOutput
}

type GatewayTunnelConfigsAutoProvisionPrimaryArgs struct {
	ProbeIps pulumi.StringArrayInput `pulumi:"probeIps"`
	// Optional, only needed if `varsOnly`==`false`
	WanNames pulumi.StringArrayInput `pulumi:"wanNames"`
}

func (GatewayTunnelConfigsAutoProvisionPrimaryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayTunnelConfigsAutoProvisionPrimary)(nil)).Elem()
}

func (i GatewayTunnelConfigsAutoProvisionPrimaryArgs) ToGatewayTunnelConfigsAutoProvisionPrimaryOutput() GatewayTunnelConfigsAutoProvisionPrimaryOutput {
	return i.ToGatewayTunnelConfigsAutoProvisionPrimaryOutputWithContext(context.Background())
}

func (i GatewayTunnelConfigsAutoProvisionPrimaryArgs) ToGatewayTunnelConfigsAutoProvisionPrimaryOutputWithContext(ctx context.Context) GatewayTunnelConfigsAutoProvisionPrimaryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayTunnelConfigsAutoProvisionPrimaryOutput)
}

func (i GatewayTunnelConfigsAutoProvisionPrimaryArgs) ToGatewayTunnelConfigsAutoProvisionPrimaryPtrOutput() GatewayTunnelConfigsAutoProvisionPrimaryPtrOutput {
	return i.ToGatewayTunnelConfigsAutoProvisionPrimaryPtrOutputWithContext(context.Background())
}

func (i GatewayTunnelConfigsAutoProvisionPrimaryArgs) ToGatewayTunnelConfigsAutoProvisionPrimaryPtrOutputWithContext(ctx context.Context) GatewayTunnelConfigsAutoProvisionPrimaryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayTunnelConfigsAutoProvisionPrimaryOutput).ToGatewayTunnelConfigsAutoProvisionPrimaryPtrOutputWithContext(ctx)
}

// GatewayTunnelConfigsAutoProvisionPrimaryPtrInput is an input type that accepts GatewayTunnelConfigsAutoProvisionPrimaryArgs, GatewayTunnelConfigsAutoProvisionPrimaryPtr and GatewayTunnelConfigsAutoProvisionPrimaryPtrOutput values.
// You can construct a concrete instance of `GatewayTunnelConfigsAutoProvisionPrimaryPtrInput` via:
//
//	        GatewayTunnelConfigsAutoProvisionPrimaryArgs{...}
//
//	or:
//
//	        nil
type GatewayTunnelConfigsAutoProvisionPrimaryPtrInput interface {
	pulumi.Input

	ToGatewayTunnelConfigsAutoProvisionPrimaryPtrOutput() GatewayTunnelConfigsAutoProvisionPrimaryPtrOutput
	ToGatewayTunnelConfigsAutoProvisionPrimaryPtrOutputWithContext(context.Context) GatewayTunnelConfigsAutoProvisionPrimaryPtrOutput
}

type gatewayTunnelConfigsAutoProvisionPrimaryPtrType GatewayTunnelConfigsAutoProvisionPrimaryArgs

func GatewayTunnelConfigsAutoProvisionPrimaryPtr(v *GatewayTunnelConfigsAutoProvisionPrimaryArgs) GatewayTunnelConfigsAutoProvisionPrimaryPtrInput {
	return (*gatewayTunnelConfigsAutoProvisionPrimaryPtrType)(v)
}

func (*gatewayTunnelConfigsAutoProvisionPrimaryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayTunnelConfigsAutoProvisionPrimary)(nil)).Elem()
}

func (i *gatewayTunnelConfigsAutoProvisionPrimaryPtrType) ToGatewayTunnelConfigsAutoProvisionPrimaryPtrOutput() GatewayTunnelConfigsAutoProvisionPrimaryPtrOutput {
	return i.ToGatewayTunnelConfigsAutoProvisionPrimaryPtrOutputWithContext(context.Background())
}

func (i *gatewayTunnelConfigsAutoProvisionPrimaryPtrType) ToGatewayTunnelConfigsAutoProvisionPrimaryPtrOutputWithContext(ctx context.Context) GatewayTunnelConfigsAutoProvisionPrimaryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayTunnelConfigsAutoProvisionPrimaryPtrOutput)
}

type GatewayTunnelConfigsAutoProvisionPrimaryOutput struct{ *pulumi.OutputState }

func (GatewayTunnelConfigsAutoProvisionPrimaryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayTunnelConfigsAutoProvisionPrimary)(nil)).Elem()
}

func (o GatewayTunnelConfigsAutoProvisionPrimaryOutput) ToGatewayTunnelConfigsAutoProvisionPrimaryOutput() GatewayTunnelConfigsAutoProvisionPrimaryOutput {
	return o
}

func (o GatewayTunnelConfigsAutoProvisionPrimaryOutput) ToGatewayTunnelConfigsAutoProvisionPrimaryOutputWithContext(ctx context.Context) GatewayTunnelConfigsAutoProvisionPrimaryOutput {
	return o
}

func (o GatewayTunnelConfigsAutoProvisionPrimaryOutput) ToGatewayTunnelConfigsAutoProvisionPrimaryPtrOutput() GatewayTunnelConfigsAutoProvisionPrimaryPtrOutput {
	return o.ToGatewayTunnelConfigsAutoProvisionPrimaryPtrOutputWithContext(context.Background())
}

func (o GatewayTunnelConfigsAutoProvisionPrimaryOutput) ToGatewayTunnelConfigsAutoProvisionPrimaryPtrOutputWithContext(ctx context.Context) GatewayTunnelConfigsAutoProvisionPrimaryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayTunnelConfigsAutoProvisionPrimary) *GatewayTunnelConfigsAutoProvisionPrimary {
		return &v
	}).(GatewayTunnelConfigsAutoProvisionPrimaryPtrOutput)
}

func (o GatewayTunnelConfigsAutoProvisionPrimaryOutput) ProbeIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GatewayTunnelConfigsAutoProvisionPrimary) []string { return v.ProbeIps }).(pulumi.StringArrayOutput)
}

// Optional, only needed if `varsOnly`==`false`
func (o GatewayTunnelConfigsAutoProvisionPrimaryOutput) WanNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GatewayTunnelConfigsAutoProvisionPrimary) []string { return v.WanNames }).(pulumi.StringArrayOutput)
}

type GatewayTunnelConfigsAutoProvisionPrimaryPtrOutput struct{ *pulumi.OutputState }

func (GatewayTunnelConfigsAutoProvisionPrimaryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayTunnelConfigsAutoProvisionPrimary)(nil)).Elem()
}

func (o GatewayTunnelConfigsAutoProvisionPrimaryPtrOutput) ToGatewayTunnelConfigsAutoProvisionPrimaryPtrOutput() GatewayTunnelConfigsAutoProvisionPrimaryPtrOutput {
	return o
}

func (o GatewayTunnelConfigsAutoProvisionPrimaryPtrOutput) ToGatewayTunnelConfigsAutoProvisionPrimaryPtrOutputWithContext(ctx context.Context) GatewayTunnelConfigsAutoProvisionPrimaryPtrOutput {
	return o
}

func (o GatewayTunnelConfigsAutoProvisionPrimaryPtrOutput) Elem() GatewayTunnelConfigsAutoProvisionPrimaryOutput {
	return o.ApplyT(func(v *GatewayTunnelConfigsAutoProvisionPrimary) GatewayTunnelConfigsAutoProvisionPrimary {
		if v != nil {
			return *v
		}
		var ret GatewayTunnelConfigsAutoProvisionPrimary
		return ret
	}).(GatewayTunnelConfigsAutoProvisionPrimaryOutput)
}

func (o GatewayTunnelConfigsAutoProvisionPrimaryPtrOutput) ProbeIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GatewayTunnelConfigsAutoProvisionPrimary) []string {
		if v == nil {
			return nil
		}
		return v.ProbeIps
	}).(pulumi.StringArrayOutput)
}

// Optional, only needed if `varsOnly`==`false`
func (o GatewayTunnelConfigsAutoProvisionPrimaryPtrOutput) WanNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GatewayTunnelConfigsAutoProvisionPrimary) []string {
		if v == nil {
			return nil
		}
		return v.WanNames
	}).(pulumi.StringArrayOutput)
}

type GatewayTunnelConfigsAutoProvisionSecondary struct {
	ProbeIps []string `pulumi:"probeIps"`
	// Optional, only needed if `varsOnly`==`false`
	WanNames []string `pulumi:"wanNames"`
}

// GatewayTunnelConfigsAutoProvisionSecondaryInput is an input type that accepts GatewayTunnelConfigsAutoProvisionSecondaryArgs and GatewayTunnelConfigsAutoProvisionSecondaryOutput values.
// You can construct a concrete instance of `GatewayTunnelConfigsAutoProvisionSecondaryInput` via:
//
//	GatewayTunnelConfigsAutoProvisionSecondaryArgs{...}
type GatewayTunnelConfigsAutoProvisionSecondaryInput interface {
	pulumi.Input

	ToGatewayTunnelConfigsAutoProvisionSecondaryOutput() GatewayTunnelConfigsAutoProvisionSecondaryOutput
	ToGatewayTunnelConfigsAutoProvisionSecondaryOutputWithContext(context.Context) GatewayTunnelConfigsAutoProvisionSecondaryOutput
}

type GatewayTunnelConfigsAutoProvisionSecondaryArgs struct {
	ProbeIps pulumi.StringArrayInput `pulumi:"probeIps"`
	// Optional, only needed if `varsOnly`==`false`
	WanNames pulumi.StringArrayInput `pulumi:"wanNames"`
}

func (GatewayTunnelConfigsAutoProvisionSecondaryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayTunnelConfigsAutoProvisionSecondary)(nil)).Elem()
}

func (i GatewayTunnelConfigsAutoProvisionSecondaryArgs) ToGatewayTunnelConfigsAutoProvisionSecondaryOutput() GatewayTunnelConfigsAutoProvisionSecondaryOutput {
	return i.ToGatewayTunnelConfigsAutoProvisionSecondaryOutputWithContext(context.Background())
}

func (i GatewayTunnelConfigsAutoProvisionSecondaryArgs) ToGatewayTunnelConfigsAutoProvisionSecondaryOutputWithContext(ctx context.Context) GatewayTunnelConfigsAutoProvisionSecondaryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayTunnelConfigsAutoProvisionSecondaryOutput)
}

func (i GatewayTunnelConfigsAutoProvisionSecondaryArgs) ToGatewayTunnelConfigsAutoProvisionSecondaryPtrOutput() GatewayTunnelConfigsAutoProvisionSecondaryPtrOutput {
	return i.ToGatewayTunnelConfigsAutoProvisionSecondaryPtrOutputWithContext(context.Background())
}

func (i GatewayTunnelConfigsAutoProvisionSecondaryArgs) ToGatewayTunnelConfigsAutoProvisionSecondaryPtrOutputWithContext(ctx context.Context) GatewayTunnelConfigsAutoProvisionSecondaryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayTunnelConfigsAutoProvisionSecondaryOutput).ToGatewayTunnelConfigsAutoProvisionSecondaryPtrOutputWithContext(ctx)
}

// GatewayTunnelConfigsAutoProvisionSecondaryPtrInput is an input type that accepts GatewayTunnelConfigsAutoProvisionSecondaryArgs, GatewayTunnelConfigsAutoProvisionSecondaryPtr and GatewayTunnelConfigsAutoProvisionSecondaryPtrOutput values.
// You can construct a concrete instance of `GatewayTunnelConfigsAutoProvisionSecondaryPtrInput` via:
//
//	        GatewayTunnelConfigsAutoProvisionSecondaryArgs{...}
//
//	or:
//
//	        nil
type GatewayTunnelConfigsAutoProvisionSecondaryPtrInput interface {
	pulumi.Input

	ToGatewayTunnelConfigsAutoProvisionSecondaryPtrOutput() GatewayTunnelConfigsAutoProvisionSecondaryPtrOutput
	ToGatewayTunnelConfigsAutoProvisionSecondaryPtrOutputWithContext(context.Context) GatewayTunnelConfigsAutoProvisionSecondaryPtrOutput
}

type gatewayTunnelConfigsAutoProvisionSecondaryPtrType GatewayTunnelConfigsAutoProvisionSecondaryArgs

func GatewayTunnelConfigsAutoProvisionSecondaryPtr(v *GatewayTunnelConfigsAutoProvisionSecondaryArgs) GatewayTunnelConfigsAutoProvisionSecondaryPtrInput {
	return (*gatewayTunnelConfigsAutoProvisionSecondaryPtrType)(v)
}

func (*gatewayTunnelConfigsAutoProvisionSecondaryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayTunnelConfigsAutoProvisionSecondary)(nil)).Elem()
}

func (i *gatewayTunnelConfigsAutoProvisionSecondaryPtrType) ToGatewayTunnelConfigsAutoProvisionSecondaryPtrOutput() GatewayTunnelConfigsAutoProvisionSecondaryPtrOutput {
	return i.ToGatewayTunnelConfigsAutoProvisionSecondaryPtrOutputWithContext(context.Background())
}

func (i *gatewayTunnelConfigsAutoProvisionSecondaryPtrType) ToGatewayTunnelConfigsAutoProvisionSecondaryPtrOutputWithContext(ctx context.Context) GatewayTunnelConfigsAutoProvisionSecondaryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayTunnelConfigsAutoProvisionSecondaryPtrOutput)
}

type GatewayTunnelConfigsAutoProvisionSecondaryOutput struct{ *pulumi.OutputState }

func (GatewayTunnelConfigsAutoProvisionSecondaryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayTunnelConfigsAutoProvisionSecondary)(nil)).Elem()
}

func (o GatewayTunnelConfigsAutoProvisionSecondaryOutput) ToGatewayTunnelConfigsAutoProvisionSecondaryOutput() GatewayTunnelConfigsAutoProvisionSecondaryOutput {
	return o
}

func (o GatewayTunnelConfigsAutoProvisionSecondaryOutput) ToGatewayTunnelConfigsAutoProvisionSecondaryOutputWithContext(ctx context.Context) GatewayTunnelConfigsAutoProvisionSecondaryOutput {
	return o
}

func (o GatewayTunnelConfigsAutoProvisionSecondaryOutput) ToGatewayTunnelConfigsAutoProvisionSecondaryPtrOutput() GatewayTunnelConfigsAutoProvisionSecondaryPtrOutput {
	return o.ToGatewayTunnelConfigsAutoProvisionSecondaryPtrOutputWithContext(context.Background())
}

func (o GatewayTunnelConfigsAutoProvisionSecondaryOutput) ToGatewayTunnelConfigsAutoProvisionSecondaryPtrOutputWithContext(ctx context.Context) GatewayTunnelConfigsAutoProvisionSecondaryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayTunnelConfigsAutoProvisionSecondary) *GatewayTunnelConfigsAutoProvisionSecondary {
		return &v
	}).(GatewayTunnelConfigsAutoProvisionSecondaryPtrOutput)
}

func (o GatewayTunnelConfigsAutoProvisionSecondaryOutput) ProbeIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GatewayTunnelConfigsAutoProvisionSecondary) []string { return v.ProbeIps }).(pulumi.StringArrayOutput)
}

// Optional, only needed if `varsOnly`==`false`
func (o GatewayTunnelConfigsAutoProvisionSecondaryOutput) WanNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GatewayTunnelConfigsAutoProvisionSecondary) []string { return v.WanNames }).(pulumi.StringArrayOutput)
}

type GatewayTunnelConfigsAutoProvisionSecondaryPtrOutput struct{ *pulumi.OutputState }

func (GatewayTunnelConfigsAutoProvisionSecondaryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayTunnelConfigsAutoProvisionSecondary)(nil)).Elem()
}

func (o GatewayTunnelConfigsAutoProvisionSecondaryPtrOutput) ToGatewayTunnelConfigsAutoProvisionSecondaryPtrOutput() GatewayTunnelConfigsAutoProvisionSecondaryPtrOutput {
	return o
}

func (o GatewayTunnelConfigsAutoProvisionSecondaryPtrOutput) ToGatewayTunnelConfigsAutoProvisionSecondaryPtrOutputWithContext(ctx context.Context) GatewayTunnelConfigsAutoProvisionSecondaryPtrOutput {
	return o
}

func (o GatewayTunnelConfigsAutoProvisionSecondaryPtrOutput) Elem() GatewayTunnelConfigsAutoProvisionSecondaryOutput {
	return o.ApplyT(func(v *GatewayTunnelConfigsAutoProvisionSecondary) GatewayTunnelConfigsAutoProvisionSecondary {
		if v != nil {
			return *v
		}
		var ret GatewayTunnelConfigsAutoProvisionSecondary
		return ret
	}).(GatewayTunnelConfigsAutoProvisionSecondaryOutput)
}

func (o GatewayTunnelConfigsAutoProvisionSecondaryPtrOutput) ProbeIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GatewayTunnelConfigsAutoProvisionSecondary) []string {
		if v == nil {
			return nil
		}
		return v.ProbeIps
	}).(pulumi.StringArrayOutput)
}

// Optional, only needed if `varsOnly`==`false`
func (o GatewayTunnelConfigsAutoProvisionSecondaryPtrOutput) WanNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GatewayTunnelConfigsAutoProvisionSecondary) []string {
		if v == nil {
			return nil
		}
		return v.WanNames
	}).(pulumi.StringArrayOutput)
}

type GatewayTunnelConfigsIkeProposal struct {
	// enum: `md5`, `sha1`, `sha2`
	AuthAlgo *string `pulumi:"authAlgo"`
	// enum:
	//   * 1
	//   * 2 (1024-bit)
	//   * 5
	//   * 14 (default, 2048-bit)
	//   * 15 (3072-bit)
	//   * 16 (4096-bit)
	//   * 19 (256-bit ECP)
	//   * 20 (384-bit ECP)
	//   * 21 (521-bit ECP)
	//   * 24 (2048-bit ECP)
	DhGroup *string `pulumi:"dhGroup"`
	// enum: `3des`, `aes128`, `aes256`, `aesGcm128`, `aesGcm256`
	EncAlgo *string `pulumi:"encAlgo"`
}

// GatewayTunnelConfigsIkeProposalInput is an input type that accepts GatewayTunnelConfigsIkeProposalArgs and GatewayTunnelConfigsIkeProposalOutput values.
// You can construct a concrete instance of `GatewayTunnelConfigsIkeProposalInput` via:
//
//	GatewayTunnelConfigsIkeProposalArgs{...}
type GatewayTunnelConfigsIkeProposalInput interface {
	pulumi.Input

	ToGatewayTunnelConfigsIkeProposalOutput() GatewayTunnelConfigsIkeProposalOutput
	ToGatewayTunnelConfigsIkeProposalOutputWithContext(context.Context) GatewayTunnelConfigsIkeProposalOutput
}

type GatewayTunnelConfigsIkeProposalArgs struct {
	// enum: `md5`, `sha1`, `sha2`
	AuthAlgo pulumi.StringPtrInput `pulumi:"authAlgo"`
	// enum:
	//   * 1
	//   * 2 (1024-bit)
	//   * 5
	//   * 14 (default, 2048-bit)
	//   * 15 (3072-bit)
	//   * 16 (4096-bit)
	//   * 19 (256-bit ECP)
	//   * 20 (384-bit ECP)
	//   * 21 (521-bit ECP)
	//   * 24 (2048-bit ECP)
	DhGroup pulumi.StringPtrInput `pulumi:"dhGroup"`
	// enum: `3des`, `aes128`, `aes256`, `aesGcm128`, `aesGcm256`
	EncAlgo pulumi.StringPtrInput `pulumi:"encAlgo"`
}

func (GatewayTunnelConfigsIkeProposalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayTunnelConfigsIkeProposal)(nil)).Elem()
}

func (i GatewayTunnelConfigsIkeProposalArgs) ToGatewayTunnelConfigsIkeProposalOutput() GatewayTunnelConfigsIkeProposalOutput {
	return i.ToGatewayTunnelConfigsIkeProposalOutputWithContext(context.Background())
}

func (i GatewayTunnelConfigsIkeProposalArgs) ToGatewayTunnelConfigsIkeProposalOutputWithContext(ctx context.Context) GatewayTunnelConfigsIkeProposalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayTunnelConfigsIkeProposalOutput)
}

// GatewayTunnelConfigsIkeProposalArrayInput is an input type that accepts GatewayTunnelConfigsIkeProposalArray and GatewayTunnelConfigsIkeProposalArrayOutput values.
// You can construct a concrete instance of `GatewayTunnelConfigsIkeProposalArrayInput` via:
//
//	GatewayTunnelConfigsIkeProposalArray{ GatewayTunnelConfigsIkeProposalArgs{...} }
type GatewayTunnelConfigsIkeProposalArrayInput interface {
	pulumi.Input

	ToGatewayTunnelConfigsIkeProposalArrayOutput() GatewayTunnelConfigsIkeProposalArrayOutput
	ToGatewayTunnelConfigsIkeProposalArrayOutputWithContext(context.Context) GatewayTunnelConfigsIkeProposalArrayOutput
}

type GatewayTunnelConfigsIkeProposalArray []GatewayTunnelConfigsIkeProposalInput

func (GatewayTunnelConfigsIkeProposalArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GatewayTunnelConfigsIkeProposal)(nil)).Elem()
}

func (i GatewayTunnelConfigsIkeProposalArray) ToGatewayTunnelConfigsIkeProposalArrayOutput() GatewayTunnelConfigsIkeProposalArrayOutput {
	return i.ToGatewayTunnelConfigsIkeProposalArrayOutputWithContext(context.Background())
}

func (i GatewayTunnelConfigsIkeProposalArray) ToGatewayTunnelConfigsIkeProposalArrayOutputWithContext(ctx context.Context) GatewayTunnelConfigsIkeProposalArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayTunnelConfigsIkeProposalArrayOutput)
}

type GatewayTunnelConfigsIkeProposalOutput struct{ *pulumi.OutputState }

func (GatewayTunnelConfigsIkeProposalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayTunnelConfigsIkeProposal)(nil)).Elem()
}

func (o GatewayTunnelConfigsIkeProposalOutput) ToGatewayTunnelConfigsIkeProposalOutput() GatewayTunnelConfigsIkeProposalOutput {
	return o
}

func (o GatewayTunnelConfigsIkeProposalOutput) ToGatewayTunnelConfigsIkeProposalOutputWithContext(ctx context.Context) GatewayTunnelConfigsIkeProposalOutput {
	return o
}

// enum: `md5`, `sha1`, `sha2`
func (o GatewayTunnelConfigsIkeProposalOutput) AuthAlgo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayTunnelConfigsIkeProposal) *string { return v.AuthAlgo }).(pulumi.StringPtrOutput)
}

// enum:
//   - 1
//   - 2 (1024-bit)
//   - 5
//   - 14 (default, 2048-bit)
//   - 15 (3072-bit)
//   - 16 (4096-bit)
//   - 19 (256-bit ECP)
//   - 20 (384-bit ECP)
//   - 21 (521-bit ECP)
//   - 24 (2048-bit ECP)
func (o GatewayTunnelConfigsIkeProposalOutput) DhGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayTunnelConfigsIkeProposal) *string { return v.DhGroup }).(pulumi.StringPtrOutput)
}

// enum: `3des`, `aes128`, `aes256`, `aesGcm128`, `aesGcm256`
func (o GatewayTunnelConfigsIkeProposalOutput) EncAlgo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayTunnelConfigsIkeProposal) *string { return v.EncAlgo }).(pulumi.StringPtrOutput)
}

type GatewayTunnelConfigsIkeProposalArrayOutput struct{ *pulumi.OutputState }

func (GatewayTunnelConfigsIkeProposalArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GatewayTunnelConfigsIkeProposal)(nil)).Elem()
}

func (o GatewayTunnelConfigsIkeProposalArrayOutput) ToGatewayTunnelConfigsIkeProposalArrayOutput() GatewayTunnelConfigsIkeProposalArrayOutput {
	return o
}

func (o GatewayTunnelConfigsIkeProposalArrayOutput) ToGatewayTunnelConfigsIkeProposalArrayOutputWithContext(ctx context.Context) GatewayTunnelConfigsIkeProposalArrayOutput {
	return o
}

func (o GatewayTunnelConfigsIkeProposalArrayOutput) Index(i pulumi.IntInput) GatewayTunnelConfigsIkeProposalOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GatewayTunnelConfigsIkeProposal {
		return vs[0].([]GatewayTunnelConfigsIkeProposal)[vs[1].(int)]
	}).(GatewayTunnelConfigsIkeProposalOutput)
}

type GatewayTunnelConfigsIpsecProposal struct {
	// enum: `md5`, `sha1`, `sha2`
	AuthAlgo *string `pulumi:"authAlgo"`
	// Only if `provider`==`custom-ipsec`. enum:
	//   * 1
	//   * 2 (1024-bit)
	//   * 5
	//   * 14 (default, 2048-bit)
	//   * 15 (3072-bit)
	//   * 16 (4096-bit)
	//   * 19 (256-bit ECP)
	//   * 20 (384-bit ECP)
	//   * 21 (521-bit ECP)
	//   * 24 (2048-bit ECP)
	DhGroup *string `pulumi:"dhGroup"`
	// enum: `3des`, `aes128`, `aes256`, `aesGcm128`, `aesGcm256`
	EncAlgo *string `pulumi:"encAlgo"`
}

// GatewayTunnelConfigsIpsecProposalInput is an input type that accepts GatewayTunnelConfigsIpsecProposalArgs and GatewayTunnelConfigsIpsecProposalOutput values.
// You can construct a concrete instance of `GatewayTunnelConfigsIpsecProposalInput` via:
//
//	GatewayTunnelConfigsIpsecProposalArgs{...}
type GatewayTunnelConfigsIpsecProposalInput interface {
	pulumi.Input

	ToGatewayTunnelConfigsIpsecProposalOutput() GatewayTunnelConfigsIpsecProposalOutput
	ToGatewayTunnelConfigsIpsecProposalOutputWithContext(context.Context) GatewayTunnelConfigsIpsecProposalOutput
}

type GatewayTunnelConfigsIpsecProposalArgs struct {
	// enum: `md5`, `sha1`, `sha2`
	AuthAlgo pulumi.StringPtrInput `pulumi:"authAlgo"`
	// Only if `provider`==`custom-ipsec`. enum:
	//   * 1
	//   * 2 (1024-bit)
	//   * 5
	//   * 14 (default, 2048-bit)
	//   * 15 (3072-bit)
	//   * 16 (4096-bit)
	//   * 19 (256-bit ECP)
	//   * 20 (384-bit ECP)
	//   * 21 (521-bit ECP)
	//   * 24 (2048-bit ECP)
	DhGroup pulumi.StringPtrInput `pulumi:"dhGroup"`
	// enum: `3des`, `aes128`, `aes256`, `aesGcm128`, `aesGcm256`
	EncAlgo pulumi.StringPtrInput `pulumi:"encAlgo"`
}

func (GatewayTunnelConfigsIpsecProposalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayTunnelConfigsIpsecProposal)(nil)).Elem()
}

func (i GatewayTunnelConfigsIpsecProposalArgs) ToGatewayTunnelConfigsIpsecProposalOutput() GatewayTunnelConfigsIpsecProposalOutput {
	return i.ToGatewayTunnelConfigsIpsecProposalOutputWithContext(context.Background())
}

func (i GatewayTunnelConfigsIpsecProposalArgs) ToGatewayTunnelConfigsIpsecProposalOutputWithContext(ctx context.Context) GatewayTunnelConfigsIpsecProposalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayTunnelConfigsIpsecProposalOutput)
}

// GatewayTunnelConfigsIpsecProposalArrayInput is an input type that accepts GatewayTunnelConfigsIpsecProposalArray and GatewayTunnelConfigsIpsecProposalArrayOutput values.
// You can construct a concrete instance of `GatewayTunnelConfigsIpsecProposalArrayInput` via:
//
//	GatewayTunnelConfigsIpsecProposalArray{ GatewayTunnelConfigsIpsecProposalArgs{...} }
type GatewayTunnelConfigsIpsecProposalArrayInput interface {
	pulumi.Input

	ToGatewayTunnelConfigsIpsecProposalArrayOutput() GatewayTunnelConfigsIpsecProposalArrayOutput
	ToGatewayTunnelConfigsIpsecProposalArrayOutputWithContext(context.Context) GatewayTunnelConfigsIpsecProposalArrayOutput
}

type GatewayTunnelConfigsIpsecProposalArray []GatewayTunnelConfigsIpsecProposalInput

func (GatewayTunnelConfigsIpsecProposalArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GatewayTunnelConfigsIpsecProposal)(nil)).Elem()
}

func (i GatewayTunnelConfigsIpsecProposalArray) ToGatewayTunnelConfigsIpsecProposalArrayOutput() GatewayTunnelConfigsIpsecProposalArrayOutput {
	return i.ToGatewayTunnelConfigsIpsecProposalArrayOutputWithContext(context.Background())
}

func (i GatewayTunnelConfigsIpsecProposalArray) ToGatewayTunnelConfigsIpsecProposalArrayOutputWithContext(ctx context.Context) GatewayTunnelConfigsIpsecProposalArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayTunnelConfigsIpsecProposalArrayOutput)
}

type GatewayTunnelConfigsIpsecProposalOutput struct{ *pulumi.OutputState }

func (GatewayTunnelConfigsIpsecProposalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayTunnelConfigsIpsecProposal)(nil)).Elem()
}

func (o GatewayTunnelConfigsIpsecProposalOutput) ToGatewayTunnelConfigsIpsecProposalOutput() GatewayTunnelConfigsIpsecProposalOutput {
	return o
}

func (o GatewayTunnelConfigsIpsecProposalOutput) ToGatewayTunnelConfigsIpsecProposalOutputWithContext(ctx context.Context) GatewayTunnelConfigsIpsecProposalOutput {
	return o
}

// enum: `md5`, `sha1`, `sha2`
func (o GatewayTunnelConfigsIpsecProposalOutput) AuthAlgo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayTunnelConfigsIpsecProposal) *string { return v.AuthAlgo }).(pulumi.StringPtrOutput)
}

// Only if `provider`==`custom-ipsec`. enum:
//   - 1
//   - 2 (1024-bit)
//   - 5
//   - 14 (default, 2048-bit)
//   - 15 (3072-bit)
//   - 16 (4096-bit)
//   - 19 (256-bit ECP)
//   - 20 (384-bit ECP)
//   - 21 (521-bit ECP)
//   - 24 (2048-bit ECP)
func (o GatewayTunnelConfigsIpsecProposalOutput) DhGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayTunnelConfigsIpsecProposal) *string { return v.DhGroup }).(pulumi.StringPtrOutput)
}

// enum: `3des`, `aes128`, `aes256`, `aesGcm128`, `aesGcm256`
func (o GatewayTunnelConfigsIpsecProposalOutput) EncAlgo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayTunnelConfigsIpsecProposal) *string { return v.EncAlgo }).(pulumi.StringPtrOutput)
}

type GatewayTunnelConfigsIpsecProposalArrayOutput struct{ *pulumi.OutputState }

func (GatewayTunnelConfigsIpsecProposalArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GatewayTunnelConfigsIpsecProposal)(nil)).Elem()
}

func (o GatewayTunnelConfigsIpsecProposalArrayOutput) ToGatewayTunnelConfigsIpsecProposalArrayOutput() GatewayTunnelConfigsIpsecProposalArrayOutput {
	return o
}

func (o GatewayTunnelConfigsIpsecProposalArrayOutput) ToGatewayTunnelConfigsIpsecProposalArrayOutputWithContext(ctx context.Context) GatewayTunnelConfigsIpsecProposalArrayOutput {
	return o
}

func (o GatewayTunnelConfigsIpsecProposalArrayOutput) Index(i pulumi.IntInput) GatewayTunnelConfigsIpsecProposalOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GatewayTunnelConfigsIpsecProposal {
		return vs[0].([]GatewayTunnelConfigsIpsecProposal)[vs[1].(int)]
	}).(GatewayTunnelConfigsIpsecProposalOutput)
}

type GatewayTunnelConfigsPrimary struct {
	Hosts []string `pulumi:"hosts"`
	// Only if `provider`==`zscaler-gre`, `provider`==`jse-ipsec`, `provider`==`custom-ipsec` or `provider`==`custom-gre`
	InternalIps []string `pulumi:"internalIps"`
	ProbeIps    []string `pulumi:"probeIps"`
	// Only if  `provider`==`jse-ipsec` or `provider`==`custom-ipsec`
	RemoteIds []string `pulumi:"remoteIds"`
	WanNames  []string `pulumi:"wanNames"`
}

// GatewayTunnelConfigsPrimaryInput is an input type that accepts GatewayTunnelConfigsPrimaryArgs and GatewayTunnelConfigsPrimaryOutput values.
// You can construct a concrete instance of `GatewayTunnelConfigsPrimaryInput` via:
//
//	GatewayTunnelConfigsPrimaryArgs{...}
type GatewayTunnelConfigsPrimaryInput interface {
	pulumi.Input

	ToGatewayTunnelConfigsPrimaryOutput() GatewayTunnelConfigsPrimaryOutput
	ToGatewayTunnelConfigsPrimaryOutputWithContext(context.Context) GatewayTunnelConfigsPrimaryOutput
}

type GatewayTunnelConfigsPrimaryArgs struct {
	Hosts pulumi.StringArrayInput `pulumi:"hosts"`
	// Only if `provider`==`zscaler-gre`, `provider`==`jse-ipsec`, `provider`==`custom-ipsec` or `provider`==`custom-gre`
	InternalIps pulumi.StringArrayInput `pulumi:"internalIps"`
	ProbeIps    pulumi.StringArrayInput `pulumi:"probeIps"`
	// Only if  `provider`==`jse-ipsec` or `provider`==`custom-ipsec`
	RemoteIds pulumi.StringArrayInput `pulumi:"remoteIds"`
	WanNames  pulumi.StringArrayInput `pulumi:"wanNames"`
}

func (GatewayTunnelConfigsPrimaryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayTunnelConfigsPrimary)(nil)).Elem()
}

func (i GatewayTunnelConfigsPrimaryArgs) ToGatewayTunnelConfigsPrimaryOutput() GatewayTunnelConfigsPrimaryOutput {
	return i.ToGatewayTunnelConfigsPrimaryOutputWithContext(context.Background())
}

func (i GatewayTunnelConfigsPrimaryArgs) ToGatewayTunnelConfigsPrimaryOutputWithContext(ctx context.Context) GatewayTunnelConfigsPrimaryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayTunnelConfigsPrimaryOutput)
}

func (i GatewayTunnelConfigsPrimaryArgs) ToGatewayTunnelConfigsPrimaryPtrOutput() GatewayTunnelConfigsPrimaryPtrOutput {
	return i.ToGatewayTunnelConfigsPrimaryPtrOutputWithContext(context.Background())
}

func (i GatewayTunnelConfigsPrimaryArgs) ToGatewayTunnelConfigsPrimaryPtrOutputWithContext(ctx context.Context) GatewayTunnelConfigsPrimaryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayTunnelConfigsPrimaryOutput).ToGatewayTunnelConfigsPrimaryPtrOutputWithContext(ctx)
}

// GatewayTunnelConfigsPrimaryPtrInput is an input type that accepts GatewayTunnelConfigsPrimaryArgs, GatewayTunnelConfigsPrimaryPtr and GatewayTunnelConfigsPrimaryPtrOutput values.
// You can construct a concrete instance of `GatewayTunnelConfigsPrimaryPtrInput` via:
//
//	        GatewayTunnelConfigsPrimaryArgs{...}
//
//	or:
//
//	        nil
type GatewayTunnelConfigsPrimaryPtrInput interface {
	pulumi.Input

	ToGatewayTunnelConfigsPrimaryPtrOutput() GatewayTunnelConfigsPrimaryPtrOutput
	ToGatewayTunnelConfigsPrimaryPtrOutputWithContext(context.Context) GatewayTunnelConfigsPrimaryPtrOutput
}

type gatewayTunnelConfigsPrimaryPtrType GatewayTunnelConfigsPrimaryArgs

func GatewayTunnelConfigsPrimaryPtr(v *GatewayTunnelConfigsPrimaryArgs) GatewayTunnelConfigsPrimaryPtrInput {
	return (*gatewayTunnelConfigsPrimaryPtrType)(v)
}

func (*gatewayTunnelConfigsPrimaryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayTunnelConfigsPrimary)(nil)).Elem()
}

func (i *gatewayTunnelConfigsPrimaryPtrType) ToGatewayTunnelConfigsPrimaryPtrOutput() GatewayTunnelConfigsPrimaryPtrOutput {
	return i.ToGatewayTunnelConfigsPrimaryPtrOutputWithContext(context.Background())
}

func (i *gatewayTunnelConfigsPrimaryPtrType) ToGatewayTunnelConfigsPrimaryPtrOutputWithContext(ctx context.Context) GatewayTunnelConfigsPrimaryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayTunnelConfigsPrimaryPtrOutput)
}

type GatewayTunnelConfigsPrimaryOutput struct{ *pulumi.OutputState }

func (GatewayTunnelConfigsPrimaryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayTunnelConfigsPrimary)(nil)).Elem()
}

func (o GatewayTunnelConfigsPrimaryOutput) ToGatewayTunnelConfigsPrimaryOutput() GatewayTunnelConfigsPrimaryOutput {
	return o
}

func (o GatewayTunnelConfigsPrimaryOutput) ToGatewayTunnelConfigsPrimaryOutputWithContext(ctx context.Context) GatewayTunnelConfigsPrimaryOutput {
	return o
}

func (o GatewayTunnelConfigsPrimaryOutput) ToGatewayTunnelConfigsPrimaryPtrOutput() GatewayTunnelConfigsPrimaryPtrOutput {
	return o.ToGatewayTunnelConfigsPrimaryPtrOutputWithContext(context.Background())
}

func (o GatewayTunnelConfigsPrimaryOutput) ToGatewayTunnelConfigsPrimaryPtrOutputWithContext(ctx context.Context) GatewayTunnelConfigsPrimaryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayTunnelConfigsPrimary) *GatewayTunnelConfigsPrimary {
		return &v
	}).(GatewayTunnelConfigsPrimaryPtrOutput)
}

func (o GatewayTunnelConfigsPrimaryOutput) Hosts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GatewayTunnelConfigsPrimary) []string { return v.Hosts }).(pulumi.StringArrayOutput)
}

// Only if `provider`==`zscaler-gre`, `provider`==`jse-ipsec`, `provider`==`custom-ipsec` or `provider`==`custom-gre`
func (o GatewayTunnelConfigsPrimaryOutput) InternalIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GatewayTunnelConfigsPrimary) []string { return v.InternalIps }).(pulumi.StringArrayOutput)
}

func (o GatewayTunnelConfigsPrimaryOutput) ProbeIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GatewayTunnelConfigsPrimary) []string { return v.ProbeIps }).(pulumi.StringArrayOutput)
}

// Only if  `provider`==`jse-ipsec` or `provider`==`custom-ipsec`
func (o GatewayTunnelConfigsPrimaryOutput) RemoteIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GatewayTunnelConfigsPrimary) []string { return v.RemoteIds }).(pulumi.StringArrayOutput)
}

func (o GatewayTunnelConfigsPrimaryOutput) WanNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GatewayTunnelConfigsPrimary) []string { return v.WanNames }).(pulumi.StringArrayOutput)
}

type GatewayTunnelConfigsPrimaryPtrOutput struct{ *pulumi.OutputState }

func (GatewayTunnelConfigsPrimaryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayTunnelConfigsPrimary)(nil)).Elem()
}

func (o GatewayTunnelConfigsPrimaryPtrOutput) ToGatewayTunnelConfigsPrimaryPtrOutput() GatewayTunnelConfigsPrimaryPtrOutput {
	return o
}

func (o GatewayTunnelConfigsPrimaryPtrOutput) ToGatewayTunnelConfigsPrimaryPtrOutputWithContext(ctx context.Context) GatewayTunnelConfigsPrimaryPtrOutput {
	return o
}

func (o GatewayTunnelConfigsPrimaryPtrOutput) Elem() GatewayTunnelConfigsPrimaryOutput {
	return o.ApplyT(func(v *GatewayTunnelConfigsPrimary) GatewayTunnelConfigsPrimary {
		if v != nil {
			return *v
		}
		var ret GatewayTunnelConfigsPrimary
		return ret
	}).(GatewayTunnelConfigsPrimaryOutput)
}

func (o GatewayTunnelConfigsPrimaryPtrOutput) Hosts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GatewayTunnelConfigsPrimary) []string {
		if v == nil {
			return nil
		}
		return v.Hosts
	}).(pulumi.StringArrayOutput)
}

// Only if `provider`==`zscaler-gre`, `provider`==`jse-ipsec`, `provider`==`custom-ipsec` or `provider`==`custom-gre`
func (o GatewayTunnelConfigsPrimaryPtrOutput) InternalIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GatewayTunnelConfigsPrimary) []string {
		if v == nil {
			return nil
		}
		return v.InternalIps
	}).(pulumi.StringArrayOutput)
}

func (o GatewayTunnelConfigsPrimaryPtrOutput) ProbeIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GatewayTunnelConfigsPrimary) []string {
		if v == nil {
			return nil
		}
		return v.ProbeIps
	}).(pulumi.StringArrayOutput)
}

// Only if  `provider`==`jse-ipsec` or `provider`==`custom-ipsec`
func (o GatewayTunnelConfigsPrimaryPtrOutput) RemoteIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GatewayTunnelConfigsPrimary) []string {
		if v == nil {
			return nil
		}
		return v.RemoteIds
	}).(pulumi.StringArrayOutput)
}

func (o GatewayTunnelConfigsPrimaryPtrOutput) WanNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GatewayTunnelConfigsPrimary) []string {
		if v == nil {
			return nil
		}
		return v.WanNames
	}).(pulumi.StringArrayOutput)
}

type GatewayTunnelConfigsProbe struct {
	// How often to trigger the probe
	Interval *int `pulumi:"interval"`
	// Number of consecutive misses before declaring the tunnel down
	Threshold *int `pulumi:"threshold"`
	// Time within which to complete the connectivity check
	Timeout *int `pulumi:"timeout"`
	// enum: `http`, `icmp`
	Type *string `pulumi:"type"`
}

// GatewayTunnelConfigsProbeInput is an input type that accepts GatewayTunnelConfigsProbeArgs and GatewayTunnelConfigsProbeOutput values.
// You can construct a concrete instance of `GatewayTunnelConfigsProbeInput` via:
//
//	GatewayTunnelConfigsProbeArgs{...}
type GatewayTunnelConfigsProbeInput interface {
	pulumi.Input

	ToGatewayTunnelConfigsProbeOutput() GatewayTunnelConfigsProbeOutput
	ToGatewayTunnelConfigsProbeOutputWithContext(context.Context) GatewayTunnelConfigsProbeOutput
}

type GatewayTunnelConfigsProbeArgs struct {
	// How often to trigger the probe
	Interval pulumi.IntPtrInput `pulumi:"interval"`
	// Number of consecutive misses before declaring the tunnel down
	Threshold pulumi.IntPtrInput `pulumi:"threshold"`
	// Time within which to complete the connectivity check
	Timeout pulumi.IntPtrInput `pulumi:"timeout"`
	// enum: `http`, `icmp`
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (GatewayTunnelConfigsProbeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayTunnelConfigsProbe)(nil)).Elem()
}

func (i GatewayTunnelConfigsProbeArgs) ToGatewayTunnelConfigsProbeOutput() GatewayTunnelConfigsProbeOutput {
	return i.ToGatewayTunnelConfigsProbeOutputWithContext(context.Background())
}

func (i GatewayTunnelConfigsProbeArgs) ToGatewayTunnelConfigsProbeOutputWithContext(ctx context.Context) GatewayTunnelConfigsProbeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayTunnelConfigsProbeOutput)
}

func (i GatewayTunnelConfigsProbeArgs) ToGatewayTunnelConfigsProbePtrOutput() GatewayTunnelConfigsProbePtrOutput {
	return i.ToGatewayTunnelConfigsProbePtrOutputWithContext(context.Background())
}

func (i GatewayTunnelConfigsProbeArgs) ToGatewayTunnelConfigsProbePtrOutputWithContext(ctx context.Context) GatewayTunnelConfigsProbePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayTunnelConfigsProbeOutput).ToGatewayTunnelConfigsProbePtrOutputWithContext(ctx)
}

// GatewayTunnelConfigsProbePtrInput is an input type that accepts GatewayTunnelConfigsProbeArgs, GatewayTunnelConfigsProbePtr and GatewayTunnelConfigsProbePtrOutput values.
// You can construct a concrete instance of `GatewayTunnelConfigsProbePtrInput` via:
//
//	        GatewayTunnelConfigsProbeArgs{...}
//
//	or:
//
//	        nil
type GatewayTunnelConfigsProbePtrInput interface {
	pulumi.Input

	ToGatewayTunnelConfigsProbePtrOutput() GatewayTunnelConfigsProbePtrOutput
	ToGatewayTunnelConfigsProbePtrOutputWithContext(context.Context) GatewayTunnelConfigsProbePtrOutput
}

type gatewayTunnelConfigsProbePtrType GatewayTunnelConfigsProbeArgs

func GatewayTunnelConfigsProbePtr(v *GatewayTunnelConfigsProbeArgs) GatewayTunnelConfigsProbePtrInput {
	return (*gatewayTunnelConfigsProbePtrType)(v)
}

func (*gatewayTunnelConfigsProbePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayTunnelConfigsProbe)(nil)).Elem()
}

func (i *gatewayTunnelConfigsProbePtrType) ToGatewayTunnelConfigsProbePtrOutput() GatewayTunnelConfigsProbePtrOutput {
	return i.ToGatewayTunnelConfigsProbePtrOutputWithContext(context.Background())
}

func (i *gatewayTunnelConfigsProbePtrType) ToGatewayTunnelConfigsProbePtrOutputWithContext(ctx context.Context) GatewayTunnelConfigsProbePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayTunnelConfigsProbePtrOutput)
}

type GatewayTunnelConfigsProbeOutput struct{ *pulumi.OutputState }

func (GatewayTunnelConfigsProbeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayTunnelConfigsProbe)(nil)).Elem()
}

func (o GatewayTunnelConfigsProbeOutput) ToGatewayTunnelConfigsProbeOutput() GatewayTunnelConfigsProbeOutput {
	return o
}

func (o GatewayTunnelConfigsProbeOutput) ToGatewayTunnelConfigsProbeOutputWithContext(ctx context.Context) GatewayTunnelConfigsProbeOutput {
	return o
}

func (o GatewayTunnelConfigsProbeOutput) ToGatewayTunnelConfigsProbePtrOutput() GatewayTunnelConfigsProbePtrOutput {
	return o.ToGatewayTunnelConfigsProbePtrOutputWithContext(context.Background())
}

func (o GatewayTunnelConfigsProbeOutput) ToGatewayTunnelConfigsProbePtrOutputWithContext(ctx context.Context) GatewayTunnelConfigsProbePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayTunnelConfigsProbe) *GatewayTunnelConfigsProbe {
		return &v
	}).(GatewayTunnelConfigsProbePtrOutput)
}

// How often to trigger the probe
func (o GatewayTunnelConfigsProbeOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GatewayTunnelConfigsProbe) *int { return v.Interval }).(pulumi.IntPtrOutput)
}

// Number of consecutive misses before declaring the tunnel down
func (o GatewayTunnelConfigsProbeOutput) Threshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GatewayTunnelConfigsProbe) *int { return v.Threshold }).(pulumi.IntPtrOutput)
}

// Time within which to complete the connectivity check
func (o GatewayTunnelConfigsProbeOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GatewayTunnelConfigsProbe) *int { return v.Timeout }).(pulumi.IntPtrOutput)
}

// enum: `http`, `icmp`
func (o GatewayTunnelConfigsProbeOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayTunnelConfigsProbe) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type GatewayTunnelConfigsProbePtrOutput struct{ *pulumi.OutputState }

func (GatewayTunnelConfigsProbePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayTunnelConfigsProbe)(nil)).Elem()
}

func (o GatewayTunnelConfigsProbePtrOutput) ToGatewayTunnelConfigsProbePtrOutput() GatewayTunnelConfigsProbePtrOutput {
	return o
}

func (o GatewayTunnelConfigsProbePtrOutput) ToGatewayTunnelConfigsProbePtrOutputWithContext(ctx context.Context) GatewayTunnelConfigsProbePtrOutput {
	return o
}

func (o GatewayTunnelConfigsProbePtrOutput) Elem() GatewayTunnelConfigsProbeOutput {
	return o.ApplyT(func(v *GatewayTunnelConfigsProbe) GatewayTunnelConfigsProbe {
		if v != nil {
			return *v
		}
		var ret GatewayTunnelConfigsProbe
		return ret
	}).(GatewayTunnelConfigsProbeOutput)
}

// How often to trigger the probe
func (o GatewayTunnelConfigsProbePtrOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GatewayTunnelConfigsProbe) *int {
		if v == nil {
			return nil
		}
		return v.Interval
	}).(pulumi.IntPtrOutput)
}

// Number of consecutive misses before declaring the tunnel down
func (o GatewayTunnelConfigsProbePtrOutput) Threshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GatewayTunnelConfigsProbe) *int {
		if v == nil {
			return nil
		}
		return v.Threshold
	}).(pulumi.IntPtrOutput)
}

// Time within which to complete the connectivity check
func (o GatewayTunnelConfigsProbePtrOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GatewayTunnelConfigsProbe) *int {
		if v == nil {
			return nil
		}
		return v.Timeout
	}).(pulumi.IntPtrOutput)
}

// enum: `http`, `icmp`
func (o GatewayTunnelConfigsProbePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayTunnelConfigsProbe) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

type GatewayTunnelConfigsSecondary struct {
	Hosts []string `pulumi:"hosts"`
	// Only if `provider`==`zscaler-gre`, `provider`==`jse-ipsec`, `provider`==`custom-ipsec` or `provider`==`custom-gre`
	InternalIps []string `pulumi:"internalIps"`
	ProbeIps    []string `pulumi:"probeIps"`
	// Only if  `provider`==`jse-ipsec` or `provider`==`custom-ipsec`
	RemoteIds []string `pulumi:"remoteIds"`
	WanNames  []string `pulumi:"wanNames"`
}

// GatewayTunnelConfigsSecondaryInput is an input type that accepts GatewayTunnelConfigsSecondaryArgs and GatewayTunnelConfigsSecondaryOutput values.
// You can construct a concrete instance of `GatewayTunnelConfigsSecondaryInput` via:
//
//	GatewayTunnelConfigsSecondaryArgs{...}
type GatewayTunnelConfigsSecondaryInput interface {
	pulumi.Input

	ToGatewayTunnelConfigsSecondaryOutput() GatewayTunnelConfigsSecondaryOutput
	ToGatewayTunnelConfigsSecondaryOutputWithContext(context.Context) GatewayTunnelConfigsSecondaryOutput
}

type GatewayTunnelConfigsSecondaryArgs struct {
	Hosts pulumi.StringArrayInput `pulumi:"hosts"`
	// Only if `provider`==`zscaler-gre`, `provider`==`jse-ipsec`, `provider`==`custom-ipsec` or `provider`==`custom-gre`
	InternalIps pulumi.StringArrayInput `pulumi:"internalIps"`
	ProbeIps    pulumi.StringArrayInput `pulumi:"probeIps"`
	// Only if  `provider`==`jse-ipsec` or `provider`==`custom-ipsec`
	RemoteIds pulumi.StringArrayInput `pulumi:"remoteIds"`
	WanNames  pulumi.StringArrayInput `pulumi:"wanNames"`
}

func (GatewayTunnelConfigsSecondaryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayTunnelConfigsSecondary)(nil)).Elem()
}

func (i GatewayTunnelConfigsSecondaryArgs) ToGatewayTunnelConfigsSecondaryOutput() GatewayTunnelConfigsSecondaryOutput {
	return i.ToGatewayTunnelConfigsSecondaryOutputWithContext(context.Background())
}

func (i GatewayTunnelConfigsSecondaryArgs) ToGatewayTunnelConfigsSecondaryOutputWithContext(ctx context.Context) GatewayTunnelConfigsSecondaryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayTunnelConfigsSecondaryOutput)
}

func (i GatewayTunnelConfigsSecondaryArgs) ToGatewayTunnelConfigsSecondaryPtrOutput() GatewayTunnelConfigsSecondaryPtrOutput {
	return i.ToGatewayTunnelConfigsSecondaryPtrOutputWithContext(context.Background())
}

func (i GatewayTunnelConfigsSecondaryArgs) ToGatewayTunnelConfigsSecondaryPtrOutputWithContext(ctx context.Context) GatewayTunnelConfigsSecondaryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayTunnelConfigsSecondaryOutput).ToGatewayTunnelConfigsSecondaryPtrOutputWithContext(ctx)
}

// GatewayTunnelConfigsSecondaryPtrInput is an input type that accepts GatewayTunnelConfigsSecondaryArgs, GatewayTunnelConfigsSecondaryPtr and GatewayTunnelConfigsSecondaryPtrOutput values.
// You can construct a concrete instance of `GatewayTunnelConfigsSecondaryPtrInput` via:
//
//	        GatewayTunnelConfigsSecondaryArgs{...}
//
//	or:
//
//	        nil
type GatewayTunnelConfigsSecondaryPtrInput interface {
	pulumi.Input

	ToGatewayTunnelConfigsSecondaryPtrOutput() GatewayTunnelConfigsSecondaryPtrOutput
	ToGatewayTunnelConfigsSecondaryPtrOutputWithContext(context.Context) GatewayTunnelConfigsSecondaryPtrOutput
}

type gatewayTunnelConfigsSecondaryPtrType GatewayTunnelConfigsSecondaryArgs

func GatewayTunnelConfigsSecondaryPtr(v *GatewayTunnelConfigsSecondaryArgs) GatewayTunnelConfigsSecondaryPtrInput {
	return (*gatewayTunnelConfigsSecondaryPtrType)(v)
}

func (*gatewayTunnelConfigsSecondaryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayTunnelConfigsSecondary)(nil)).Elem()
}

func (i *gatewayTunnelConfigsSecondaryPtrType) ToGatewayTunnelConfigsSecondaryPtrOutput() GatewayTunnelConfigsSecondaryPtrOutput {
	return i.ToGatewayTunnelConfigsSecondaryPtrOutputWithContext(context.Background())
}

func (i *gatewayTunnelConfigsSecondaryPtrType) ToGatewayTunnelConfigsSecondaryPtrOutputWithContext(ctx context.Context) GatewayTunnelConfigsSecondaryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayTunnelConfigsSecondaryPtrOutput)
}

type GatewayTunnelConfigsSecondaryOutput struct{ *pulumi.OutputState }

func (GatewayTunnelConfigsSecondaryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayTunnelConfigsSecondary)(nil)).Elem()
}

func (o GatewayTunnelConfigsSecondaryOutput) ToGatewayTunnelConfigsSecondaryOutput() GatewayTunnelConfigsSecondaryOutput {
	return o
}

func (o GatewayTunnelConfigsSecondaryOutput) ToGatewayTunnelConfigsSecondaryOutputWithContext(ctx context.Context) GatewayTunnelConfigsSecondaryOutput {
	return o
}

func (o GatewayTunnelConfigsSecondaryOutput) ToGatewayTunnelConfigsSecondaryPtrOutput() GatewayTunnelConfigsSecondaryPtrOutput {
	return o.ToGatewayTunnelConfigsSecondaryPtrOutputWithContext(context.Background())
}

func (o GatewayTunnelConfigsSecondaryOutput) ToGatewayTunnelConfigsSecondaryPtrOutputWithContext(ctx context.Context) GatewayTunnelConfigsSecondaryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayTunnelConfigsSecondary) *GatewayTunnelConfigsSecondary {
		return &v
	}).(GatewayTunnelConfigsSecondaryPtrOutput)
}

func (o GatewayTunnelConfigsSecondaryOutput) Hosts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GatewayTunnelConfigsSecondary) []string { return v.Hosts }).(pulumi.StringArrayOutput)
}

// Only if `provider`==`zscaler-gre`, `provider`==`jse-ipsec`, `provider`==`custom-ipsec` or `provider`==`custom-gre`
func (o GatewayTunnelConfigsSecondaryOutput) InternalIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GatewayTunnelConfigsSecondary) []string { return v.InternalIps }).(pulumi.StringArrayOutput)
}

func (o GatewayTunnelConfigsSecondaryOutput) ProbeIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GatewayTunnelConfigsSecondary) []string { return v.ProbeIps }).(pulumi.StringArrayOutput)
}

// Only if  `provider`==`jse-ipsec` or `provider`==`custom-ipsec`
func (o GatewayTunnelConfigsSecondaryOutput) RemoteIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GatewayTunnelConfigsSecondary) []string { return v.RemoteIds }).(pulumi.StringArrayOutput)
}

func (o GatewayTunnelConfigsSecondaryOutput) WanNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GatewayTunnelConfigsSecondary) []string { return v.WanNames }).(pulumi.StringArrayOutput)
}

type GatewayTunnelConfigsSecondaryPtrOutput struct{ *pulumi.OutputState }

func (GatewayTunnelConfigsSecondaryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayTunnelConfigsSecondary)(nil)).Elem()
}

func (o GatewayTunnelConfigsSecondaryPtrOutput) ToGatewayTunnelConfigsSecondaryPtrOutput() GatewayTunnelConfigsSecondaryPtrOutput {
	return o
}

func (o GatewayTunnelConfigsSecondaryPtrOutput) ToGatewayTunnelConfigsSecondaryPtrOutputWithContext(ctx context.Context) GatewayTunnelConfigsSecondaryPtrOutput {
	return o
}

func (o GatewayTunnelConfigsSecondaryPtrOutput) Elem() GatewayTunnelConfigsSecondaryOutput {
	return o.ApplyT(func(v *GatewayTunnelConfigsSecondary) GatewayTunnelConfigsSecondary {
		if v != nil {
			return *v
		}
		var ret GatewayTunnelConfigsSecondary
		return ret
	}).(GatewayTunnelConfigsSecondaryOutput)
}

func (o GatewayTunnelConfigsSecondaryPtrOutput) Hosts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GatewayTunnelConfigsSecondary) []string {
		if v == nil {
			return nil
		}
		return v.Hosts
	}).(pulumi.StringArrayOutput)
}

// Only if `provider`==`zscaler-gre`, `provider`==`jse-ipsec`, `provider`==`custom-ipsec` or `provider`==`custom-gre`
func (o GatewayTunnelConfigsSecondaryPtrOutput) InternalIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GatewayTunnelConfigsSecondary) []string {
		if v == nil {
			return nil
		}
		return v.InternalIps
	}).(pulumi.StringArrayOutput)
}

func (o GatewayTunnelConfigsSecondaryPtrOutput) ProbeIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GatewayTunnelConfigsSecondary) []string {
		if v == nil {
			return nil
		}
		return v.ProbeIps
	}).(pulumi.StringArrayOutput)
}

// Only if  `provider`==`jse-ipsec` or `provider`==`custom-ipsec`
func (o GatewayTunnelConfigsSecondaryPtrOutput) RemoteIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GatewayTunnelConfigsSecondary) []string {
		if v == nil {
			return nil
		}
		return v.RemoteIds
	}).(pulumi.StringArrayOutput)
}

func (o GatewayTunnelConfigsSecondaryPtrOutput) WanNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GatewayTunnelConfigsSecondary) []string {
		if v == nil {
			return nil
		}
		return v.WanNames
	}).(pulumi.StringArrayOutput)
}

type GatewayTunnelProviderOptions struct {
	// For jse-ipsec, this allows provisioning of adequate resource on JSE. Make sure adequate licenses are added
	Jse *GatewayTunnelProviderOptionsJse `pulumi:"jse"`
	// For zscaler-ipsec and zscaler-gre
	Zscaler *GatewayTunnelProviderOptionsZscaler `pulumi:"zscaler"`
}

// GatewayTunnelProviderOptionsInput is an input type that accepts GatewayTunnelProviderOptionsArgs and GatewayTunnelProviderOptionsOutput values.
// You can construct a concrete instance of `GatewayTunnelProviderOptionsInput` via:
//
//	GatewayTunnelProviderOptionsArgs{...}
type GatewayTunnelProviderOptionsInput interface {
	pulumi.Input

	ToGatewayTunnelProviderOptionsOutput() GatewayTunnelProviderOptionsOutput
	ToGatewayTunnelProviderOptionsOutputWithContext(context.Context) GatewayTunnelProviderOptionsOutput
}

type GatewayTunnelProviderOptionsArgs struct {
	// For jse-ipsec, this allows provisioning of adequate resource on JSE. Make sure adequate licenses are added
	Jse GatewayTunnelProviderOptionsJsePtrInput `pulumi:"jse"`
	// For zscaler-ipsec and zscaler-gre
	Zscaler GatewayTunnelProviderOptionsZscalerPtrInput `pulumi:"zscaler"`
}

func (GatewayTunnelProviderOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayTunnelProviderOptions)(nil)).Elem()
}

func (i GatewayTunnelProviderOptionsArgs) ToGatewayTunnelProviderOptionsOutput() GatewayTunnelProviderOptionsOutput {
	return i.ToGatewayTunnelProviderOptionsOutputWithContext(context.Background())
}

func (i GatewayTunnelProviderOptionsArgs) ToGatewayTunnelProviderOptionsOutputWithContext(ctx context.Context) GatewayTunnelProviderOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayTunnelProviderOptionsOutput)
}

func (i GatewayTunnelProviderOptionsArgs) ToGatewayTunnelProviderOptionsPtrOutput() GatewayTunnelProviderOptionsPtrOutput {
	return i.ToGatewayTunnelProviderOptionsPtrOutputWithContext(context.Background())
}

func (i GatewayTunnelProviderOptionsArgs) ToGatewayTunnelProviderOptionsPtrOutputWithContext(ctx context.Context) GatewayTunnelProviderOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayTunnelProviderOptionsOutput).ToGatewayTunnelProviderOptionsPtrOutputWithContext(ctx)
}

// GatewayTunnelProviderOptionsPtrInput is an input type that accepts GatewayTunnelProviderOptionsArgs, GatewayTunnelProviderOptionsPtr and GatewayTunnelProviderOptionsPtrOutput values.
// You can construct a concrete instance of `GatewayTunnelProviderOptionsPtrInput` via:
//
//	        GatewayTunnelProviderOptionsArgs{...}
//
//	or:
//
//	        nil
type GatewayTunnelProviderOptionsPtrInput interface {
	pulumi.Input

	ToGatewayTunnelProviderOptionsPtrOutput() GatewayTunnelProviderOptionsPtrOutput
	ToGatewayTunnelProviderOptionsPtrOutputWithContext(context.Context) GatewayTunnelProviderOptionsPtrOutput
}

type gatewayTunnelProviderOptionsPtrType GatewayTunnelProviderOptionsArgs

func GatewayTunnelProviderOptionsPtr(v *GatewayTunnelProviderOptionsArgs) GatewayTunnelProviderOptionsPtrInput {
	return (*gatewayTunnelProviderOptionsPtrType)(v)
}

func (*gatewayTunnelProviderOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayTunnelProviderOptions)(nil)).Elem()
}

func (i *gatewayTunnelProviderOptionsPtrType) ToGatewayTunnelProviderOptionsPtrOutput() GatewayTunnelProviderOptionsPtrOutput {
	return i.ToGatewayTunnelProviderOptionsPtrOutputWithContext(context.Background())
}

func (i *gatewayTunnelProviderOptionsPtrType) ToGatewayTunnelProviderOptionsPtrOutputWithContext(ctx context.Context) GatewayTunnelProviderOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayTunnelProviderOptionsPtrOutput)
}

type GatewayTunnelProviderOptionsOutput struct{ *pulumi.OutputState }

func (GatewayTunnelProviderOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayTunnelProviderOptions)(nil)).Elem()
}

func (o GatewayTunnelProviderOptionsOutput) ToGatewayTunnelProviderOptionsOutput() GatewayTunnelProviderOptionsOutput {
	return o
}

func (o GatewayTunnelProviderOptionsOutput) ToGatewayTunnelProviderOptionsOutputWithContext(ctx context.Context) GatewayTunnelProviderOptionsOutput {
	return o
}

func (o GatewayTunnelProviderOptionsOutput) ToGatewayTunnelProviderOptionsPtrOutput() GatewayTunnelProviderOptionsPtrOutput {
	return o.ToGatewayTunnelProviderOptionsPtrOutputWithContext(context.Background())
}

func (o GatewayTunnelProviderOptionsOutput) ToGatewayTunnelProviderOptionsPtrOutputWithContext(ctx context.Context) GatewayTunnelProviderOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayTunnelProviderOptions) *GatewayTunnelProviderOptions {
		return &v
	}).(GatewayTunnelProviderOptionsPtrOutput)
}

// For jse-ipsec, this allows provisioning of adequate resource on JSE. Make sure adequate licenses are added
func (o GatewayTunnelProviderOptionsOutput) Jse() GatewayTunnelProviderOptionsJsePtrOutput {
	return o.ApplyT(func(v GatewayTunnelProviderOptions) *GatewayTunnelProviderOptionsJse { return v.Jse }).(GatewayTunnelProviderOptionsJsePtrOutput)
}

// For zscaler-ipsec and zscaler-gre
func (o GatewayTunnelProviderOptionsOutput) Zscaler() GatewayTunnelProviderOptionsZscalerPtrOutput {
	return o.ApplyT(func(v GatewayTunnelProviderOptions) *GatewayTunnelProviderOptionsZscaler { return v.Zscaler }).(GatewayTunnelProviderOptionsZscalerPtrOutput)
}

type GatewayTunnelProviderOptionsPtrOutput struct{ *pulumi.OutputState }

func (GatewayTunnelProviderOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayTunnelProviderOptions)(nil)).Elem()
}

func (o GatewayTunnelProviderOptionsPtrOutput) ToGatewayTunnelProviderOptionsPtrOutput() GatewayTunnelProviderOptionsPtrOutput {
	return o
}

func (o GatewayTunnelProviderOptionsPtrOutput) ToGatewayTunnelProviderOptionsPtrOutputWithContext(ctx context.Context) GatewayTunnelProviderOptionsPtrOutput {
	return o
}

func (o GatewayTunnelProviderOptionsPtrOutput) Elem() GatewayTunnelProviderOptionsOutput {
	return o.ApplyT(func(v *GatewayTunnelProviderOptions) GatewayTunnelProviderOptions {
		if v != nil {
			return *v
		}
		var ret GatewayTunnelProviderOptions
		return ret
	}).(GatewayTunnelProviderOptionsOutput)
}

// For jse-ipsec, this allows provisioning of adequate resource on JSE. Make sure adequate licenses are added
func (o GatewayTunnelProviderOptionsPtrOutput) Jse() GatewayTunnelProviderOptionsJsePtrOutput {
	return o.ApplyT(func(v *GatewayTunnelProviderOptions) *GatewayTunnelProviderOptionsJse {
		if v == nil {
			return nil
		}
		return v.Jse
	}).(GatewayTunnelProviderOptionsJsePtrOutput)
}

// For zscaler-ipsec and zscaler-gre
func (o GatewayTunnelProviderOptionsPtrOutput) Zscaler() GatewayTunnelProviderOptionsZscalerPtrOutput {
	return o.ApplyT(func(v *GatewayTunnelProviderOptions) *GatewayTunnelProviderOptionsZscaler {
		if v == nil {
			return nil
		}
		return v.Zscaler
	}).(GatewayTunnelProviderOptionsZscalerPtrOutput)
}

type GatewayTunnelProviderOptionsJse struct {
	NumUsers *int `pulumi:"numUsers"`
	// JSE Organization name
	OrgName *string `pulumi:"orgName"`
}

// GatewayTunnelProviderOptionsJseInput is an input type that accepts GatewayTunnelProviderOptionsJseArgs and GatewayTunnelProviderOptionsJseOutput values.
// You can construct a concrete instance of `GatewayTunnelProviderOptionsJseInput` via:
//
//	GatewayTunnelProviderOptionsJseArgs{...}
type GatewayTunnelProviderOptionsJseInput interface {
	pulumi.Input

	ToGatewayTunnelProviderOptionsJseOutput() GatewayTunnelProviderOptionsJseOutput
	ToGatewayTunnelProviderOptionsJseOutputWithContext(context.Context) GatewayTunnelProviderOptionsJseOutput
}

type GatewayTunnelProviderOptionsJseArgs struct {
	NumUsers pulumi.IntPtrInput `pulumi:"numUsers"`
	// JSE Organization name
	OrgName pulumi.StringPtrInput `pulumi:"orgName"`
}

func (GatewayTunnelProviderOptionsJseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayTunnelProviderOptionsJse)(nil)).Elem()
}

func (i GatewayTunnelProviderOptionsJseArgs) ToGatewayTunnelProviderOptionsJseOutput() GatewayTunnelProviderOptionsJseOutput {
	return i.ToGatewayTunnelProviderOptionsJseOutputWithContext(context.Background())
}

func (i GatewayTunnelProviderOptionsJseArgs) ToGatewayTunnelProviderOptionsJseOutputWithContext(ctx context.Context) GatewayTunnelProviderOptionsJseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayTunnelProviderOptionsJseOutput)
}

func (i GatewayTunnelProviderOptionsJseArgs) ToGatewayTunnelProviderOptionsJsePtrOutput() GatewayTunnelProviderOptionsJsePtrOutput {
	return i.ToGatewayTunnelProviderOptionsJsePtrOutputWithContext(context.Background())
}

func (i GatewayTunnelProviderOptionsJseArgs) ToGatewayTunnelProviderOptionsJsePtrOutputWithContext(ctx context.Context) GatewayTunnelProviderOptionsJsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayTunnelProviderOptionsJseOutput).ToGatewayTunnelProviderOptionsJsePtrOutputWithContext(ctx)
}

// GatewayTunnelProviderOptionsJsePtrInput is an input type that accepts GatewayTunnelProviderOptionsJseArgs, GatewayTunnelProviderOptionsJsePtr and GatewayTunnelProviderOptionsJsePtrOutput values.
// You can construct a concrete instance of `GatewayTunnelProviderOptionsJsePtrInput` via:
//
//	        GatewayTunnelProviderOptionsJseArgs{...}
//
//	or:
//
//	        nil
type GatewayTunnelProviderOptionsJsePtrInput interface {
	pulumi.Input

	ToGatewayTunnelProviderOptionsJsePtrOutput() GatewayTunnelProviderOptionsJsePtrOutput
	ToGatewayTunnelProviderOptionsJsePtrOutputWithContext(context.Context) GatewayTunnelProviderOptionsJsePtrOutput
}

type gatewayTunnelProviderOptionsJsePtrType GatewayTunnelProviderOptionsJseArgs

func GatewayTunnelProviderOptionsJsePtr(v *GatewayTunnelProviderOptionsJseArgs) GatewayTunnelProviderOptionsJsePtrInput {
	return (*gatewayTunnelProviderOptionsJsePtrType)(v)
}

func (*gatewayTunnelProviderOptionsJsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayTunnelProviderOptionsJse)(nil)).Elem()
}

func (i *gatewayTunnelProviderOptionsJsePtrType) ToGatewayTunnelProviderOptionsJsePtrOutput() GatewayTunnelProviderOptionsJsePtrOutput {
	return i.ToGatewayTunnelProviderOptionsJsePtrOutputWithContext(context.Background())
}

func (i *gatewayTunnelProviderOptionsJsePtrType) ToGatewayTunnelProviderOptionsJsePtrOutputWithContext(ctx context.Context) GatewayTunnelProviderOptionsJsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayTunnelProviderOptionsJsePtrOutput)
}

type GatewayTunnelProviderOptionsJseOutput struct{ *pulumi.OutputState }

func (GatewayTunnelProviderOptionsJseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayTunnelProviderOptionsJse)(nil)).Elem()
}

func (o GatewayTunnelProviderOptionsJseOutput) ToGatewayTunnelProviderOptionsJseOutput() GatewayTunnelProviderOptionsJseOutput {
	return o
}

func (o GatewayTunnelProviderOptionsJseOutput) ToGatewayTunnelProviderOptionsJseOutputWithContext(ctx context.Context) GatewayTunnelProviderOptionsJseOutput {
	return o
}

func (o GatewayTunnelProviderOptionsJseOutput) ToGatewayTunnelProviderOptionsJsePtrOutput() GatewayTunnelProviderOptionsJsePtrOutput {
	return o.ToGatewayTunnelProviderOptionsJsePtrOutputWithContext(context.Background())
}

func (o GatewayTunnelProviderOptionsJseOutput) ToGatewayTunnelProviderOptionsJsePtrOutputWithContext(ctx context.Context) GatewayTunnelProviderOptionsJsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayTunnelProviderOptionsJse) *GatewayTunnelProviderOptionsJse {
		return &v
	}).(GatewayTunnelProviderOptionsJsePtrOutput)
}

func (o GatewayTunnelProviderOptionsJseOutput) NumUsers() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GatewayTunnelProviderOptionsJse) *int { return v.NumUsers }).(pulumi.IntPtrOutput)
}

// JSE Organization name
func (o GatewayTunnelProviderOptionsJseOutput) OrgName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayTunnelProviderOptionsJse) *string { return v.OrgName }).(pulumi.StringPtrOutput)
}

type GatewayTunnelProviderOptionsJsePtrOutput struct{ *pulumi.OutputState }

func (GatewayTunnelProviderOptionsJsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayTunnelProviderOptionsJse)(nil)).Elem()
}

func (o GatewayTunnelProviderOptionsJsePtrOutput) ToGatewayTunnelProviderOptionsJsePtrOutput() GatewayTunnelProviderOptionsJsePtrOutput {
	return o
}

func (o GatewayTunnelProviderOptionsJsePtrOutput) ToGatewayTunnelProviderOptionsJsePtrOutputWithContext(ctx context.Context) GatewayTunnelProviderOptionsJsePtrOutput {
	return o
}

func (o GatewayTunnelProviderOptionsJsePtrOutput) Elem() GatewayTunnelProviderOptionsJseOutput {
	return o.ApplyT(func(v *GatewayTunnelProviderOptionsJse) GatewayTunnelProviderOptionsJse {
		if v != nil {
			return *v
		}
		var ret GatewayTunnelProviderOptionsJse
		return ret
	}).(GatewayTunnelProviderOptionsJseOutput)
}

func (o GatewayTunnelProviderOptionsJsePtrOutput) NumUsers() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GatewayTunnelProviderOptionsJse) *int {
		if v == nil {
			return nil
		}
		return v.NumUsers
	}).(pulumi.IntPtrOutput)
}

// JSE Organization name
func (o GatewayTunnelProviderOptionsJsePtrOutput) OrgName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayTunnelProviderOptionsJse) *string {
		if v == nil {
			return nil
		}
		return v.OrgName
	}).(pulumi.StringPtrOutput)
}

type GatewayTunnelProviderOptionsZscaler struct {
	AupBlockInternetUntilAccepted *bool `pulumi:"aupBlockInternetUntilAccepted"`
	// Can only be `true` when `authRequired`==`false`, display Acceptable Use Policy (AUP)
	AupEnabled *bool `pulumi:"aupEnabled"`
	// Proxy HTTPs traffic, requiring Zscaler cert to be installed in browser
	AupForceSslInspection *bool `pulumi:"aupForceSslInspection"`
	// Required if `aupEnabled`==`true`. Days before AUP is requested again
	AupTimeoutInDays *int `pulumi:"aupTimeoutInDays"`
	// Enable this option to enforce user authentication
	AuthRequired *bool `pulumi:"authRequired"`
	// Can only be `true` when `authRequired`==`false`, display caution notification for non-authenticated users
	CautionEnabled *bool `pulumi:"cautionEnabled"`
	// Download bandwidth cap of the link, in Mbps. Disabled if not set
	DnBandwidth *float64 `pulumi:"dnBandwidth"`
	// Required if `surrogate_IP`==`true`, idle Time to Disassociation
	IdleTimeInMinutes *int `pulumi:"idleTimeInMinutes"`
	// If `true`, enable the firewall control option
	OfwEnabled *bool `pulumi:"ofwEnabled"`
	// `sub-locations` can be used for specific uses cases to define different configuration based on the user network
	SubLocations []GatewayTunnelProviderOptionsZscalerSubLocation `pulumi:"subLocations"`
	// Can only be `true` when `authRequired`==`true`. Map a user to a private IP address so it applies the user's policies, instead of the location's policies
	SurrogateIp *bool `pulumi:"surrogateIp"`
	// Can only be `true` when `surrogate_IP`==`true`, enforce surrogate IP for known browsers
	SurrogateIpEnforcedForKnownBrowsers *bool `pulumi:"surrogateIpEnforcedForKnownBrowsers"`
	// Required if `surrogate_IP_enforced_for_known_browsers`==`true`, must be lower or equal than `idleTimeInMinutes`, refresh Time for re-validation of Surrogacy
	SurrogateRefreshTimeInMinutes *int `pulumi:"surrogateRefreshTimeInMinutes"`
	// Download bandwidth cap of the link, in Mbps. Disabled if not set
	UpBandwidth *float64 `pulumi:"upBandwidth"`
	// Location uses proxy chaining to forward traffic
	XffForwardEnabled *bool `pulumi:"xffForwardEnabled"`
}

// GatewayTunnelProviderOptionsZscalerInput is an input type that accepts GatewayTunnelProviderOptionsZscalerArgs and GatewayTunnelProviderOptionsZscalerOutput values.
// You can construct a concrete instance of `GatewayTunnelProviderOptionsZscalerInput` via:
//
//	GatewayTunnelProviderOptionsZscalerArgs{...}
type GatewayTunnelProviderOptionsZscalerInput interface {
	pulumi.Input

	ToGatewayTunnelProviderOptionsZscalerOutput() GatewayTunnelProviderOptionsZscalerOutput
	ToGatewayTunnelProviderOptionsZscalerOutputWithContext(context.Context) GatewayTunnelProviderOptionsZscalerOutput
}

type GatewayTunnelProviderOptionsZscalerArgs struct {
	AupBlockInternetUntilAccepted pulumi.BoolPtrInput `pulumi:"aupBlockInternetUntilAccepted"`
	// Can only be `true` when `authRequired`==`false`, display Acceptable Use Policy (AUP)
	AupEnabled pulumi.BoolPtrInput `pulumi:"aupEnabled"`
	// Proxy HTTPs traffic, requiring Zscaler cert to be installed in browser
	AupForceSslInspection pulumi.BoolPtrInput `pulumi:"aupForceSslInspection"`
	// Required if `aupEnabled`==`true`. Days before AUP is requested again
	AupTimeoutInDays pulumi.IntPtrInput `pulumi:"aupTimeoutInDays"`
	// Enable this option to enforce user authentication
	AuthRequired pulumi.BoolPtrInput `pulumi:"authRequired"`
	// Can only be `true` when `authRequired`==`false`, display caution notification for non-authenticated users
	CautionEnabled pulumi.BoolPtrInput `pulumi:"cautionEnabled"`
	// Download bandwidth cap of the link, in Mbps. Disabled if not set
	DnBandwidth pulumi.Float64PtrInput `pulumi:"dnBandwidth"`
	// Required if `surrogate_IP`==`true`, idle Time to Disassociation
	IdleTimeInMinutes pulumi.IntPtrInput `pulumi:"idleTimeInMinutes"`
	// If `true`, enable the firewall control option
	OfwEnabled pulumi.BoolPtrInput `pulumi:"ofwEnabled"`
	// `sub-locations` can be used for specific uses cases to define different configuration based on the user network
	SubLocations GatewayTunnelProviderOptionsZscalerSubLocationArrayInput `pulumi:"subLocations"`
	// Can only be `true` when `authRequired`==`true`. Map a user to a private IP address so it applies the user's policies, instead of the location's policies
	SurrogateIp pulumi.BoolPtrInput `pulumi:"surrogateIp"`
	// Can only be `true` when `surrogate_IP`==`true`, enforce surrogate IP for known browsers
	SurrogateIpEnforcedForKnownBrowsers pulumi.BoolPtrInput `pulumi:"surrogateIpEnforcedForKnownBrowsers"`
	// Required if `surrogate_IP_enforced_for_known_browsers`==`true`, must be lower or equal than `idleTimeInMinutes`, refresh Time for re-validation of Surrogacy
	SurrogateRefreshTimeInMinutes pulumi.IntPtrInput `pulumi:"surrogateRefreshTimeInMinutes"`
	// Download bandwidth cap of the link, in Mbps. Disabled if not set
	UpBandwidth pulumi.Float64PtrInput `pulumi:"upBandwidth"`
	// Location uses proxy chaining to forward traffic
	XffForwardEnabled pulumi.BoolPtrInput `pulumi:"xffForwardEnabled"`
}

func (GatewayTunnelProviderOptionsZscalerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayTunnelProviderOptionsZscaler)(nil)).Elem()
}

func (i GatewayTunnelProviderOptionsZscalerArgs) ToGatewayTunnelProviderOptionsZscalerOutput() GatewayTunnelProviderOptionsZscalerOutput {
	return i.ToGatewayTunnelProviderOptionsZscalerOutputWithContext(context.Background())
}

func (i GatewayTunnelProviderOptionsZscalerArgs) ToGatewayTunnelProviderOptionsZscalerOutputWithContext(ctx context.Context) GatewayTunnelProviderOptionsZscalerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayTunnelProviderOptionsZscalerOutput)
}

func (i GatewayTunnelProviderOptionsZscalerArgs) ToGatewayTunnelProviderOptionsZscalerPtrOutput() GatewayTunnelProviderOptionsZscalerPtrOutput {
	return i.ToGatewayTunnelProviderOptionsZscalerPtrOutputWithContext(context.Background())
}

func (i GatewayTunnelProviderOptionsZscalerArgs) ToGatewayTunnelProviderOptionsZscalerPtrOutputWithContext(ctx context.Context) GatewayTunnelProviderOptionsZscalerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayTunnelProviderOptionsZscalerOutput).ToGatewayTunnelProviderOptionsZscalerPtrOutputWithContext(ctx)
}

// GatewayTunnelProviderOptionsZscalerPtrInput is an input type that accepts GatewayTunnelProviderOptionsZscalerArgs, GatewayTunnelProviderOptionsZscalerPtr and GatewayTunnelProviderOptionsZscalerPtrOutput values.
// You can construct a concrete instance of `GatewayTunnelProviderOptionsZscalerPtrInput` via:
//
//	        GatewayTunnelProviderOptionsZscalerArgs{...}
//
//	or:
//
//	        nil
type GatewayTunnelProviderOptionsZscalerPtrInput interface {
	pulumi.Input

	ToGatewayTunnelProviderOptionsZscalerPtrOutput() GatewayTunnelProviderOptionsZscalerPtrOutput
	ToGatewayTunnelProviderOptionsZscalerPtrOutputWithContext(context.Context) GatewayTunnelProviderOptionsZscalerPtrOutput
}

type gatewayTunnelProviderOptionsZscalerPtrType GatewayTunnelProviderOptionsZscalerArgs

func GatewayTunnelProviderOptionsZscalerPtr(v *GatewayTunnelProviderOptionsZscalerArgs) GatewayTunnelProviderOptionsZscalerPtrInput {
	return (*gatewayTunnelProviderOptionsZscalerPtrType)(v)
}

func (*gatewayTunnelProviderOptionsZscalerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayTunnelProviderOptionsZscaler)(nil)).Elem()
}

func (i *gatewayTunnelProviderOptionsZscalerPtrType) ToGatewayTunnelProviderOptionsZscalerPtrOutput() GatewayTunnelProviderOptionsZscalerPtrOutput {
	return i.ToGatewayTunnelProviderOptionsZscalerPtrOutputWithContext(context.Background())
}

func (i *gatewayTunnelProviderOptionsZscalerPtrType) ToGatewayTunnelProviderOptionsZscalerPtrOutputWithContext(ctx context.Context) GatewayTunnelProviderOptionsZscalerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayTunnelProviderOptionsZscalerPtrOutput)
}

type GatewayTunnelProviderOptionsZscalerOutput struct{ *pulumi.OutputState }

func (GatewayTunnelProviderOptionsZscalerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayTunnelProviderOptionsZscaler)(nil)).Elem()
}

func (o GatewayTunnelProviderOptionsZscalerOutput) ToGatewayTunnelProviderOptionsZscalerOutput() GatewayTunnelProviderOptionsZscalerOutput {
	return o
}

func (o GatewayTunnelProviderOptionsZscalerOutput) ToGatewayTunnelProviderOptionsZscalerOutputWithContext(ctx context.Context) GatewayTunnelProviderOptionsZscalerOutput {
	return o
}

func (o GatewayTunnelProviderOptionsZscalerOutput) ToGatewayTunnelProviderOptionsZscalerPtrOutput() GatewayTunnelProviderOptionsZscalerPtrOutput {
	return o.ToGatewayTunnelProviderOptionsZscalerPtrOutputWithContext(context.Background())
}

func (o GatewayTunnelProviderOptionsZscalerOutput) ToGatewayTunnelProviderOptionsZscalerPtrOutputWithContext(ctx context.Context) GatewayTunnelProviderOptionsZscalerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayTunnelProviderOptionsZscaler) *GatewayTunnelProviderOptionsZscaler {
		return &v
	}).(GatewayTunnelProviderOptionsZscalerPtrOutput)
}

func (o GatewayTunnelProviderOptionsZscalerOutput) AupBlockInternetUntilAccepted() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GatewayTunnelProviderOptionsZscaler) *bool { return v.AupBlockInternetUntilAccepted }).(pulumi.BoolPtrOutput)
}

// Can only be `true` when `authRequired`==`false`, display Acceptable Use Policy (AUP)
func (o GatewayTunnelProviderOptionsZscalerOutput) AupEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GatewayTunnelProviderOptionsZscaler) *bool { return v.AupEnabled }).(pulumi.BoolPtrOutput)
}

// Proxy HTTPs traffic, requiring Zscaler cert to be installed in browser
func (o GatewayTunnelProviderOptionsZscalerOutput) AupForceSslInspection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GatewayTunnelProviderOptionsZscaler) *bool { return v.AupForceSslInspection }).(pulumi.BoolPtrOutput)
}

// Required if `aupEnabled`==`true`. Days before AUP is requested again
func (o GatewayTunnelProviderOptionsZscalerOutput) AupTimeoutInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GatewayTunnelProviderOptionsZscaler) *int { return v.AupTimeoutInDays }).(pulumi.IntPtrOutput)
}

// Enable this option to enforce user authentication
func (o GatewayTunnelProviderOptionsZscalerOutput) AuthRequired() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GatewayTunnelProviderOptionsZscaler) *bool { return v.AuthRequired }).(pulumi.BoolPtrOutput)
}

// Can only be `true` when `authRequired`==`false`, display caution notification for non-authenticated users
func (o GatewayTunnelProviderOptionsZscalerOutput) CautionEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GatewayTunnelProviderOptionsZscaler) *bool { return v.CautionEnabled }).(pulumi.BoolPtrOutput)
}

// Download bandwidth cap of the link, in Mbps. Disabled if not set
func (o GatewayTunnelProviderOptionsZscalerOutput) DnBandwidth() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v GatewayTunnelProviderOptionsZscaler) *float64 { return v.DnBandwidth }).(pulumi.Float64PtrOutput)
}

// Required if `surrogate_IP`==`true`, idle Time to Disassociation
func (o GatewayTunnelProviderOptionsZscalerOutput) IdleTimeInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GatewayTunnelProviderOptionsZscaler) *int { return v.IdleTimeInMinutes }).(pulumi.IntPtrOutput)
}

// If `true`, enable the firewall control option
func (o GatewayTunnelProviderOptionsZscalerOutput) OfwEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GatewayTunnelProviderOptionsZscaler) *bool { return v.OfwEnabled }).(pulumi.BoolPtrOutput)
}

// `sub-locations` can be used for specific uses cases to define different configuration based on the user network
func (o GatewayTunnelProviderOptionsZscalerOutput) SubLocations() GatewayTunnelProviderOptionsZscalerSubLocationArrayOutput {
	return o.ApplyT(func(v GatewayTunnelProviderOptionsZscaler) []GatewayTunnelProviderOptionsZscalerSubLocation {
		return v.SubLocations
	}).(GatewayTunnelProviderOptionsZscalerSubLocationArrayOutput)
}

// Can only be `true` when `authRequired`==`true`. Map a user to a private IP address so it applies the user's policies, instead of the location's policies
func (o GatewayTunnelProviderOptionsZscalerOutput) SurrogateIp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GatewayTunnelProviderOptionsZscaler) *bool { return v.SurrogateIp }).(pulumi.BoolPtrOutput)
}

// Can only be `true` when `surrogate_IP`==`true`, enforce surrogate IP for known browsers
func (o GatewayTunnelProviderOptionsZscalerOutput) SurrogateIpEnforcedForKnownBrowsers() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GatewayTunnelProviderOptionsZscaler) *bool { return v.SurrogateIpEnforcedForKnownBrowsers }).(pulumi.BoolPtrOutput)
}

// Required if `surrogate_IP_enforced_for_known_browsers`==`true`, must be lower or equal than `idleTimeInMinutes`, refresh Time for re-validation of Surrogacy
func (o GatewayTunnelProviderOptionsZscalerOutput) SurrogateRefreshTimeInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GatewayTunnelProviderOptionsZscaler) *int { return v.SurrogateRefreshTimeInMinutes }).(pulumi.IntPtrOutput)
}

// Download bandwidth cap of the link, in Mbps. Disabled if not set
func (o GatewayTunnelProviderOptionsZscalerOutput) UpBandwidth() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v GatewayTunnelProviderOptionsZscaler) *float64 { return v.UpBandwidth }).(pulumi.Float64PtrOutput)
}

// Location uses proxy chaining to forward traffic
func (o GatewayTunnelProviderOptionsZscalerOutput) XffForwardEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GatewayTunnelProviderOptionsZscaler) *bool { return v.XffForwardEnabled }).(pulumi.BoolPtrOutput)
}

type GatewayTunnelProviderOptionsZscalerPtrOutput struct{ *pulumi.OutputState }

func (GatewayTunnelProviderOptionsZscalerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayTunnelProviderOptionsZscaler)(nil)).Elem()
}

func (o GatewayTunnelProviderOptionsZscalerPtrOutput) ToGatewayTunnelProviderOptionsZscalerPtrOutput() GatewayTunnelProviderOptionsZscalerPtrOutput {
	return o
}

func (o GatewayTunnelProviderOptionsZscalerPtrOutput) ToGatewayTunnelProviderOptionsZscalerPtrOutputWithContext(ctx context.Context) GatewayTunnelProviderOptionsZscalerPtrOutput {
	return o
}

func (o GatewayTunnelProviderOptionsZscalerPtrOutput) Elem() GatewayTunnelProviderOptionsZscalerOutput {
	return o.ApplyT(func(v *GatewayTunnelProviderOptionsZscaler) GatewayTunnelProviderOptionsZscaler {
		if v != nil {
			return *v
		}
		var ret GatewayTunnelProviderOptionsZscaler
		return ret
	}).(GatewayTunnelProviderOptionsZscalerOutput)
}

func (o GatewayTunnelProviderOptionsZscalerPtrOutput) AupBlockInternetUntilAccepted() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GatewayTunnelProviderOptionsZscaler) *bool {
		if v == nil {
			return nil
		}
		return v.AupBlockInternetUntilAccepted
	}).(pulumi.BoolPtrOutput)
}

// Can only be `true` when `authRequired`==`false`, display Acceptable Use Policy (AUP)
func (o GatewayTunnelProviderOptionsZscalerPtrOutput) AupEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GatewayTunnelProviderOptionsZscaler) *bool {
		if v == nil {
			return nil
		}
		return v.AupEnabled
	}).(pulumi.BoolPtrOutput)
}

// Proxy HTTPs traffic, requiring Zscaler cert to be installed in browser
func (o GatewayTunnelProviderOptionsZscalerPtrOutput) AupForceSslInspection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GatewayTunnelProviderOptionsZscaler) *bool {
		if v == nil {
			return nil
		}
		return v.AupForceSslInspection
	}).(pulumi.BoolPtrOutput)
}

// Required if `aupEnabled`==`true`. Days before AUP is requested again
func (o GatewayTunnelProviderOptionsZscalerPtrOutput) AupTimeoutInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GatewayTunnelProviderOptionsZscaler) *int {
		if v == nil {
			return nil
		}
		return v.AupTimeoutInDays
	}).(pulumi.IntPtrOutput)
}

// Enable this option to enforce user authentication
func (o GatewayTunnelProviderOptionsZscalerPtrOutput) AuthRequired() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GatewayTunnelProviderOptionsZscaler) *bool {
		if v == nil {
			return nil
		}
		return v.AuthRequired
	}).(pulumi.BoolPtrOutput)
}

// Can only be `true` when `authRequired`==`false`, display caution notification for non-authenticated users
func (o GatewayTunnelProviderOptionsZscalerPtrOutput) CautionEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GatewayTunnelProviderOptionsZscaler) *bool {
		if v == nil {
			return nil
		}
		return v.CautionEnabled
	}).(pulumi.BoolPtrOutput)
}

// Download bandwidth cap of the link, in Mbps. Disabled if not set
func (o GatewayTunnelProviderOptionsZscalerPtrOutput) DnBandwidth() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *GatewayTunnelProviderOptionsZscaler) *float64 {
		if v == nil {
			return nil
		}
		return v.DnBandwidth
	}).(pulumi.Float64PtrOutput)
}

// Required if `surrogate_IP`==`true`, idle Time to Disassociation
func (o GatewayTunnelProviderOptionsZscalerPtrOutput) IdleTimeInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GatewayTunnelProviderOptionsZscaler) *int {
		if v == nil {
			return nil
		}
		return v.IdleTimeInMinutes
	}).(pulumi.IntPtrOutput)
}

// If `true`, enable the firewall control option
func (o GatewayTunnelProviderOptionsZscalerPtrOutput) OfwEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GatewayTunnelProviderOptionsZscaler) *bool {
		if v == nil {
			return nil
		}
		return v.OfwEnabled
	}).(pulumi.BoolPtrOutput)
}

// `sub-locations` can be used for specific uses cases to define different configuration based on the user network
func (o GatewayTunnelProviderOptionsZscalerPtrOutput) SubLocations() GatewayTunnelProviderOptionsZscalerSubLocationArrayOutput {
	return o.ApplyT(func(v *GatewayTunnelProviderOptionsZscaler) []GatewayTunnelProviderOptionsZscalerSubLocation {
		if v == nil {
			return nil
		}
		return v.SubLocations
	}).(GatewayTunnelProviderOptionsZscalerSubLocationArrayOutput)
}

// Can only be `true` when `authRequired`==`true`. Map a user to a private IP address so it applies the user's policies, instead of the location's policies
func (o GatewayTunnelProviderOptionsZscalerPtrOutput) SurrogateIp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GatewayTunnelProviderOptionsZscaler) *bool {
		if v == nil {
			return nil
		}
		return v.SurrogateIp
	}).(pulumi.BoolPtrOutput)
}

// Can only be `true` when `surrogate_IP`==`true`, enforce surrogate IP for known browsers
func (o GatewayTunnelProviderOptionsZscalerPtrOutput) SurrogateIpEnforcedForKnownBrowsers() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GatewayTunnelProviderOptionsZscaler) *bool {
		if v == nil {
			return nil
		}
		return v.SurrogateIpEnforcedForKnownBrowsers
	}).(pulumi.BoolPtrOutput)
}

// Required if `surrogate_IP_enforced_for_known_browsers`==`true`, must be lower or equal than `idleTimeInMinutes`, refresh Time for re-validation of Surrogacy
func (o GatewayTunnelProviderOptionsZscalerPtrOutput) SurrogateRefreshTimeInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GatewayTunnelProviderOptionsZscaler) *int {
		if v == nil {
			return nil
		}
		return v.SurrogateRefreshTimeInMinutes
	}).(pulumi.IntPtrOutput)
}

// Download bandwidth cap of the link, in Mbps. Disabled if not set
func (o GatewayTunnelProviderOptionsZscalerPtrOutput) UpBandwidth() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *GatewayTunnelProviderOptionsZscaler) *float64 {
		if v == nil {
			return nil
		}
		return v.UpBandwidth
	}).(pulumi.Float64PtrOutput)
}

// Location uses proxy chaining to forward traffic
func (o GatewayTunnelProviderOptionsZscalerPtrOutput) XffForwardEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GatewayTunnelProviderOptionsZscaler) *bool {
		if v == nil {
			return nil
		}
		return v.XffForwardEnabled
	}).(pulumi.BoolPtrOutput)
}

type GatewayTunnelProviderOptionsZscalerSubLocation struct {
	AupBlockInternetUntilAccepted *bool `pulumi:"aupBlockInternetUntilAccepted"`
	// Can only be `true` when `authRequired`==`false`, display Acceptable Use Policy (AUP)
	AupEnabled *bool `pulumi:"aupEnabled"`
	// Proxy HTTPs traffic, requiring Zscaler cert to be installed in browser
	AupForceSslInspection *bool `pulumi:"aupForceSslInspection"`
	// Required if `aupEnabled`==`true`. Days before AUP is requested again
	AupTimeoutInDays *int `pulumi:"aupTimeoutInDays"`
	// Enable this option to authenticate users
	AuthRequired *bool `pulumi:"authRequired"`
	// Can only be `true` when `authRequired`==`false`, display caution notification for non-authenticated users
	CautionEnabled *bool `pulumi:"cautionEnabled"`
	// Download bandwidth cap of the link, in Mbps. Disabled if not set
	DnBandwidth *float64 `pulumi:"dnBandwidth"`
	// Required if `surrogate_IP`==`true`, idle Time to Disassociation
	IdleTimeInMinutes *int `pulumi:"idleTimeInMinutes"`
	// Network name
	Name *string `pulumi:"name"`
	// If `true`, enable the firewall control option
	OfwEnabled *bool `pulumi:"ofwEnabled"`
	// Can only be `true` when `authRequired`==`true`. Map a user to a private IP address so it applies the user's policies, instead of the location's policies
	SurrogateIp *bool `pulumi:"surrogateIp"`
	// Can only be `true` when `surrogate_IP`==`true`, enforce surrogate IP for known browsers
	SurrogateIpEnforcedForKnownBrowsers *bool `pulumi:"surrogateIpEnforcedForKnownBrowsers"`
	// Required if `surrogate_IP_enforced_for_known_browsers`==`true`, must be lower or equal than `idleTimeInMinutes`, refresh Time for re-validation of Surrogacy
	SurrogateRefreshTimeInMinutes *int `pulumi:"surrogateRefreshTimeInMinutes"`
	// Download bandwidth cap of the link, in Mbps. Disabled if not set
	UpBandwidth *float64 `pulumi:"upBandwidth"`
}

// GatewayTunnelProviderOptionsZscalerSubLocationInput is an input type that accepts GatewayTunnelProviderOptionsZscalerSubLocationArgs and GatewayTunnelProviderOptionsZscalerSubLocationOutput values.
// You can construct a concrete instance of `GatewayTunnelProviderOptionsZscalerSubLocationInput` via:
//
//	GatewayTunnelProviderOptionsZscalerSubLocationArgs{...}
type GatewayTunnelProviderOptionsZscalerSubLocationInput interface {
	pulumi.Input

	ToGatewayTunnelProviderOptionsZscalerSubLocationOutput() GatewayTunnelProviderOptionsZscalerSubLocationOutput
	ToGatewayTunnelProviderOptionsZscalerSubLocationOutputWithContext(context.Context) GatewayTunnelProviderOptionsZscalerSubLocationOutput
}

type GatewayTunnelProviderOptionsZscalerSubLocationArgs struct {
	AupBlockInternetUntilAccepted pulumi.BoolPtrInput `pulumi:"aupBlockInternetUntilAccepted"`
	// Can only be `true` when `authRequired`==`false`, display Acceptable Use Policy (AUP)
	AupEnabled pulumi.BoolPtrInput `pulumi:"aupEnabled"`
	// Proxy HTTPs traffic, requiring Zscaler cert to be installed in browser
	AupForceSslInspection pulumi.BoolPtrInput `pulumi:"aupForceSslInspection"`
	// Required if `aupEnabled`==`true`. Days before AUP is requested again
	AupTimeoutInDays pulumi.IntPtrInput `pulumi:"aupTimeoutInDays"`
	// Enable this option to authenticate users
	AuthRequired pulumi.BoolPtrInput `pulumi:"authRequired"`
	// Can only be `true` when `authRequired`==`false`, display caution notification for non-authenticated users
	CautionEnabled pulumi.BoolPtrInput `pulumi:"cautionEnabled"`
	// Download bandwidth cap of the link, in Mbps. Disabled if not set
	DnBandwidth pulumi.Float64PtrInput `pulumi:"dnBandwidth"`
	// Required if `surrogate_IP`==`true`, idle Time to Disassociation
	IdleTimeInMinutes pulumi.IntPtrInput `pulumi:"idleTimeInMinutes"`
	// Network name
	Name pulumi.StringPtrInput `pulumi:"name"`
	// If `true`, enable the firewall control option
	OfwEnabled pulumi.BoolPtrInput `pulumi:"ofwEnabled"`
	// Can only be `true` when `authRequired`==`true`. Map a user to a private IP address so it applies the user's policies, instead of the location's policies
	SurrogateIp pulumi.BoolPtrInput `pulumi:"surrogateIp"`
	// Can only be `true` when `surrogate_IP`==`true`, enforce surrogate IP for known browsers
	SurrogateIpEnforcedForKnownBrowsers pulumi.BoolPtrInput `pulumi:"surrogateIpEnforcedForKnownBrowsers"`
	// Required if `surrogate_IP_enforced_for_known_browsers`==`true`, must be lower or equal than `idleTimeInMinutes`, refresh Time for re-validation of Surrogacy
	SurrogateRefreshTimeInMinutes pulumi.IntPtrInput `pulumi:"surrogateRefreshTimeInMinutes"`
	// Download bandwidth cap of the link, in Mbps. Disabled if not set
	UpBandwidth pulumi.Float64PtrInput `pulumi:"upBandwidth"`
}

func (GatewayTunnelProviderOptionsZscalerSubLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayTunnelProviderOptionsZscalerSubLocation)(nil)).Elem()
}

func (i GatewayTunnelProviderOptionsZscalerSubLocationArgs) ToGatewayTunnelProviderOptionsZscalerSubLocationOutput() GatewayTunnelProviderOptionsZscalerSubLocationOutput {
	return i.ToGatewayTunnelProviderOptionsZscalerSubLocationOutputWithContext(context.Background())
}

func (i GatewayTunnelProviderOptionsZscalerSubLocationArgs) ToGatewayTunnelProviderOptionsZscalerSubLocationOutputWithContext(ctx context.Context) GatewayTunnelProviderOptionsZscalerSubLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayTunnelProviderOptionsZscalerSubLocationOutput)
}

// GatewayTunnelProviderOptionsZscalerSubLocationArrayInput is an input type that accepts GatewayTunnelProviderOptionsZscalerSubLocationArray and GatewayTunnelProviderOptionsZscalerSubLocationArrayOutput values.
// You can construct a concrete instance of `GatewayTunnelProviderOptionsZscalerSubLocationArrayInput` via:
//
//	GatewayTunnelProviderOptionsZscalerSubLocationArray{ GatewayTunnelProviderOptionsZscalerSubLocationArgs{...} }
type GatewayTunnelProviderOptionsZscalerSubLocationArrayInput interface {
	pulumi.Input

	ToGatewayTunnelProviderOptionsZscalerSubLocationArrayOutput() GatewayTunnelProviderOptionsZscalerSubLocationArrayOutput
	ToGatewayTunnelProviderOptionsZscalerSubLocationArrayOutputWithContext(context.Context) GatewayTunnelProviderOptionsZscalerSubLocationArrayOutput
}

type GatewayTunnelProviderOptionsZscalerSubLocationArray []GatewayTunnelProviderOptionsZscalerSubLocationInput

func (GatewayTunnelProviderOptionsZscalerSubLocationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GatewayTunnelProviderOptionsZscalerSubLocation)(nil)).Elem()
}

func (i GatewayTunnelProviderOptionsZscalerSubLocationArray) ToGatewayTunnelProviderOptionsZscalerSubLocationArrayOutput() GatewayTunnelProviderOptionsZscalerSubLocationArrayOutput {
	return i.ToGatewayTunnelProviderOptionsZscalerSubLocationArrayOutputWithContext(context.Background())
}

func (i GatewayTunnelProviderOptionsZscalerSubLocationArray) ToGatewayTunnelProviderOptionsZscalerSubLocationArrayOutputWithContext(ctx context.Context) GatewayTunnelProviderOptionsZscalerSubLocationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayTunnelProviderOptionsZscalerSubLocationArrayOutput)
}

type GatewayTunnelProviderOptionsZscalerSubLocationOutput struct{ *pulumi.OutputState }

func (GatewayTunnelProviderOptionsZscalerSubLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayTunnelProviderOptionsZscalerSubLocation)(nil)).Elem()
}

func (o GatewayTunnelProviderOptionsZscalerSubLocationOutput) ToGatewayTunnelProviderOptionsZscalerSubLocationOutput() GatewayTunnelProviderOptionsZscalerSubLocationOutput {
	return o
}

func (o GatewayTunnelProviderOptionsZscalerSubLocationOutput) ToGatewayTunnelProviderOptionsZscalerSubLocationOutputWithContext(ctx context.Context) GatewayTunnelProviderOptionsZscalerSubLocationOutput {
	return o
}

func (o GatewayTunnelProviderOptionsZscalerSubLocationOutput) AupBlockInternetUntilAccepted() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GatewayTunnelProviderOptionsZscalerSubLocation) *bool { return v.AupBlockInternetUntilAccepted }).(pulumi.BoolPtrOutput)
}

// Can only be `true` when `authRequired`==`false`, display Acceptable Use Policy (AUP)
func (o GatewayTunnelProviderOptionsZscalerSubLocationOutput) AupEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GatewayTunnelProviderOptionsZscalerSubLocation) *bool { return v.AupEnabled }).(pulumi.BoolPtrOutput)
}

// Proxy HTTPs traffic, requiring Zscaler cert to be installed in browser
func (o GatewayTunnelProviderOptionsZscalerSubLocationOutput) AupForceSslInspection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GatewayTunnelProviderOptionsZscalerSubLocation) *bool { return v.AupForceSslInspection }).(pulumi.BoolPtrOutput)
}

// Required if `aupEnabled`==`true`. Days before AUP is requested again
func (o GatewayTunnelProviderOptionsZscalerSubLocationOutput) AupTimeoutInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GatewayTunnelProviderOptionsZscalerSubLocation) *int { return v.AupTimeoutInDays }).(pulumi.IntPtrOutput)
}

// Enable this option to authenticate users
func (o GatewayTunnelProviderOptionsZscalerSubLocationOutput) AuthRequired() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GatewayTunnelProviderOptionsZscalerSubLocation) *bool { return v.AuthRequired }).(pulumi.BoolPtrOutput)
}

// Can only be `true` when `authRequired`==`false`, display caution notification for non-authenticated users
func (o GatewayTunnelProviderOptionsZscalerSubLocationOutput) CautionEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GatewayTunnelProviderOptionsZscalerSubLocation) *bool { return v.CautionEnabled }).(pulumi.BoolPtrOutput)
}

// Download bandwidth cap of the link, in Mbps. Disabled if not set
func (o GatewayTunnelProviderOptionsZscalerSubLocationOutput) DnBandwidth() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v GatewayTunnelProviderOptionsZscalerSubLocation) *float64 { return v.DnBandwidth }).(pulumi.Float64PtrOutput)
}

// Required if `surrogate_IP`==`true`, idle Time to Disassociation
func (o GatewayTunnelProviderOptionsZscalerSubLocationOutput) IdleTimeInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GatewayTunnelProviderOptionsZscalerSubLocation) *int { return v.IdleTimeInMinutes }).(pulumi.IntPtrOutput)
}

// Network name
func (o GatewayTunnelProviderOptionsZscalerSubLocationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayTunnelProviderOptionsZscalerSubLocation) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// If `true`, enable the firewall control option
func (o GatewayTunnelProviderOptionsZscalerSubLocationOutput) OfwEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GatewayTunnelProviderOptionsZscalerSubLocation) *bool { return v.OfwEnabled }).(pulumi.BoolPtrOutput)
}

// Can only be `true` when `authRequired`==`true`. Map a user to a private IP address so it applies the user's policies, instead of the location's policies
func (o GatewayTunnelProviderOptionsZscalerSubLocationOutput) SurrogateIp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GatewayTunnelProviderOptionsZscalerSubLocation) *bool { return v.SurrogateIp }).(pulumi.BoolPtrOutput)
}

// Can only be `true` when `surrogate_IP`==`true`, enforce surrogate IP for known browsers
func (o GatewayTunnelProviderOptionsZscalerSubLocationOutput) SurrogateIpEnforcedForKnownBrowsers() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GatewayTunnelProviderOptionsZscalerSubLocation) *bool {
		return v.SurrogateIpEnforcedForKnownBrowsers
	}).(pulumi.BoolPtrOutput)
}

// Required if `surrogate_IP_enforced_for_known_browsers`==`true`, must be lower or equal than `idleTimeInMinutes`, refresh Time for re-validation of Surrogacy
func (o GatewayTunnelProviderOptionsZscalerSubLocationOutput) SurrogateRefreshTimeInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GatewayTunnelProviderOptionsZscalerSubLocation) *int { return v.SurrogateRefreshTimeInMinutes }).(pulumi.IntPtrOutput)
}

// Download bandwidth cap of the link, in Mbps. Disabled if not set
func (o GatewayTunnelProviderOptionsZscalerSubLocationOutput) UpBandwidth() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v GatewayTunnelProviderOptionsZscalerSubLocation) *float64 { return v.UpBandwidth }).(pulumi.Float64PtrOutput)
}

type GatewayTunnelProviderOptionsZscalerSubLocationArrayOutput struct{ *pulumi.OutputState }

func (GatewayTunnelProviderOptionsZscalerSubLocationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GatewayTunnelProviderOptionsZscalerSubLocation)(nil)).Elem()
}

func (o GatewayTunnelProviderOptionsZscalerSubLocationArrayOutput) ToGatewayTunnelProviderOptionsZscalerSubLocationArrayOutput() GatewayTunnelProviderOptionsZscalerSubLocationArrayOutput {
	return o
}

func (o GatewayTunnelProviderOptionsZscalerSubLocationArrayOutput) ToGatewayTunnelProviderOptionsZscalerSubLocationArrayOutputWithContext(ctx context.Context) GatewayTunnelProviderOptionsZscalerSubLocationArrayOutput {
	return o
}

func (o GatewayTunnelProviderOptionsZscalerSubLocationArrayOutput) Index(i pulumi.IntInput) GatewayTunnelProviderOptionsZscalerSubLocationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GatewayTunnelProviderOptionsZscalerSubLocation {
		return vs[0].([]GatewayTunnelProviderOptionsZscalerSubLocation)[vs[1].(int)]
	}).(GatewayTunnelProviderOptionsZscalerSubLocationOutput)
}

type GatewayVrfConfig struct {
	// Whether to enable VRF (when supported on the device)
	Enabled *bool `pulumi:"enabled"`
}

// GatewayVrfConfigInput is an input type that accepts GatewayVrfConfigArgs and GatewayVrfConfigOutput values.
// You can construct a concrete instance of `GatewayVrfConfigInput` via:
//
//	GatewayVrfConfigArgs{...}
type GatewayVrfConfigInput interface {
	pulumi.Input

	ToGatewayVrfConfigOutput() GatewayVrfConfigOutput
	ToGatewayVrfConfigOutputWithContext(context.Context) GatewayVrfConfigOutput
}

type GatewayVrfConfigArgs struct {
	// Whether to enable VRF (when supported on the device)
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (GatewayVrfConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayVrfConfig)(nil)).Elem()
}

func (i GatewayVrfConfigArgs) ToGatewayVrfConfigOutput() GatewayVrfConfigOutput {
	return i.ToGatewayVrfConfigOutputWithContext(context.Background())
}

func (i GatewayVrfConfigArgs) ToGatewayVrfConfigOutputWithContext(ctx context.Context) GatewayVrfConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayVrfConfigOutput)
}

func (i GatewayVrfConfigArgs) ToGatewayVrfConfigPtrOutput() GatewayVrfConfigPtrOutput {
	return i.ToGatewayVrfConfigPtrOutputWithContext(context.Background())
}

func (i GatewayVrfConfigArgs) ToGatewayVrfConfigPtrOutputWithContext(ctx context.Context) GatewayVrfConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayVrfConfigOutput).ToGatewayVrfConfigPtrOutputWithContext(ctx)
}

// GatewayVrfConfigPtrInput is an input type that accepts GatewayVrfConfigArgs, GatewayVrfConfigPtr and GatewayVrfConfigPtrOutput values.
// You can construct a concrete instance of `GatewayVrfConfigPtrInput` via:
//
//	        GatewayVrfConfigArgs{...}
//
//	or:
//
//	        nil
type GatewayVrfConfigPtrInput interface {
	pulumi.Input

	ToGatewayVrfConfigPtrOutput() GatewayVrfConfigPtrOutput
	ToGatewayVrfConfigPtrOutputWithContext(context.Context) GatewayVrfConfigPtrOutput
}

type gatewayVrfConfigPtrType GatewayVrfConfigArgs

func GatewayVrfConfigPtr(v *GatewayVrfConfigArgs) GatewayVrfConfigPtrInput {
	return (*gatewayVrfConfigPtrType)(v)
}

func (*gatewayVrfConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayVrfConfig)(nil)).Elem()
}

func (i *gatewayVrfConfigPtrType) ToGatewayVrfConfigPtrOutput() GatewayVrfConfigPtrOutput {
	return i.ToGatewayVrfConfigPtrOutputWithContext(context.Background())
}

func (i *gatewayVrfConfigPtrType) ToGatewayVrfConfigPtrOutputWithContext(ctx context.Context) GatewayVrfConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayVrfConfigPtrOutput)
}

type GatewayVrfConfigOutput struct{ *pulumi.OutputState }

func (GatewayVrfConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayVrfConfig)(nil)).Elem()
}

func (o GatewayVrfConfigOutput) ToGatewayVrfConfigOutput() GatewayVrfConfigOutput {
	return o
}

func (o GatewayVrfConfigOutput) ToGatewayVrfConfigOutputWithContext(ctx context.Context) GatewayVrfConfigOutput {
	return o
}

func (o GatewayVrfConfigOutput) ToGatewayVrfConfigPtrOutput() GatewayVrfConfigPtrOutput {
	return o.ToGatewayVrfConfigPtrOutputWithContext(context.Background())
}

func (o GatewayVrfConfigOutput) ToGatewayVrfConfigPtrOutputWithContext(ctx context.Context) GatewayVrfConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayVrfConfig) *GatewayVrfConfig {
		return &v
	}).(GatewayVrfConfigPtrOutput)
}

// Whether to enable VRF (when supported on the device)
func (o GatewayVrfConfigOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GatewayVrfConfig) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type GatewayVrfConfigPtrOutput struct{ *pulumi.OutputState }

func (GatewayVrfConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayVrfConfig)(nil)).Elem()
}

func (o GatewayVrfConfigPtrOutput) ToGatewayVrfConfigPtrOutput() GatewayVrfConfigPtrOutput {
	return o
}

func (o GatewayVrfConfigPtrOutput) ToGatewayVrfConfigPtrOutputWithContext(ctx context.Context) GatewayVrfConfigPtrOutput {
	return o
}

func (o GatewayVrfConfigPtrOutput) Elem() GatewayVrfConfigOutput {
	return o.ApplyT(func(v *GatewayVrfConfig) GatewayVrfConfig {
		if v != nil {
			return *v
		}
		var ret GatewayVrfConfig
		return ret
	}).(GatewayVrfConfigOutput)
}

// Whether to enable VRF (when supported on the device)
func (o GatewayVrfConfigPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GatewayVrfConfig) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type GatewayVrfInstances struct {
	Networks []string `pulumi:"networks"`
}

// GatewayVrfInstancesInput is an input type that accepts GatewayVrfInstancesArgs and GatewayVrfInstancesOutput values.
// You can construct a concrete instance of `GatewayVrfInstancesInput` via:
//
//	GatewayVrfInstancesArgs{...}
type GatewayVrfInstancesInput interface {
	pulumi.Input

	ToGatewayVrfInstancesOutput() GatewayVrfInstancesOutput
	ToGatewayVrfInstancesOutputWithContext(context.Context) GatewayVrfInstancesOutput
}

type GatewayVrfInstancesArgs struct {
	Networks pulumi.StringArrayInput `pulumi:"networks"`
}

func (GatewayVrfInstancesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayVrfInstances)(nil)).Elem()
}

func (i GatewayVrfInstancesArgs) ToGatewayVrfInstancesOutput() GatewayVrfInstancesOutput {
	return i.ToGatewayVrfInstancesOutputWithContext(context.Background())
}

func (i GatewayVrfInstancesArgs) ToGatewayVrfInstancesOutputWithContext(ctx context.Context) GatewayVrfInstancesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayVrfInstancesOutput)
}

// GatewayVrfInstancesMapInput is an input type that accepts GatewayVrfInstancesMap and GatewayVrfInstancesMapOutput values.
// You can construct a concrete instance of `GatewayVrfInstancesMapInput` via:
//
//	GatewayVrfInstancesMap{ "key": GatewayVrfInstancesArgs{...} }
type GatewayVrfInstancesMapInput interface {
	pulumi.Input

	ToGatewayVrfInstancesMapOutput() GatewayVrfInstancesMapOutput
	ToGatewayVrfInstancesMapOutputWithContext(context.Context) GatewayVrfInstancesMapOutput
}

type GatewayVrfInstancesMap map[string]GatewayVrfInstancesInput

func (GatewayVrfInstancesMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]GatewayVrfInstances)(nil)).Elem()
}

func (i GatewayVrfInstancesMap) ToGatewayVrfInstancesMapOutput() GatewayVrfInstancesMapOutput {
	return i.ToGatewayVrfInstancesMapOutputWithContext(context.Background())
}

func (i GatewayVrfInstancesMap) ToGatewayVrfInstancesMapOutputWithContext(ctx context.Context) GatewayVrfInstancesMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayVrfInstancesMapOutput)
}

type GatewayVrfInstancesOutput struct{ *pulumi.OutputState }

func (GatewayVrfInstancesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayVrfInstances)(nil)).Elem()
}

func (o GatewayVrfInstancesOutput) ToGatewayVrfInstancesOutput() GatewayVrfInstancesOutput {
	return o
}

func (o GatewayVrfInstancesOutput) ToGatewayVrfInstancesOutputWithContext(ctx context.Context) GatewayVrfInstancesOutput {
	return o
}

func (o GatewayVrfInstancesOutput) Networks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GatewayVrfInstances) []string { return v.Networks }).(pulumi.StringArrayOutput)
}

type GatewayVrfInstancesMapOutput struct{ *pulumi.OutputState }

func (GatewayVrfInstancesMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]GatewayVrfInstances)(nil)).Elem()
}

func (o GatewayVrfInstancesMapOutput) ToGatewayVrfInstancesMapOutput() GatewayVrfInstancesMapOutput {
	return o
}

func (o GatewayVrfInstancesMapOutput) ToGatewayVrfInstancesMapOutputWithContext(ctx context.Context) GatewayVrfInstancesMapOutput {
	return o
}

func (o GatewayVrfInstancesMapOutput) MapIndex(k pulumi.StringInput) GatewayVrfInstancesOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) GatewayVrfInstances {
		return vs[0].(map[string]GatewayVrfInstances)[vs[1].(string)]
	}).(GatewayVrfInstancesOutput)
}

type SwitchAclPolicy struct {
	// ACL Policy Actions:
	//   - for GBP-based policy, all srcTags and dstTags have to be gbp-based
	//   - for ACL-based policy, `network` is required in either the source or destination so that we know where to attach the policy to
	Actions []SwitchAclPolicyAction `pulumi:"actions"`
	Name    *string                 `pulumi:"name"`
	// ACL Policy Source Tags:
	//   - for GBP-based policy, all srcTags and dstTags have to be gbp-based
	//   - for ACL-based policy, `network` is required in either the source or destination so that we know where to attach the policy to
	SrcTags []string `pulumi:"srcTags"`
}

// SwitchAclPolicyInput is an input type that accepts SwitchAclPolicyArgs and SwitchAclPolicyOutput values.
// You can construct a concrete instance of `SwitchAclPolicyInput` via:
//
//	SwitchAclPolicyArgs{...}
type SwitchAclPolicyInput interface {
	pulumi.Input

	ToSwitchAclPolicyOutput() SwitchAclPolicyOutput
	ToSwitchAclPolicyOutputWithContext(context.Context) SwitchAclPolicyOutput
}

type SwitchAclPolicyArgs struct {
	// ACL Policy Actions:
	//   - for GBP-based policy, all srcTags and dstTags have to be gbp-based
	//   - for ACL-based policy, `network` is required in either the source or destination so that we know where to attach the policy to
	Actions SwitchAclPolicyActionArrayInput `pulumi:"actions"`
	Name    pulumi.StringPtrInput           `pulumi:"name"`
	// ACL Policy Source Tags:
	//   - for GBP-based policy, all srcTags and dstTags have to be gbp-based
	//   - for ACL-based policy, `network` is required in either the source or destination so that we know where to attach the policy to
	SrcTags pulumi.StringArrayInput `pulumi:"srcTags"`
}

func (SwitchAclPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchAclPolicy)(nil)).Elem()
}

func (i SwitchAclPolicyArgs) ToSwitchAclPolicyOutput() SwitchAclPolicyOutput {
	return i.ToSwitchAclPolicyOutputWithContext(context.Background())
}

func (i SwitchAclPolicyArgs) ToSwitchAclPolicyOutputWithContext(ctx context.Context) SwitchAclPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchAclPolicyOutput)
}

// SwitchAclPolicyArrayInput is an input type that accepts SwitchAclPolicyArray and SwitchAclPolicyArrayOutput values.
// You can construct a concrete instance of `SwitchAclPolicyArrayInput` via:
//
//	SwitchAclPolicyArray{ SwitchAclPolicyArgs{...} }
type SwitchAclPolicyArrayInput interface {
	pulumi.Input

	ToSwitchAclPolicyArrayOutput() SwitchAclPolicyArrayOutput
	ToSwitchAclPolicyArrayOutputWithContext(context.Context) SwitchAclPolicyArrayOutput
}

type SwitchAclPolicyArray []SwitchAclPolicyInput

func (SwitchAclPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchAclPolicy)(nil)).Elem()
}

func (i SwitchAclPolicyArray) ToSwitchAclPolicyArrayOutput() SwitchAclPolicyArrayOutput {
	return i.ToSwitchAclPolicyArrayOutputWithContext(context.Background())
}

func (i SwitchAclPolicyArray) ToSwitchAclPolicyArrayOutputWithContext(ctx context.Context) SwitchAclPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchAclPolicyArrayOutput)
}

type SwitchAclPolicyOutput struct{ *pulumi.OutputState }

func (SwitchAclPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchAclPolicy)(nil)).Elem()
}

func (o SwitchAclPolicyOutput) ToSwitchAclPolicyOutput() SwitchAclPolicyOutput {
	return o
}

func (o SwitchAclPolicyOutput) ToSwitchAclPolicyOutputWithContext(ctx context.Context) SwitchAclPolicyOutput {
	return o
}

// ACL Policy Actions:
//   - for GBP-based policy, all srcTags and dstTags have to be gbp-based
//   - for ACL-based policy, `network` is required in either the source or destination so that we know where to attach the policy to
func (o SwitchAclPolicyOutput) Actions() SwitchAclPolicyActionArrayOutput {
	return o.ApplyT(func(v SwitchAclPolicy) []SwitchAclPolicyAction { return v.Actions }).(SwitchAclPolicyActionArrayOutput)
}

func (o SwitchAclPolicyOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchAclPolicy) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// ACL Policy Source Tags:
//   - for GBP-based policy, all srcTags and dstTags have to be gbp-based
//   - for ACL-based policy, `network` is required in either the source or destination so that we know where to attach the policy to
func (o SwitchAclPolicyOutput) SrcTags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SwitchAclPolicy) []string { return v.SrcTags }).(pulumi.StringArrayOutput)
}

type SwitchAclPolicyArrayOutput struct{ *pulumi.OutputState }

func (SwitchAclPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchAclPolicy)(nil)).Elem()
}

func (o SwitchAclPolicyArrayOutput) ToSwitchAclPolicyArrayOutput() SwitchAclPolicyArrayOutput {
	return o
}

func (o SwitchAclPolicyArrayOutput) ToSwitchAclPolicyArrayOutputWithContext(ctx context.Context) SwitchAclPolicyArrayOutput {
	return o
}

func (o SwitchAclPolicyArrayOutput) Index(i pulumi.IntInput) SwitchAclPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwitchAclPolicy {
		return vs[0].([]SwitchAclPolicy)[vs[1].(int)]
	}).(SwitchAclPolicyOutput)
}

type SwitchAclPolicyAction struct {
	// enum: `allow`, `deny`
	Action *string `pulumi:"action"`
	DstTag string  `pulumi:"dstTag"`
}

// SwitchAclPolicyActionInput is an input type that accepts SwitchAclPolicyActionArgs and SwitchAclPolicyActionOutput values.
// You can construct a concrete instance of `SwitchAclPolicyActionInput` via:
//
//	SwitchAclPolicyActionArgs{...}
type SwitchAclPolicyActionInput interface {
	pulumi.Input

	ToSwitchAclPolicyActionOutput() SwitchAclPolicyActionOutput
	ToSwitchAclPolicyActionOutputWithContext(context.Context) SwitchAclPolicyActionOutput
}

type SwitchAclPolicyActionArgs struct {
	// enum: `allow`, `deny`
	Action pulumi.StringPtrInput `pulumi:"action"`
	DstTag pulumi.StringInput    `pulumi:"dstTag"`
}

func (SwitchAclPolicyActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchAclPolicyAction)(nil)).Elem()
}

func (i SwitchAclPolicyActionArgs) ToSwitchAclPolicyActionOutput() SwitchAclPolicyActionOutput {
	return i.ToSwitchAclPolicyActionOutputWithContext(context.Background())
}

func (i SwitchAclPolicyActionArgs) ToSwitchAclPolicyActionOutputWithContext(ctx context.Context) SwitchAclPolicyActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchAclPolicyActionOutput)
}

// SwitchAclPolicyActionArrayInput is an input type that accepts SwitchAclPolicyActionArray and SwitchAclPolicyActionArrayOutput values.
// You can construct a concrete instance of `SwitchAclPolicyActionArrayInput` via:
//
//	SwitchAclPolicyActionArray{ SwitchAclPolicyActionArgs{...} }
type SwitchAclPolicyActionArrayInput interface {
	pulumi.Input

	ToSwitchAclPolicyActionArrayOutput() SwitchAclPolicyActionArrayOutput
	ToSwitchAclPolicyActionArrayOutputWithContext(context.Context) SwitchAclPolicyActionArrayOutput
}

type SwitchAclPolicyActionArray []SwitchAclPolicyActionInput

func (SwitchAclPolicyActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchAclPolicyAction)(nil)).Elem()
}

func (i SwitchAclPolicyActionArray) ToSwitchAclPolicyActionArrayOutput() SwitchAclPolicyActionArrayOutput {
	return i.ToSwitchAclPolicyActionArrayOutputWithContext(context.Background())
}

func (i SwitchAclPolicyActionArray) ToSwitchAclPolicyActionArrayOutputWithContext(ctx context.Context) SwitchAclPolicyActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchAclPolicyActionArrayOutput)
}

type SwitchAclPolicyActionOutput struct{ *pulumi.OutputState }

func (SwitchAclPolicyActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchAclPolicyAction)(nil)).Elem()
}

func (o SwitchAclPolicyActionOutput) ToSwitchAclPolicyActionOutput() SwitchAclPolicyActionOutput {
	return o
}

func (o SwitchAclPolicyActionOutput) ToSwitchAclPolicyActionOutputWithContext(ctx context.Context) SwitchAclPolicyActionOutput {
	return o
}

// enum: `allow`, `deny`
func (o SwitchAclPolicyActionOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchAclPolicyAction) *string { return v.Action }).(pulumi.StringPtrOutput)
}

func (o SwitchAclPolicyActionOutput) DstTag() pulumi.StringOutput {
	return o.ApplyT(func(v SwitchAclPolicyAction) string { return v.DstTag }).(pulumi.StringOutput)
}

type SwitchAclPolicyActionArrayOutput struct{ *pulumi.OutputState }

func (SwitchAclPolicyActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchAclPolicyAction)(nil)).Elem()
}

func (o SwitchAclPolicyActionArrayOutput) ToSwitchAclPolicyActionArrayOutput() SwitchAclPolicyActionArrayOutput {
	return o
}

func (o SwitchAclPolicyActionArrayOutput) ToSwitchAclPolicyActionArrayOutputWithContext(ctx context.Context) SwitchAclPolicyActionArrayOutput {
	return o
}

func (o SwitchAclPolicyActionArrayOutput) Index(i pulumi.IntInput) SwitchAclPolicyActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwitchAclPolicyAction {
		return vs[0].([]SwitchAclPolicyAction)[vs[1].(int)]
	}).(SwitchAclPolicyActionOutput)
}

type SwitchAclTags struct {
	// Required if
	//   - `type`==`dynamicGbp` (gbp_tag received from RADIUS)
	//   - `type`==`gbpResource`
	//   - `type`==`staticGbp` (applying gbp tag against matching conditions)
	GbpTag *int `pulumi:"gbpTag"`
	// Required if
	// - `type`==`mac`
	// - `type`==`staticGbp` if from matching mac
	Macs []string `pulumi:"macs"`
	// If:
	//   * `type`==`mac` (optional. default is `any`)
	//   * `type`==`subnet` (optional. default is `any`)
	//   * `type`==`network`
	//   * `type`==`resource` (optional. default is `any`)
	//   * `type`==`staticGbp` if from matching network (vlan)
	Network *string `pulumi:"network"`
	// Required if:
	//   * `type`==`radiusGroup`
	//   * `type`==`staticGbp`
	//     if from matching radius_group
	RadiusGroup *string `pulumi:"radiusGroup"`
	// If `type`==`resource` or `type`==`gbpResource`. Empty means unrestricted, i.e. any
	Specs []SwitchAclTagsSpec `pulumi:"specs"`
	// If
	// - `type`==`subnet`
	// - `type`==`resource` (optional. default is `any`)
	// - `type`==`staticGbp` if from matching subnet
	Subnets []string `pulumi:"subnets"`
	// enum:
	//   * `any`: matching anything not identified
	//   * `dynamicGbp`: from the gbpTag received from RADIUS
	//   * `gbpResource`: can only be used in `dstTags`
	//   * `mac`
	//   * `network`
	//   * `radiusGroup`
	//   * `resource`: can only be used in `dstTags`
	//   * `staticGbp`: applying gbp tag against matching conditions
	//   * `subnet`'
	Type string `pulumi:"type"`
}

// SwitchAclTagsInput is an input type that accepts SwitchAclTagsArgs and SwitchAclTagsOutput values.
// You can construct a concrete instance of `SwitchAclTagsInput` via:
//
//	SwitchAclTagsArgs{...}
type SwitchAclTagsInput interface {
	pulumi.Input

	ToSwitchAclTagsOutput() SwitchAclTagsOutput
	ToSwitchAclTagsOutputWithContext(context.Context) SwitchAclTagsOutput
}

type SwitchAclTagsArgs struct {
	// Required if
	//   - `type`==`dynamicGbp` (gbp_tag received from RADIUS)
	//   - `type`==`gbpResource`
	//   - `type`==`staticGbp` (applying gbp tag against matching conditions)
	GbpTag pulumi.IntPtrInput `pulumi:"gbpTag"`
	// Required if
	// - `type`==`mac`
	// - `type`==`staticGbp` if from matching mac
	Macs pulumi.StringArrayInput `pulumi:"macs"`
	// If:
	//   * `type`==`mac` (optional. default is `any`)
	//   * `type`==`subnet` (optional. default is `any`)
	//   * `type`==`network`
	//   * `type`==`resource` (optional. default is `any`)
	//   * `type`==`staticGbp` if from matching network (vlan)
	Network pulumi.StringPtrInput `pulumi:"network"`
	// Required if:
	//   * `type`==`radiusGroup`
	//   * `type`==`staticGbp`
	//     if from matching radius_group
	RadiusGroup pulumi.StringPtrInput `pulumi:"radiusGroup"`
	// If `type`==`resource` or `type`==`gbpResource`. Empty means unrestricted, i.e. any
	Specs SwitchAclTagsSpecArrayInput `pulumi:"specs"`
	// If
	// - `type`==`subnet`
	// - `type`==`resource` (optional. default is `any`)
	// - `type`==`staticGbp` if from matching subnet
	Subnets pulumi.StringArrayInput `pulumi:"subnets"`
	// enum:
	//   * `any`: matching anything not identified
	//   * `dynamicGbp`: from the gbpTag received from RADIUS
	//   * `gbpResource`: can only be used in `dstTags`
	//   * `mac`
	//   * `network`
	//   * `radiusGroup`
	//   * `resource`: can only be used in `dstTags`
	//   * `staticGbp`: applying gbp tag against matching conditions
	//   * `subnet`'
	Type pulumi.StringInput `pulumi:"type"`
}

func (SwitchAclTagsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchAclTags)(nil)).Elem()
}

func (i SwitchAclTagsArgs) ToSwitchAclTagsOutput() SwitchAclTagsOutput {
	return i.ToSwitchAclTagsOutputWithContext(context.Background())
}

func (i SwitchAclTagsArgs) ToSwitchAclTagsOutputWithContext(ctx context.Context) SwitchAclTagsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchAclTagsOutput)
}

// SwitchAclTagsMapInput is an input type that accepts SwitchAclTagsMap and SwitchAclTagsMapOutput values.
// You can construct a concrete instance of `SwitchAclTagsMapInput` via:
//
//	SwitchAclTagsMap{ "key": SwitchAclTagsArgs{...} }
type SwitchAclTagsMapInput interface {
	pulumi.Input

	ToSwitchAclTagsMapOutput() SwitchAclTagsMapOutput
	ToSwitchAclTagsMapOutputWithContext(context.Context) SwitchAclTagsMapOutput
}

type SwitchAclTagsMap map[string]SwitchAclTagsInput

func (SwitchAclTagsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]SwitchAclTags)(nil)).Elem()
}

func (i SwitchAclTagsMap) ToSwitchAclTagsMapOutput() SwitchAclTagsMapOutput {
	return i.ToSwitchAclTagsMapOutputWithContext(context.Background())
}

func (i SwitchAclTagsMap) ToSwitchAclTagsMapOutputWithContext(ctx context.Context) SwitchAclTagsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchAclTagsMapOutput)
}

type SwitchAclTagsOutput struct{ *pulumi.OutputState }

func (SwitchAclTagsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchAclTags)(nil)).Elem()
}

func (o SwitchAclTagsOutput) ToSwitchAclTagsOutput() SwitchAclTagsOutput {
	return o
}

func (o SwitchAclTagsOutput) ToSwitchAclTagsOutputWithContext(ctx context.Context) SwitchAclTagsOutput {
	return o
}

// Required if
//   - `type`==`dynamicGbp` (gbp_tag received from RADIUS)
//   - `type`==`gbpResource`
//   - `type`==`staticGbp` (applying gbp tag against matching conditions)
func (o SwitchAclTagsOutput) GbpTag() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchAclTags) *int { return v.GbpTag }).(pulumi.IntPtrOutput)
}

// Required if
// - `type`==`mac`
// - `type`==`staticGbp` if from matching mac
func (o SwitchAclTagsOutput) Macs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SwitchAclTags) []string { return v.Macs }).(pulumi.StringArrayOutput)
}

// If:
//   - `type`==`mac` (optional. default is `any`)
//   - `type`==`subnet` (optional. default is `any`)
//   - `type`==`network`
//   - `type`==`resource` (optional. default is `any`)
//   - `type`==`staticGbp` if from matching network (vlan)
func (o SwitchAclTagsOutput) Network() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchAclTags) *string { return v.Network }).(pulumi.StringPtrOutput)
}

// Required if:
//   - `type`==`radiusGroup`
//   - `type`==`staticGbp`
//     if from matching radius_group
func (o SwitchAclTagsOutput) RadiusGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchAclTags) *string { return v.RadiusGroup }).(pulumi.StringPtrOutput)
}

// If `type`==`resource` or `type`==`gbpResource`. Empty means unrestricted, i.e. any
func (o SwitchAclTagsOutput) Specs() SwitchAclTagsSpecArrayOutput {
	return o.ApplyT(func(v SwitchAclTags) []SwitchAclTagsSpec { return v.Specs }).(SwitchAclTagsSpecArrayOutput)
}

// If
// - `type`==`subnet`
// - `type`==`resource` (optional. default is `any`)
// - `type`==`staticGbp` if from matching subnet
func (o SwitchAclTagsOutput) Subnets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SwitchAclTags) []string { return v.Subnets }).(pulumi.StringArrayOutput)
}

// enum:
//   - `any`: matching anything not identified
//   - `dynamicGbp`: from the gbpTag received from RADIUS
//   - `gbpResource`: can only be used in `dstTags`
//   - `mac`
//   - `network`
//   - `radiusGroup`
//   - `resource`: can only be used in `dstTags`
//   - `staticGbp`: applying gbp tag against matching conditions
//   - `subnet`'
func (o SwitchAclTagsOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SwitchAclTags) string { return v.Type }).(pulumi.StringOutput)
}

type SwitchAclTagsMapOutput struct{ *pulumi.OutputState }

func (SwitchAclTagsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]SwitchAclTags)(nil)).Elem()
}

func (o SwitchAclTagsMapOutput) ToSwitchAclTagsMapOutput() SwitchAclTagsMapOutput {
	return o
}

func (o SwitchAclTagsMapOutput) ToSwitchAclTagsMapOutputWithContext(ctx context.Context) SwitchAclTagsMapOutput {
	return o
}

func (o SwitchAclTagsMapOutput) MapIndex(k pulumi.StringInput) SwitchAclTagsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) SwitchAclTags {
		return vs[0].(map[string]SwitchAclTags)[vs[1].(string)]
	}).(SwitchAclTagsOutput)
}

type SwitchAclTagsSpec struct {
	// Matched dst port, "0" means any
	PortRange *string `pulumi:"portRange"`
	// `tcp` / `udp` / `icmp` / `icmp6` / `gre` / `any` / `:protocol_number`, `protocolNumber` is between 1-254, default is `any` `protocolNumber` is between 1-254
	Protocol *string `pulumi:"protocol"`
}

// SwitchAclTagsSpecInput is an input type that accepts SwitchAclTagsSpecArgs and SwitchAclTagsSpecOutput values.
// You can construct a concrete instance of `SwitchAclTagsSpecInput` via:
//
//	SwitchAclTagsSpecArgs{...}
type SwitchAclTagsSpecInput interface {
	pulumi.Input

	ToSwitchAclTagsSpecOutput() SwitchAclTagsSpecOutput
	ToSwitchAclTagsSpecOutputWithContext(context.Context) SwitchAclTagsSpecOutput
}

type SwitchAclTagsSpecArgs struct {
	// Matched dst port, "0" means any
	PortRange pulumi.StringPtrInput `pulumi:"portRange"`
	// `tcp` / `udp` / `icmp` / `icmp6` / `gre` / `any` / `:protocol_number`, `protocolNumber` is between 1-254, default is `any` `protocolNumber` is between 1-254
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
}

func (SwitchAclTagsSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchAclTagsSpec)(nil)).Elem()
}

func (i SwitchAclTagsSpecArgs) ToSwitchAclTagsSpecOutput() SwitchAclTagsSpecOutput {
	return i.ToSwitchAclTagsSpecOutputWithContext(context.Background())
}

func (i SwitchAclTagsSpecArgs) ToSwitchAclTagsSpecOutputWithContext(ctx context.Context) SwitchAclTagsSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchAclTagsSpecOutput)
}

// SwitchAclTagsSpecArrayInput is an input type that accepts SwitchAclTagsSpecArray and SwitchAclTagsSpecArrayOutput values.
// You can construct a concrete instance of `SwitchAclTagsSpecArrayInput` via:
//
//	SwitchAclTagsSpecArray{ SwitchAclTagsSpecArgs{...} }
type SwitchAclTagsSpecArrayInput interface {
	pulumi.Input

	ToSwitchAclTagsSpecArrayOutput() SwitchAclTagsSpecArrayOutput
	ToSwitchAclTagsSpecArrayOutputWithContext(context.Context) SwitchAclTagsSpecArrayOutput
}

type SwitchAclTagsSpecArray []SwitchAclTagsSpecInput

func (SwitchAclTagsSpecArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchAclTagsSpec)(nil)).Elem()
}

func (i SwitchAclTagsSpecArray) ToSwitchAclTagsSpecArrayOutput() SwitchAclTagsSpecArrayOutput {
	return i.ToSwitchAclTagsSpecArrayOutputWithContext(context.Background())
}

func (i SwitchAclTagsSpecArray) ToSwitchAclTagsSpecArrayOutputWithContext(ctx context.Context) SwitchAclTagsSpecArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchAclTagsSpecArrayOutput)
}

type SwitchAclTagsSpecOutput struct{ *pulumi.OutputState }

func (SwitchAclTagsSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchAclTagsSpec)(nil)).Elem()
}

func (o SwitchAclTagsSpecOutput) ToSwitchAclTagsSpecOutput() SwitchAclTagsSpecOutput {
	return o
}

func (o SwitchAclTagsSpecOutput) ToSwitchAclTagsSpecOutputWithContext(ctx context.Context) SwitchAclTagsSpecOutput {
	return o
}

// Matched dst port, "0" means any
func (o SwitchAclTagsSpecOutput) PortRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchAclTagsSpec) *string { return v.PortRange }).(pulumi.StringPtrOutput)
}

// `tcp` / `udp` / `icmp` / `icmp6` / `gre` / `any` / `:protocol_number`, `protocolNumber` is between 1-254, default is `any` `protocolNumber` is between 1-254
func (o SwitchAclTagsSpecOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchAclTagsSpec) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

type SwitchAclTagsSpecArrayOutput struct{ *pulumi.OutputState }

func (SwitchAclTagsSpecArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchAclTagsSpec)(nil)).Elem()
}

func (o SwitchAclTagsSpecArrayOutput) ToSwitchAclTagsSpecArrayOutput() SwitchAclTagsSpecArrayOutput {
	return o
}

func (o SwitchAclTagsSpecArrayOutput) ToSwitchAclTagsSpecArrayOutputWithContext(ctx context.Context) SwitchAclTagsSpecArrayOutput {
	return o
}

func (o SwitchAclTagsSpecArrayOutput) Index(i pulumi.IntInput) SwitchAclTagsSpecOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwitchAclTagsSpec {
		return vs[0].([]SwitchAclTagsSpec)[vs[1].(int)]
	}).(SwitchAclTagsSpecOutput)
}

type SwitchDhcpSnooping struct {
	AllNetworks *bool `pulumi:"allNetworks"`
	// Enable for dynamic ARP inspection check
	EnableArpSpoofCheck *bool `pulumi:"enableArpSpoofCheck"`
	// Enable for check for forging source IP address
	EnableIpSourceGuard *bool `pulumi:"enableIpSourceGuard"`
	Enabled             *bool `pulumi:"enabled"`
	// If `allNetworks`==`false`, list of network with DHCP snooping enabled
	Networks []string `pulumi:"networks"`
}

// SwitchDhcpSnoopingInput is an input type that accepts SwitchDhcpSnoopingArgs and SwitchDhcpSnoopingOutput values.
// You can construct a concrete instance of `SwitchDhcpSnoopingInput` via:
//
//	SwitchDhcpSnoopingArgs{...}
type SwitchDhcpSnoopingInput interface {
	pulumi.Input

	ToSwitchDhcpSnoopingOutput() SwitchDhcpSnoopingOutput
	ToSwitchDhcpSnoopingOutputWithContext(context.Context) SwitchDhcpSnoopingOutput
}

type SwitchDhcpSnoopingArgs struct {
	AllNetworks pulumi.BoolPtrInput `pulumi:"allNetworks"`
	// Enable for dynamic ARP inspection check
	EnableArpSpoofCheck pulumi.BoolPtrInput `pulumi:"enableArpSpoofCheck"`
	// Enable for check for forging source IP address
	EnableIpSourceGuard pulumi.BoolPtrInput `pulumi:"enableIpSourceGuard"`
	Enabled             pulumi.BoolPtrInput `pulumi:"enabled"`
	// If `allNetworks`==`false`, list of network with DHCP snooping enabled
	Networks pulumi.StringArrayInput `pulumi:"networks"`
}

func (SwitchDhcpSnoopingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchDhcpSnooping)(nil)).Elem()
}

func (i SwitchDhcpSnoopingArgs) ToSwitchDhcpSnoopingOutput() SwitchDhcpSnoopingOutput {
	return i.ToSwitchDhcpSnoopingOutputWithContext(context.Background())
}

func (i SwitchDhcpSnoopingArgs) ToSwitchDhcpSnoopingOutputWithContext(ctx context.Context) SwitchDhcpSnoopingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchDhcpSnoopingOutput)
}

func (i SwitchDhcpSnoopingArgs) ToSwitchDhcpSnoopingPtrOutput() SwitchDhcpSnoopingPtrOutput {
	return i.ToSwitchDhcpSnoopingPtrOutputWithContext(context.Background())
}

func (i SwitchDhcpSnoopingArgs) ToSwitchDhcpSnoopingPtrOutputWithContext(ctx context.Context) SwitchDhcpSnoopingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchDhcpSnoopingOutput).ToSwitchDhcpSnoopingPtrOutputWithContext(ctx)
}

// SwitchDhcpSnoopingPtrInput is an input type that accepts SwitchDhcpSnoopingArgs, SwitchDhcpSnoopingPtr and SwitchDhcpSnoopingPtrOutput values.
// You can construct a concrete instance of `SwitchDhcpSnoopingPtrInput` via:
//
//	        SwitchDhcpSnoopingArgs{...}
//
//	or:
//
//	        nil
type SwitchDhcpSnoopingPtrInput interface {
	pulumi.Input

	ToSwitchDhcpSnoopingPtrOutput() SwitchDhcpSnoopingPtrOutput
	ToSwitchDhcpSnoopingPtrOutputWithContext(context.Context) SwitchDhcpSnoopingPtrOutput
}

type switchDhcpSnoopingPtrType SwitchDhcpSnoopingArgs

func SwitchDhcpSnoopingPtr(v *SwitchDhcpSnoopingArgs) SwitchDhcpSnoopingPtrInput {
	return (*switchDhcpSnoopingPtrType)(v)
}

func (*switchDhcpSnoopingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchDhcpSnooping)(nil)).Elem()
}

func (i *switchDhcpSnoopingPtrType) ToSwitchDhcpSnoopingPtrOutput() SwitchDhcpSnoopingPtrOutput {
	return i.ToSwitchDhcpSnoopingPtrOutputWithContext(context.Background())
}

func (i *switchDhcpSnoopingPtrType) ToSwitchDhcpSnoopingPtrOutputWithContext(ctx context.Context) SwitchDhcpSnoopingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchDhcpSnoopingPtrOutput)
}

type SwitchDhcpSnoopingOutput struct{ *pulumi.OutputState }

func (SwitchDhcpSnoopingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchDhcpSnooping)(nil)).Elem()
}

func (o SwitchDhcpSnoopingOutput) ToSwitchDhcpSnoopingOutput() SwitchDhcpSnoopingOutput {
	return o
}

func (o SwitchDhcpSnoopingOutput) ToSwitchDhcpSnoopingOutputWithContext(ctx context.Context) SwitchDhcpSnoopingOutput {
	return o
}

func (o SwitchDhcpSnoopingOutput) ToSwitchDhcpSnoopingPtrOutput() SwitchDhcpSnoopingPtrOutput {
	return o.ToSwitchDhcpSnoopingPtrOutputWithContext(context.Background())
}

func (o SwitchDhcpSnoopingOutput) ToSwitchDhcpSnoopingPtrOutputWithContext(ctx context.Context) SwitchDhcpSnoopingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SwitchDhcpSnooping) *SwitchDhcpSnooping {
		return &v
	}).(SwitchDhcpSnoopingPtrOutput)
}

func (o SwitchDhcpSnoopingOutput) AllNetworks() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SwitchDhcpSnooping) *bool { return v.AllNetworks }).(pulumi.BoolPtrOutput)
}

// Enable for dynamic ARP inspection check
func (o SwitchDhcpSnoopingOutput) EnableArpSpoofCheck() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SwitchDhcpSnooping) *bool { return v.EnableArpSpoofCheck }).(pulumi.BoolPtrOutput)
}

// Enable for check for forging source IP address
func (o SwitchDhcpSnoopingOutput) EnableIpSourceGuard() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SwitchDhcpSnooping) *bool { return v.EnableIpSourceGuard }).(pulumi.BoolPtrOutput)
}

func (o SwitchDhcpSnoopingOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SwitchDhcpSnooping) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// If `allNetworks`==`false`, list of network with DHCP snooping enabled
func (o SwitchDhcpSnoopingOutput) Networks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SwitchDhcpSnooping) []string { return v.Networks }).(pulumi.StringArrayOutput)
}

type SwitchDhcpSnoopingPtrOutput struct{ *pulumi.OutputState }

func (SwitchDhcpSnoopingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchDhcpSnooping)(nil)).Elem()
}

func (o SwitchDhcpSnoopingPtrOutput) ToSwitchDhcpSnoopingPtrOutput() SwitchDhcpSnoopingPtrOutput {
	return o
}

func (o SwitchDhcpSnoopingPtrOutput) ToSwitchDhcpSnoopingPtrOutputWithContext(ctx context.Context) SwitchDhcpSnoopingPtrOutput {
	return o
}

func (o SwitchDhcpSnoopingPtrOutput) Elem() SwitchDhcpSnoopingOutput {
	return o.ApplyT(func(v *SwitchDhcpSnooping) SwitchDhcpSnooping {
		if v != nil {
			return *v
		}
		var ret SwitchDhcpSnooping
		return ret
	}).(SwitchDhcpSnoopingOutput)
}

func (o SwitchDhcpSnoopingPtrOutput) AllNetworks() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SwitchDhcpSnooping) *bool {
		if v == nil {
			return nil
		}
		return v.AllNetworks
	}).(pulumi.BoolPtrOutput)
}

// Enable for dynamic ARP inspection check
func (o SwitchDhcpSnoopingPtrOutput) EnableArpSpoofCheck() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SwitchDhcpSnooping) *bool {
		if v == nil {
			return nil
		}
		return v.EnableArpSpoofCheck
	}).(pulumi.BoolPtrOutput)
}

// Enable for check for forging source IP address
func (o SwitchDhcpSnoopingPtrOutput) EnableIpSourceGuard() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SwitchDhcpSnooping) *bool {
		if v == nil {
			return nil
		}
		return v.EnableIpSourceGuard
	}).(pulumi.BoolPtrOutput)
}

func (o SwitchDhcpSnoopingPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SwitchDhcpSnooping) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// If `allNetworks`==`false`, list of network with DHCP snooping enabled
func (o SwitchDhcpSnoopingPtrOutput) Networks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SwitchDhcpSnooping) []string {
		if v == nil {
			return nil
		}
		return v.Networks
	}).(pulumi.StringArrayOutput)
}

type SwitchDhcpdConfig struct {
	// Property key is the network name
	Config map[string]SwitchDhcpdConfigConfig `pulumi:"config"`
	// If set to `true`, enable the DHCP server
	Enabled *bool `pulumi:"enabled"`
}

// SwitchDhcpdConfigInput is an input type that accepts SwitchDhcpdConfigArgs and SwitchDhcpdConfigOutput values.
// You can construct a concrete instance of `SwitchDhcpdConfigInput` via:
//
//	SwitchDhcpdConfigArgs{...}
type SwitchDhcpdConfigInput interface {
	pulumi.Input

	ToSwitchDhcpdConfigOutput() SwitchDhcpdConfigOutput
	ToSwitchDhcpdConfigOutputWithContext(context.Context) SwitchDhcpdConfigOutput
}

type SwitchDhcpdConfigArgs struct {
	// Property key is the network name
	Config SwitchDhcpdConfigConfigMapInput `pulumi:"config"`
	// If set to `true`, enable the DHCP server
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (SwitchDhcpdConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchDhcpdConfig)(nil)).Elem()
}

func (i SwitchDhcpdConfigArgs) ToSwitchDhcpdConfigOutput() SwitchDhcpdConfigOutput {
	return i.ToSwitchDhcpdConfigOutputWithContext(context.Background())
}

func (i SwitchDhcpdConfigArgs) ToSwitchDhcpdConfigOutputWithContext(ctx context.Context) SwitchDhcpdConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchDhcpdConfigOutput)
}

func (i SwitchDhcpdConfigArgs) ToSwitchDhcpdConfigPtrOutput() SwitchDhcpdConfigPtrOutput {
	return i.ToSwitchDhcpdConfigPtrOutputWithContext(context.Background())
}

func (i SwitchDhcpdConfigArgs) ToSwitchDhcpdConfigPtrOutputWithContext(ctx context.Context) SwitchDhcpdConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchDhcpdConfigOutput).ToSwitchDhcpdConfigPtrOutputWithContext(ctx)
}

// SwitchDhcpdConfigPtrInput is an input type that accepts SwitchDhcpdConfigArgs, SwitchDhcpdConfigPtr and SwitchDhcpdConfigPtrOutput values.
// You can construct a concrete instance of `SwitchDhcpdConfigPtrInput` via:
//
//	        SwitchDhcpdConfigArgs{...}
//
//	or:
//
//	        nil
type SwitchDhcpdConfigPtrInput interface {
	pulumi.Input

	ToSwitchDhcpdConfigPtrOutput() SwitchDhcpdConfigPtrOutput
	ToSwitchDhcpdConfigPtrOutputWithContext(context.Context) SwitchDhcpdConfigPtrOutput
}

type switchDhcpdConfigPtrType SwitchDhcpdConfigArgs

func SwitchDhcpdConfigPtr(v *SwitchDhcpdConfigArgs) SwitchDhcpdConfigPtrInput {
	return (*switchDhcpdConfigPtrType)(v)
}

func (*switchDhcpdConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchDhcpdConfig)(nil)).Elem()
}

func (i *switchDhcpdConfigPtrType) ToSwitchDhcpdConfigPtrOutput() SwitchDhcpdConfigPtrOutput {
	return i.ToSwitchDhcpdConfigPtrOutputWithContext(context.Background())
}

func (i *switchDhcpdConfigPtrType) ToSwitchDhcpdConfigPtrOutputWithContext(ctx context.Context) SwitchDhcpdConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchDhcpdConfigPtrOutput)
}

type SwitchDhcpdConfigOutput struct{ *pulumi.OutputState }

func (SwitchDhcpdConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchDhcpdConfig)(nil)).Elem()
}

func (o SwitchDhcpdConfigOutput) ToSwitchDhcpdConfigOutput() SwitchDhcpdConfigOutput {
	return o
}

func (o SwitchDhcpdConfigOutput) ToSwitchDhcpdConfigOutputWithContext(ctx context.Context) SwitchDhcpdConfigOutput {
	return o
}

func (o SwitchDhcpdConfigOutput) ToSwitchDhcpdConfigPtrOutput() SwitchDhcpdConfigPtrOutput {
	return o.ToSwitchDhcpdConfigPtrOutputWithContext(context.Background())
}

func (o SwitchDhcpdConfigOutput) ToSwitchDhcpdConfigPtrOutputWithContext(ctx context.Context) SwitchDhcpdConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SwitchDhcpdConfig) *SwitchDhcpdConfig {
		return &v
	}).(SwitchDhcpdConfigPtrOutput)
}

// Property key is the network name
func (o SwitchDhcpdConfigOutput) Config() SwitchDhcpdConfigConfigMapOutput {
	return o.ApplyT(func(v SwitchDhcpdConfig) map[string]SwitchDhcpdConfigConfig { return v.Config }).(SwitchDhcpdConfigConfigMapOutput)
}

// If set to `true`, enable the DHCP server
func (o SwitchDhcpdConfigOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SwitchDhcpdConfig) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type SwitchDhcpdConfigPtrOutput struct{ *pulumi.OutputState }

func (SwitchDhcpdConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchDhcpdConfig)(nil)).Elem()
}

func (o SwitchDhcpdConfigPtrOutput) ToSwitchDhcpdConfigPtrOutput() SwitchDhcpdConfigPtrOutput {
	return o
}

func (o SwitchDhcpdConfigPtrOutput) ToSwitchDhcpdConfigPtrOutputWithContext(ctx context.Context) SwitchDhcpdConfigPtrOutput {
	return o
}

func (o SwitchDhcpdConfigPtrOutput) Elem() SwitchDhcpdConfigOutput {
	return o.ApplyT(func(v *SwitchDhcpdConfig) SwitchDhcpdConfig {
		if v != nil {
			return *v
		}
		var ret SwitchDhcpdConfig
		return ret
	}).(SwitchDhcpdConfigOutput)
}

// Property key is the network name
func (o SwitchDhcpdConfigPtrOutput) Config() SwitchDhcpdConfigConfigMapOutput {
	return o.ApplyT(func(v *SwitchDhcpdConfig) map[string]SwitchDhcpdConfigConfig {
		if v == nil {
			return nil
		}
		return v.Config
	}).(SwitchDhcpdConfigConfigMapOutput)
}

// If set to `true`, enable the DHCP server
func (o SwitchDhcpdConfigPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SwitchDhcpdConfig) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type SwitchDhcpdConfigConfig struct {
	// If `type`==`server` or `type6`==`server` - optional, if not defined, system one will be used
	DnsServers []string `pulumi:"dnsServers"`
	// If `type`==`server` or `type6`==`server` - optional, if not defined, system one will be used
	DnsSuffixes []string `pulumi:"dnsSuffixes"`
	// If `type`==`server` or `type6`==`server`. Property key is the MAC Address. Format is `[0-9a-f]{12}` (e.g. "5684dae9ac8b")
	FixedBindings map[string]SwitchDhcpdConfigConfigFixedBindings `pulumi:"fixedBindings"`
	// If `type`==`server`  - optional, `ip` will be used if not provided
	Gateway *string `pulumi:"gateway"`
	// If `type`==`server`
	IpEnd *string `pulumi:"ipEnd"`
	// If `type6`==`server`
	IpEnd6 *string `pulumi:"ipEnd6"`
	// If `type`==`server`
	IpStart *string `pulumi:"ipStart"`
	// If `type6`==`server`
	IpStart6 *string `pulumi:"ipStart6"`
	// In seconds, lease time has to be between 3600 [1hr] - 604800 [1 week], default is 86400 [1 day]
	LeaseTime *int `pulumi:"leaseTime"`
	// If `type`==`server` or `type6`==`server`. Property key is the DHCP option number
	Options map[string]SwitchDhcpdConfigConfigOptions `pulumi:"options"`
	// `serverIdOverride`==`true` means the device, when acts as DHCP relay and forwards DHCP responses from DHCP server to clients,
	// should overwrite the Sever Identifier option (i.e. DHCP option 54) in DHCP responses with its own IP address.
	ServerIdOverride *bool `pulumi:"serverIdOverride"`
	// If `type`==`relay`
	Servers []string `pulumi:"servers"`
	// If `type6`==`relay`
	Servers6s []string `pulumi:"servers6s"`
	// enum: `none`, `relay` (DHCP Relay), `server` (DHCP Server)
	Type *string `pulumi:"type"`
	// enum: `none`, `relay` (DHCP Relay), `server` (DHCP Server)
	Type6 *string `pulumi:"type6"`
	// If `type`==`server` or `type6`==`server`. Property key is <enterprise number>:<sub option code>, with
	//   * enterprise number: 1-65535 (https://www.iana.org/assignments/enterprise-numbers/enterprise-numbers)
	//   * sub option code: 1-255, sub-option code'
	VendorEncapsulated map[string]SwitchDhcpdConfigConfigVendorEncapsulated `pulumi:"vendorEncapsulated"`
}

// SwitchDhcpdConfigConfigInput is an input type that accepts SwitchDhcpdConfigConfigArgs and SwitchDhcpdConfigConfigOutput values.
// You can construct a concrete instance of `SwitchDhcpdConfigConfigInput` via:
//
//	SwitchDhcpdConfigConfigArgs{...}
type SwitchDhcpdConfigConfigInput interface {
	pulumi.Input

	ToSwitchDhcpdConfigConfigOutput() SwitchDhcpdConfigConfigOutput
	ToSwitchDhcpdConfigConfigOutputWithContext(context.Context) SwitchDhcpdConfigConfigOutput
}

type SwitchDhcpdConfigConfigArgs struct {
	// If `type`==`server` or `type6`==`server` - optional, if not defined, system one will be used
	DnsServers pulumi.StringArrayInput `pulumi:"dnsServers"`
	// If `type`==`server` or `type6`==`server` - optional, if not defined, system one will be used
	DnsSuffixes pulumi.StringArrayInput `pulumi:"dnsSuffixes"`
	// If `type`==`server` or `type6`==`server`. Property key is the MAC Address. Format is `[0-9a-f]{12}` (e.g. "5684dae9ac8b")
	FixedBindings SwitchDhcpdConfigConfigFixedBindingsMapInput `pulumi:"fixedBindings"`
	// If `type`==`server`  - optional, `ip` will be used if not provided
	Gateway pulumi.StringPtrInput `pulumi:"gateway"`
	// If `type`==`server`
	IpEnd pulumi.StringPtrInput `pulumi:"ipEnd"`
	// If `type6`==`server`
	IpEnd6 pulumi.StringPtrInput `pulumi:"ipEnd6"`
	// If `type`==`server`
	IpStart pulumi.StringPtrInput `pulumi:"ipStart"`
	// If `type6`==`server`
	IpStart6 pulumi.StringPtrInput `pulumi:"ipStart6"`
	// In seconds, lease time has to be between 3600 [1hr] - 604800 [1 week], default is 86400 [1 day]
	LeaseTime pulumi.IntPtrInput `pulumi:"leaseTime"`
	// If `type`==`server` or `type6`==`server`. Property key is the DHCP option number
	Options SwitchDhcpdConfigConfigOptionsMapInput `pulumi:"options"`
	// `serverIdOverride`==`true` means the device, when acts as DHCP relay and forwards DHCP responses from DHCP server to clients,
	// should overwrite the Sever Identifier option (i.e. DHCP option 54) in DHCP responses with its own IP address.
	ServerIdOverride pulumi.BoolPtrInput `pulumi:"serverIdOverride"`
	// If `type`==`relay`
	Servers pulumi.StringArrayInput `pulumi:"servers"`
	// If `type6`==`relay`
	Servers6s pulumi.StringArrayInput `pulumi:"servers6s"`
	// enum: `none`, `relay` (DHCP Relay), `server` (DHCP Server)
	Type pulumi.StringPtrInput `pulumi:"type"`
	// enum: `none`, `relay` (DHCP Relay), `server` (DHCP Server)
	Type6 pulumi.StringPtrInput `pulumi:"type6"`
	// If `type`==`server` or `type6`==`server`. Property key is <enterprise number>:<sub option code>, with
	//   * enterprise number: 1-65535 (https://www.iana.org/assignments/enterprise-numbers/enterprise-numbers)
	//   * sub option code: 1-255, sub-option code'
	VendorEncapsulated SwitchDhcpdConfigConfigVendorEncapsulatedMapInput `pulumi:"vendorEncapsulated"`
}

func (SwitchDhcpdConfigConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchDhcpdConfigConfig)(nil)).Elem()
}

func (i SwitchDhcpdConfigConfigArgs) ToSwitchDhcpdConfigConfigOutput() SwitchDhcpdConfigConfigOutput {
	return i.ToSwitchDhcpdConfigConfigOutputWithContext(context.Background())
}

func (i SwitchDhcpdConfigConfigArgs) ToSwitchDhcpdConfigConfigOutputWithContext(ctx context.Context) SwitchDhcpdConfigConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchDhcpdConfigConfigOutput)
}

// SwitchDhcpdConfigConfigMapInput is an input type that accepts SwitchDhcpdConfigConfigMap and SwitchDhcpdConfigConfigMapOutput values.
// You can construct a concrete instance of `SwitchDhcpdConfigConfigMapInput` via:
//
//	SwitchDhcpdConfigConfigMap{ "key": SwitchDhcpdConfigConfigArgs{...} }
type SwitchDhcpdConfigConfigMapInput interface {
	pulumi.Input

	ToSwitchDhcpdConfigConfigMapOutput() SwitchDhcpdConfigConfigMapOutput
	ToSwitchDhcpdConfigConfigMapOutputWithContext(context.Context) SwitchDhcpdConfigConfigMapOutput
}

type SwitchDhcpdConfigConfigMap map[string]SwitchDhcpdConfigConfigInput

func (SwitchDhcpdConfigConfigMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]SwitchDhcpdConfigConfig)(nil)).Elem()
}

func (i SwitchDhcpdConfigConfigMap) ToSwitchDhcpdConfigConfigMapOutput() SwitchDhcpdConfigConfigMapOutput {
	return i.ToSwitchDhcpdConfigConfigMapOutputWithContext(context.Background())
}

func (i SwitchDhcpdConfigConfigMap) ToSwitchDhcpdConfigConfigMapOutputWithContext(ctx context.Context) SwitchDhcpdConfigConfigMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchDhcpdConfigConfigMapOutput)
}

type SwitchDhcpdConfigConfigOutput struct{ *pulumi.OutputState }

func (SwitchDhcpdConfigConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchDhcpdConfigConfig)(nil)).Elem()
}

func (o SwitchDhcpdConfigConfigOutput) ToSwitchDhcpdConfigConfigOutput() SwitchDhcpdConfigConfigOutput {
	return o
}

func (o SwitchDhcpdConfigConfigOutput) ToSwitchDhcpdConfigConfigOutputWithContext(ctx context.Context) SwitchDhcpdConfigConfigOutput {
	return o
}

// If `type`==`server` or `type6`==`server` - optional, if not defined, system one will be used
func (o SwitchDhcpdConfigConfigOutput) DnsServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SwitchDhcpdConfigConfig) []string { return v.DnsServers }).(pulumi.StringArrayOutput)
}

// If `type`==`server` or `type6`==`server` - optional, if not defined, system one will be used
func (o SwitchDhcpdConfigConfigOutput) DnsSuffixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SwitchDhcpdConfigConfig) []string { return v.DnsSuffixes }).(pulumi.StringArrayOutput)
}

// If `type`==`server` or `type6`==`server`. Property key is the MAC Address. Format is `[0-9a-f]{12}` (e.g. "5684dae9ac8b")
func (o SwitchDhcpdConfigConfigOutput) FixedBindings() SwitchDhcpdConfigConfigFixedBindingsMapOutput {
	return o.ApplyT(func(v SwitchDhcpdConfigConfig) map[string]SwitchDhcpdConfigConfigFixedBindings {
		return v.FixedBindings
	}).(SwitchDhcpdConfigConfigFixedBindingsMapOutput)
}

// If `type`==`server`  - optional, `ip` will be used if not provided
func (o SwitchDhcpdConfigConfigOutput) Gateway() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchDhcpdConfigConfig) *string { return v.Gateway }).(pulumi.StringPtrOutput)
}

// If `type`==`server`
func (o SwitchDhcpdConfigConfigOutput) IpEnd() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchDhcpdConfigConfig) *string { return v.IpEnd }).(pulumi.StringPtrOutput)
}

// If `type6`==`server`
func (o SwitchDhcpdConfigConfigOutput) IpEnd6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchDhcpdConfigConfig) *string { return v.IpEnd6 }).(pulumi.StringPtrOutput)
}

// If `type`==`server`
func (o SwitchDhcpdConfigConfigOutput) IpStart() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchDhcpdConfigConfig) *string { return v.IpStart }).(pulumi.StringPtrOutput)
}

// If `type6`==`server`
func (o SwitchDhcpdConfigConfigOutput) IpStart6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchDhcpdConfigConfig) *string { return v.IpStart6 }).(pulumi.StringPtrOutput)
}

// In seconds, lease time has to be between 3600 [1hr] - 604800 [1 week], default is 86400 [1 day]
func (o SwitchDhcpdConfigConfigOutput) LeaseTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchDhcpdConfigConfig) *int { return v.LeaseTime }).(pulumi.IntPtrOutput)
}

// If `type`==`server` or `type6`==`server`. Property key is the DHCP option number
func (o SwitchDhcpdConfigConfigOutput) Options() SwitchDhcpdConfigConfigOptionsMapOutput {
	return o.ApplyT(func(v SwitchDhcpdConfigConfig) map[string]SwitchDhcpdConfigConfigOptions { return v.Options }).(SwitchDhcpdConfigConfigOptionsMapOutput)
}

// `serverIdOverride`==`true` means the device, when acts as DHCP relay and forwards DHCP responses from DHCP server to clients,
// should overwrite the Sever Identifier option (i.e. DHCP option 54) in DHCP responses with its own IP address.
func (o SwitchDhcpdConfigConfigOutput) ServerIdOverride() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SwitchDhcpdConfigConfig) *bool { return v.ServerIdOverride }).(pulumi.BoolPtrOutput)
}

// If `type`==`relay`
func (o SwitchDhcpdConfigConfigOutput) Servers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SwitchDhcpdConfigConfig) []string { return v.Servers }).(pulumi.StringArrayOutput)
}

// If `type6`==`relay`
func (o SwitchDhcpdConfigConfigOutput) Servers6s() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SwitchDhcpdConfigConfig) []string { return v.Servers6s }).(pulumi.StringArrayOutput)
}

// enum: `none`, `relay` (DHCP Relay), `server` (DHCP Server)
func (o SwitchDhcpdConfigConfigOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchDhcpdConfigConfig) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// enum: `none`, `relay` (DHCP Relay), `server` (DHCP Server)
func (o SwitchDhcpdConfigConfigOutput) Type6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchDhcpdConfigConfig) *string { return v.Type6 }).(pulumi.StringPtrOutput)
}

// If `type`==`server` or `type6`==`server`. Property key is <enterprise number>:<sub option code>, with
//   - enterprise number: 1-65535 (https://www.iana.org/assignments/enterprise-numbers/enterprise-numbers)
//   - sub option code: 1-255, sub-option code'
func (o SwitchDhcpdConfigConfigOutput) VendorEncapsulated() SwitchDhcpdConfigConfigVendorEncapsulatedMapOutput {
	return o.ApplyT(func(v SwitchDhcpdConfigConfig) map[string]SwitchDhcpdConfigConfigVendorEncapsulated {
		return v.VendorEncapsulated
	}).(SwitchDhcpdConfigConfigVendorEncapsulatedMapOutput)
}

type SwitchDhcpdConfigConfigMapOutput struct{ *pulumi.OutputState }

func (SwitchDhcpdConfigConfigMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]SwitchDhcpdConfigConfig)(nil)).Elem()
}

func (o SwitchDhcpdConfigConfigMapOutput) ToSwitchDhcpdConfigConfigMapOutput() SwitchDhcpdConfigConfigMapOutput {
	return o
}

func (o SwitchDhcpdConfigConfigMapOutput) ToSwitchDhcpdConfigConfigMapOutputWithContext(ctx context.Context) SwitchDhcpdConfigConfigMapOutput {
	return o
}

func (o SwitchDhcpdConfigConfigMapOutput) MapIndex(k pulumi.StringInput) SwitchDhcpdConfigConfigOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) SwitchDhcpdConfigConfig {
		return vs[0].(map[string]SwitchDhcpdConfigConfig)[vs[1].(string)]
	}).(SwitchDhcpdConfigConfigOutput)
}

type SwitchDhcpdConfigConfigFixedBindings struct {
	Ip   string  `pulumi:"ip"`
	Name *string `pulumi:"name"`
}

// SwitchDhcpdConfigConfigFixedBindingsInput is an input type that accepts SwitchDhcpdConfigConfigFixedBindingsArgs and SwitchDhcpdConfigConfigFixedBindingsOutput values.
// You can construct a concrete instance of `SwitchDhcpdConfigConfigFixedBindingsInput` via:
//
//	SwitchDhcpdConfigConfigFixedBindingsArgs{...}
type SwitchDhcpdConfigConfigFixedBindingsInput interface {
	pulumi.Input

	ToSwitchDhcpdConfigConfigFixedBindingsOutput() SwitchDhcpdConfigConfigFixedBindingsOutput
	ToSwitchDhcpdConfigConfigFixedBindingsOutputWithContext(context.Context) SwitchDhcpdConfigConfigFixedBindingsOutput
}

type SwitchDhcpdConfigConfigFixedBindingsArgs struct {
	Ip   pulumi.StringInput    `pulumi:"ip"`
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SwitchDhcpdConfigConfigFixedBindingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchDhcpdConfigConfigFixedBindings)(nil)).Elem()
}

func (i SwitchDhcpdConfigConfigFixedBindingsArgs) ToSwitchDhcpdConfigConfigFixedBindingsOutput() SwitchDhcpdConfigConfigFixedBindingsOutput {
	return i.ToSwitchDhcpdConfigConfigFixedBindingsOutputWithContext(context.Background())
}

func (i SwitchDhcpdConfigConfigFixedBindingsArgs) ToSwitchDhcpdConfigConfigFixedBindingsOutputWithContext(ctx context.Context) SwitchDhcpdConfigConfigFixedBindingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchDhcpdConfigConfigFixedBindingsOutput)
}

// SwitchDhcpdConfigConfigFixedBindingsMapInput is an input type that accepts SwitchDhcpdConfigConfigFixedBindingsMap and SwitchDhcpdConfigConfigFixedBindingsMapOutput values.
// You can construct a concrete instance of `SwitchDhcpdConfigConfigFixedBindingsMapInput` via:
//
//	SwitchDhcpdConfigConfigFixedBindingsMap{ "key": SwitchDhcpdConfigConfigFixedBindingsArgs{...} }
type SwitchDhcpdConfigConfigFixedBindingsMapInput interface {
	pulumi.Input

	ToSwitchDhcpdConfigConfigFixedBindingsMapOutput() SwitchDhcpdConfigConfigFixedBindingsMapOutput
	ToSwitchDhcpdConfigConfigFixedBindingsMapOutputWithContext(context.Context) SwitchDhcpdConfigConfigFixedBindingsMapOutput
}

type SwitchDhcpdConfigConfigFixedBindingsMap map[string]SwitchDhcpdConfigConfigFixedBindingsInput

func (SwitchDhcpdConfigConfigFixedBindingsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]SwitchDhcpdConfigConfigFixedBindings)(nil)).Elem()
}

func (i SwitchDhcpdConfigConfigFixedBindingsMap) ToSwitchDhcpdConfigConfigFixedBindingsMapOutput() SwitchDhcpdConfigConfigFixedBindingsMapOutput {
	return i.ToSwitchDhcpdConfigConfigFixedBindingsMapOutputWithContext(context.Background())
}

func (i SwitchDhcpdConfigConfigFixedBindingsMap) ToSwitchDhcpdConfigConfigFixedBindingsMapOutputWithContext(ctx context.Context) SwitchDhcpdConfigConfigFixedBindingsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchDhcpdConfigConfigFixedBindingsMapOutput)
}

type SwitchDhcpdConfigConfigFixedBindingsOutput struct{ *pulumi.OutputState }

func (SwitchDhcpdConfigConfigFixedBindingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchDhcpdConfigConfigFixedBindings)(nil)).Elem()
}

func (o SwitchDhcpdConfigConfigFixedBindingsOutput) ToSwitchDhcpdConfigConfigFixedBindingsOutput() SwitchDhcpdConfigConfigFixedBindingsOutput {
	return o
}

func (o SwitchDhcpdConfigConfigFixedBindingsOutput) ToSwitchDhcpdConfigConfigFixedBindingsOutputWithContext(ctx context.Context) SwitchDhcpdConfigConfigFixedBindingsOutput {
	return o
}

func (o SwitchDhcpdConfigConfigFixedBindingsOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v SwitchDhcpdConfigConfigFixedBindings) string { return v.Ip }).(pulumi.StringOutput)
}

func (o SwitchDhcpdConfigConfigFixedBindingsOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchDhcpdConfigConfigFixedBindings) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SwitchDhcpdConfigConfigFixedBindingsMapOutput struct{ *pulumi.OutputState }

func (SwitchDhcpdConfigConfigFixedBindingsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]SwitchDhcpdConfigConfigFixedBindings)(nil)).Elem()
}

func (o SwitchDhcpdConfigConfigFixedBindingsMapOutput) ToSwitchDhcpdConfigConfigFixedBindingsMapOutput() SwitchDhcpdConfigConfigFixedBindingsMapOutput {
	return o
}

func (o SwitchDhcpdConfigConfigFixedBindingsMapOutput) ToSwitchDhcpdConfigConfigFixedBindingsMapOutputWithContext(ctx context.Context) SwitchDhcpdConfigConfigFixedBindingsMapOutput {
	return o
}

func (o SwitchDhcpdConfigConfigFixedBindingsMapOutput) MapIndex(k pulumi.StringInput) SwitchDhcpdConfigConfigFixedBindingsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) SwitchDhcpdConfigConfigFixedBindings {
		return vs[0].(map[string]SwitchDhcpdConfigConfigFixedBindings)[vs[1].(string)]
	}).(SwitchDhcpdConfigConfigFixedBindingsOutput)
}

type SwitchDhcpdConfigConfigOptions struct {
	// enum: `boolean`, `hex`, `int16`, `int32`, `ip`, `string`, `uint16`, `uint32`
	Type  *string `pulumi:"type"`
	Value *string `pulumi:"value"`
}

// SwitchDhcpdConfigConfigOptionsInput is an input type that accepts SwitchDhcpdConfigConfigOptionsArgs and SwitchDhcpdConfigConfigOptionsOutput values.
// You can construct a concrete instance of `SwitchDhcpdConfigConfigOptionsInput` via:
//
//	SwitchDhcpdConfigConfigOptionsArgs{...}
type SwitchDhcpdConfigConfigOptionsInput interface {
	pulumi.Input

	ToSwitchDhcpdConfigConfigOptionsOutput() SwitchDhcpdConfigConfigOptionsOutput
	ToSwitchDhcpdConfigConfigOptionsOutputWithContext(context.Context) SwitchDhcpdConfigConfigOptionsOutput
}

type SwitchDhcpdConfigConfigOptionsArgs struct {
	// enum: `boolean`, `hex`, `int16`, `int32`, `ip`, `string`, `uint16`, `uint32`
	Type  pulumi.StringPtrInput `pulumi:"type"`
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (SwitchDhcpdConfigConfigOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchDhcpdConfigConfigOptions)(nil)).Elem()
}

func (i SwitchDhcpdConfigConfigOptionsArgs) ToSwitchDhcpdConfigConfigOptionsOutput() SwitchDhcpdConfigConfigOptionsOutput {
	return i.ToSwitchDhcpdConfigConfigOptionsOutputWithContext(context.Background())
}

func (i SwitchDhcpdConfigConfigOptionsArgs) ToSwitchDhcpdConfigConfigOptionsOutputWithContext(ctx context.Context) SwitchDhcpdConfigConfigOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchDhcpdConfigConfigOptionsOutput)
}

// SwitchDhcpdConfigConfigOptionsMapInput is an input type that accepts SwitchDhcpdConfigConfigOptionsMap and SwitchDhcpdConfigConfigOptionsMapOutput values.
// You can construct a concrete instance of `SwitchDhcpdConfigConfigOptionsMapInput` via:
//
//	SwitchDhcpdConfigConfigOptionsMap{ "key": SwitchDhcpdConfigConfigOptionsArgs{...} }
type SwitchDhcpdConfigConfigOptionsMapInput interface {
	pulumi.Input

	ToSwitchDhcpdConfigConfigOptionsMapOutput() SwitchDhcpdConfigConfigOptionsMapOutput
	ToSwitchDhcpdConfigConfigOptionsMapOutputWithContext(context.Context) SwitchDhcpdConfigConfigOptionsMapOutput
}

type SwitchDhcpdConfigConfigOptionsMap map[string]SwitchDhcpdConfigConfigOptionsInput

func (SwitchDhcpdConfigConfigOptionsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]SwitchDhcpdConfigConfigOptions)(nil)).Elem()
}

func (i SwitchDhcpdConfigConfigOptionsMap) ToSwitchDhcpdConfigConfigOptionsMapOutput() SwitchDhcpdConfigConfigOptionsMapOutput {
	return i.ToSwitchDhcpdConfigConfigOptionsMapOutputWithContext(context.Background())
}

func (i SwitchDhcpdConfigConfigOptionsMap) ToSwitchDhcpdConfigConfigOptionsMapOutputWithContext(ctx context.Context) SwitchDhcpdConfigConfigOptionsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchDhcpdConfigConfigOptionsMapOutput)
}

type SwitchDhcpdConfigConfigOptionsOutput struct{ *pulumi.OutputState }

func (SwitchDhcpdConfigConfigOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchDhcpdConfigConfigOptions)(nil)).Elem()
}

func (o SwitchDhcpdConfigConfigOptionsOutput) ToSwitchDhcpdConfigConfigOptionsOutput() SwitchDhcpdConfigConfigOptionsOutput {
	return o
}

func (o SwitchDhcpdConfigConfigOptionsOutput) ToSwitchDhcpdConfigConfigOptionsOutputWithContext(ctx context.Context) SwitchDhcpdConfigConfigOptionsOutput {
	return o
}

// enum: `boolean`, `hex`, `int16`, `int32`, `ip`, `string`, `uint16`, `uint32`
func (o SwitchDhcpdConfigConfigOptionsOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchDhcpdConfigConfigOptions) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o SwitchDhcpdConfigConfigOptionsOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchDhcpdConfigConfigOptions) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type SwitchDhcpdConfigConfigOptionsMapOutput struct{ *pulumi.OutputState }

func (SwitchDhcpdConfigConfigOptionsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]SwitchDhcpdConfigConfigOptions)(nil)).Elem()
}

func (o SwitchDhcpdConfigConfigOptionsMapOutput) ToSwitchDhcpdConfigConfigOptionsMapOutput() SwitchDhcpdConfigConfigOptionsMapOutput {
	return o
}

func (o SwitchDhcpdConfigConfigOptionsMapOutput) ToSwitchDhcpdConfigConfigOptionsMapOutputWithContext(ctx context.Context) SwitchDhcpdConfigConfigOptionsMapOutput {
	return o
}

func (o SwitchDhcpdConfigConfigOptionsMapOutput) MapIndex(k pulumi.StringInput) SwitchDhcpdConfigConfigOptionsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) SwitchDhcpdConfigConfigOptions {
		return vs[0].(map[string]SwitchDhcpdConfigConfigOptions)[vs[1].(string)]
	}).(SwitchDhcpdConfigConfigOptionsOutput)
}

type SwitchDhcpdConfigConfigVendorEncapsulated struct {
	// enum: `boolean`, `hex`, `int16`, `int32`, `ip`, `string`, `uint16`, `uint32`
	Type  *string `pulumi:"type"`
	Value *string `pulumi:"value"`
}

// SwitchDhcpdConfigConfigVendorEncapsulatedInput is an input type that accepts SwitchDhcpdConfigConfigVendorEncapsulatedArgs and SwitchDhcpdConfigConfigVendorEncapsulatedOutput values.
// You can construct a concrete instance of `SwitchDhcpdConfigConfigVendorEncapsulatedInput` via:
//
//	SwitchDhcpdConfigConfigVendorEncapsulatedArgs{...}
type SwitchDhcpdConfigConfigVendorEncapsulatedInput interface {
	pulumi.Input

	ToSwitchDhcpdConfigConfigVendorEncapsulatedOutput() SwitchDhcpdConfigConfigVendorEncapsulatedOutput
	ToSwitchDhcpdConfigConfigVendorEncapsulatedOutputWithContext(context.Context) SwitchDhcpdConfigConfigVendorEncapsulatedOutput
}

type SwitchDhcpdConfigConfigVendorEncapsulatedArgs struct {
	// enum: `boolean`, `hex`, `int16`, `int32`, `ip`, `string`, `uint16`, `uint32`
	Type  pulumi.StringPtrInput `pulumi:"type"`
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (SwitchDhcpdConfigConfigVendorEncapsulatedArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchDhcpdConfigConfigVendorEncapsulated)(nil)).Elem()
}

func (i SwitchDhcpdConfigConfigVendorEncapsulatedArgs) ToSwitchDhcpdConfigConfigVendorEncapsulatedOutput() SwitchDhcpdConfigConfigVendorEncapsulatedOutput {
	return i.ToSwitchDhcpdConfigConfigVendorEncapsulatedOutputWithContext(context.Background())
}

func (i SwitchDhcpdConfigConfigVendorEncapsulatedArgs) ToSwitchDhcpdConfigConfigVendorEncapsulatedOutputWithContext(ctx context.Context) SwitchDhcpdConfigConfigVendorEncapsulatedOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchDhcpdConfigConfigVendorEncapsulatedOutput)
}

// SwitchDhcpdConfigConfigVendorEncapsulatedMapInput is an input type that accepts SwitchDhcpdConfigConfigVendorEncapsulatedMap and SwitchDhcpdConfigConfigVendorEncapsulatedMapOutput values.
// You can construct a concrete instance of `SwitchDhcpdConfigConfigVendorEncapsulatedMapInput` via:
//
//	SwitchDhcpdConfigConfigVendorEncapsulatedMap{ "key": SwitchDhcpdConfigConfigVendorEncapsulatedArgs{...} }
type SwitchDhcpdConfigConfigVendorEncapsulatedMapInput interface {
	pulumi.Input

	ToSwitchDhcpdConfigConfigVendorEncapsulatedMapOutput() SwitchDhcpdConfigConfigVendorEncapsulatedMapOutput
	ToSwitchDhcpdConfigConfigVendorEncapsulatedMapOutputWithContext(context.Context) SwitchDhcpdConfigConfigVendorEncapsulatedMapOutput
}

type SwitchDhcpdConfigConfigVendorEncapsulatedMap map[string]SwitchDhcpdConfigConfigVendorEncapsulatedInput

func (SwitchDhcpdConfigConfigVendorEncapsulatedMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]SwitchDhcpdConfigConfigVendorEncapsulated)(nil)).Elem()
}

func (i SwitchDhcpdConfigConfigVendorEncapsulatedMap) ToSwitchDhcpdConfigConfigVendorEncapsulatedMapOutput() SwitchDhcpdConfigConfigVendorEncapsulatedMapOutput {
	return i.ToSwitchDhcpdConfigConfigVendorEncapsulatedMapOutputWithContext(context.Background())
}

func (i SwitchDhcpdConfigConfigVendorEncapsulatedMap) ToSwitchDhcpdConfigConfigVendorEncapsulatedMapOutputWithContext(ctx context.Context) SwitchDhcpdConfigConfigVendorEncapsulatedMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchDhcpdConfigConfigVendorEncapsulatedMapOutput)
}

type SwitchDhcpdConfigConfigVendorEncapsulatedOutput struct{ *pulumi.OutputState }

func (SwitchDhcpdConfigConfigVendorEncapsulatedOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchDhcpdConfigConfigVendorEncapsulated)(nil)).Elem()
}

func (o SwitchDhcpdConfigConfigVendorEncapsulatedOutput) ToSwitchDhcpdConfigConfigVendorEncapsulatedOutput() SwitchDhcpdConfigConfigVendorEncapsulatedOutput {
	return o
}

func (o SwitchDhcpdConfigConfigVendorEncapsulatedOutput) ToSwitchDhcpdConfigConfigVendorEncapsulatedOutputWithContext(ctx context.Context) SwitchDhcpdConfigConfigVendorEncapsulatedOutput {
	return o
}

// enum: `boolean`, `hex`, `int16`, `int32`, `ip`, `string`, `uint16`, `uint32`
func (o SwitchDhcpdConfigConfigVendorEncapsulatedOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchDhcpdConfigConfigVendorEncapsulated) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o SwitchDhcpdConfigConfigVendorEncapsulatedOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchDhcpdConfigConfigVendorEncapsulated) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type SwitchDhcpdConfigConfigVendorEncapsulatedMapOutput struct{ *pulumi.OutputState }

func (SwitchDhcpdConfigConfigVendorEncapsulatedMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]SwitchDhcpdConfigConfigVendorEncapsulated)(nil)).Elem()
}

func (o SwitchDhcpdConfigConfigVendorEncapsulatedMapOutput) ToSwitchDhcpdConfigConfigVendorEncapsulatedMapOutput() SwitchDhcpdConfigConfigVendorEncapsulatedMapOutput {
	return o
}

func (o SwitchDhcpdConfigConfigVendorEncapsulatedMapOutput) ToSwitchDhcpdConfigConfigVendorEncapsulatedMapOutputWithContext(ctx context.Context) SwitchDhcpdConfigConfigVendorEncapsulatedMapOutput {
	return o
}

func (o SwitchDhcpdConfigConfigVendorEncapsulatedMapOutput) MapIndex(k pulumi.StringInput) SwitchDhcpdConfigConfigVendorEncapsulatedOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) SwitchDhcpdConfigConfigVendorEncapsulated {
		return vs[0].(map[string]SwitchDhcpdConfigConfigVendorEncapsulated)[vs[1].(string)]
	}).(SwitchDhcpdConfigConfigVendorEncapsulatedOutput)
}

type SwitchExtraRoutes6 struct {
	// This takes precedence
	Discard       *bool                                      `pulumi:"discard"`
	Metric        *int                                       `pulumi:"metric"`
	NextQualified map[string]SwitchExtraRoutes6NextQualified `pulumi:"nextQualified"`
	NoResolve     *bool                                      `pulumi:"noResolve"`
	Preference    *int                                       `pulumi:"preference"`
	// Next-hop IP Address
	Via string `pulumi:"via"`
}

// SwitchExtraRoutes6Input is an input type that accepts SwitchExtraRoutes6Args and SwitchExtraRoutes6Output values.
// You can construct a concrete instance of `SwitchExtraRoutes6Input` via:
//
//	SwitchExtraRoutes6Args{...}
type SwitchExtraRoutes6Input interface {
	pulumi.Input

	ToSwitchExtraRoutes6Output() SwitchExtraRoutes6Output
	ToSwitchExtraRoutes6OutputWithContext(context.Context) SwitchExtraRoutes6Output
}

type SwitchExtraRoutes6Args struct {
	// This takes precedence
	Discard       pulumi.BoolPtrInput                     `pulumi:"discard"`
	Metric        pulumi.IntPtrInput                      `pulumi:"metric"`
	NextQualified SwitchExtraRoutes6NextQualifiedMapInput `pulumi:"nextQualified"`
	NoResolve     pulumi.BoolPtrInput                     `pulumi:"noResolve"`
	Preference    pulumi.IntPtrInput                      `pulumi:"preference"`
	// Next-hop IP Address
	Via pulumi.StringInput `pulumi:"via"`
}

func (SwitchExtraRoutes6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchExtraRoutes6)(nil)).Elem()
}

func (i SwitchExtraRoutes6Args) ToSwitchExtraRoutes6Output() SwitchExtraRoutes6Output {
	return i.ToSwitchExtraRoutes6OutputWithContext(context.Background())
}

func (i SwitchExtraRoutes6Args) ToSwitchExtraRoutes6OutputWithContext(ctx context.Context) SwitchExtraRoutes6Output {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchExtraRoutes6Output)
}

// SwitchExtraRoutes6MapInput is an input type that accepts SwitchExtraRoutes6Map and SwitchExtraRoutes6MapOutput values.
// You can construct a concrete instance of `SwitchExtraRoutes6MapInput` via:
//
//	SwitchExtraRoutes6Map{ "key": SwitchExtraRoutes6Args{...} }
type SwitchExtraRoutes6MapInput interface {
	pulumi.Input

	ToSwitchExtraRoutes6MapOutput() SwitchExtraRoutes6MapOutput
	ToSwitchExtraRoutes6MapOutputWithContext(context.Context) SwitchExtraRoutes6MapOutput
}

type SwitchExtraRoutes6Map map[string]SwitchExtraRoutes6Input

func (SwitchExtraRoutes6Map) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]SwitchExtraRoutes6)(nil)).Elem()
}

func (i SwitchExtraRoutes6Map) ToSwitchExtraRoutes6MapOutput() SwitchExtraRoutes6MapOutput {
	return i.ToSwitchExtraRoutes6MapOutputWithContext(context.Background())
}

func (i SwitchExtraRoutes6Map) ToSwitchExtraRoutes6MapOutputWithContext(ctx context.Context) SwitchExtraRoutes6MapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchExtraRoutes6MapOutput)
}

type SwitchExtraRoutes6Output struct{ *pulumi.OutputState }

func (SwitchExtraRoutes6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchExtraRoutes6)(nil)).Elem()
}

func (o SwitchExtraRoutes6Output) ToSwitchExtraRoutes6Output() SwitchExtraRoutes6Output {
	return o
}

func (o SwitchExtraRoutes6Output) ToSwitchExtraRoutes6OutputWithContext(ctx context.Context) SwitchExtraRoutes6Output {
	return o
}

// This takes precedence
func (o SwitchExtraRoutes6Output) Discard() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SwitchExtraRoutes6) *bool { return v.Discard }).(pulumi.BoolPtrOutput)
}

func (o SwitchExtraRoutes6Output) Metric() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchExtraRoutes6) *int { return v.Metric }).(pulumi.IntPtrOutput)
}

func (o SwitchExtraRoutes6Output) NextQualified() SwitchExtraRoutes6NextQualifiedMapOutput {
	return o.ApplyT(func(v SwitchExtraRoutes6) map[string]SwitchExtraRoutes6NextQualified { return v.NextQualified }).(SwitchExtraRoutes6NextQualifiedMapOutput)
}

func (o SwitchExtraRoutes6Output) NoResolve() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SwitchExtraRoutes6) *bool { return v.NoResolve }).(pulumi.BoolPtrOutput)
}

func (o SwitchExtraRoutes6Output) Preference() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchExtraRoutes6) *int { return v.Preference }).(pulumi.IntPtrOutput)
}

// Next-hop IP Address
func (o SwitchExtraRoutes6Output) Via() pulumi.StringOutput {
	return o.ApplyT(func(v SwitchExtraRoutes6) string { return v.Via }).(pulumi.StringOutput)
}

type SwitchExtraRoutes6MapOutput struct{ *pulumi.OutputState }

func (SwitchExtraRoutes6MapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]SwitchExtraRoutes6)(nil)).Elem()
}

func (o SwitchExtraRoutes6MapOutput) ToSwitchExtraRoutes6MapOutput() SwitchExtraRoutes6MapOutput {
	return o
}

func (o SwitchExtraRoutes6MapOutput) ToSwitchExtraRoutes6MapOutputWithContext(ctx context.Context) SwitchExtraRoutes6MapOutput {
	return o
}

func (o SwitchExtraRoutes6MapOutput) MapIndex(k pulumi.StringInput) SwitchExtraRoutes6Output {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) SwitchExtraRoutes6 {
		return vs[0].(map[string]SwitchExtraRoutes6)[vs[1].(string)]
	}).(SwitchExtraRoutes6Output)
}

type SwitchExtraRoutes6NextQualified struct {
	Metric     *int `pulumi:"metric"`
	Preference *int `pulumi:"preference"`
}

// SwitchExtraRoutes6NextQualifiedInput is an input type that accepts SwitchExtraRoutes6NextQualifiedArgs and SwitchExtraRoutes6NextQualifiedOutput values.
// You can construct a concrete instance of `SwitchExtraRoutes6NextQualifiedInput` via:
//
//	SwitchExtraRoutes6NextQualifiedArgs{...}
type SwitchExtraRoutes6NextQualifiedInput interface {
	pulumi.Input

	ToSwitchExtraRoutes6NextQualifiedOutput() SwitchExtraRoutes6NextQualifiedOutput
	ToSwitchExtraRoutes6NextQualifiedOutputWithContext(context.Context) SwitchExtraRoutes6NextQualifiedOutput
}

type SwitchExtraRoutes6NextQualifiedArgs struct {
	Metric     pulumi.IntPtrInput `pulumi:"metric"`
	Preference pulumi.IntPtrInput `pulumi:"preference"`
}

func (SwitchExtraRoutes6NextQualifiedArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchExtraRoutes6NextQualified)(nil)).Elem()
}

func (i SwitchExtraRoutes6NextQualifiedArgs) ToSwitchExtraRoutes6NextQualifiedOutput() SwitchExtraRoutes6NextQualifiedOutput {
	return i.ToSwitchExtraRoutes6NextQualifiedOutputWithContext(context.Background())
}

func (i SwitchExtraRoutes6NextQualifiedArgs) ToSwitchExtraRoutes6NextQualifiedOutputWithContext(ctx context.Context) SwitchExtraRoutes6NextQualifiedOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchExtraRoutes6NextQualifiedOutput)
}

// SwitchExtraRoutes6NextQualifiedMapInput is an input type that accepts SwitchExtraRoutes6NextQualifiedMap and SwitchExtraRoutes6NextQualifiedMapOutput values.
// You can construct a concrete instance of `SwitchExtraRoutes6NextQualifiedMapInput` via:
//
//	SwitchExtraRoutes6NextQualifiedMap{ "key": SwitchExtraRoutes6NextQualifiedArgs{...} }
type SwitchExtraRoutes6NextQualifiedMapInput interface {
	pulumi.Input

	ToSwitchExtraRoutes6NextQualifiedMapOutput() SwitchExtraRoutes6NextQualifiedMapOutput
	ToSwitchExtraRoutes6NextQualifiedMapOutputWithContext(context.Context) SwitchExtraRoutes6NextQualifiedMapOutput
}

type SwitchExtraRoutes6NextQualifiedMap map[string]SwitchExtraRoutes6NextQualifiedInput

func (SwitchExtraRoutes6NextQualifiedMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]SwitchExtraRoutes6NextQualified)(nil)).Elem()
}

func (i SwitchExtraRoutes6NextQualifiedMap) ToSwitchExtraRoutes6NextQualifiedMapOutput() SwitchExtraRoutes6NextQualifiedMapOutput {
	return i.ToSwitchExtraRoutes6NextQualifiedMapOutputWithContext(context.Background())
}

func (i SwitchExtraRoutes6NextQualifiedMap) ToSwitchExtraRoutes6NextQualifiedMapOutputWithContext(ctx context.Context) SwitchExtraRoutes6NextQualifiedMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchExtraRoutes6NextQualifiedMapOutput)
}

type SwitchExtraRoutes6NextQualifiedOutput struct{ *pulumi.OutputState }

func (SwitchExtraRoutes6NextQualifiedOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchExtraRoutes6NextQualified)(nil)).Elem()
}

func (o SwitchExtraRoutes6NextQualifiedOutput) ToSwitchExtraRoutes6NextQualifiedOutput() SwitchExtraRoutes6NextQualifiedOutput {
	return o
}

func (o SwitchExtraRoutes6NextQualifiedOutput) ToSwitchExtraRoutes6NextQualifiedOutputWithContext(ctx context.Context) SwitchExtraRoutes6NextQualifiedOutput {
	return o
}

func (o SwitchExtraRoutes6NextQualifiedOutput) Metric() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchExtraRoutes6NextQualified) *int { return v.Metric }).(pulumi.IntPtrOutput)
}

func (o SwitchExtraRoutes6NextQualifiedOutput) Preference() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchExtraRoutes6NextQualified) *int { return v.Preference }).(pulumi.IntPtrOutput)
}

type SwitchExtraRoutes6NextQualifiedMapOutput struct{ *pulumi.OutputState }

func (SwitchExtraRoutes6NextQualifiedMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]SwitchExtraRoutes6NextQualified)(nil)).Elem()
}

func (o SwitchExtraRoutes6NextQualifiedMapOutput) ToSwitchExtraRoutes6NextQualifiedMapOutput() SwitchExtraRoutes6NextQualifiedMapOutput {
	return o
}

func (o SwitchExtraRoutes6NextQualifiedMapOutput) ToSwitchExtraRoutes6NextQualifiedMapOutputWithContext(ctx context.Context) SwitchExtraRoutes6NextQualifiedMapOutput {
	return o
}

func (o SwitchExtraRoutes6NextQualifiedMapOutput) MapIndex(k pulumi.StringInput) SwitchExtraRoutes6NextQualifiedOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) SwitchExtraRoutes6NextQualified {
		return vs[0].(map[string]SwitchExtraRoutes6NextQualified)[vs[1].(string)]
	}).(SwitchExtraRoutes6NextQualifiedOutput)
}

type SwitchExtraRoutes struct {
	// This takes precedence
	Discard       *bool                                     `pulumi:"discard"`
	Metric        *int                                      `pulumi:"metric"`
	NextQualified map[string]SwitchExtraRoutesNextQualified `pulumi:"nextQualified"`
	NoResolve     *bool                                     `pulumi:"noResolve"`
	Preference    *int                                      `pulumi:"preference"`
	// Next-hop IP Address
	Via string `pulumi:"via"`
}

// SwitchExtraRoutesInput is an input type that accepts SwitchExtraRoutesArgs and SwitchExtraRoutesOutput values.
// You can construct a concrete instance of `SwitchExtraRoutesInput` via:
//
//	SwitchExtraRoutesArgs{...}
type SwitchExtraRoutesInput interface {
	pulumi.Input

	ToSwitchExtraRoutesOutput() SwitchExtraRoutesOutput
	ToSwitchExtraRoutesOutputWithContext(context.Context) SwitchExtraRoutesOutput
}

type SwitchExtraRoutesArgs struct {
	// This takes precedence
	Discard       pulumi.BoolPtrInput                    `pulumi:"discard"`
	Metric        pulumi.IntPtrInput                     `pulumi:"metric"`
	NextQualified SwitchExtraRoutesNextQualifiedMapInput `pulumi:"nextQualified"`
	NoResolve     pulumi.BoolPtrInput                    `pulumi:"noResolve"`
	Preference    pulumi.IntPtrInput                     `pulumi:"preference"`
	// Next-hop IP Address
	Via pulumi.StringInput `pulumi:"via"`
}

func (SwitchExtraRoutesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchExtraRoutes)(nil)).Elem()
}

func (i SwitchExtraRoutesArgs) ToSwitchExtraRoutesOutput() SwitchExtraRoutesOutput {
	return i.ToSwitchExtraRoutesOutputWithContext(context.Background())
}

func (i SwitchExtraRoutesArgs) ToSwitchExtraRoutesOutputWithContext(ctx context.Context) SwitchExtraRoutesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchExtraRoutesOutput)
}

// SwitchExtraRoutesMapInput is an input type that accepts SwitchExtraRoutesMap and SwitchExtraRoutesMapOutput values.
// You can construct a concrete instance of `SwitchExtraRoutesMapInput` via:
//
//	SwitchExtraRoutesMap{ "key": SwitchExtraRoutesArgs{...} }
type SwitchExtraRoutesMapInput interface {
	pulumi.Input

	ToSwitchExtraRoutesMapOutput() SwitchExtraRoutesMapOutput
	ToSwitchExtraRoutesMapOutputWithContext(context.Context) SwitchExtraRoutesMapOutput
}

type SwitchExtraRoutesMap map[string]SwitchExtraRoutesInput

func (SwitchExtraRoutesMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]SwitchExtraRoutes)(nil)).Elem()
}

func (i SwitchExtraRoutesMap) ToSwitchExtraRoutesMapOutput() SwitchExtraRoutesMapOutput {
	return i.ToSwitchExtraRoutesMapOutputWithContext(context.Background())
}

func (i SwitchExtraRoutesMap) ToSwitchExtraRoutesMapOutputWithContext(ctx context.Context) SwitchExtraRoutesMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchExtraRoutesMapOutput)
}

type SwitchExtraRoutesOutput struct{ *pulumi.OutputState }

func (SwitchExtraRoutesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchExtraRoutes)(nil)).Elem()
}

func (o SwitchExtraRoutesOutput) ToSwitchExtraRoutesOutput() SwitchExtraRoutesOutput {
	return o
}

func (o SwitchExtraRoutesOutput) ToSwitchExtraRoutesOutputWithContext(ctx context.Context) SwitchExtraRoutesOutput {
	return o
}

// This takes precedence
func (o SwitchExtraRoutesOutput) Discard() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SwitchExtraRoutes) *bool { return v.Discard }).(pulumi.BoolPtrOutput)
}

func (o SwitchExtraRoutesOutput) Metric() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchExtraRoutes) *int { return v.Metric }).(pulumi.IntPtrOutput)
}

func (o SwitchExtraRoutesOutput) NextQualified() SwitchExtraRoutesNextQualifiedMapOutput {
	return o.ApplyT(func(v SwitchExtraRoutes) map[string]SwitchExtraRoutesNextQualified { return v.NextQualified }).(SwitchExtraRoutesNextQualifiedMapOutput)
}

func (o SwitchExtraRoutesOutput) NoResolve() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SwitchExtraRoutes) *bool { return v.NoResolve }).(pulumi.BoolPtrOutput)
}

func (o SwitchExtraRoutesOutput) Preference() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchExtraRoutes) *int { return v.Preference }).(pulumi.IntPtrOutput)
}

// Next-hop IP Address
func (o SwitchExtraRoutesOutput) Via() pulumi.StringOutput {
	return o.ApplyT(func(v SwitchExtraRoutes) string { return v.Via }).(pulumi.StringOutput)
}

type SwitchExtraRoutesMapOutput struct{ *pulumi.OutputState }

func (SwitchExtraRoutesMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]SwitchExtraRoutes)(nil)).Elem()
}

func (o SwitchExtraRoutesMapOutput) ToSwitchExtraRoutesMapOutput() SwitchExtraRoutesMapOutput {
	return o
}

func (o SwitchExtraRoutesMapOutput) ToSwitchExtraRoutesMapOutputWithContext(ctx context.Context) SwitchExtraRoutesMapOutput {
	return o
}

func (o SwitchExtraRoutesMapOutput) MapIndex(k pulumi.StringInput) SwitchExtraRoutesOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) SwitchExtraRoutes {
		return vs[0].(map[string]SwitchExtraRoutes)[vs[1].(string)]
	}).(SwitchExtraRoutesOutput)
}

type SwitchExtraRoutesNextQualified struct {
	Metric     *int `pulumi:"metric"`
	Preference *int `pulumi:"preference"`
}

// SwitchExtraRoutesNextQualifiedInput is an input type that accepts SwitchExtraRoutesNextQualifiedArgs and SwitchExtraRoutesNextQualifiedOutput values.
// You can construct a concrete instance of `SwitchExtraRoutesNextQualifiedInput` via:
//
//	SwitchExtraRoutesNextQualifiedArgs{...}
type SwitchExtraRoutesNextQualifiedInput interface {
	pulumi.Input

	ToSwitchExtraRoutesNextQualifiedOutput() SwitchExtraRoutesNextQualifiedOutput
	ToSwitchExtraRoutesNextQualifiedOutputWithContext(context.Context) SwitchExtraRoutesNextQualifiedOutput
}

type SwitchExtraRoutesNextQualifiedArgs struct {
	Metric     pulumi.IntPtrInput `pulumi:"metric"`
	Preference pulumi.IntPtrInput `pulumi:"preference"`
}

func (SwitchExtraRoutesNextQualifiedArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchExtraRoutesNextQualified)(nil)).Elem()
}

func (i SwitchExtraRoutesNextQualifiedArgs) ToSwitchExtraRoutesNextQualifiedOutput() SwitchExtraRoutesNextQualifiedOutput {
	return i.ToSwitchExtraRoutesNextQualifiedOutputWithContext(context.Background())
}

func (i SwitchExtraRoutesNextQualifiedArgs) ToSwitchExtraRoutesNextQualifiedOutputWithContext(ctx context.Context) SwitchExtraRoutesNextQualifiedOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchExtraRoutesNextQualifiedOutput)
}

// SwitchExtraRoutesNextQualifiedMapInput is an input type that accepts SwitchExtraRoutesNextQualifiedMap and SwitchExtraRoutesNextQualifiedMapOutput values.
// You can construct a concrete instance of `SwitchExtraRoutesNextQualifiedMapInput` via:
//
//	SwitchExtraRoutesNextQualifiedMap{ "key": SwitchExtraRoutesNextQualifiedArgs{...} }
type SwitchExtraRoutesNextQualifiedMapInput interface {
	pulumi.Input

	ToSwitchExtraRoutesNextQualifiedMapOutput() SwitchExtraRoutesNextQualifiedMapOutput
	ToSwitchExtraRoutesNextQualifiedMapOutputWithContext(context.Context) SwitchExtraRoutesNextQualifiedMapOutput
}

type SwitchExtraRoutesNextQualifiedMap map[string]SwitchExtraRoutesNextQualifiedInput

func (SwitchExtraRoutesNextQualifiedMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]SwitchExtraRoutesNextQualified)(nil)).Elem()
}

func (i SwitchExtraRoutesNextQualifiedMap) ToSwitchExtraRoutesNextQualifiedMapOutput() SwitchExtraRoutesNextQualifiedMapOutput {
	return i.ToSwitchExtraRoutesNextQualifiedMapOutputWithContext(context.Background())
}

func (i SwitchExtraRoutesNextQualifiedMap) ToSwitchExtraRoutesNextQualifiedMapOutputWithContext(ctx context.Context) SwitchExtraRoutesNextQualifiedMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchExtraRoutesNextQualifiedMapOutput)
}

type SwitchExtraRoutesNextQualifiedOutput struct{ *pulumi.OutputState }

func (SwitchExtraRoutesNextQualifiedOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchExtraRoutesNextQualified)(nil)).Elem()
}

func (o SwitchExtraRoutesNextQualifiedOutput) ToSwitchExtraRoutesNextQualifiedOutput() SwitchExtraRoutesNextQualifiedOutput {
	return o
}

func (o SwitchExtraRoutesNextQualifiedOutput) ToSwitchExtraRoutesNextQualifiedOutputWithContext(ctx context.Context) SwitchExtraRoutesNextQualifiedOutput {
	return o
}

func (o SwitchExtraRoutesNextQualifiedOutput) Metric() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchExtraRoutesNextQualified) *int { return v.Metric }).(pulumi.IntPtrOutput)
}

func (o SwitchExtraRoutesNextQualifiedOutput) Preference() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchExtraRoutesNextQualified) *int { return v.Preference }).(pulumi.IntPtrOutput)
}

type SwitchExtraRoutesNextQualifiedMapOutput struct{ *pulumi.OutputState }

func (SwitchExtraRoutesNextQualifiedMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]SwitchExtraRoutesNextQualified)(nil)).Elem()
}

func (o SwitchExtraRoutesNextQualifiedMapOutput) ToSwitchExtraRoutesNextQualifiedMapOutput() SwitchExtraRoutesNextQualifiedMapOutput {
	return o
}

func (o SwitchExtraRoutesNextQualifiedMapOutput) ToSwitchExtraRoutesNextQualifiedMapOutputWithContext(ctx context.Context) SwitchExtraRoutesNextQualifiedMapOutput {
	return o
}

func (o SwitchExtraRoutesNextQualifiedMapOutput) MapIndex(k pulumi.StringInput) SwitchExtraRoutesNextQualifiedOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) SwitchExtraRoutesNextQualified {
		return vs[0].(map[string]SwitchExtraRoutesNextQualified)[vs[1].(string)]
	}).(SwitchExtraRoutesNextQualifiedOutput)
}

type SwitchIpConfig struct {
	// Required when `type`==`static`
	Dns         []string `pulumi:"dns"`
	DnsSuffixes []string `pulumi:"dnsSuffixes"`
	Gateway     *string  `pulumi:"gateway"`
	Ip          *string  `pulumi:"ip"`
	// Used only if `subnet` is not specified in `networks`
	Netmask *string `pulumi:"netmask"`
	// Network where this mgmt IP reside, this will be used as default network for outbound-ssh, dns, ntp, dns, tacplus, radius, syslog, snmp
	Network *string `pulumi:"network"`
	// enum: `dhcp`, `static`
	Type *string `pulumi:"type"`
}

// SwitchIpConfigInput is an input type that accepts SwitchIpConfigArgs and SwitchIpConfigOutput values.
// You can construct a concrete instance of `SwitchIpConfigInput` via:
//
//	SwitchIpConfigArgs{...}
type SwitchIpConfigInput interface {
	pulumi.Input

	ToSwitchIpConfigOutput() SwitchIpConfigOutput
	ToSwitchIpConfigOutputWithContext(context.Context) SwitchIpConfigOutput
}

type SwitchIpConfigArgs struct {
	// Required when `type`==`static`
	Dns         pulumi.StringArrayInput `pulumi:"dns"`
	DnsSuffixes pulumi.StringArrayInput `pulumi:"dnsSuffixes"`
	Gateway     pulumi.StringPtrInput   `pulumi:"gateway"`
	Ip          pulumi.StringPtrInput   `pulumi:"ip"`
	// Used only if `subnet` is not specified in `networks`
	Netmask pulumi.StringPtrInput `pulumi:"netmask"`
	// Network where this mgmt IP reside, this will be used as default network for outbound-ssh, dns, ntp, dns, tacplus, radius, syslog, snmp
	Network pulumi.StringPtrInput `pulumi:"network"`
	// enum: `dhcp`, `static`
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (SwitchIpConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchIpConfig)(nil)).Elem()
}

func (i SwitchIpConfigArgs) ToSwitchIpConfigOutput() SwitchIpConfigOutput {
	return i.ToSwitchIpConfigOutputWithContext(context.Background())
}

func (i SwitchIpConfigArgs) ToSwitchIpConfigOutputWithContext(ctx context.Context) SwitchIpConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchIpConfigOutput)
}

func (i SwitchIpConfigArgs) ToSwitchIpConfigPtrOutput() SwitchIpConfigPtrOutput {
	return i.ToSwitchIpConfigPtrOutputWithContext(context.Background())
}

func (i SwitchIpConfigArgs) ToSwitchIpConfigPtrOutputWithContext(ctx context.Context) SwitchIpConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchIpConfigOutput).ToSwitchIpConfigPtrOutputWithContext(ctx)
}

// SwitchIpConfigPtrInput is an input type that accepts SwitchIpConfigArgs, SwitchIpConfigPtr and SwitchIpConfigPtrOutput values.
// You can construct a concrete instance of `SwitchIpConfigPtrInput` via:
//
//	        SwitchIpConfigArgs{...}
//
//	or:
//
//	        nil
type SwitchIpConfigPtrInput interface {
	pulumi.Input

	ToSwitchIpConfigPtrOutput() SwitchIpConfigPtrOutput
	ToSwitchIpConfigPtrOutputWithContext(context.Context) SwitchIpConfigPtrOutput
}

type switchIpConfigPtrType SwitchIpConfigArgs

func SwitchIpConfigPtr(v *SwitchIpConfigArgs) SwitchIpConfigPtrInput {
	return (*switchIpConfigPtrType)(v)
}

func (*switchIpConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchIpConfig)(nil)).Elem()
}

func (i *switchIpConfigPtrType) ToSwitchIpConfigPtrOutput() SwitchIpConfigPtrOutput {
	return i.ToSwitchIpConfigPtrOutputWithContext(context.Background())
}

func (i *switchIpConfigPtrType) ToSwitchIpConfigPtrOutputWithContext(ctx context.Context) SwitchIpConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchIpConfigPtrOutput)
}

type SwitchIpConfigOutput struct{ *pulumi.OutputState }

func (SwitchIpConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchIpConfig)(nil)).Elem()
}

func (o SwitchIpConfigOutput) ToSwitchIpConfigOutput() SwitchIpConfigOutput {
	return o
}

func (o SwitchIpConfigOutput) ToSwitchIpConfigOutputWithContext(ctx context.Context) SwitchIpConfigOutput {
	return o
}

func (o SwitchIpConfigOutput) ToSwitchIpConfigPtrOutput() SwitchIpConfigPtrOutput {
	return o.ToSwitchIpConfigPtrOutputWithContext(context.Background())
}

func (o SwitchIpConfigOutput) ToSwitchIpConfigPtrOutputWithContext(ctx context.Context) SwitchIpConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SwitchIpConfig) *SwitchIpConfig {
		return &v
	}).(SwitchIpConfigPtrOutput)
}

// Required when `type`==`static`
func (o SwitchIpConfigOutput) Dns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SwitchIpConfig) []string { return v.Dns }).(pulumi.StringArrayOutput)
}

func (o SwitchIpConfigOutput) DnsSuffixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SwitchIpConfig) []string { return v.DnsSuffixes }).(pulumi.StringArrayOutput)
}

func (o SwitchIpConfigOutput) Gateway() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchIpConfig) *string { return v.Gateway }).(pulumi.StringPtrOutput)
}

func (o SwitchIpConfigOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchIpConfig) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

// Used only if `subnet` is not specified in `networks`
func (o SwitchIpConfigOutput) Netmask() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchIpConfig) *string { return v.Netmask }).(pulumi.StringPtrOutput)
}

// Network where this mgmt IP reside, this will be used as default network for outbound-ssh, dns, ntp, dns, tacplus, radius, syslog, snmp
func (o SwitchIpConfigOutput) Network() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchIpConfig) *string { return v.Network }).(pulumi.StringPtrOutput)
}

// enum: `dhcp`, `static`
func (o SwitchIpConfigOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchIpConfig) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type SwitchIpConfigPtrOutput struct{ *pulumi.OutputState }

func (SwitchIpConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchIpConfig)(nil)).Elem()
}

func (o SwitchIpConfigPtrOutput) ToSwitchIpConfigPtrOutput() SwitchIpConfigPtrOutput {
	return o
}

func (o SwitchIpConfigPtrOutput) ToSwitchIpConfigPtrOutputWithContext(ctx context.Context) SwitchIpConfigPtrOutput {
	return o
}

func (o SwitchIpConfigPtrOutput) Elem() SwitchIpConfigOutput {
	return o.ApplyT(func(v *SwitchIpConfig) SwitchIpConfig {
		if v != nil {
			return *v
		}
		var ret SwitchIpConfig
		return ret
	}).(SwitchIpConfigOutput)
}

// Required when `type`==`static`
func (o SwitchIpConfigPtrOutput) Dns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SwitchIpConfig) []string {
		if v == nil {
			return nil
		}
		return v.Dns
	}).(pulumi.StringArrayOutput)
}

func (o SwitchIpConfigPtrOutput) DnsSuffixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SwitchIpConfig) []string {
		if v == nil {
			return nil
		}
		return v.DnsSuffixes
	}).(pulumi.StringArrayOutput)
}

func (o SwitchIpConfigPtrOutput) Gateway() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchIpConfig) *string {
		if v == nil {
			return nil
		}
		return v.Gateway
	}).(pulumi.StringPtrOutput)
}

func (o SwitchIpConfigPtrOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchIpConfig) *string {
		if v == nil {
			return nil
		}
		return v.Ip
	}).(pulumi.StringPtrOutput)
}

// Used only if `subnet` is not specified in `networks`
func (o SwitchIpConfigPtrOutput) Netmask() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchIpConfig) *string {
		if v == nil {
			return nil
		}
		return v.Netmask
	}).(pulumi.StringPtrOutput)
}

// Network where this mgmt IP reside, this will be used as default network for outbound-ssh, dns, ntp, dns, tacplus, radius, syslog, snmp
func (o SwitchIpConfigPtrOutput) Network() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchIpConfig) *string {
		if v == nil {
			return nil
		}
		return v.Network
	}).(pulumi.StringPtrOutput)
}

// enum: `dhcp`, `static`
func (o SwitchIpConfigPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchIpConfig) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

type SwitchLocalPortConfig struct {
	// Only if `mode`==`trunk` whether to trunk all network/vlans
	AllNetworks *bool `pulumi:"allNetworks"`
	// If DHCP snooping is enabled, whether DHCP server is allowed on the interfaces with. All the interfaces from port configs using this port usage are effected. Please notice that allowDhcpd is a tri_state. When it is not defined, it means using the system's default setting which depends on whether the port is an access or trunk port.
	AllowDhcpd               *bool `pulumi:"allowDhcpd"`
	AllowMultipleSupplicants *bool `pulumi:"allowMultipleSupplicants"`
	// Only if `portAuth`==`dot1x` bypass auth for known clients if set to true when RADIUS server is down
	BypassAuthWhenServerDown *bool `pulumi:"bypassAuthWhenServerDown"`
	// Only if `portAuth`=`dot1x` bypass auth for all (including unknown clients) if set to true when RADIUS server is down
	BypassAuthWhenServerDownForUnknownClient *bool   `pulumi:"bypassAuthWhenServerDownForUnknownClient"`
	Description                              *string `pulumi:"description"`
	// Only if `mode`!=`dynamic` if speed and duplex are specified, whether to disable autonegotiation
	DisableAutoneg *bool `pulumi:"disableAutoneg"`
	// Whether the port is disabled
	Disabled *bool `pulumi:"disabled"`
	// link connection mode. enum: `auto`, `full`, `half`
	Duplex *string `pulumi:"duplex"`
	// Only if `portAuth`==`dot1x`, if dynamic vlan is used, specify the possible networks/vlans RADIUS can return
	DynamicVlanNetworks []string `pulumi:"dynamicVlanNetworks"`
	// Only if `portAuth`==`dot1x` whether to enable MAC Auth
	EnableMacAuth *bool `pulumi:"enableMacAuth"`
	EnableQos     *bool `pulumi:"enableQos"`
	// Only if `portAuth`==`dot1x` which network to put the device into if the device cannot do dot1x. default is null (i.e. not allowed)
	GuestNetwork *string `pulumi:"guestNetwork"`
	// inter_switch_link is used together with "isolation" under networks. NOTE: interSwitchLink works only between Juniper device. This has to be applied to both ports connected together
	InterSwitchLink *bool `pulumi:"interSwitchLink"`
	// Only if `enableMacAuth`==`true`
	MacAuthOnly *bool `pulumi:"macAuthOnly"`
	// Only if `enableMacAuth`==`true` + `macAuthOnly`==`false`, dot1x will be given priority then mac_auth. Enable this to prefer macAuth over dot1x.
	MacAuthPreferred *bool `pulumi:"macAuthPreferred"`
	// Only if `enableMacAuth` ==`true`. This type is ignored if mistNac is enabled. enum: `eap-md5`, `eap-peap`, `pap`
	MacAuthProtocol *string `pulumi:"macAuthProtocol"`
	// Max number of mac addresses, default is 0 for unlimited, otherwise range is 1 or higher, with upper bound constrained by platform
	MacLimit *int `pulumi:"macLimit"`
	// enum: `access`, `inet`, `trunk`
	Mode *string `pulumi:"mode"`
	// Media maximum transmission unit (MTU) is the largest data unit that can be forwarded without fragmentation. The default value is 1514.
	Mtu *int `pulumi:"mtu"`
	// Only if `mode`==`trunk`, the list of network/vlans
	Networks []string `pulumi:"networks"`
	// Additional note for the port config override
	Note *string `pulumi:"note"`
	// Only if `mode`==`access` and `portAuth`!=`dot1x` whether the port should retain dynamically learned MAC addresses
	PersistMac *bool `pulumi:"persistMac"`
	// Whether PoE capabilities are disabled for a port
	PoeDisabled *bool `pulumi:"poeDisabled"`
	// if dot1x is desired, set to dot1x. enum: `dot1x`
	PortAuth *string `pulumi:"portAuth"`
	// Native network/vlan for untagged traffic
	PortNetwork *string `pulumi:"portNetwork"`
	// Only if `mode`!=`dynamic` and `portAuth`=`dot1x` reauthentication interval range between 10 and 65535 (default: 3600)
	ReauthInterval *string `pulumi:"reauthInterval"`
	// Only if `portAuth`==`dot1x` sets server fail fallback vlan
	ServerFailNetwork *string `pulumi:"serverFailNetwork"`
	// Only if `portAuth`==`dot1x` when radius server reject / fails
	ServerRejectNetwork *string `pulumi:"serverRejectNetwork"`
	// enum: `100m`, `10m`, `1g`, `2.5g`, `5g`, `10g`, `25g`, `40g`, `100g`,`auto`
	Speed *string `pulumi:"speed"`
	// Switch storm control
	StormControl *SwitchLocalPortConfigStormControl `pulumi:"stormControl"`
	// When enabled, the port is not expected to receive BPDU frames
	StpEdge       *bool `pulumi:"stpEdge"`
	StpNoRootPort *bool `pulumi:"stpNoRootPort"`
	StpP2p        *bool `pulumi:"stpP2p"`
	// Port usage name.
	Usage string `pulumi:"usage"`
	// If this is connected to a vstp network
	UseVstp *bool `pulumi:"useVstp"`
	// Network/vlan for voip traffic, must also set port_network. to authenticate device, set port_auth
	VoipNetwork *string `pulumi:"voipNetwork"`
}

// SwitchLocalPortConfigInput is an input type that accepts SwitchLocalPortConfigArgs and SwitchLocalPortConfigOutput values.
// You can construct a concrete instance of `SwitchLocalPortConfigInput` via:
//
//	SwitchLocalPortConfigArgs{...}
type SwitchLocalPortConfigInput interface {
	pulumi.Input

	ToSwitchLocalPortConfigOutput() SwitchLocalPortConfigOutput
	ToSwitchLocalPortConfigOutputWithContext(context.Context) SwitchLocalPortConfigOutput
}

type SwitchLocalPortConfigArgs struct {
	// Only if `mode`==`trunk` whether to trunk all network/vlans
	AllNetworks pulumi.BoolPtrInput `pulumi:"allNetworks"`
	// If DHCP snooping is enabled, whether DHCP server is allowed on the interfaces with. All the interfaces from port configs using this port usage are effected. Please notice that allowDhcpd is a tri_state. When it is not defined, it means using the system's default setting which depends on whether the port is an access or trunk port.
	AllowDhcpd               pulumi.BoolPtrInput `pulumi:"allowDhcpd"`
	AllowMultipleSupplicants pulumi.BoolPtrInput `pulumi:"allowMultipleSupplicants"`
	// Only if `portAuth`==`dot1x` bypass auth for known clients if set to true when RADIUS server is down
	BypassAuthWhenServerDown pulumi.BoolPtrInput `pulumi:"bypassAuthWhenServerDown"`
	// Only if `portAuth`=`dot1x` bypass auth for all (including unknown clients) if set to true when RADIUS server is down
	BypassAuthWhenServerDownForUnknownClient pulumi.BoolPtrInput   `pulumi:"bypassAuthWhenServerDownForUnknownClient"`
	Description                              pulumi.StringPtrInput `pulumi:"description"`
	// Only if `mode`!=`dynamic` if speed and duplex are specified, whether to disable autonegotiation
	DisableAutoneg pulumi.BoolPtrInput `pulumi:"disableAutoneg"`
	// Whether the port is disabled
	Disabled pulumi.BoolPtrInput `pulumi:"disabled"`
	// link connection mode. enum: `auto`, `full`, `half`
	Duplex pulumi.StringPtrInput `pulumi:"duplex"`
	// Only if `portAuth`==`dot1x`, if dynamic vlan is used, specify the possible networks/vlans RADIUS can return
	DynamicVlanNetworks pulumi.StringArrayInput `pulumi:"dynamicVlanNetworks"`
	// Only if `portAuth`==`dot1x` whether to enable MAC Auth
	EnableMacAuth pulumi.BoolPtrInput `pulumi:"enableMacAuth"`
	EnableQos     pulumi.BoolPtrInput `pulumi:"enableQos"`
	// Only if `portAuth`==`dot1x` which network to put the device into if the device cannot do dot1x. default is null (i.e. not allowed)
	GuestNetwork pulumi.StringPtrInput `pulumi:"guestNetwork"`
	// inter_switch_link is used together with "isolation" under networks. NOTE: interSwitchLink works only between Juniper device. This has to be applied to both ports connected together
	InterSwitchLink pulumi.BoolPtrInput `pulumi:"interSwitchLink"`
	// Only if `enableMacAuth`==`true`
	MacAuthOnly pulumi.BoolPtrInput `pulumi:"macAuthOnly"`
	// Only if `enableMacAuth`==`true` + `macAuthOnly`==`false`, dot1x will be given priority then mac_auth. Enable this to prefer macAuth over dot1x.
	MacAuthPreferred pulumi.BoolPtrInput `pulumi:"macAuthPreferred"`
	// Only if `enableMacAuth` ==`true`. This type is ignored if mistNac is enabled. enum: `eap-md5`, `eap-peap`, `pap`
	MacAuthProtocol pulumi.StringPtrInput `pulumi:"macAuthProtocol"`
	// Max number of mac addresses, default is 0 for unlimited, otherwise range is 1 or higher, with upper bound constrained by platform
	MacLimit pulumi.IntPtrInput `pulumi:"macLimit"`
	// enum: `access`, `inet`, `trunk`
	Mode pulumi.StringPtrInput `pulumi:"mode"`
	// Media maximum transmission unit (MTU) is the largest data unit that can be forwarded without fragmentation. The default value is 1514.
	Mtu pulumi.IntPtrInput `pulumi:"mtu"`
	// Only if `mode`==`trunk`, the list of network/vlans
	Networks pulumi.StringArrayInput `pulumi:"networks"`
	// Additional note for the port config override
	Note pulumi.StringPtrInput `pulumi:"note"`
	// Only if `mode`==`access` and `portAuth`!=`dot1x` whether the port should retain dynamically learned MAC addresses
	PersistMac pulumi.BoolPtrInput `pulumi:"persistMac"`
	// Whether PoE capabilities are disabled for a port
	PoeDisabled pulumi.BoolPtrInput `pulumi:"poeDisabled"`
	// if dot1x is desired, set to dot1x. enum: `dot1x`
	PortAuth pulumi.StringPtrInput `pulumi:"portAuth"`
	// Native network/vlan for untagged traffic
	PortNetwork pulumi.StringPtrInput `pulumi:"portNetwork"`
	// Only if `mode`!=`dynamic` and `portAuth`=`dot1x` reauthentication interval range between 10 and 65535 (default: 3600)
	ReauthInterval pulumi.StringPtrInput `pulumi:"reauthInterval"`
	// Only if `portAuth`==`dot1x` sets server fail fallback vlan
	ServerFailNetwork pulumi.StringPtrInput `pulumi:"serverFailNetwork"`
	// Only if `portAuth`==`dot1x` when radius server reject / fails
	ServerRejectNetwork pulumi.StringPtrInput `pulumi:"serverRejectNetwork"`
	// enum: `100m`, `10m`, `1g`, `2.5g`, `5g`, `10g`, `25g`, `40g`, `100g`,`auto`
	Speed pulumi.StringPtrInput `pulumi:"speed"`
	// Switch storm control
	StormControl SwitchLocalPortConfigStormControlPtrInput `pulumi:"stormControl"`
	// When enabled, the port is not expected to receive BPDU frames
	StpEdge       pulumi.BoolPtrInput `pulumi:"stpEdge"`
	StpNoRootPort pulumi.BoolPtrInput `pulumi:"stpNoRootPort"`
	StpP2p        pulumi.BoolPtrInput `pulumi:"stpP2p"`
	// Port usage name.
	Usage pulumi.StringInput `pulumi:"usage"`
	// If this is connected to a vstp network
	UseVstp pulumi.BoolPtrInput `pulumi:"useVstp"`
	// Network/vlan for voip traffic, must also set port_network. to authenticate device, set port_auth
	VoipNetwork pulumi.StringPtrInput `pulumi:"voipNetwork"`
}

func (SwitchLocalPortConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchLocalPortConfig)(nil)).Elem()
}

func (i SwitchLocalPortConfigArgs) ToSwitchLocalPortConfigOutput() SwitchLocalPortConfigOutput {
	return i.ToSwitchLocalPortConfigOutputWithContext(context.Background())
}

func (i SwitchLocalPortConfigArgs) ToSwitchLocalPortConfigOutputWithContext(ctx context.Context) SwitchLocalPortConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchLocalPortConfigOutput)
}

// SwitchLocalPortConfigMapInput is an input type that accepts SwitchLocalPortConfigMap and SwitchLocalPortConfigMapOutput values.
// You can construct a concrete instance of `SwitchLocalPortConfigMapInput` via:
//
//	SwitchLocalPortConfigMap{ "key": SwitchLocalPortConfigArgs{...} }
type SwitchLocalPortConfigMapInput interface {
	pulumi.Input

	ToSwitchLocalPortConfigMapOutput() SwitchLocalPortConfigMapOutput
	ToSwitchLocalPortConfigMapOutputWithContext(context.Context) SwitchLocalPortConfigMapOutput
}

type SwitchLocalPortConfigMap map[string]SwitchLocalPortConfigInput

func (SwitchLocalPortConfigMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]SwitchLocalPortConfig)(nil)).Elem()
}

func (i SwitchLocalPortConfigMap) ToSwitchLocalPortConfigMapOutput() SwitchLocalPortConfigMapOutput {
	return i.ToSwitchLocalPortConfigMapOutputWithContext(context.Background())
}

func (i SwitchLocalPortConfigMap) ToSwitchLocalPortConfigMapOutputWithContext(ctx context.Context) SwitchLocalPortConfigMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchLocalPortConfigMapOutput)
}

type SwitchLocalPortConfigOutput struct{ *pulumi.OutputState }

func (SwitchLocalPortConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchLocalPortConfig)(nil)).Elem()
}

func (o SwitchLocalPortConfigOutput) ToSwitchLocalPortConfigOutput() SwitchLocalPortConfigOutput {
	return o
}

func (o SwitchLocalPortConfigOutput) ToSwitchLocalPortConfigOutputWithContext(ctx context.Context) SwitchLocalPortConfigOutput {
	return o
}

// Only if `mode`==`trunk` whether to trunk all network/vlans
func (o SwitchLocalPortConfigOutput) AllNetworks() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SwitchLocalPortConfig) *bool { return v.AllNetworks }).(pulumi.BoolPtrOutput)
}

// If DHCP snooping is enabled, whether DHCP server is allowed on the interfaces with. All the interfaces from port configs using this port usage are effected. Please notice that allowDhcpd is a tri_state. When it is not defined, it means using the system's default setting which depends on whether the port is an access or trunk port.
func (o SwitchLocalPortConfigOutput) AllowDhcpd() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SwitchLocalPortConfig) *bool { return v.AllowDhcpd }).(pulumi.BoolPtrOutput)
}

func (o SwitchLocalPortConfigOutput) AllowMultipleSupplicants() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SwitchLocalPortConfig) *bool { return v.AllowMultipleSupplicants }).(pulumi.BoolPtrOutput)
}

// Only if `portAuth`==`dot1x` bypass auth for known clients if set to true when RADIUS server is down
func (o SwitchLocalPortConfigOutput) BypassAuthWhenServerDown() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SwitchLocalPortConfig) *bool { return v.BypassAuthWhenServerDown }).(pulumi.BoolPtrOutput)
}

// Only if `portAuth`=`dot1x` bypass auth for all (including unknown clients) if set to true when RADIUS server is down
func (o SwitchLocalPortConfigOutput) BypassAuthWhenServerDownForUnknownClient() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SwitchLocalPortConfig) *bool { return v.BypassAuthWhenServerDownForUnknownClient }).(pulumi.BoolPtrOutput)
}

func (o SwitchLocalPortConfigOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchLocalPortConfig) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Only if `mode`!=`dynamic` if speed and duplex are specified, whether to disable autonegotiation
func (o SwitchLocalPortConfigOutput) DisableAutoneg() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SwitchLocalPortConfig) *bool { return v.DisableAutoneg }).(pulumi.BoolPtrOutput)
}

// Whether the port is disabled
func (o SwitchLocalPortConfigOutput) Disabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SwitchLocalPortConfig) *bool { return v.Disabled }).(pulumi.BoolPtrOutput)
}

// link connection mode. enum: `auto`, `full`, `half`
func (o SwitchLocalPortConfigOutput) Duplex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchLocalPortConfig) *string { return v.Duplex }).(pulumi.StringPtrOutput)
}

// Only if `portAuth`==`dot1x`, if dynamic vlan is used, specify the possible networks/vlans RADIUS can return
func (o SwitchLocalPortConfigOutput) DynamicVlanNetworks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SwitchLocalPortConfig) []string { return v.DynamicVlanNetworks }).(pulumi.StringArrayOutput)
}

// Only if `portAuth`==`dot1x` whether to enable MAC Auth
func (o SwitchLocalPortConfigOutput) EnableMacAuth() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SwitchLocalPortConfig) *bool { return v.EnableMacAuth }).(pulumi.BoolPtrOutput)
}

func (o SwitchLocalPortConfigOutput) EnableQos() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SwitchLocalPortConfig) *bool { return v.EnableQos }).(pulumi.BoolPtrOutput)
}

// Only if `portAuth`==`dot1x` which network to put the device into if the device cannot do dot1x. default is null (i.e. not allowed)
func (o SwitchLocalPortConfigOutput) GuestNetwork() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchLocalPortConfig) *string { return v.GuestNetwork }).(pulumi.StringPtrOutput)
}

// inter_switch_link is used together with "isolation" under networks. NOTE: interSwitchLink works only between Juniper device. This has to be applied to both ports connected together
func (o SwitchLocalPortConfigOutput) InterSwitchLink() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SwitchLocalPortConfig) *bool { return v.InterSwitchLink }).(pulumi.BoolPtrOutput)
}

// Only if `enableMacAuth`==`true`
func (o SwitchLocalPortConfigOutput) MacAuthOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SwitchLocalPortConfig) *bool { return v.MacAuthOnly }).(pulumi.BoolPtrOutput)
}

// Only if `enableMacAuth`==`true` + `macAuthOnly`==`false`, dot1x will be given priority then mac_auth. Enable this to prefer macAuth over dot1x.
func (o SwitchLocalPortConfigOutput) MacAuthPreferred() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SwitchLocalPortConfig) *bool { return v.MacAuthPreferred }).(pulumi.BoolPtrOutput)
}

// Only if `enableMacAuth` ==`true`. This type is ignored if mistNac is enabled. enum: `eap-md5`, `eap-peap`, `pap`
func (o SwitchLocalPortConfigOutput) MacAuthProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchLocalPortConfig) *string { return v.MacAuthProtocol }).(pulumi.StringPtrOutput)
}

// Max number of mac addresses, default is 0 for unlimited, otherwise range is 1 or higher, with upper bound constrained by platform
func (o SwitchLocalPortConfigOutput) MacLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchLocalPortConfig) *int { return v.MacLimit }).(pulumi.IntPtrOutput)
}

// enum: `access`, `inet`, `trunk`
func (o SwitchLocalPortConfigOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchLocalPortConfig) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// Media maximum transmission unit (MTU) is the largest data unit that can be forwarded without fragmentation. The default value is 1514.
func (o SwitchLocalPortConfigOutput) Mtu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchLocalPortConfig) *int { return v.Mtu }).(pulumi.IntPtrOutput)
}

// Only if `mode`==`trunk`, the list of network/vlans
func (o SwitchLocalPortConfigOutput) Networks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SwitchLocalPortConfig) []string { return v.Networks }).(pulumi.StringArrayOutput)
}

// Additional note for the port config override
func (o SwitchLocalPortConfigOutput) Note() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchLocalPortConfig) *string { return v.Note }).(pulumi.StringPtrOutput)
}

// Only if `mode`==`access` and `portAuth`!=`dot1x` whether the port should retain dynamically learned MAC addresses
func (o SwitchLocalPortConfigOutput) PersistMac() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SwitchLocalPortConfig) *bool { return v.PersistMac }).(pulumi.BoolPtrOutput)
}

// Whether PoE capabilities are disabled for a port
func (o SwitchLocalPortConfigOutput) PoeDisabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SwitchLocalPortConfig) *bool { return v.PoeDisabled }).(pulumi.BoolPtrOutput)
}

// if dot1x is desired, set to dot1x. enum: `dot1x`
func (o SwitchLocalPortConfigOutput) PortAuth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchLocalPortConfig) *string { return v.PortAuth }).(pulumi.StringPtrOutput)
}

// Native network/vlan for untagged traffic
func (o SwitchLocalPortConfigOutput) PortNetwork() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchLocalPortConfig) *string { return v.PortNetwork }).(pulumi.StringPtrOutput)
}

// Only if `mode`!=`dynamic` and `portAuth`=`dot1x` reauthentication interval range between 10 and 65535 (default: 3600)
func (o SwitchLocalPortConfigOutput) ReauthInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchLocalPortConfig) *string { return v.ReauthInterval }).(pulumi.StringPtrOutput)
}

// Only if `portAuth`==`dot1x` sets server fail fallback vlan
func (o SwitchLocalPortConfigOutput) ServerFailNetwork() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchLocalPortConfig) *string { return v.ServerFailNetwork }).(pulumi.StringPtrOutput)
}

// Only if `portAuth`==`dot1x` when radius server reject / fails
func (o SwitchLocalPortConfigOutput) ServerRejectNetwork() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchLocalPortConfig) *string { return v.ServerRejectNetwork }).(pulumi.StringPtrOutput)
}

// enum: `100m`, `10m`, `1g`, `2.5g`, `5g`, `10g`, `25g`, `40g`, `100g`,`auto`
func (o SwitchLocalPortConfigOutput) Speed() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchLocalPortConfig) *string { return v.Speed }).(pulumi.StringPtrOutput)
}

// Switch storm control
func (o SwitchLocalPortConfigOutput) StormControl() SwitchLocalPortConfigStormControlPtrOutput {
	return o.ApplyT(func(v SwitchLocalPortConfig) *SwitchLocalPortConfigStormControl { return v.StormControl }).(SwitchLocalPortConfigStormControlPtrOutput)
}

// When enabled, the port is not expected to receive BPDU frames
func (o SwitchLocalPortConfigOutput) StpEdge() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SwitchLocalPortConfig) *bool { return v.StpEdge }).(pulumi.BoolPtrOutput)
}

func (o SwitchLocalPortConfigOutput) StpNoRootPort() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SwitchLocalPortConfig) *bool { return v.StpNoRootPort }).(pulumi.BoolPtrOutput)
}

func (o SwitchLocalPortConfigOutput) StpP2p() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SwitchLocalPortConfig) *bool { return v.StpP2p }).(pulumi.BoolPtrOutput)
}

// Port usage name.
func (o SwitchLocalPortConfigOutput) Usage() pulumi.StringOutput {
	return o.ApplyT(func(v SwitchLocalPortConfig) string { return v.Usage }).(pulumi.StringOutput)
}

// If this is connected to a vstp network
func (o SwitchLocalPortConfigOutput) UseVstp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SwitchLocalPortConfig) *bool { return v.UseVstp }).(pulumi.BoolPtrOutput)
}

// Network/vlan for voip traffic, must also set port_network. to authenticate device, set port_auth
func (o SwitchLocalPortConfigOutput) VoipNetwork() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchLocalPortConfig) *string { return v.VoipNetwork }).(pulumi.StringPtrOutput)
}

type SwitchLocalPortConfigMapOutput struct{ *pulumi.OutputState }

func (SwitchLocalPortConfigMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]SwitchLocalPortConfig)(nil)).Elem()
}

func (o SwitchLocalPortConfigMapOutput) ToSwitchLocalPortConfigMapOutput() SwitchLocalPortConfigMapOutput {
	return o
}

func (o SwitchLocalPortConfigMapOutput) ToSwitchLocalPortConfigMapOutputWithContext(ctx context.Context) SwitchLocalPortConfigMapOutput {
	return o
}

func (o SwitchLocalPortConfigMapOutput) MapIndex(k pulumi.StringInput) SwitchLocalPortConfigOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) SwitchLocalPortConfig {
		return vs[0].(map[string]SwitchLocalPortConfig)[vs[1].(string)]
	}).(SwitchLocalPortConfigOutput)
}

type SwitchLocalPortConfigStormControl struct {
	// Whether to disable storm control on broadcast traffic
	NoBroadcast *bool `pulumi:"noBroadcast"`
	// Whether to disable storm control on multicast traffic
	NoMulticast *bool `pulumi:"noMulticast"`
	// Whether to disable storm control on registered multicast traffic
	NoRegisteredMulticast *bool `pulumi:"noRegisteredMulticast"`
	// Whether to disable storm control on unknown unicast traffic
	NoUnknownUnicast *bool `pulumi:"noUnknownUnicast"`
	// Bandwidth-percentage, configures the storm control level as a percentage of the available bandwidth
	Percentage *int `pulumi:"percentage"`
}

// SwitchLocalPortConfigStormControlInput is an input type that accepts SwitchLocalPortConfigStormControlArgs and SwitchLocalPortConfigStormControlOutput values.
// You can construct a concrete instance of `SwitchLocalPortConfigStormControlInput` via:
//
//	SwitchLocalPortConfigStormControlArgs{...}
type SwitchLocalPortConfigStormControlInput interface {
	pulumi.Input

	ToSwitchLocalPortConfigStormControlOutput() SwitchLocalPortConfigStormControlOutput
	ToSwitchLocalPortConfigStormControlOutputWithContext(context.Context) SwitchLocalPortConfigStormControlOutput
}

type SwitchLocalPortConfigStormControlArgs struct {
	// Whether to disable storm control on broadcast traffic
	NoBroadcast pulumi.BoolPtrInput `pulumi:"noBroadcast"`
	// Whether to disable storm control on multicast traffic
	NoMulticast pulumi.BoolPtrInput `pulumi:"noMulticast"`
	// Whether to disable storm control on registered multicast traffic
	NoRegisteredMulticast pulumi.BoolPtrInput `pulumi:"noRegisteredMulticast"`
	// Whether to disable storm control on unknown unicast traffic
	NoUnknownUnicast pulumi.BoolPtrInput `pulumi:"noUnknownUnicast"`
	// Bandwidth-percentage, configures the storm control level as a percentage of the available bandwidth
	Percentage pulumi.IntPtrInput `pulumi:"percentage"`
}

func (SwitchLocalPortConfigStormControlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchLocalPortConfigStormControl)(nil)).Elem()
}

func (i SwitchLocalPortConfigStormControlArgs) ToSwitchLocalPortConfigStormControlOutput() SwitchLocalPortConfigStormControlOutput {
	return i.ToSwitchLocalPortConfigStormControlOutputWithContext(context.Background())
}

func (i SwitchLocalPortConfigStormControlArgs) ToSwitchLocalPortConfigStormControlOutputWithContext(ctx context.Context) SwitchLocalPortConfigStormControlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchLocalPortConfigStormControlOutput)
}

func (i SwitchLocalPortConfigStormControlArgs) ToSwitchLocalPortConfigStormControlPtrOutput() SwitchLocalPortConfigStormControlPtrOutput {
	return i.ToSwitchLocalPortConfigStormControlPtrOutputWithContext(context.Background())
}

func (i SwitchLocalPortConfigStormControlArgs) ToSwitchLocalPortConfigStormControlPtrOutputWithContext(ctx context.Context) SwitchLocalPortConfigStormControlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchLocalPortConfigStormControlOutput).ToSwitchLocalPortConfigStormControlPtrOutputWithContext(ctx)
}

// SwitchLocalPortConfigStormControlPtrInput is an input type that accepts SwitchLocalPortConfigStormControlArgs, SwitchLocalPortConfigStormControlPtr and SwitchLocalPortConfigStormControlPtrOutput values.
// You can construct a concrete instance of `SwitchLocalPortConfigStormControlPtrInput` via:
//
//	        SwitchLocalPortConfigStormControlArgs{...}
//
//	or:
//
//	        nil
type SwitchLocalPortConfigStormControlPtrInput interface {
	pulumi.Input

	ToSwitchLocalPortConfigStormControlPtrOutput() SwitchLocalPortConfigStormControlPtrOutput
	ToSwitchLocalPortConfigStormControlPtrOutputWithContext(context.Context) SwitchLocalPortConfigStormControlPtrOutput
}

type switchLocalPortConfigStormControlPtrType SwitchLocalPortConfigStormControlArgs

func SwitchLocalPortConfigStormControlPtr(v *SwitchLocalPortConfigStormControlArgs) SwitchLocalPortConfigStormControlPtrInput {
	return (*switchLocalPortConfigStormControlPtrType)(v)
}

func (*switchLocalPortConfigStormControlPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchLocalPortConfigStormControl)(nil)).Elem()
}

func (i *switchLocalPortConfigStormControlPtrType) ToSwitchLocalPortConfigStormControlPtrOutput() SwitchLocalPortConfigStormControlPtrOutput {
	return i.ToSwitchLocalPortConfigStormControlPtrOutputWithContext(context.Background())
}

func (i *switchLocalPortConfigStormControlPtrType) ToSwitchLocalPortConfigStormControlPtrOutputWithContext(ctx context.Context) SwitchLocalPortConfigStormControlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchLocalPortConfigStormControlPtrOutput)
}

type SwitchLocalPortConfigStormControlOutput struct{ *pulumi.OutputState }

func (SwitchLocalPortConfigStormControlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchLocalPortConfigStormControl)(nil)).Elem()
}

func (o SwitchLocalPortConfigStormControlOutput) ToSwitchLocalPortConfigStormControlOutput() SwitchLocalPortConfigStormControlOutput {
	return o
}

func (o SwitchLocalPortConfigStormControlOutput) ToSwitchLocalPortConfigStormControlOutputWithContext(ctx context.Context) SwitchLocalPortConfigStormControlOutput {
	return o
}

func (o SwitchLocalPortConfigStormControlOutput) ToSwitchLocalPortConfigStormControlPtrOutput() SwitchLocalPortConfigStormControlPtrOutput {
	return o.ToSwitchLocalPortConfigStormControlPtrOutputWithContext(context.Background())
}

func (o SwitchLocalPortConfigStormControlOutput) ToSwitchLocalPortConfigStormControlPtrOutputWithContext(ctx context.Context) SwitchLocalPortConfigStormControlPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SwitchLocalPortConfigStormControl) *SwitchLocalPortConfigStormControl {
		return &v
	}).(SwitchLocalPortConfigStormControlPtrOutput)
}

// Whether to disable storm control on broadcast traffic
func (o SwitchLocalPortConfigStormControlOutput) NoBroadcast() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SwitchLocalPortConfigStormControl) *bool { return v.NoBroadcast }).(pulumi.BoolPtrOutput)
}

// Whether to disable storm control on multicast traffic
func (o SwitchLocalPortConfigStormControlOutput) NoMulticast() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SwitchLocalPortConfigStormControl) *bool { return v.NoMulticast }).(pulumi.BoolPtrOutput)
}

// Whether to disable storm control on registered multicast traffic
func (o SwitchLocalPortConfigStormControlOutput) NoRegisteredMulticast() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SwitchLocalPortConfigStormControl) *bool { return v.NoRegisteredMulticast }).(pulumi.BoolPtrOutput)
}

// Whether to disable storm control on unknown unicast traffic
func (o SwitchLocalPortConfigStormControlOutput) NoUnknownUnicast() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SwitchLocalPortConfigStormControl) *bool { return v.NoUnknownUnicast }).(pulumi.BoolPtrOutput)
}

// Bandwidth-percentage, configures the storm control level as a percentage of the available bandwidth
func (o SwitchLocalPortConfigStormControlOutput) Percentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchLocalPortConfigStormControl) *int { return v.Percentage }).(pulumi.IntPtrOutput)
}

type SwitchLocalPortConfigStormControlPtrOutput struct{ *pulumi.OutputState }

func (SwitchLocalPortConfigStormControlPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchLocalPortConfigStormControl)(nil)).Elem()
}

func (o SwitchLocalPortConfigStormControlPtrOutput) ToSwitchLocalPortConfigStormControlPtrOutput() SwitchLocalPortConfigStormControlPtrOutput {
	return o
}

func (o SwitchLocalPortConfigStormControlPtrOutput) ToSwitchLocalPortConfigStormControlPtrOutputWithContext(ctx context.Context) SwitchLocalPortConfigStormControlPtrOutput {
	return o
}

func (o SwitchLocalPortConfigStormControlPtrOutput) Elem() SwitchLocalPortConfigStormControlOutput {
	return o.ApplyT(func(v *SwitchLocalPortConfigStormControl) SwitchLocalPortConfigStormControl {
		if v != nil {
			return *v
		}
		var ret SwitchLocalPortConfigStormControl
		return ret
	}).(SwitchLocalPortConfigStormControlOutput)
}

// Whether to disable storm control on broadcast traffic
func (o SwitchLocalPortConfigStormControlPtrOutput) NoBroadcast() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SwitchLocalPortConfigStormControl) *bool {
		if v == nil {
			return nil
		}
		return v.NoBroadcast
	}).(pulumi.BoolPtrOutput)
}

// Whether to disable storm control on multicast traffic
func (o SwitchLocalPortConfigStormControlPtrOutput) NoMulticast() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SwitchLocalPortConfigStormControl) *bool {
		if v == nil {
			return nil
		}
		return v.NoMulticast
	}).(pulumi.BoolPtrOutput)
}

// Whether to disable storm control on registered multicast traffic
func (o SwitchLocalPortConfigStormControlPtrOutput) NoRegisteredMulticast() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SwitchLocalPortConfigStormControl) *bool {
		if v == nil {
			return nil
		}
		return v.NoRegisteredMulticast
	}).(pulumi.BoolPtrOutput)
}

// Whether to disable storm control on unknown unicast traffic
func (o SwitchLocalPortConfigStormControlPtrOutput) NoUnknownUnicast() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SwitchLocalPortConfigStormControl) *bool {
		if v == nil {
			return nil
		}
		return v.NoUnknownUnicast
	}).(pulumi.BoolPtrOutput)
}

// Bandwidth-percentage, configures the storm control level as a percentage of the available bandwidth
func (o SwitchLocalPortConfigStormControlPtrOutput) Percentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SwitchLocalPortConfigStormControl) *int {
		if v == nil {
			return nil
		}
		return v.Percentage
	}).(pulumi.IntPtrOutput)
}

type SwitchMistNac struct {
	Enabled *bool   `pulumi:"enabled"`
	Network *string `pulumi:"network"`
}

// SwitchMistNacInput is an input type that accepts SwitchMistNacArgs and SwitchMistNacOutput values.
// You can construct a concrete instance of `SwitchMistNacInput` via:
//
//	SwitchMistNacArgs{...}
type SwitchMistNacInput interface {
	pulumi.Input

	ToSwitchMistNacOutput() SwitchMistNacOutput
	ToSwitchMistNacOutputWithContext(context.Context) SwitchMistNacOutput
}

type SwitchMistNacArgs struct {
	Enabled pulumi.BoolPtrInput   `pulumi:"enabled"`
	Network pulumi.StringPtrInput `pulumi:"network"`
}

func (SwitchMistNacArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchMistNac)(nil)).Elem()
}

func (i SwitchMistNacArgs) ToSwitchMistNacOutput() SwitchMistNacOutput {
	return i.ToSwitchMistNacOutputWithContext(context.Background())
}

func (i SwitchMistNacArgs) ToSwitchMistNacOutputWithContext(ctx context.Context) SwitchMistNacOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchMistNacOutput)
}

func (i SwitchMistNacArgs) ToSwitchMistNacPtrOutput() SwitchMistNacPtrOutput {
	return i.ToSwitchMistNacPtrOutputWithContext(context.Background())
}

func (i SwitchMistNacArgs) ToSwitchMistNacPtrOutputWithContext(ctx context.Context) SwitchMistNacPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchMistNacOutput).ToSwitchMistNacPtrOutputWithContext(ctx)
}

// SwitchMistNacPtrInput is an input type that accepts SwitchMistNacArgs, SwitchMistNacPtr and SwitchMistNacPtrOutput values.
// You can construct a concrete instance of `SwitchMistNacPtrInput` via:
//
//	        SwitchMistNacArgs{...}
//
//	or:
//
//	        nil
type SwitchMistNacPtrInput interface {
	pulumi.Input

	ToSwitchMistNacPtrOutput() SwitchMistNacPtrOutput
	ToSwitchMistNacPtrOutputWithContext(context.Context) SwitchMistNacPtrOutput
}

type switchMistNacPtrType SwitchMistNacArgs

func SwitchMistNacPtr(v *SwitchMistNacArgs) SwitchMistNacPtrInput {
	return (*switchMistNacPtrType)(v)
}

func (*switchMistNacPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchMistNac)(nil)).Elem()
}

func (i *switchMistNacPtrType) ToSwitchMistNacPtrOutput() SwitchMistNacPtrOutput {
	return i.ToSwitchMistNacPtrOutputWithContext(context.Background())
}

func (i *switchMistNacPtrType) ToSwitchMistNacPtrOutputWithContext(ctx context.Context) SwitchMistNacPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchMistNacPtrOutput)
}

type SwitchMistNacOutput struct{ *pulumi.OutputState }

func (SwitchMistNacOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchMistNac)(nil)).Elem()
}

func (o SwitchMistNacOutput) ToSwitchMistNacOutput() SwitchMistNacOutput {
	return o
}

func (o SwitchMistNacOutput) ToSwitchMistNacOutputWithContext(ctx context.Context) SwitchMistNacOutput {
	return o
}

func (o SwitchMistNacOutput) ToSwitchMistNacPtrOutput() SwitchMistNacPtrOutput {
	return o.ToSwitchMistNacPtrOutputWithContext(context.Background())
}

func (o SwitchMistNacOutput) ToSwitchMistNacPtrOutputWithContext(ctx context.Context) SwitchMistNacPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SwitchMistNac) *SwitchMistNac {
		return &v
	}).(SwitchMistNacPtrOutput)
}

func (o SwitchMistNacOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SwitchMistNac) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

func (o SwitchMistNacOutput) Network() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchMistNac) *string { return v.Network }).(pulumi.StringPtrOutput)
}

type SwitchMistNacPtrOutput struct{ *pulumi.OutputState }

func (SwitchMistNacPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchMistNac)(nil)).Elem()
}

func (o SwitchMistNacPtrOutput) ToSwitchMistNacPtrOutput() SwitchMistNacPtrOutput {
	return o
}

func (o SwitchMistNacPtrOutput) ToSwitchMistNacPtrOutputWithContext(ctx context.Context) SwitchMistNacPtrOutput {
	return o
}

func (o SwitchMistNacPtrOutput) Elem() SwitchMistNacOutput {
	return o.ApplyT(func(v *SwitchMistNac) SwitchMistNac {
		if v != nil {
			return *v
		}
		var ret SwitchMistNac
		return ret
	}).(SwitchMistNacOutput)
}

func (o SwitchMistNacPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SwitchMistNac) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

func (o SwitchMistNacPtrOutput) Network() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchMistNac) *string {
		if v == nil {
			return nil
		}
		return v.Network
	}).(pulumi.StringPtrOutput)
}

type SwitchNetworks struct {
	// Only required for EVPN-VXLAN networks, IPv4 Virtual Gateway
	Gateway *string `pulumi:"gateway"`
	// Only required for EVPN-VXLAN networks, IPv6 Virtual Gateway
	Gateway6 *string `pulumi:"gateway6"`
	// whether to stop clients to talk to each other, default is false (when enabled, a unique isolationVlanId is required). NOTE: this features requires uplink device to also a be Juniper device and `interSwitchLink` to be set
	Isolation       *bool   `pulumi:"isolation"`
	IsolationVlanId *string `pulumi:"isolationVlanId"`
	// Optional for pure switching, required when L3 / routing features are used
	Subnet *string `pulumi:"subnet"`
	// Optional for pure switching, required when L3 / routing features are used
	Subnet6 *string `pulumi:"subnet6"`
	VlanId  string  `pulumi:"vlanId"`
}

// SwitchNetworksInput is an input type that accepts SwitchNetworksArgs and SwitchNetworksOutput values.
// You can construct a concrete instance of `SwitchNetworksInput` via:
//
//	SwitchNetworksArgs{...}
type SwitchNetworksInput interface {
	pulumi.Input

	ToSwitchNetworksOutput() SwitchNetworksOutput
	ToSwitchNetworksOutputWithContext(context.Context) SwitchNetworksOutput
}

type SwitchNetworksArgs struct {
	// Only required for EVPN-VXLAN networks, IPv4 Virtual Gateway
	Gateway pulumi.StringPtrInput `pulumi:"gateway"`
	// Only required for EVPN-VXLAN networks, IPv6 Virtual Gateway
	Gateway6 pulumi.StringPtrInput `pulumi:"gateway6"`
	// whether to stop clients to talk to each other, default is false (when enabled, a unique isolationVlanId is required). NOTE: this features requires uplink device to also a be Juniper device and `interSwitchLink` to be set
	Isolation       pulumi.BoolPtrInput   `pulumi:"isolation"`
	IsolationVlanId pulumi.StringPtrInput `pulumi:"isolationVlanId"`
	// Optional for pure switching, required when L3 / routing features are used
	Subnet pulumi.StringPtrInput `pulumi:"subnet"`
	// Optional for pure switching, required when L3 / routing features are used
	Subnet6 pulumi.StringPtrInput `pulumi:"subnet6"`
	VlanId  pulumi.StringInput    `pulumi:"vlanId"`
}

func (SwitchNetworksArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchNetworks)(nil)).Elem()
}

func (i SwitchNetworksArgs) ToSwitchNetworksOutput() SwitchNetworksOutput {
	return i.ToSwitchNetworksOutputWithContext(context.Background())
}

func (i SwitchNetworksArgs) ToSwitchNetworksOutputWithContext(ctx context.Context) SwitchNetworksOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchNetworksOutput)
}

// SwitchNetworksMapInput is an input type that accepts SwitchNetworksMap and SwitchNetworksMapOutput values.
// You can construct a concrete instance of `SwitchNetworksMapInput` via:
//
//	SwitchNetworksMap{ "key": SwitchNetworksArgs{...} }
type SwitchNetworksMapInput interface {
	pulumi.Input

	ToSwitchNetworksMapOutput() SwitchNetworksMapOutput
	ToSwitchNetworksMapOutputWithContext(context.Context) SwitchNetworksMapOutput
}

type SwitchNetworksMap map[string]SwitchNetworksInput

func (SwitchNetworksMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]SwitchNetworks)(nil)).Elem()
}

func (i SwitchNetworksMap) ToSwitchNetworksMapOutput() SwitchNetworksMapOutput {
	return i.ToSwitchNetworksMapOutputWithContext(context.Background())
}

func (i SwitchNetworksMap) ToSwitchNetworksMapOutputWithContext(ctx context.Context) SwitchNetworksMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchNetworksMapOutput)
}

type SwitchNetworksOutput struct{ *pulumi.OutputState }

func (SwitchNetworksOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchNetworks)(nil)).Elem()
}

func (o SwitchNetworksOutput) ToSwitchNetworksOutput() SwitchNetworksOutput {
	return o
}

func (o SwitchNetworksOutput) ToSwitchNetworksOutputWithContext(ctx context.Context) SwitchNetworksOutput {
	return o
}

// Only required for EVPN-VXLAN networks, IPv4 Virtual Gateway
func (o SwitchNetworksOutput) Gateway() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchNetworks) *string { return v.Gateway }).(pulumi.StringPtrOutput)
}

// Only required for EVPN-VXLAN networks, IPv6 Virtual Gateway
func (o SwitchNetworksOutput) Gateway6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchNetworks) *string { return v.Gateway6 }).(pulumi.StringPtrOutput)
}

// whether to stop clients to talk to each other, default is false (when enabled, a unique isolationVlanId is required). NOTE: this features requires uplink device to also a be Juniper device and `interSwitchLink` to be set
func (o SwitchNetworksOutput) Isolation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SwitchNetworks) *bool { return v.Isolation }).(pulumi.BoolPtrOutput)
}

func (o SwitchNetworksOutput) IsolationVlanId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchNetworks) *string { return v.IsolationVlanId }).(pulumi.StringPtrOutput)
}

// Optional for pure switching, required when L3 / routing features are used
func (o SwitchNetworksOutput) Subnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchNetworks) *string { return v.Subnet }).(pulumi.StringPtrOutput)
}

// Optional for pure switching, required when L3 / routing features are used
func (o SwitchNetworksOutput) Subnet6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchNetworks) *string { return v.Subnet6 }).(pulumi.StringPtrOutput)
}

func (o SwitchNetworksOutput) VlanId() pulumi.StringOutput {
	return o.ApplyT(func(v SwitchNetworks) string { return v.VlanId }).(pulumi.StringOutput)
}

type SwitchNetworksMapOutput struct{ *pulumi.OutputState }

func (SwitchNetworksMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]SwitchNetworks)(nil)).Elem()
}

func (o SwitchNetworksMapOutput) ToSwitchNetworksMapOutput() SwitchNetworksMapOutput {
	return o
}

func (o SwitchNetworksMapOutput) ToSwitchNetworksMapOutputWithContext(ctx context.Context) SwitchNetworksMapOutput {
	return o
}

func (o SwitchNetworksMapOutput) MapIndex(k pulumi.StringInput) SwitchNetworksOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) SwitchNetworks {
		return vs[0].(map[string]SwitchNetworks)[vs[1].(string)]
	}).(SwitchNetworksOutput)
}

type SwitchOobIpConfig struct {
	Gateway *string `pulumi:"gateway"`
	Ip      *string `pulumi:"ip"`
	// Used only if `subnet` is not specified in `networks`
	Netmask *string `pulumi:"netmask"`
	// Optional, the network to be used for mgmt
	Network *string `pulumi:"network"`
	// enum: `dhcp`, `static`
	Type *string `pulumi:"type"`
	// If supported on the platform. If enabled, DNS will be using this routing-instance, too
	UseMgmtVrf *bool `pulumi:"useMgmtVrf"`
	// For host-out traffic (NTP/TACPLUS/RADIUS/SYSLOG/SNMP), if alternative source network/ip is desired
	UseMgmtVrfForHostOut *bool `pulumi:"useMgmtVrfForHostOut"`
}

// SwitchOobIpConfigInput is an input type that accepts SwitchOobIpConfigArgs and SwitchOobIpConfigOutput values.
// You can construct a concrete instance of `SwitchOobIpConfigInput` via:
//
//	SwitchOobIpConfigArgs{...}
type SwitchOobIpConfigInput interface {
	pulumi.Input

	ToSwitchOobIpConfigOutput() SwitchOobIpConfigOutput
	ToSwitchOobIpConfigOutputWithContext(context.Context) SwitchOobIpConfigOutput
}

type SwitchOobIpConfigArgs struct {
	Gateway pulumi.StringPtrInput `pulumi:"gateway"`
	Ip      pulumi.StringPtrInput `pulumi:"ip"`
	// Used only if `subnet` is not specified in `networks`
	Netmask pulumi.StringPtrInput `pulumi:"netmask"`
	// Optional, the network to be used for mgmt
	Network pulumi.StringPtrInput `pulumi:"network"`
	// enum: `dhcp`, `static`
	Type pulumi.StringPtrInput `pulumi:"type"`
	// If supported on the platform. If enabled, DNS will be using this routing-instance, too
	UseMgmtVrf pulumi.BoolPtrInput `pulumi:"useMgmtVrf"`
	// For host-out traffic (NTP/TACPLUS/RADIUS/SYSLOG/SNMP), if alternative source network/ip is desired
	UseMgmtVrfForHostOut pulumi.BoolPtrInput `pulumi:"useMgmtVrfForHostOut"`
}

func (SwitchOobIpConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchOobIpConfig)(nil)).Elem()
}

func (i SwitchOobIpConfigArgs) ToSwitchOobIpConfigOutput() SwitchOobIpConfigOutput {
	return i.ToSwitchOobIpConfigOutputWithContext(context.Background())
}

func (i SwitchOobIpConfigArgs) ToSwitchOobIpConfigOutputWithContext(ctx context.Context) SwitchOobIpConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchOobIpConfigOutput)
}

func (i SwitchOobIpConfigArgs) ToSwitchOobIpConfigPtrOutput() SwitchOobIpConfigPtrOutput {
	return i.ToSwitchOobIpConfigPtrOutputWithContext(context.Background())
}

func (i SwitchOobIpConfigArgs) ToSwitchOobIpConfigPtrOutputWithContext(ctx context.Context) SwitchOobIpConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchOobIpConfigOutput).ToSwitchOobIpConfigPtrOutputWithContext(ctx)
}

// SwitchOobIpConfigPtrInput is an input type that accepts SwitchOobIpConfigArgs, SwitchOobIpConfigPtr and SwitchOobIpConfigPtrOutput values.
// You can construct a concrete instance of `SwitchOobIpConfigPtrInput` via:
//
//	        SwitchOobIpConfigArgs{...}
//
//	or:
//
//	        nil
type SwitchOobIpConfigPtrInput interface {
	pulumi.Input

	ToSwitchOobIpConfigPtrOutput() SwitchOobIpConfigPtrOutput
	ToSwitchOobIpConfigPtrOutputWithContext(context.Context) SwitchOobIpConfigPtrOutput
}

type switchOobIpConfigPtrType SwitchOobIpConfigArgs

func SwitchOobIpConfigPtr(v *SwitchOobIpConfigArgs) SwitchOobIpConfigPtrInput {
	return (*switchOobIpConfigPtrType)(v)
}

func (*switchOobIpConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchOobIpConfig)(nil)).Elem()
}

func (i *switchOobIpConfigPtrType) ToSwitchOobIpConfigPtrOutput() SwitchOobIpConfigPtrOutput {
	return i.ToSwitchOobIpConfigPtrOutputWithContext(context.Background())
}

func (i *switchOobIpConfigPtrType) ToSwitchOobIpConfigPtrOutputWithContext(ctx context.Context) SwitchOobIpConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchOobIpConfigPtrOutput)
}

type SwitchOobIpConfigOutput struct{ *pulumi.OutputState }

func (SwitchOobIpConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchOobIpConfig)(nil)).Elem()
}

func (o SwitchOobIpConfigOutput) ToSwitchOobIpConfigOutput() SwitchOobIpConfigOutput {
	return o
}

func (o SwitchOobIpConfigOutput) ToSwitchOobIpConfigOutputWithContext(ctx context.Context) SwitchOobIpConfigOutput {
	return o
}

func (o SwitchOobIpConfigOutput) ToSwitchOobIpConfigPtrOutput() SwitchOobIpConfigPtrOutput {
	return o.ToSwitchOobIpConfigPtrOutputWithContext(context.Background())
}

func (o SwitchOobIpConfigOutput) ToSwitchOobIpConfigPtrOutputWithContext(ctx context.Context) SwitchOobIpConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SwitchOobIpConfig) *SwitchOobIpConfig {
		return &v
	}).(SwitchOobIpConfigPtrOutput)
}

func (o SwitchOobIpConfigOutput) Gateway() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchOobIpConfig) *string { return v.Gateway }).(pulumi.StringPtrOutput)
}

func (o SwitchOobIpConfigOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchOobIpConfig) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

// Used only if `subnet` is not specified in `networks`
func (o SwitchOobIpConfigOutput) Netmask() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchOobIpConfig) *string { return v.Netmask }).(pulumi.StringPtrOutput)
}

// Optional, the network to be used for mgmt
func (o SwitchOobIpConfigOutput) Network() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchOobIpConfig) *string { return v.Network }).(pulumi.StringPtrOutput)
}

// enum: `dhcp`, `static`
func (o SwitchOobIpConfigOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchOobIpConfig) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// If supported on the platform. If enabled, DNS will be using this routing-instance, too
func (o SwitchOobIpConfigOutput) UseMgmtVrf() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SwitchOobIpConfig) *bool { return v.UseMgmtVrf }).(pulumi.BoolPtrOutput)
}

// For host-out traffic (NTP/TACPLUS/RADIUS/SYSLOG/SNMP), if alternative source network/ip is desired
func (o SwitchOobIpConfigOutput) UseMgmtVrfForHostOut() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SwitchOobIpConfig) *bool { return v.UseMgmtVrfForHostOut }).(pulumi.BoolPtrOutput)
}

type SwitchOobIpConfigPtrOutput struct{ *pulumi.OutputState }

func (SwitchOobIpConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchOobIpConfig)(nil)).Elem()
}

func (o SwitchOobIpConfigPtrOutput) ToSwitchOobIpConfigPtrOutput() SwitchOobIpConfigPtrOutput {
	return o
}

func (o SwitchOobIpConfigPtrOutput) ToSwitchOobIpConfigPtrOutputWithContext(ctx context.Context) SwitchOobIpConfigPtrOutput {
	return o
}

func (o SwitchOobIpConfigPtrOutput) Elem() SwitchOobIpConfigOutput {
	return o.ApplyT(func(v *SwitchOobIpConfig) SwitchOobIpConfig {
		if v != nil {
			return *v
		}
		var ret SwitchOobIpConfig
		return ret
	}).(SwitchOobIpConfigOutput)
}

func (o SwitchOobIpConfigPtrOutput) Gateway() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchOobIpConfig) *string {
		if v == nil {
			return nil
		}
		return v.Gateway
	}).(pulumi.StringPtrOutput)
}

func (o SwitchOobIpConfigPtrOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchOobIpConfig) *string {
		if v == nil {
			return nil
		}
		return v.Ip
	}).(pulumi.StringPtrOutput)
}

// Used only if `subnet` is not specified in `networks`
func (o SwitchOobIpConfigPtrOutput) Netmask() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchOobIpConfig) *string {
		if v == nil {
			return nil
		}
		return v.Netmask
	}).(pulumi.StringPtrOutput)
}

// Optional, the network to be used for mgmt
func (o SwitchOobIpConfigPtrOutput) Network() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchOobIpConfig) *string {
		if v == nil {
			return nil
		}
		return v.Network
	}).(pulumi.StringPtrOutput)
}

// enum: `dhcp`, `static`
func (o SwitchOobIpConfigPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchOobIpConfig) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// If supported on the platform. If enabled, DNS will be using this routing-instance, too
func (o SwitchOobIpConfigPtrOutput) UseMgmtVrf() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SwitchOobIpConfig) *bool {
		if v == nil {
			return nil
		}
		return v.UseMgmtVrf
	}).(pulumi.BoolPtrOutput)
}

// For host-out traffic (NTP/TACPLUS/RADIUS/SYSLOG/SNMP), if alternative source network/ip is desired
func (o SwitchOobIpConfigPtrOutput) UseMgmtVrfForHostOut() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SwitchOobIpConfig) *bool {
		if v == nil {
			return nil
		}
		return v.UseMgmtVrfForHostOut
	}).(pulumi.BoolPtrOutput)
}

type SwitchOspfAreas struct {
	IncludeLoopback *bool                              `pulumi:"includeLoopback"`
	Networks        map[string]SwitchOspfAreasNetworks `pulumi:"networks"`
	// OSPF type. enum: `default`, `nssa`, `stub`
	Type *string `pulumi:"type"`
}

// SwitchOspfAreasInput is an input type that accepts SwitchOspfAreasArgs and SwitchOspfAreasOutput values.
// You can construct a concrete instance of `SwitchOspfAreasInput` via:
//
//	SwitchOspfAreasArgs{...}
type SwitchOspfAreasInput interface {
	pulumi.Input

	ToSwitchOspfAreasOutput() SwitchOspfAreasOutput
	ToSwitchOspfAreasOutputWithContext(context.Context) SwitchOspfAreasOutput
}

type SwitchOspfAreasArgs struct {
	IncludeLoopback pulumi.BoolPtrInput             `pulumi:"includeLoopback"`
	Networks        SwitchOspfAreasNetworksMapInput `pulumi:"networks"`
	// OSPF type. enum: `default`, `nssa`, `stub`
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (SwitchOspfAreasArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchOspfAreas)(nil)).Elem()
}

func (i SwitchOspfAreasArgs) ToSwitchOspfAreasOutput() SwitchOspfAreasOutput {
	return i.ToSwitchOspfAreasOutputWithContext(context.Background())
}

func (i SwitchOspfAreasArgs) ToSwitchOspfAreasOutputWithContext(ctx context.Context) SwitchOspfAreasOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchOspfAreasOutput)
}

// SwitchOspfAreasMapInput is an input type that accepts SwitchOspfAreasMap and SwitchOspfAreasMapOutput values.
// You can construct a concrete instance of `SwitchOspfAreasMapInput` via:
//
//	SwitchOspfAreasMap{ "key": SwitchOspfAreasArgs{...} }
type SwitchOspfAreasMapInput interface {
	pulumi.Input

	ToSwitchOspfAreasMapOutput() SwitchOspfAreasMapOutput
	ToSwitchOspfAreasMapOutputWithContext(context.Context) SwitchOspfAreasMapOutput
}

type SwitchOspfAreasMap map[string]SwitchOspfAreasInput

func (SwitchOspfAreasMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]SwitchOspfAreas)(nil)).Elem()
}

func (i SwitchOspfAreasMap) ToSwitchOspfAreasMapOutput() SwitchOspfAreasMapOutput {
	return i.ToSwitchOspfAreasMapOutputWithContext(context.Background())
}

func (i SwitchOspfAreasMap) ToSwitchOspfAreasMapOutputWithContext(ctx context.Context) SwitchOspfAreasMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchOspfAreasMapOutput)
}

type SwitchOspfAreasOutput struct{ *pulumi.OutputState }

func (SwitchOspfAreasOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchOspfAreas)(nil)).Elem()
}

func (o SwitchOspfAreasOutput) ToSwitchOspfAreasOutput() SwitchOspfAreasOutput {
	return o
}

func (o SwitchOspfAreasOutput) ToSwitchOspfAreasOutputWithContext(ctx context.Context) SwitchOspfAreasOutput {
	return o
}

func (o SwitchOspfAreasOutput) IncludeLoopback() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SwitchOspfAreas) *bool { return v.IncludeLoopback }).(pulumi.BoolPtrOutput)
}

func (o SwitchOspfAreasOutput) Networks() SwitchOspfAreasNetworksMapOutput {
	return o.ApplyT(func(v SwitchOspfAreas) map[string]SwitchOspfAreasNetworks { return v.Networks }).(SwitchOspfAreasNetworksMapOutput)
}

// OSPF type. enum: `default`, `nssa`, `stub`
func (o SwitchOspfAreasOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchOspfAreas) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type SwitchOspfAreasMapOutput struct{ *pulumi.OutputState }

func (SwitchOspfAreasMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]SwitchOspfAreas)(nil)).Elem()
}

func (o SwitchOspfAreasMapOutput) ToSwitchOspfAreasMapOutput() SwitchOspfAreasMapOutput {
	return o
}

func (o SwitchOspfAreasMapOutput) ToSwitchOspfAreasMapOutputWithContext(ctx context.Context) SwitchOspfAreasMapOutput {
	return o
}

func (o SwitchOspfAreasMapOutput) MapIndex(k pulumi.StringInput) SwitchOspfAreasOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) SwitchOspfAreas {
		return vs[0].(map[string]SwitchOspfAreas)[vs[1].(string)]
	}).(SwitchOspfAreasOutput)
}

type SwitchOspfAreasNetworks struct {
	// Required if `authType`==`md5`. Property key is the key number
	AuthKeys map[string]string `pulumi:"authKeys"`
	// Required if `authType`==`password`, the password, max length is 8
	AuthPassword *string `pulumi:"authPassword"`
	// auth type. enum: `md5`, `none`, `password`
	AuthType           *string `pulumi:"authType"`
	BfdMinimumInterval *int    `pulumi:"bfdMinimumInterval"`
	DeadInterval       *int    `pulumi:"deadInterval"`
	ExportPolicy       *string `pulumi:"exportPolicy"`
	HelloInterval      *int    `pulumi:"helloInterval"`
	ImportPolicy       *string `pulumi:"importPolicy"`
	// interface type (nbma = non-broadcast multi-access). enum: `broadcast`, `nbma`, `p2mp`, `p2p`
	InterfaceType *string `pulumi:"interfaceType"`
	Metric        *int    `pulumi:"metric"`
	// By default, we'll re-advertise all learned OSPF routes toward overlay
	NoReadvertiseToOverlay *bool `pulumi:"noReadvertiseToOverlay"`
	// Whether to send OSPF-Hello
	Passive *bool `pulumi:"passive"`
}

// SwitchOspfAreasNetworksInput is an input type that accepts SwitchOspfAreasNetworksArgs and SwitchOspfAreasNetworksOutput values.
// You can construct a concrete instance of `SwitchOspfAreasNetworksInput` via:
//
//	SwitchOspfAreasNetworksArgs{...}
type SwitchOspfAreasNetworksInput interface {
	pulumi.Input

	ToSwitchOspfAreasNetworksOutput() SwitchOspfAreasNetworksOutput
	ToSwitchOspfAreasNetworksOutputWithContext(context.Context) SwitchOspfAreasNetworksOutput
}

type SwitchOspfAreasNetworksArgs struct {
	// Required if `authType`==`md5`. Property key is the key number
	AuthKeys pulumi.StringMapInput `pulumi:"authKeys"`
	// Required if `authType`==`password`, the password, max length is 8
	AuthPassword pulumi.StringPtrInput `pulumi:"authPassword"`
	// auth type. enum: `md5`, `none`, `password`
	AuthType           pulumi.StringPtrInput `pulumi:"authType"`
	BfdMinimumInterval pulumi.IntPtrInput    `pulumi:"bfdMinimumInterval"`
	DeadInterval       pulumi.IntPtrInput    `pulumi:"deadInterval"`
	ExportPolicy       pulumi.StringPtrInput `pulumi:"exportPolicy"`
	HelloInterval      pulumi.IntPtrInput    `pulumi:"helloInterval"`
	ImportPolicy       pulumi.StringPtrInput `pulumi:"importPolicy"`
	// interface type (nbma = non-broadcast multi-access). enum: `broadcast`, `nbma`, `p2mp`, `p2p`
	InterfaceType pulumi.StringPtrInput `pulumi:"interfaceType"`
	Metric        pulumi.IntPtrInput    `pulumi:"metric"`
	// By default, we'll re-advertise all learned OSPF routes toward overlay
	NoReadvertiseToOverlay pulumi.BoolPtrInput `pulumi:"noReadvertiseToOverlay"`
	// Whether to send OSPF-Hello
	Passive pulumi.BoolPtrInput `pulumi:"passive"`
}

func (SwitchOspfAreasNetworksArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchOspfAreasNetworks)(nil)).Elem()
}

func (i SwitchOspfAreasNetworksArgs) ToSwitchOspfAreasNetworksOutput() SwitchOspfAreasNetworksOutput {
	return i.ToSwitchOspfAreasNetworksOutputWithContext(context.Background())
}

func (i SwitchOspfAreasNetworksArgs) ToSwitchOspfAreasNetworksOutputWithContext(ctx context.Context) SwitchOspfAreasNetworksOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchOspfAreasNetworksOutput)
}

// SwitchOspfAreasNetworksMapInput is an input type that accepts SwitchOspfAreasNetworksMap and SwitchOspfAreasNetworksMapOutput values.
// You can construct a concrete instance of `SwitchOspfAreasNetworksMapInput` via:
//
//	SwitchOspfAreasNetworksMap{ "key": SwitchOspfAreasNetworksArgs{...} }
type SwitchOspfAreasNetworksMapInput interface {
	pulumi.Input

	ToSwitchOspfAreasNetworksMapOutput() SwitchOspfAreasNetworksMapOutput
	ToSwitchOspfAreasNetworksMapOutputWithContext(context.Context) SwitchOspfAreasNetworksMapOutput
}

type SwitchOspfAreasNetworksMap map[string]SwitchOspfAreasNetworksInput

func (SwitchOspfAreasNetworksMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]SwitchOspfAreasNetworks)(nil)).Elem()
}

func (i SwitchOspfAreasNetworksMap) ToSwitchOspfAreasNetworksMapOutput() SwitchOspfAreasNetworksMapOutput {
	return i.ToSwitchOspfAreasNetworksMapOutputWithContext(context.Background())
}

func (i SwitchOspfAreasNetworksMap) ToSwitchOspfAreasNetworksMapOutputWithContext(ctx context.Context) SwitchOspfAreasNetworksMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchOspfAreasNetworksMapOutput)
}

type SwitchOspfAreasNetworksOutput struct{ *pulumi.OutputState }

func (SwitchOspfAreasNetworksOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchOspfAreasNetworks)(nil)).Elem()
}

func (o SwitchOspfAreasNetworksOutput) ToSwitchOspfAreasNetworksOutput() SwitchOspfAreasNetworksOutput {
	return o
}

func (o SwitchOspfAreasNetworksOutput) ToSwitchOspfAreasNetworksOutputWithContext(ctx context.Context) SwitchOspfAreasNetworksOutput {
	return o
}

// Required if `authType`==`md5`. Property key is the key number
func (o SwitchOspfAreasNetworksOutput) AuthKeys() pulumi.StringMapOutput {
	return o.ApplyT(func(v SwitchOspfAreasNetworks) map[string]string { return v.AuthKeys }).(pulumi.StringMapOutput)
}

// Required if `authType`==`password`, the password, max length is 8
func (o SwitchOspfAreasNetworksOutput) AuthPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchOspfAreasNetworks) *string { return v.AuthPassword }).(pulumi.StringPtrOutput)
}

// auth type. enum: `md5`, `none`, `password`
func (o SwitchOspfAreasNetworksOutput) AuthType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchOspfAreasNetworks) *string { return v.AuthType }).(pulumi.StringPtrOutput)
}

func (o SwitchOspfAreasNetworksOutput) BfdMinimumInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchOspfAreasNetworks) *int { return v.BfdMinimumInterval }).(pulumi.IntPtrOutput)
}

func (o SwitchOspfAreasNetworksOutput) DeadInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchOspfAreasNetworks) *int { return v.DeadInterval }).(pulumi.IntPtrOutput)
}

func (o SwitchOspfAreasNetworksOutput) ExportPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchOspfAreasNetworks) *string { return v.ExportPolicy }).(pulumi.StringPtrOutput)
}

func (o SwitchOspfAreasNetworksOutput) HelloInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchOspfAreasNetworks) *int { return v.HelloInterval }).(pulumi.IntPtrOutput)
}

func (o SwitchOspfAreasNetworksOutput) ImportPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchOspfAreasNetworks) *string { return v.ImportPolicy }).(pulumi.StringPtrOutput)
}

// interface type (nbma = non-broadcast multi-access). enum: `broadcast`, `nbma`, `p2mp`, `p2p`
func (o SwitchOspfAreasNetworksOutput) InterfaceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchOspfAreasNetworks) *string { return v.InterfaceType }).(pulumi.StringPtrOutput)
}

func (o SwitchOspfAreasNetworksOutput) Metric() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchOspfAreasNetworks) *int { return v.Metric }).(pulumi.IntPtrOutput)
}

// By default, we'll re-advertise all learned OSPF routes toward overlay
func (o SwitchOspfAreasNetworksOutput) NoReadvertiseToOverlay() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SwitchOspfAreasNetworks) *bool { return v.NoReadvertiseToOverlay }).(pulumi.BoolPtrOutput)
}

// Whether to send OSPF-Hello
func (o SwitchOspfAreasNetworksOutput) Passive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SwitchOspfAreasNetworks) *bool { return v.Passive }).(pulumi.BoolPtrOutput)
}

type SwitchOspfAreasNetworksMapOutput struct{ *pulumi.OutputState }

func (SwitchOspfAreasNetworksMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]SwitchOspfAreasNetworks)(nil)).Elem()
}

func (o SwitchOspfAreasNetworksMapOutput) ToSwitchOspfAreasNetworksMapOutput() SwitchOspfAreasNetworksMapOutput {
	return o
}

func (o SwitchOspfAreasNetworksMapOutput) ToSwitchOspfAreasNetworksMapOutputWithContext(ctx context.Context) SwitchOspfAreasNetworksMapOutput {
	return o
}

func (o SwitchOspfAreasNetworksMapOutput) MapIndex(k pulumi.StringInput) SwitchOspfAreasNetworksOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) SwitchOspfAreasNetworks {
		return vs[0].(map[string]SwitchOspfAreasNetworks)[vs[1].(string)]
	}).(SwitchOspfAreasNetworksOutput)
}

type SwitchOtherIpConfigs struct {
	// For EVPN, if anycast is desired
	EvpnAnycast *bool `pulumi:"evpnAnycast"`
	// Required if `type`==`static`
	Ip *string `pulumi:"ip"`
	// Required if `type6`==`static`
	Ip6 *string `pulumi:"ip6"`
	// Optional, `subnet` from `network` definition will be used if defined
	Netmask *string `pulumi:"netmask"`
	// Optional, `subnet` from `network` definition will be used if defined
	Netmask6 *string `pulumi:"netmask6"`
	// enum: `dhcp`, `static`
	Type *string `pulumi:"type"`
	// enum: `autoconf`, `dhcp`, `disabled`, `static`
	Type6 *string `pulumi:"type6"`
}

// SwitchOtherIpConfigsInput is an input type that accepts SwitchOtherIpConfigsArgs and SwitchOtherIpConfigsOutput values.
// You can construct a concrete instance of `SwitchOtherIpConfigsInput` via:
//
//	SwitchOtherIpConfigsArgs{...}
type SwitchOtherIpConfigsInput interface {
	pulumi.Input

	ToSwitchOtherIpConfigsOutput() SwitchOtherIpConfigsOutput
	ToSwitchOtherIpConfigsOutputWithContext(context.Context) SwitchOtherIpConfigsOutput
}

type SwitchOtherIpConfigsArgs struct {
	// For EVPN, if anycast is desired
	EvpnAnycast pulumi.BoolPtrInput `pulumi:"evpnAnycast"`
	// Required if `type`==`static`
	Ip pulumi.StringPtrInput `pulumi:"ip"`
	// Required if `type6`==`static`
	Ip6 pulumi.StringPtrInput `pulumi:"ip6"`
	// Optional, `subnet` from `network` definition will be used if defined
	Netmask pulumi.StringPtrInput `pulumi:"netmask"`
	// Optional, `subnet` from `network` definition will be used if defined
	Netmask6 pulumi.StringPtrInput `pulumi:"netmask6"`
	// enum: `dhcp`, `static`
	Type pulumi.StringPtrInput `pulumi:"type"`
	// enum: `autoconf`, `dhcp`, `disabled`, `static`
	Type6 pulumi.StringPtrInput `pulumi:"type6"`
}

func (SwitchOtherIpConfigsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchOtherIpConfigs)(nil)).Elem()
}

func (i SwitchOtherIpConfigsArgs) ToSwitchOtherIpConfigsOutput() SwitchOtherIpConfigsOutput {
	return i.ToSwitchOtherIpConfigsOutputWithContext(context.Background())
}

func (i SwitchOtherIpConfigsArgs) ToSwitchOtherIpConfigsOutputWithContext(ctx context.Context) SwitchOtherIpConfigsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchOtherIpConfigsOutput)
}

// SwitchOtherIpConfigsMapInput is an input type that accepts SwitchOtherIpConfigsMap and SwitchOtherIpConfigsMapOutput values.
// You can construct a concrete instance of `SwitchOtherIpConfigsMapInput` via:
//
//	SwitchOtherIpConfigsMap{ "key": SwitchOtherIpConfigsArgs{...} }
type SwitchOtherIpConfigsMapInput interface {
	pulumi.Input

	ToSwitchOtherIpConfigsMapOutput() SwitchOtherIpConfigsMapOutput
	ToSwitchOtherIpConfigsMapOutputWithContext(context.Context) SwitchOtherIpConfigsMapOutput
}

type SwitchOtherIpConfigsMap map[string]SwitchOtherIpConfigsInput

func (SwitchOtherIpConfigsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]SwitchOtherIpConfigs)(nil)).Elem()
}

func (i SwitchOtherIpConfigsMap) ToSwitchOtherIpConfigsMapOutput() SwitchOtherIpConfigsMapOutput {
	return i.ToSwitchOtherIpConfigsMapOutputWithContext(context.Background())
}

func (i SwitchOtherIpConfigsMap) ToSwitchOtherIpConfigsMapOutputWithContext(ctx context.Context) SwitchOtherIpConfigsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchOtherIpConfigsMapOutput)
}

type SwitchOtherIpConfigsOutput struct{ *pulumi.OutputState }

func (SwitchOtherIpConfigsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchOtherIpConfigs)(nil)).Elem()
}

func (o SwitchOtherIpConfigsOutput) ToSwitchOtherIpConfigsOutput() SwitchOtherIpConfigsOutput {
	return o
}

func (o SwitchOtherIpConfigsOutput) ToSwitchOtherIpConfigsOutputWithContext(ctx context.Context) SwitchOtherIpConfigsOutput {
	return o
}

// For EVPN, if anycast is desired
func (o SwitchOtherIpConfigsOutput) EvpnAnycast() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SwitchOtherIpConfigs) *bool { return v.EvpnAnycast }).(pulumi.BoolPtrOutput)
}

// Required if `type`==`static`
func (o SwitchOtherIpConfigsOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchOtherIpConfigs) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

// Required if `type6`==`static`
func (o SwitchOtherIpConfigsOutput) Ip6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchOtherIpConfigs) *string { return v.Ip6 }).(pulumi.StringPtrOutput)
}

// Optional, `subnet` from `network` definition will be used if defined
func (o SwitchOtherIpConfigsOutput) Netmask() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchOtherIpConfigs) *string { return v.Netmask }).(pulumi.StringPtrOutput)
}

// Optional, `subnet` from `network` definition will be used if defined
func (o SwitchOtherIpConfigsOutput) Netmask6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchOtherIpConfigs) *string { return v.Netmask6 }).(pulumi.StringPtrOutput)
}

// enum: `dhcp`, `static`
func (o SwitchOtherIpConfigsOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchOtherIpConfigs) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// enum: `autoconf`, `dhcp`, `disabled`, `static`
func (o SwitchOtherIpConfigsOutput) Type6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchOtherIpConfigs) *string { return v.Type6 }).(pulumi.StringPtrOutput)
}

type SwitchOtherIpConfigsMapOutput struct{ *pulumi.OutputState }

func (SwitchOtherIpConfigsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]SwitchOtherIpConfigs)(nil)).Elem()
}

func (o SwitchOtherIpConfigsMapOutput) ToSwitchOtherIpConfigsMapOutput() SwitchOtherIpConfigsMapOutput {
	return o
}

func (o SwitchOtherIpConfigsMapOutput) ToSwitchOtherIpConfigsMapOutputWithContext(ctx context.Context) SwitchOtherIpConfigsMapOutput {
	return o
}

func (o SwitchOtherIpConfigsMapOutput) MapIndex(k pulumi.StringInput) SwitchOtherIpConfigsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) SwitchOtherIpConfigs {
		return vs[0].(map[string]SwitchOtherIpConfigs)[vs[1].(string)]
	}).(SwitchOtherIpConfigsOutput)
}

type SwitchPortConfig struct {
	// To disable LACP support for the AE interface
	AeDisableLacp *bool `pulumi:"aeDisableLacp"`
	// Users could force to use the designated AE name
	AeIdx *int `pulumi:"aeIdx"`
	// To use fast timeout
	AeLacpSlow *bool `pulumi:"aeLacpSlow"`
	Aggregated *bool `pulumi:"aggregated"`
	// To generate port up/down alarm
	Critical    *bool   `pulumi:"critical"`
	Description *string `pulumi:"description"`
	// If `speed` and `duplex` are specified, whether to disable autonegotiation
	DisableAutoneg *bool `pulumi:"disableAutoneg"`
	// enum: `auto`, `full`, `half`
	Duplex *string `pulumi:"duplex"`
	// Enable dynamic usage for this port. Set to `dynamic` to enable.
	DynamicUsage *string `pulumi:"dynamicUsage"`
	Esilag       *bool   `pulumi:"esilag"`
	// Media maximum transmission unit (MTU) is the largest data unit that can be forwarded without fragmentation
	Mtu *int `pulumi:"mtu"`
	// Prevent helpdesk to override the port config
	NoLocalOverwrite *bool `pulumi:"noLocalOverwrite"`
	PoeDisabled      *bool `pulumi:"poeDisabled"`
	// enum: `100m`, `10m`, `1g`, `2.5g`, `5g`, `10g`, `25g`, `40g`, `100g`,`auto`
	Speed *string `pulumi:"speed"`
	// Port usage name. If EVPN is used, use `evpnUplink`or `evpnDownlink`
	Usage string `pulumi:"usage"`
}

// SwitchPortConfigInput is an input type that accepts SwitchPortConfigArgs and SwitchPortConfigOutput values.
// You can construct a concrete instance of `SwitchPortConfigInput` via:
//
//	SwitchPortConfigArgs{...}
type SwitchPortConfigInput interface {
	pulumi.Input

	ToSwitchPortConfigOutput() SwitchPortConfigOutput
	ToSwitchPortConfigOutputWithContext(context.Context) SwitchPortConfigOutput
}

type SwitchPortConfigArgs struct {
	// To disable LACP support for the AE interface
	AeDisableLacp pulumi.BoolPtrInput `pulumi:"aeDisableLacp"`
	// Users could force to use the designated AE name
	AeIdx pulumi.IntPtrInput `pulumi:"aeIdx"`
	// To use fast timeout
	AeLacpSlow pulumi.BoolPtrInput `pulumi:"aeLacpSlow"`
	Aggregated pulumi.BoolPtrInput `pulumi:"aggregated"`
	// To generate port up/down alarm
	Critical    pulumi.BoolPtrInput   `pulumi:"critical"`
	Description pulumi.StringPtrInput `pulumi:"description"`
	// If `speed` and `duplex` are specified, whether to disable autonegotiation
	DisableAutoneg pulumi.BoolPtrInput `pulumi:"disableAutoneg"`
	// enum: `auto`, `full`, `half`
	Duplex pulumi.StringPtrInput `pulumi:"duplex"`
	// Enable dynamic usage for this port. Set to `dynamic` to enable.
	DynamicUsage pulumi.StringPtrInput `pulumi:"dynamicUsage"`
	Esilag       pulumi.BoolPtrInput   `pulumi:"esilag"`
	// Media maximum transmission unit (MTU) is the largest data unit that can be forwarded without fragmentation
	Mtu pulumi.IntPtrInput `pulumi:"mtu"`
	// Prevent helpdesk to override the port config
	NoLocalOverwrite pulumi.BoolPtrInput `pulumi:"noLocalOverwrite"`
	PoeDisabled      pulumi.BoolPtrInput `pulumi:"poeDisabled"`
	// enum: `100m`, `10m`, `1g`, `2.5g`, `5g`, `10g`, `25g`, `40g`, `100g`,`auto`
	Speed pulumi.StringPtrInput `pulumi:"speed"`
	// Port usage name. If EVPN is used, use `evpnUplink`or `evpnDownlink`
	Usage pulumi.StringInput `pulumi:"usage"`
}

func (SwitchPortConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchPortConfig)(nil)).Elem()
}

func (i SwitchPortConfigArgs) ToSwitchPortConfigOutput() SwitchPortConfigOutput {
	return i.ToSwitchPortConfigOutputWithContext(context.Background())
}

func (i SwitchPortConfigArgs) ToSwitchPortConfigOutputWithContext(ctx context.Context) SwitchPortConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchPortConfigOutput)
}

// SwitchPortConfigMapInput is an input type that accepts SwitchPortConfigMap and SwitchPortConfigMapOutput values.
// You can construct a concrete instance of `SwitchPortConfigMapInput` via:
//
//	SwitchPortConfigMap{ "key": SwitchPortConfigArgs{...} }
type SwitchPortConfigMapInput interface {
	pulumi.Input

	ToSwitchPortConfigMapOutput() SwitchPortConfigMapOutput
	ToSwitchPortConfigMapOutputWithContext(context.Context) SwitchPortConfigMapOutput
}

type SwitchPortConfigMap map[string]SwitchPortConfigInput

func (SwitchPortConfigMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]SwitchPortConfig)(nil)).Elem()
}

func (i SwitchPortConfigMap) ToSwitchPortConfigMapOutput() SwitchPortConfigMapOutput {
	return i.ToSwitchPortConfigMapOutputWithContext(context.Background())
}

func (i SwitchPortConfigMap) ToSwitchPortConfigMapOutputWithContext(ctx context.Context) SwitchPortConfigMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchPortConfigMapOutput)
}

type SwitchPortConfigOutput struct{ *pulumi.OutputState }

func (SwitchPortConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchPortConfig)(nil)).Elem()
}

func (o SwitchPortConfigOutput) ToSwitchPortConfigOutput() SwitchPortConfigOutput {
	return o
}

func (o SwitchPortConfigOutput) ToSwitchPortConfigOutputWithContext(ctx context.Context) SwitchPortConfigOutput {
	return o
}

// To disable LACP support for the AE interface
func (o SwitchPortConfigOutput) AeDisableLacp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SwitchPortConfig) *bool { return v.AeDisableLacp }).(pulumi.BoolPtrOutput)
}

// Users could force to use the designated AE name
func (o SwitchPortConfigOutput) AeIdx() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchPortConfig) *int { return v.AeIdx }).(pulumi.IntPtrOutput)
}

// To use fast timeout
func (o SwitchPortConfigOutput) AeLacpSlow() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SwitchPortConfig) *bool { return v.AeLacpSlow }).(pulumi.BoolPtrOutput)
}

func (o SwitchPortConfigOutput) Aggregated() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SwitchPortConfig) *bool { return v.Aggregated }).(pulumi.BoolPtrOutput)
}

// To generate port up/down alarm
func (o SwitchPortConfigOutput) Critical() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SwitchPortConfig) *bool { return v.Critical }).(pulumi.BoolPtrOutput)
}

func (o SwitchPortConfigOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchPortConfig) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// If `speed` and `duplex` are specified, whether to disable autonegotiation
func (o SwitchPortConfigOutput) DisableAutoneg() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SwitchPortConfig) *bool { return v.DisableAutoneg }).(pulumi.BoolPtrOutput)
}

// enum: `auto`, `full`, `half`
func (o SwitchPortConfigOutput) Duplex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchPortConfig) *string { return v.Duplex }).(pulumi.StringPtrOutput)
}

// Enable dynamic usage for this port. Set to `dynamic` to enable.
func (o SwitchPortConfigOutput) DynamicUsage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchPortConfig) *string { return v.DynamicUsage }).(pulumi.StringPtrOutput)
}

func (o SwitchPortConfigOutput) Esilag() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SwitchPortConfig) *bool { return v.Esilag }).(pulumi.BoolPtrOutput)
}

// Media maximum transmission unit (MTU) is the largest data unit that can be forwarded without fragmentation
func (o SwitchPortConfigOutput) Mtu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchPortConfig) *int { return v.Mtu }).(pulumi.IntPtrOutput)
}

// Prevent helpdesk to override the port config
func (o SwitchPortConfigOutput) NoLocalOverwrite() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SwitchPortConfig) *bool { return v.NoLocalOverwrite }).(pulumi.BoolPtrOutput)
}

func (o SwitchPortConfigOutput) PoeDisabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SwitchPortConfig) *bool { return v.PoeDisabled }).(pulumi.BoolPtrOutput)
}

// enum: `100m`, `10m`, `1g`, `2.5g`, `5g`, `10g`, `25g`, `40g`, `100g`,`auto`
func (o SwitchPortConfigOutput) Speed() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchPortConfig) *string { return v.Speed }).(pulumi.StringPtrOutput)
}

// Port usage name. If EVPN is used, use `evpnUplink`or `evpnDownlink`
func (o SwitchPortConfigOutput) Usage() pulumi.StringOutput {
	return o.ApplyT(func(v SwitchPortConfig) string { return v.Usage }).(pulumi.StringOutput)
}

type SwitchPortConfigMapOutput struct{ *pulumi.OutputState }

func (SwitchPortConfigMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]SwitchPortConfig)(nil)).Elem()
}

func (o SwitchPortConfigMapOutput) ToSwitchPortConfigMapOutput() SwitchPortConfigMapOutput {
	return o
}

func (o SwitchPortConfigMapOutput) ToSwitchPortConfigMapOutputWithContext(ctx context.Context) SwitchPortConfigMapOutput {
	return o
}

func (o SwitchPortConfigMapOutput) MapIndex(k pulumi.StringInput) SwitchPortConfigOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) SwitchPortConfig {
		return vs[0].(map[string]SwitchPortConfig)[vs[1].(string)]
	}).(SwitchPortConfigOutput)
}

type SwitchPortMirroring struct {
	// At least one of the `inputPortIdsIngress`, `inputPortIdsEgress` or ` inputNetworksIngress  ` should be specified
	InputNetworksIngresses []string `pulumi:"inputNetworksIngresses"`
	// At least one of the `inputPortIdsIngress`, `inputPortIdsEgress` or ` inputNetworksIngress  ` should be specified
	InputPortIdsEgresses []string `pulumi:"inputPortIdsEgresses"`
	// At least one of the `inputPortIdsIngress`, `inputPortIdsEgress` or ` inputNetworksIngress  ` should be specified
	InputPortIdsIngresses []string `pulumi:"inputPortIdsIngresses"`
	// Exactly one of the `outputPortId` or `outputNetwork` should be provided
	OutputNetwork *string `pulumi:"outputNetwork"`
	// Exactly one of the `outputPortId` or `outputNetwork` should be provided
	OutputPortId *string `pulumi:"outputPortId"`
}

// SwitchPortMirroringInput is an input type that accepts SwitchPortMirroringArgs and SwitchPortMirroringOutput values.
// You can construct a concrete instance of `SwitchPortMirroringInput` via:
//
//	SwitchPortMirroringArgs{...}
type SwitchPortMirroringInput interface {
	pulumi.Input

	ToSwitchPortMirroringOutput() SwitchPortMirroringOutput
	ToSwitchPortMirroringOutputWithContext(context.Context) SwitchPortMirroringOutput
}

type SwitchPortMirroringArgs struct {
	// At least one of the `inputPortIdsIngress`, `inputPortIdsEgress` or ` inputNetworksIngress  ` should be specified
	InputNetworksIngresses pulumi.StringArrayInput `pulumi:"inputNetworksIngresses"`
	// At least one of the `inputPortIdsIngress`, `inputPortIdsEgress` or ` inputNetworksIngress  ` should be specified
	InputPortIdsEgresses pulumi.StringArrayInput `pulumi:"inputPortIdsEgresses"`
	// At least one of the `inputPortIdsIngress`, `inputPortIdsEgress` or ` inputNetworksIngress  ` should be specified
	InputPortIdsIngresses pulumi.StringArrayInput `pulumi:"inputPortIdsIngresses"`
	// Exactly one of the `outputPortId` or `outputNetwork` should be provided
	OutputNetwork pulumi.StringPtrInput `pulumi:"outputNetwork"`
	// Exactly one of the `outputPortId` or `outputNetwork` should be provided
	OutputPortId pulumi.StringPtrInput `pulumi:"outputPortId"`
}

func (SwitchPortMirroringArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchPortMirroring)(nil)).Elem()
}

func (i SwitchPortMirroringArgs) ToSwitchPortMirroringOutput() SwitchPortMirroringOutput {
	return i.ToSwitchPortMirroringOutputWithContext(context.Background())
}

func (i SwitchPortMirroringArgs) ToSwitchPortMirroringOutputWithContext(ctx context.Context) SwitchPortMirroringOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchPortMirroringOutput)
}

// SwitchPortMirroringMapInput is an input type that accepts SwitchPortMirroringMap and SwitchPortMirroringMapOutput values.
// You can construct a concrete instance of `SwitchPortMirroringMapInput` via:
//
//	SwitchPortMirroringMap{ "key": SwitchPortMirroringArgs{...} }
type SwitchPortMirroringMapInput interface {
	pulumi.Input

	ToSwitchPortMirroringMapOutput() SwitchPortMirroringMapOutput
	ToSwitchPortMirroringMapOutputWithContext(context.Context) SwitchPortMirroringMapOutput
}

type SwitchPortMirroringMap map[string]SwitchPortMirroringInput

func (SwitchPortMirroringMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]SwitchPortMirroring)(nil)).Elem()
}

func (i SwitchPortMirroringMap) ToSwitchPortMirroringMapOutput() SwitchPortMirroringMapOutput {
	return i.ToSwitchPortMirroringMapOutputWithContext(context.Background())
}

func (i SwitchPortMirroringMap) ToSwitchPortMirroringMapOutputWithContext(ctx context.Context) SwitchPortMirroringMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchPortMirroringMapOutput)
}

type SwitchPortMirroringOutput struct{ *pulumi.OutputState }

func (SwitchPortMirroringOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchPortMirroring)(nil)).Elem()
}

func (o SwitchPortMirroringOutput) ToSwitchPortMirroringOutput() SwitchPortMirroringOutput {
	return o
}

func (o SwitchPortMirroringOutput) ToSwitchPortMirroringOutputWithContext(ctx context.Context) SwitchPortMirroringOutput {
	return o
}

// At least one of the `inputPortIdsIngress`, `inputPortIdsEgress` or ` inputNetworksIngress  ` should be specified
func (o SwitchPortMirroringOutput) InputNetworksIngresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SwitchPortMirroring) []string { return v.InputNetworksIngresses }).(pulumi.StringArrayOutput)
}

// At least one of the `inputPortIdsIngress`, `inputPortIdsEgress` or ` inputNetworksIngress  ` should be specified
func (o SwitchPortMirroringOutput) InputPortIdsEgresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SwitchPortMirroring) []string { return v.InputPortIdsEgresses }).(pulumi.StringArrayOutput)
}

// At least one of the `inputPortIdsIngress`, `inputPortIdsEgress` or ` inputNetworksIngress  ` should be specified
func (o SwitchPortMirroringOutput) InputPortIdsIngresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SwitchPortMirroring) []string { return v.InputPortIdsIngresses }).(pulumi.StringArrayOutput)
}

// Exactly one of the `outputPortId` or `outputNetwork` should be provided
func (o SwitchPortMirroringOutput) OutputNetwork() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchPortMirroring) *string { return v.OutputNetwork }).(pulumi.StringPtrOutput)
}

// Exactly one of the `outputPortId` or `outputNetwork` should be provided
func (o SwitchPortMirroringOutput) OutputPortId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchPortMirroring) *string { return v.OutputPortId }).(pulumi.StringPtrOutput)
}

type SwitchPortMirroringMapOutput struct{ *pulumi.OutputState }

func (SwitchPortMirroringMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]SwitchPortMirroring)(nil)).Elem()
}

func (o SwitchPortMirroringMapOutput) ToSwitchPortMirroringMapOutput() SwitchPortMirroringMapOutput {
	return o
}

func (o SwitchPortMirroringMapOutput) ToSwitchPortMirroringMapOutputWithContext(ctx context.Context) SwitchPortMirroringMapOutput {
	return o
}

func (o SwitchPortMirroringMapOutput) MapIndex(k pulumi.StringInput) SwitchPortMirroringOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) SwitchPortMirroring {
		return vs[0].(map[string]SwitchPortMirroring)[vs[1].(string)]
	}).(SwitchPortMirroringOutput)
}

type SwitchPortUsages struct {
	// Only if `mode`==`trunk` whether to trunk all network/vlans
	AllNetworks *bool `pulumi:"allNetworks"`
	// Only if `mode`!=`dynamic`. If DHCP snooping is enabled, whether DHCP server is allowed on the interfaces with. All the interfaces from port configs using this port usage are effected. Please notice that allowDhcpd is a tri_state. When it is not defined, it means using the system's default setting which depends on whether the port is an access or trunk port.
	AllowDhcpd *bool `pulumi:"allowDhcpd"`
	// Only if `mode`!=`dynamic`
	AllowMultipleSupplicants *bool `pulumi:"allowMultipleSupplicants"`
	// Only if `mode`!=`dynamic` and `portAuth`==`dot1x` bypass auth for known clients if set to true when RADIUS server is down
	BypassAuthWhenServerDown *bool `pulumi:"bypassAuthWhenServerDown"`
	// Only if `mode`!=`dynamic` and `portAuth`=`dot1x` bypass auth for all (including unknown clients) if set to true when RADIUS server is down
	BypassAuthWhenServerDownForUnknownClient *bool `pulumi:"bypassAuthWhenServerDownForUnknownClient"`
	// Only if `mode`!=`dynamic`
	Description *string `pulumi:"description"`
	// Only if `mode`!=`dynamic` if speed and duplex are specified, whether to disable autonegotiation
	DisableAutoneg *bool `pulumi:"disableAutoneg"`
	// Only if `mode`!=`dynamic` whether the port is disabled
	Disabled *bool `pulumi:"disabled"`
	// Only if `mode`!=`dynamic` link connection mode. enum: `auto`, `full`, `half`
	Duplex *string `pulumi:"duplex"`
	// Only if `mode`!=`dynamic` and `portAuth`==`dot1x`, if dynamic vlan is used, specify the possible networks/vlans RADIUS can return
	DynamicVlanNetworks []string `pulumi:"dynamicVlanNetworks"`
	// Only if `mode`!=`dynamic` and `portAuth`==`dot1x` whether to enable MAC Auth
	EnableMacAuth *bool `pulumi:"enableMacAuth"`
	// Only if `mode`!=`dynamic`
	EnableQos *bool `pulumi:"enableQos"`
	// Only if `mode`!=`dynamic` and `portAuth`==`dot1x` which network to put the device into if the device cannot do dot1x. default is null (i.e. not allowed)
	GuestNetwork *string `pulumi:"guestNetwork"`
	// `interSwitchLink` is used together with `isolation` under networks. NOTE: `interSwitchLink` works only between Juniper device. This has to be applied to both ports connected together
	InterIsolationNetworkLink *bool `pulumi:"interIsolationNetworkLink"`
	// Only if `mode`!=`dynamic` interSwitchLink is used together with "isolation" under networks. NOTE: interSwitchLink works only between Juniper device. This has to be applied to both ports connected together
	InterSwitchLink *bool `pulumi:"interSwitchLink"`
	// Only if `mode`!=`dynamic` and `enableMacAuth`==`true`
	MacAuthOnly *bool `pulumi:"macAuthOnly"`
	// Only if `mode`!=`dynamic` + `enableMacAuth`==`true` + `macAuthOnly`==`false`, dot1x will be given priority then mac_auth. Enable this to prefer macAuth over dot1x.
	MacAuthPreferred *bool `pulumi:"macAuthPreferred"`
	// Only if `mode`!=`dynamic` and `enableMacAuth` ==`true`. This type is ignored if mistNac is enabled. enum: `eap-md5`, `eap-peap`, `pap`
	MacAuthProtocol *string `pulumi:"macAuthProtocol"`
	// Only if `mode`!=`dynamic` max number of mac addresses, default is 0 for unlimited, otherwise range is 1 to 16383 (upper bound constrained by platform)
	MacLimit *string `pulumi:"macLimit"`
	// `mode`==`dynamic` must only be used if the port usage name is `dynamic`. enum: `access`, `dynamic`, `inet`, `trunk`
	Mode *string `pulumi:"mode"`
	// Only if `mode`!=`dynamic` media maximum transmission unit (MTU) is the largest data unit that can be forwarded without fragmentation. Value between 256 and 9216, default value is 1514.
	Mtu *string `pulumi:"mtu"`
	// Only if `mode`==`trunk`, the list of network/vlans
	Networks []string `pulumi:"networks"`
	// Only if `mode`==`access` and `portAuth`!=`dot1x` whether the port should retain dynamically learned MAC addresses
	PersistMac *bool `pulumi:"persistMac"`
	// Only if `mode`!=`dynamic` whether PoE capabilities are disabled for a port
	PoeDisabled *bool `pulumi:"poeDisabled"`
	// Only if `mode`!=`dynamic` if dot1x is desired, set to dot1x. enum: `dot1x`
	PortAuth *string `pulumi:"portAuth"`
	// Only if `mode`!=`dynamic` native network/vlan for untagged traffic
	PortNetwork *string `pulumi:"portNetwork"`
	// Only if `mode`!=`dynamic` and `portAuth`=`dot1x` reauthentication interval range between 10 and 65535 (default: 3600)
	ReauthInterval *string `pulumi:"reauthInterval"`
	// Only if `mode`==`dynamic` Control when the DPC port should be changed to the default port usage. enum: `linkDown`, `none` (let the DPC port keep at the current port usage)
	ResetDefaultWhen *string `pulumi:"resetDefaultWhen"`
	// Only if `mode`==`dynamic`
	Rules []SwitchPortUsagesRule `pulumi:"rules"`
	// Only if `mode`!=`dynamic` and `portAuth`==`dot1x` sets server fail fallback vlan
	ServerFailNetwork *string `pulumi:"serverFailNetwork"`
	// Only if `mode`!=`dynamic` and `portAuth`==`dot1x` when radius server reject / fails
	ServerRejectNetwork *string `pulumi:"serverRejectNetwork"`
	// Only if `mode`!=`dynamic` speed, default is auto to automatically negotiate speed enum: `100m`, `10m`, `1g`, `2.5g`, `5g`, `10g`, `25g`, `40g`, `100g`,`auto`
	Speed *string `pulumi:"speed"`
	// Switch storm control. Only if `mode`!=`dynamic`
	StormControl *SwitchPortUsagesStormControl `pulumi:"stormControl"`
	// Only if `mode`!=`dynamic` when enabled, the port is not expected to receive BPDU frames
	StpEdge       *bool `pulumi:"stpEdge"`
	StpNoRootPort *bool `pulumi:"stpNoRootPort"`
	StpP2p        *bool `pulumi:"stpP2p"`
	// If this is connected to a vstp network
	UseVstp *bool `pulumi:"useVstp"`
	// Only if `mode`!=`dynamic` network/vlan for voip traffic, must also set port_network. to authenticate device, set port_auth
	VoipNetwork *string `pulumi:"voipNetwork"`
}

// SwitchPortUsagesInput is an input type that accepts SwitchPortUsagesArgs and SwitchPortUsagesOutput values.
// You can construct a concrete instance of `SwitchPortUsagesInput` via:
//
//	SwitchPortUsagesArgs{...}
type SwitchPortUsagesInput interface {
	pulumi.Input

	ToSwitchPortUsagesOutput() SwitchPortUsagesOutput
	ToSwitchPortUsagesOutputWithContext(context.Context) SwitchPortUsagesOutput
}

type SwitchPortUsagesArgs struct {
	// Only if `mode`==`trunk` whether to trunk all network/vlans
	AllNetworks pulumi.BoolPtrInput `pulumi:"allNetworks"`
	// Only if `mode`!=`dynamic`. If DHCP snooping is enabled, whether DHCP server is allowed on the interfaces with. All the interfaces from port configs using this port usage are effected. Please notice that allowDhcpd is a tri_state. When it is not defined, it means using the system's default setting which depends on whether the port is an access or trunk port.
	AllowDhcpd pulumi.BoolPtrInput `pulumi:"allowDhcpd"`
	// Only if `mode`!=`dynamic`
	AllowMultipleSupplicants pulumi.BoolPtrInput `pulumi:"allowMultipleSupplicants"`
	// Only if `mode`!=`dynamic` and `portAuth`==`dot1x` bypass auth for known clients if set to true when RADIUS server is down
	BypassAuthWhenServerDown pulumi.BoolPtrInput `pulumi:"bypassAuthWhenServerDown"`
	// Only if `mode`!=`dynamic` and `portAuth`=`dot1x` bypass auth for all (including unknown clients) if set to true when RADIUS server is down
	BypassAuthWhenServerDownForUnknownClient pulumi.BoolPtrInput `pulumi:"bypassAuthWhenServerDownForUnknownClient"`
	// Only if `mode`!=`dynamic`
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Only if `mode`!=`dynamic` if speed and duplex are specified, whether to disable autonegotiation
	DisableAutoneg pulumi.BoolPtrInput `pulumi:"disableAutoneg"`
	// Only if `mode`!=`dynamic` whether the port is disabled
	Disabled pulumi.BoolPtrInput `pulumi:"disabled"`
	// Only if `mode`!=`dynamic` link connection mode. enum: `auto`, `full`, `half`
	Duplex pulumi.StringPtrInput `pulumi:"duplex"`
	// Only if `mode`!=`dynamic` and `portAuth`==`dot1x`, if dynamic vlan is used, specify the possible networks/vlans RADIUS can return
	DynamicVlanNetworks pulumi.StringArrayInput `pulumi:"dynamicVlanNetworks"`
	// Only if `mode`!=`dynamic` and `portAuth`==`dot1x` whether to enable MAC Auth
	EnableMacAuth pulumi.BoolPtrInput `pulumi:"enableMacAuth"`
	// Only if `mode`!=`dynamic`
	EnableQos pulumi.BoolPtrInput `pulumi:"enableQos"`
	// Only if `mode`!=`dynamic` and `portAuth`==`dot1x` which network to put the device into if the device cannot do dot1x. default is null (i.e. not allowed)
	GuestNetwork pulumi.StringPtrInput `pulumi:"guestNetwork"`
	// `interSwitchLink` is used together with `isolation` under networks. NOTE: `interSwitchLink` works only between Juniper device. This has to be applied to both ports connected together
	InterIsolationNetworkLink pulumi.BoolPtrInput `pulumi:"interIsolationNetworkLink"`
	// Only if `mode`!=`dynamic` interSwitchLink is used together with "isolation" under networks. NOTE: interSwitchLink works only between Juniper device. This has to be applied to both ports connected together
	InterSwitchLink pulumi.BoolPtrInput `pulumi:"interSwitchLink"`
	// Only if `mode`!=`dynamic` and `enableMacAuth`==`true`
	MacAuthOnly pulumi.BoolPtrInput `pulumi:"macAuthOnly"`
	// Only if `mode`!=`dynamic` + `enableMacAuth`==`true` + `macAuthOnly`==`false`, dot1x will be given priority then mac_auth. Enable this to prefer macAuth over dot1x.
	MacAuthPreferred pulumi.BoolPtrInput `pulumi:"macAuthPreferred"`
	// Only if `mode`!=`dynamic` and `enableMacAuth` ==`true`. This type is ignored if mistNac is enabled. enum: `eap-md5`, `eap-peap`, `pap`
	MacAuthProtocol pulumi.StringPtrInput `pulumi:"macAuthProtocol"`
	// Only if `mode`!=`dynamic` max number of mac addresses, default is 0 for unlimited, otherwise range is 1 to 16383 (upper bound constrained by platform)
	MacLimit pulumi.StringPtrInput `pulumi:"macLimit"`
	// `mode`==`dynamic` must only be used if the port usage name is `dynamic`. enum: `access`, `dynamic`, `inet`, `trunk`
	Mode pulumi.StringPtrInput `pulumi:"mode"`
	// Only if `mode`!=`dynamic` media maximum transmission unit (MTU) is the largest data unit that can be forwarded without fragmentation. Value between 256 and 9216, default value is 1514.
	Mtu pulumi.StringPtrInput `pulumi:"mtu"`
	// Only if `mode`==`trunk`, the list of network/vlans
	Networks pulumi.StringArrayInput `pulumi:"networks"`
	// Only if `mode`==`access` and `portAuth`!=`dot1x` whether the port should retain dynamically learned MAC addresses
	PersistMac pulumi.BoolPtrInput `pulumi:"persistMac"`
	// Only if `mode`!=`dynamic` whether PoE capabilities are disabled for a port
	PoeDisabled pulumi.BoolPtrInput `pulumi:"poeDisabled"`
	// Only if `mode`!=`dynamic` if dot1x is desired, set to dot1x. enum: `dot1x`
	PortAuth pulumi.StringPtrInput `pulumi:"portAuth"`
	// Only if `mode`!=`dynamic` native network/vlan for untagged traffic
	PortNetwork pulumi.StringPtrInput `pulumi:"portNetwork"`
	// Only if `mode`!=`dynamic` and `portAuth`=`dot1x` reauthentication interval range between 10 and 65535 (default: 3600)
	ReauthInterval pulumi.StringPtrInput `pulumi:"reauthInterval"`
	// Only if `mode`==`dynamic` Control when the DPC port should be changed to the default port usage. enum: `linkDown`, `none` (let the DPC port keep at the current port usage)
	ResetDefaultWhen pulumi.StringPtrInput `pulumi:"resetDefaultWhen"`
	// Only if `mode`==`dynamic`
	Rules SwitchPortUsagesRuleArrayInput `pulumi:"rules"`
	// Only if `mode`!=`dynamic` and `portAuth`==`dot1x` sets server fail fallback vlan
	ServerFailNetwork pulumi.StringPtrInput `pulumi:"serverFailNetwork"`
	// Only if `mode`!=`dynamic` and `portAuth`==`dot1x` when radius server reject / fails
	ServerRejectNetwork pulumi.StringPtrInput `pulumi:"serverRejectNetwork"`
	// Only if `mode`!=`dynamic` speed, default is auto to automatically negotiate speed enum: `100m`, `10m`, `1g`, `2.5g`, `5g`, `10g`, `25g`, `40g`, `100g`,`auto`
	Speed pulumi.StringPtrInput `pulumi:"speed"`
	// Switch storm control. Only if `mode`!=`dynamic`
	StormControl SwitchPortUsagesStormControlPtrInput `pulumi:"stormControl"`
	// Only if `mode`!=`dynamic` when enabled, the port is not expected to receive BPDU frames
	StpEdge       pulumi.BoolPtrInput `pulumi:"stpEdge"`
	StpNoRootPort pulumi.BoolPtrInput `pulumi:"stpNoRootPort"`
	StpP2p        pulumi.BoolPtrInput `pulumi:"stpP2p"`
	// If this is connected to a vstp network
	UseVstp pulumi.BoolPtrInput `pulumi:"useVstp"`
	// Only if `mode`!=`dynamic` network/vlan for voip traffic, must also set port_network. to authenticate device, set port_auth
	VoipNetwork pulumi.StringPtrInput `pulumi:"voipNetwork"`
}

func (SwitchPortUsagesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchPortUsages)(nil)).Elem()
}

func (i SwitchPortUsagesArgs) ToSwitchPortUsagesOutput() SwitchPortUsagesOutput {
	return i.ToSwitchPortUsagesOutputWithContext(context.Background())
}

func (i SwitchPortUsagesArgs) ToSwitchPortUsagesOutputWithContext(ctx context.Context) SwitchPortUsagesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchPortUsagesOutput)
}

// SwitchPortUsagesMapInput is an input type that accepts SwitchPortUsagesMap and SwitchPortUsagesMapOutput values.
// You can construct a concrete instance of `SwitchPortUsagesMapInput` via:
//
//	SwitchPortUsagesMap{ "key": SwitchPortUsagesArgs{...} }
type SwitchPortUsagesMapInput interface {
	pulumi.Input

	ToSwitchPortUsagesMapOutput() SwitchPortUsagesMapOutput
	ToSwitchPortUsagesMapOutputWithContext(context.Context) SwitchPortUsagesMapOutput
}

type SwitchPortUsagesMap map[string]SwitchPortUsagesInput

func (SwitchPortUsagesMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]SwitchPortUsages)(nil)).Elem()
}

func (i SwitchPortUsagesMap) ToSwitchPortUsagesMapOutput() SwitchPortUsagesMapOutput {
	return i.ToSwitchPortUsagesMapOutputWithContext(context.Background())
}

func (i SwitchPortUsagesMap) ToSwitchPortUsagesMapOutputWithContext(ctx context.Context) SwitchPortUsagesMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchPortUsagesMapOutput)
}

type SwitchPortUsagesOutput struct{ *pulumi.OutputState }

func (SwitchPortUsagesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchPortUsages)(nil)).Elem()
}

func (o SwitchPortUsagesOutput) ToSwitchPortUsagesOutput() SwitchPortUsagesOutput {
	return o
}

func (o SwitchPortUsagesOutput) ToSwitchPortUsagesOutputWithContext(ctx context.Context) SwitchPortUsagesOutput {
	return o
}

// Only if `mode`==`trunk` whether to trunk all network/vlans
func (o SwitchPortUsagesOutput) AllNetworks() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SwitchPortUsages) *bool { return v.AllNetworks }).(pulumi.BoolPtrOutput)
}

// Only if `mode`!=`dynamic`. If DHCP snooping is enabled, whether DHCP server is allowed on the interfaces with. All the interfaces from port configs using this port usage are effected. Please notice that allowDhcpd is a tri_state. When it is not defined, it means using the system's default setting which depends on whether the port is an access or trunk port.
func (o SwitchPortUsagesOutput) AllowDhcpd() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SwitchPortUsages) *bool { return v.AllowDhcpd }).(pulumi.BoolPtrOutput)
}

// Only if `mode`!=`dynamic`
func (o SwitchPortUsagesOutput) AllowMultipleSupplicants() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SwitchPortUsages) *bool { return v.AllowMultipleSupplicants }).(pulumi.BoolPtrOutput)
}

// Only if `mode`!=`dynamic` and `portAuth`==`dot1x` bypass auth for known clients if set to true when RADIUS server is down
func (o SwitchPortUsagesOutput) BypassAuthWhenServerDown() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SwitchPortUsages) *bool { return v.BypassAuthWhenServerDown }).(pulumi.BoolPtrOutput)
}

// Only if `mode`!=`dynamic` and `portAuth`=`dot1x` bypass auth for all (including unknown clients) if set to true when RADIUS server is down
func (o SwitchPortUsagesOutput) BypassAuthWhenServerDownForUnknownClient() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SwitchPortUsages) *bool { return v.BypassAuthWhenServerDownForUnknownClient }).(pulumi.BoolPtrOutput)
}

// Only if `mode`!=`dynamic`
func (o SwitchPortUsagesOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchPortUsages) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Only if `mode`!=`dynamic` if speed and duplex are specified, whether to disable autonegotiation
func (o SwitchPortUsagesOutput) DisableAutoneg() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SwitchPortUsages) *bool { return v.DisableAutoneg }).(pulumi.BoolPtrOutput)
}

// Only if `mode`!=`dynamic` whether the port is disabled
func (o SwitchPortUsagesOutput) Disabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SwitchPortUsages) *bool { return v.Disabled }).(pulumi.BoolPtrOutput)
}

// Only if `mode`!=`dynamic` link connection mode. enum: `auto`, `full`, `half`
func (o SwitchPortUsagesOutput) Duplex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchPortUsages) *string { return v.Duplex }).(pulumi.StringPtrOutput)
}

// Only if `mode`!=`dynamic` and `portAuth`==`dot1x`, if dynamic vlan is used, specify the possible networks/vlans RADIUS can return
func (o SwitchPortUsagesOutput) DynamicVlanNetworks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SwitchPortUsages) []string { return v.DynamicVlanNetworks }).(pulumi.StringArrayOutput)
}

// Only if `mode`!=`dynamic` and `portAuth`==`dot1x` whether to enable MAC Auth
func (o SwitchPortUsagesOutput) EnableMacAuth() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SwitchPortUsages) *bool { return v.EnableMacAuth }).(pulumi.BoolPtrOutput)
}

// Only if `mode`!=`dynamic`
func (o SwitchPortUsagesOutput) EnableQos() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SwitchPortUsages) *bool { return v.EnableQos }).(pulumi.BoolPtrOutput)
}

// Only if `mode`!=`dynamic` and `portAuth`==`dot1x` which network to put the device into if the device cannot do dot1x. default is null (i.e. not allowed)
func (o SwitchPortUsagesOutput) GuestNetwork() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchPortUsages) *string { return v.GuestNetwork }).(pulumi.StringPtrOutput)
}

// `interSwitchLink` is used together with `isolation` under networks. NOTE: `interSwitchLink` works only between Juniper device. This has to be applied to both ports connected together
func (o SwitchPortUsagesOutput) InterIsolationNetworkLink() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SwitchPortUsages) *bool { return v.InterIsolationNetworkLink }).(pulumi.BoolPtrOutput)
}

// Only if `mode`!=`dynamic` interSwitchLink is used together with "isolation" under networks. NOTE: interSwitchLink works only between Juniper device. This has to be applied to both ports connected together
func (o SwitchPortUsagesOutput) InterSwitchLink() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SwitchPortUsages) *bool { return v.InterSwitchLink }).(pulumi.BoolPtrOutput)
}

// Only if `mode`!=`dynamic` and `enableMacAuth`==`true`
func (o SwitchPortUsagesOutput) MacAuthOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SwitchPortUsages) *bool { return v.MacAuthOnly }).(pulumi.BoolPtrOutput)
}

// Only if `mode`!=`dynamic` + `enableMacAuth`==`true` + `macAuthOnly`==`false`, dot1x will be given priority then mac_auth. Enable this to prefer macAuth over dot1x.
func (o SwitchPortUsagesOutput) MacAuthPreferred() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SwitchPortUsages) *bool { return v.MacAuthPreferred }).(pulumi.BoolPtrOutput)
}

// Only if `mode`!=`dynamic` and `enableMacAuth` ==`true`. This type is ignored if mistNac is enabled. enum: `eap-md5`, `eap-peap`, `pap`
func (o SwitchPortUsagesOutput) MacAuthProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchPortUsages) *string { return v.MacAuthProtocol }).(pulumi.StringPtrOutput)
}

// Only if `mode`!=`dynamic` max number of mac addresses, default is 0 for unlimited, otherwise range is 1 to 16383 (upper bound constrained by platform)
func (o SwitchPortUsagesOutput) MacLimit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchPortUsages) *string { return v.MacLimit }).(pulumi.StringPtrOutput)
}

// `mode`==`dynamic` must only be used if the port usage name is `dynamic`. enum: `access`, `dynamic`, `inet`, `trunk`
func (o SwitchPortUsagesOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchPortUsages) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// Only if `mode`!=`dynamic` media maximum transmission unit (MTU) is the largest data unit that can be forwarded without fragmentation. Value between 256 and 9216, default value is 1514.
func (o SwitchPortUsagesOutput) Mtu() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchPortUsages) *string { return v.Mtu }).(pulumi.StringPtrOutput)
}

// Only if `mode`==`trunk`, the list of network/vlans
func (o SwitchPortUsagesOutput) Networks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SwitchPortUsages) []string { return v.Networks }).(pulumi.StringArrayOutput)
}

// Only if `mode`==`access` and `portAuth`!=`dot1x` whether the port should retain dynamically learned MAC addresses
func (o SwitchPortUsagesOutput) PersistMac() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SwitchPortUsages) *bool { return v.PersistMac }).(pulumi.BoolPtrOutput)
}

// Only if `mode`!=`dynamic` whether PoE capabilities are disabled for a port
func (o SwitchPortUsagesOutput) PoeDisabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SwitchPortUsages) *bool { return v.PoeDisabled }).(pulumi.BoolPtrOutput)
}

// Only if `mode`!=`dynamic` if dot1x is desired, set to dot1x. enum: `dot1x`
func (o SwitchPortUsagesOutput) PortAuth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchPortUsages) *string { return v.PortAuth }).(pulumi.StringPtrOutput)
}

// Only if `mode`!=`dynamic` native network/vlan for untagged traffic
func (o SwitchPortUsagesOutput) PortNetwork() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchPortUsages) *string { return v.PortNetwork }).(pulumi.StringPtrOutput)
}

// Only if `mode`!=`dynamic` and `portAuth`=`dot1x` reauthentication interval range between 10 and 65535 (default: 3600)
func (o SwitchPortUsagesOutput) ReauthInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchPortUsages) *string { return v.ReauthInterval }).(pulumi.StringPtrOutput)
}

// Only if `mode`==`dynamic` Control when the DPC port should be changed to the default port usage. enum: `linkDown`, `none` (let the DPC port keep at the current port usage)
func (o SwitchPortUsagesOutput) ResetDefaultWhen() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchPortUsages) *string { return v.ResetDefaultWhen }).(pulumi.StringPtrOutput)
}

// Only if `mode`==`dynamic`
func (o SwitchPortUsagesOutput) Rules() SwitchPortUsagesRuleArrayOutput {
	return o.ApplyT(func(v SwitchPortUsages) []SwitchPortUsagesRule { return v.Rules }).(SwitchPortUsagesRuleArrayOutput)
}

// Only if `mode`!=`dynamic` and `portAuth`==`dot1x` sets server fail fallback vlan
func (o SwitchPortUsagesOutput) ServerFailNetwork() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchPortUsages) *string { return v.ServerFailNetwork }).(pulumi.StringPtrOutput)
}

// Only if `mode`!=`dynamic` and `portAuth`==`dot1x` when radius server reject / fails
func (o SwitchPortUsagesOutput) ServerRejectNetwork() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchPortUsages) *string { return v.ServerRejectNetwork }).(pulumi.StringPtrOutput)
}

// Only if `mode`!=`dynamic` speed, default is auto to automatically negotiate speed enum: `100m`, `10m`, `1g`, `2.5g`, `5g`, `10g`, `25g`, `40g`, `100g`,`auto`
func (o SwitchPortUsagesOutput) Speed() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchPortUsages) *string { return v.Speed }).(pulumi.StringPtrOutput)
}

// Switch storm control. Only if `mode`!=`dynamic`
func (o SwitchPortUsagesOutput) StormControl() SwitchPortUsagesStormControlPtrOutput {
	return o.ApplyT(func(v SwitchPortUsages) *SwitchPortUsagesStormControl { return v.StormControl }).(SwitchPortUsagesStormControlPtrOutput)
}

// Only if `mode`!=`dynamic` when enabled, the port is not expected to receive BPDU frames
func (o SwitchPortUsagesOutput) StpEdge() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SwitchPortUsages) *bool { return v.StpEdge }).(pulumi.BoolPtrOutput)
}

func (o SwitchPortUsagesOutput) StpNoRootPort() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SwitchPortUsages) *bool { return v.StpNoRootPort }).(pulumi.BoolPtrOutput)
}

func (o SwitchPortUsagesOutput) StpP2p() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SwitchPortUsages) *bool { return v.StpP2p }).(pulumi.BoolPtrOutput)
}

// If this is connected to a vstp network
func (o SwitchPortUsagesOutput) UseVstp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SwitchPortUsages) *bool { return v.UseVstp }).(pulumi.BoolPtrOutput)
}

// Only if `mode`!=`dynamic` network/vlan for voip traffic, must also set port_network. to authenticate device, set port_auth
func (o SwitchPortUsagesOutput) VoipNetwork() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchPortUsages) *string { return v.VoipNetwork }).(pulumi.StringPtrOutput)
}

type SwitchPortUsagesMapOutput struct{ *pulumi.OutputState }

func (SwitchPortUsagesMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]SwitchPortUsages)(nil)).Elem()
}

func (o SwitchPortUsagesMapOutput) ToSwitchPortUsagesMapOutput() SwitchPortUsagesMapOutput {
	return o
}

func (o SwitchPortUsagesMapOutput) ToSwitchPortUsagesMapOutputWithContext(ctx context.Context) SwitchPortUsagesMapOutput {
	return o
}

func (o SwitchPortUsagesMapOutput) MapIndex(k pulumi.StringInput) SwitchPortUsagesOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) SwitchPortUsages {
		return vs[0].(map[string]SwitchPortUsages)[vs[1].(string)]
	}).(SwitchPortUsagesOutput)
}

type SwitchPortUsagesRule struct {
	Equals *string `pulumi:"equals"`
	// Use `equalsAny` to match any item in a list
	EqualsAnies []string `pulumi:"equalsAnies"`
	// "[0:3]":"abcdef" > "abc"
	// "split(.)[1]": "a.b.c" > "b"
	// "split(-)[1][0:3]: "a1234-b5678-c90" > "b56"
	Expression *string `pulumi:"expression"`
	// enum: `linkPeermac`, `lldpChassisId`, `lldpHardwareRevision`, `lldpManufacturerName`, `lldpOui`, `lldpSerialNumber`, `lldpSystemName`, `radiusDynamicfilter`, `radiusUsermac`, `radiusUsername`
	Src string `pulumi:"src"`
	// `portUsage` name
	Usage *string `pulumi:"usage"`
}

// SwitchPortUsagesRuleInput is an input type that accepts SwitchPortUsagesRuleArgs and SwitchPortUsagesRuleOutput values.
// You can construct a concrete instance of `SwitchPortUsagesRuleInput` via:
//
//	SwitchPortUsagesRuleArgs{...}
type SwitchPortUsagesRuleInput interface {
	pulumi.Input

	ToSwitchPortUsagesRuleOutput() SwitchPortUsagesRuleOutput
	ToSwitchPortUsagesRuleOutputWithContext(context.Context) SwitchPortUsagesRuleOutput
}

type SwitchPortUsagesRuleArgs struct {
	Equals pulumi.StringPtrInput `pulumi:"equals"`
	// Use `equalsAny` to match any item in a list
	EqualsAnies pulumi.StringArrayInput `pulumi:"equalsAnies"`
	// "[0:3]":"abcdef" > "abc"
	// "split(.)[1]": "a.b.c" > "b"
	// "split(-)[1][0:3]: "a1234-b5678-c90" > "b56"
	Expression pulumi.StringPtrInput `pulumi:"expression"`
	// enum: `linkPeermac`, `lldpChassisId`, `lldpHardwareRevision`, `lldpManufacturerName`, `lldpOui`, `lldpSerialNumber`, `lldpSystemName`, `radiusDynamicfilter`, `radiusUsermac`, `radiusUsername`
	Src pulumi.StringInput `pulumi:"src"`
	// `portUsage` name
	Usage pulumi.StringPtrInput `pulumi:"usage"`
}

func (SwitchPortUsagesRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchPortUsagesRule)(nil)).Elem()
}

func (i SwitchPortUsagesRuleArgs) ToSwitchPortUsagesRuleOutput() SwitchPortUsagesRuleOutput {
	return i.ToSwitchPortUsagesRuleOutputWithContext(context.Background())
}

func (i SwitchPortUsagesRuleArgs) ToSwitchPortUsagesRuleOutputWithContext(ctx context.Context) SwitchPortUsagesRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchPortUsagesRuleOutput)
}

// SwitchPortUsagesRuleArrayInput is an input type that accepts SwitchPortUsagesRuleArray and SwitchPortUsagesRuleArrayOutput values.
// You can construct a concrete instance of `SwitchPortUsagesRuleArrayInput` via:
//
//	SwitchPortUsagesRuleArray{ SwitchPortUsagesRuleArgs{...} }
type SwitchPortUsagesRuleArrayInput interface {
	pulumi.Input

	ToSwitchPortUsagesRuleArrayOutput() SwitchPortUsagesRuleArrayOutput
	ToSwitchPortUsagesRuleArrayOutputWithContext(context.Context) SwitchPortUsagesRuleArrayOutput
}

type SwitchPortUsagesRuleArray []SwitchPortUsagesRuleInput

func (SwitchPortUsagesRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchPortUsagesRule)(nil)).Elem()
}

func (i SwitchPortUsagesRuleArray) ToSwitchPortUsagesRuleArrayOutput() SwitchPortUsagesRuleArrayOutput {
	return i.ToSwitchPortUsagesRuleArrayOutputWithContext(context.Background())
}

func (i SwitchPortUsagesRuleArray) ToSwitchPortUsagesRuleArrayOutputWithContext(ctx context.Context) SwitchPortUsagesRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchPortUsagesRuleArrayOutput)
}

type SwitchPortUsagesRuleOutput struct{ *pulumi.OutputState }

func (SwitchPortUsagesRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchPortUsagesRule)(nil)).Elem()
}

func (o SwitchPortUsagesRuleOutput) ToSwitchPortUsagesRuleOutput() SwitchPortUsagesRuleOutput {
	return o
}

func (o SwitchPortUsagesRuleOutput) ToSwitchPortUsagesRuleOutputWithContext(ctx context.Context) SwitchPortUsagesRuleOutput {
	return o
}

func (o SwitchPortUsagesRuleOutput) Equals() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchPortUsagesRule) *string { return v.Equals }).(pulumi.StringPtrOutput)
}

// Use `equalsAny` to match any item in a list
func (o SwitchPortUsagesRuleOutput) EqualsAnies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SwitchPortUsagesRule) []string { return v.EqualsAnies }).(pulumi.StringArrayOutput)
}

// "[0:3]":"abcdef" > "abc"
// "split(.)[1]": "a.b.c" > "b"
// "split(-)[1][0:3]: "a1234-b5678-c90" > "b56"
func (o SwitchPortUsagesRuleOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchPortUsagesRule) *string { return v.Expression }).(pulumi.StringPtrOutput)
}

// enum: `linkPeermac`, `lldpChassisId`, `lldpHardwareRevision`, `lldpManufacturerName`, `lldpOui`, `lldpSerialNumber`, `lldpSystemName`, `radiusDynamicfilter`, `radiusUsermac`, `radiusUsername`
func (o SwitchPortUsagesRuleOutput) Src() pulumi.StringOutput {
	return o.ApplyT(func(v SwitchPortUsagesRule) string { return v.Src }).(pulumi.StringOutput)
}

// `portUsage` name
func (o SwitchPortUsagesRuleOutput) Usage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchPortUsagesRule) *string { return v.Usage }).(pulumi.StringPtrOutput)
}

type SwitchPortUsagesRuleArrayOutput struct{ *pulumi.OutputState }

func (SwitchPortUsagesRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchPortUsagesRule)(nil)).Elem()
}

func (o SwitchPortUsagesRuleArrayOutput) ToSwitchPortUsagesRuleArrayOutput() SwitchPortUsagesRuleArrayOutput {
	return o
}

func (o SwitchPortUsagesRuleArrayOutput) ToSwitchPortUsagesRuleArrayOutputWithContext(ctx context.Context) SwitchPortUsagesRuleArrayOutput {
	return o
}

func (o SwitchPortUsagesRuleArrayOutput) Index(i pulumi.IntInput) SwitchPortUsagesRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwitchPortUsagesRule {
		return vs[0].([]SwitchPortUsagesRule)[vs[1].(int)]
	}).(SwitchPortUsagesRuleOutput)
}

type SwitchPortUsagesStormControl struct {
	// Whether to disable storm control on broadcast traffic
	NoBroadcast *bool `pulumi:"noBroadcast"`
	// Whether to disable storm control on multicast traffic
	NoMulticast *bool `pulumi:"noMulticast"`
	// Whether to disable storm control on registered multicast traffic
	NoRegisteredMulticast *bool `pulumi:"noRegisteredMulticast"`
	// Whether to disable storm control on unknown unicast traffic
	NoUnknownUnicast *bool `pulumi:"noUnknownUnicast"`
	// Bandwidth-percentage, configures the storm control level as a percentage of the available bandwidth
	Percentage *int `pulumi:"percentage"`
}

// SwitchPortUsagesStormControlInput is an input type that accepts SwitchPortUsagesStormControlArgs and SwitchPortUsagesStormControlOutput values.
// You can construct a concrete instance of `SwitchPortUsagesStormControlInput` via:
//
//	SwitchPortUsagesStormControlArgs{...}
type SwitchPortUsagesStormControlInput interface {
	pulumi.Input

	ToSwitchPortUsagesStormControlOutput() SwitchPortUsagesStormControlOutput
	ToSwitchPortUsagesStormControlOutputWithContext(context.Context) SwitchPortUsagesStormControlOutput
}

type SwitchPortUsagesStormControlArgs struct {
	// Whether to disable storm control on broadcast traffic
	NoBroadcast pulumi.BoolPtrInput `pulumi:"noBroadcast"`
	// Whether to disable storm control on multicast traffic
	NoMulticast pulumi.BoolPtrInput `pulumi:"noMulticast"`
	// Whether to disable storm control on registered multicast traffic
	NoRegisteredMulticast pulumi.BoolPtrInput `pulumi:"noRegisteredMulticast"`
	// Whether to disable storm control on unknown unicast traffic
	NoUnknownUnicast pulumi.BoolPtrInput `pulumi:"noUnknownUnicast"`
	// Bandwidth-percentage, configures the storm control level as a percentage of the available bandwidth
	Percentage pulumi.IntPtrInput `pulumi:"percentage"`
}

func (SwitchPortUsagesStormControlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchPortUsagesStormControl)(nil)).Elem()
}

func (i SwitchPortUsagesStormControlArgs) ToSwitchPortUsagesStormControlOutput() SwitchPortUsagesStormControlOutput {
	return i.ToSwitchPortUsagesStormControlOutputWithContext(context.Background())
}

func (i SwitchPortUsagesStormControlArgs) ToSwitchPortUsagesStormControlOutputWithContext(ctx context.Context) SwitchPortUsagesStormControlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchPortUsagesStormControlOutput)
}

func (i SwitchPortUsagesStormControlArgs) ToSwitchPortUsagesStormControlPtrOutput() SwitchPortUsagesStormControlPtrOutput {
	return i.ToSwitchPortUsagesStormControlPtrOutputWithContext(context.Background())
}

func (i SwitchPortUsagesStormControlArgs) ToSwitchPortUsagesStormControlPtrOutputWithContext(ctx context.Context) SwitchPortUsagesStormControlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchPortUsagesStormControlOutput).ToSwitchPortUsagesStormControlPtrOutputWithContext(ctx)
}

// SwitchPortUsagesStormControlPtrInput is an input type that accepts SwitchPortUsagesStormControlArgs, SwitchPortUsagesStormControlPtr and SwitchPortUsagesStormControlPtrOutput values.
// You can construct a concrete instance of `SwitchPortUsagesStormControlPtrInput` via:
//
//	        SwitchPortUsagesStormControlArgs{...}
//
//	or:
//
//	        nil
type SwitchPortUsagesStormControlPtrInput interface {
	pulumi.Input

	ToSwitchPortUsagesStormControlPtrOutput() SwitchPortUsagesStormControlPtrOutput
	ToSwitchPortUsagesStormControlPtrOutputWithContext(context.Context) SwitchPortUsagesStormControlPtrOutput
}

type switchPortUsagesStormControlPtrType SwitchPortUsagesStormControlArgs

func SwitchPortUsagesStormControlPtr(v *SwitchPortUsagesStormControlArgs) SwitchPortUsagesStormControlPtrInput {
	return (*switchPortUsagesStormControlPtrType)(v)
}

func (*switchPortUsagesStormControlPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchPortUsagesStormControl)(nil)).Elem()
}

func (i *switchPortUsagesStormControlPtrType) ToSwitchPortUsagesStormControlPtrOutput() SwitchPortUsagesStormControlPtrOutput {
	return i.ToSwitchPortUsagesStormControlPtrOutputWithContext(context.Background())
}

func (i *switchPortUsagesStormControlPtrType) ToSwitchPortUsagesStormControlPtrOutputWithContext(ctx context.Context) SwitchPortUsagesStormControlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchPortUsagesStormControlPtrOutput)
}

type SwitchPortUsagesStormControlOutput struct{ *pulumi.OutputState }

func (SwitchPortUsagesStormControlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchPortUsagesStormControl)(nil)).Elem()
}

func (o SwitchPortUsagesStormControlOutput) ToSwitchPortUsagesStormControlOutput() SwitchPortUsagesStormControlOutput {
	return o
}

func (o SwitchPortUsagesStormControlOutput) ToSwitchPortUsagesStormControlOutputWithContext(ctx context.Context) SwitchPortUsagesStormControlOutput {
	return o
}

func (o SwitchPortUsagesStormControlOutput) ToSwitchPortUsagesStormControlPtrOutput() SwitchPortUsagesStormControlPtrOutput {
	return o.ToSwitchPortUsagesStormControlPtrOutputWithContext(context.Background())
}

func (o SwitchPortUsagesStormControlOutput) ToSwitchPortUsagesStormControlPtrOutputWithContext(ctx context.Context) SwitchPortUsagesStormControlPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SwitchPortUsagesStormControl) *SwitchPortUsagesStormControl {
		return &v
	}).(SwitchPortUsagesStormControlPtrOutput)
}

// Whether to disable storm control on broadcast traffic
func (o SwitchPortUsagesStormControlOutput) NoBroadcast() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SwitchPortUsagesStormControl) *bool { return v.NoBroadcast }).(pulumi.BoolPtrOutput)
}

// Whether to disable storm control on multicast traffic
func (o SwitchPortUsagesStormControlOutput) NoMulticast() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SwitchPortUsagesStormControl) *bool { return v.NoMulticast }).(pulumi.BoolPtrOutput)
}

// Whether to disable storm control on registered multicast traffic
func (o SwitchPortUsagesStormControlOutput) NoRegisteredMulticast() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SwitchPortUsagesStormControl) *bool { return v.NoRegisteredMulticast }).(pulumi.BoolPtrOutput)
}

// Whether to disable storm control on unknown unicast traffic
func (o SwitchPortUsagesStormControlOutput) NoUnknownUnicast() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SwitchPortUsagesStormControl) *bool { return v.NoUnknownUnicast }).(pulumi.BoolPtrOutput)
}

// Bandwidth-percentage, configures the storm control level as a percentage of the available bandwidth
func (o SwitchPortUsagesStormControlOutput) Percentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchPortUsagesStormControl) *int { return v.Percentage }).(pulumi.IntPtrOutput)
}

type SwitchPortUsagesStormControlPtrOutput struct{ *pulumi.OutputState }

func (SwitchPortUsagesStormControlPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchPortUsagesStormControl)(nil)).Elem()
}

func (o SwitchPortUsagesStormControlPtrOutput) ToSwitchPortUsagesStormControlPtrOutput() SwitchPortUsagesStormControlPtrOutput {
	return o
}

func (o SwitchPortUsagesStormControlPtrOutput) ToSwitchPortUsagesStormControlPtrOutputWithContext(ctx context.Context) SwitchPortUsagesStormControlPtrOutput {
	return o
}

func (o SwitchPortUsagesStormControlPtrOutput) Elem() SwitchPortUsagesStormControlOutput {
	return o.ApplyT(func(v *SwitchPortUsagesStormControl) SwitchPortUsagesStormControl {
		if v != nil {
			return *v
		}
		var ret SwitchPortUsagesStormControl
		return ret
	}).(SwitchPortUsagesStormControlOutput)
}

// Whether to disable storm control on broadcast traffic
func (o SwitchPortUsagesStormControlPtrOutput) NoBroadcast() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SwitchPortUsagesStormControl) *bool {
		if v == nil {
			return nil
		}
		return v.NoBroadcast
	}).(pulumi.BoolPtrOutput)
}

// Whether to disable storm control on multicast traffic
func (o SwitchPortUsagesStormControlPtrOutput) NoMulticast() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SwitchPortUsagesStormControl) *bool {
		if v == nil {
			return nil
		}
		return v.NoMulticast
	}).(pulumi.BoolPtrOutput)
}

// Whether to disable storm control on registered multicast traffic
func (o SwitchPortUsagesStormControlPtrOutput) NoRegisteredMulticast() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SwitchPortUsagesStormControl) *bool {
		if v == nil {
			return nil
		}
		return v.NoRegisteredMulticast
	}).(pulumi.BoolPtrOutput)
}

// Whether to disable storm control on unknown unicast traffic
func (o SwitchPortUsagesStormControlPtrOutput) NoUnknownUnicast() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SwitchPortUsagesStormControl) *bool {
		if v == nil {
			return nil
		}
		return v.NoUnknownUnicast
	}).(pulumi.BoolPtrOutput)
}

// Bandwidth-percentage, configures the storm control level as a percentage of the available bandwidth
func (o SwitchPortUsagesStormControlPtrOutput) Percentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SwitchPortUsagesStormControl) *int {
		if v == nil {
			return nil
		}
		return v.Percentage
	}).(pulumi.IntPtrOutput)
}

type SwitchRadiusConfig struct {
	AcctImmediateUpdate *bool `pulumi:"acctImmediateUpdate"`
	// How frequently should interim accounting be reported, 60-65535. default is 0 (use one specified in Access-Accept request from RADIUS Server). Very frequent messages can affect the performance of the radius server, 600 and up is recommended when enabled
	AcctInterimInterval *int                           `pulumi:"acctInterimInterval"`
	AcctServers         []SwitchRadiusConfigAcctServer `pulumi:"acctServers"`
	// enum: `ordered`, `unordered`
	AuthServerSelection *string                        `pulumi:"authServerSelection"`
	AuthServers         []SwitchRadiusConfigAuthServer `pulumi:"authServers"`
	// Radius auth session retries
	AuthServersRetries *int `pulumi:"authServersRetries"`
	// Radius auth session timeout
	AuthServersTimeout *int    `pulumi:"authServersTimeout"`
	CoaEnabled         *bool   `pulumi:"coaEnabled"`
	CoaPort            *string `pulumi:"coaPort"`
	FastDot1xTimers    *bool   `pulumi:"fastDot1xTimers"`
	// Use `network`or `sourceIp`. Which network the RADIUS server resides, if there's static IP for this network, we'd use it as source-ip
	Network *string `pulumi:"network"`
	// Use `network`or `sourceIp`
	SourceIp *string `pulumi:"sourceIp"`
}

// SwitchRadiusConfigInput is an input type that accepts SwitchRadiusConfigArgs and SwitchRadiusConfigOutput values.
// You can construct a concrete instance of `SwitchRadiusConfigInput` via:
//
//	SwitchRadiusConfigArgs{...}
type SwitchRadiusConfigInput interface {
	pulumi.Input

	ToSwitchRadiusConfigOutput() SwitchRadiusConfigOutput
	ToSwitchRadiusConfigOutputWithContext(context.Context) SwitchRadiusConfigOutput
}

type SwitchRadiusConfigArgs struct {
	AcctImmediateUpdate pulumi.BoolPtrInput `pulumi:"acctImmediateUpdate"`
	// How frequently should interim accounting be reported, 60-65535. default is 0 (use one specified in Access-Accept request from RADIUS Server). Very frequent messages can affect the performance of the radius server, 600 and up is recommended when enabled
	AcctInterimInterval pulumi.IntPtrInput                     `pulumi:"acctInterimInterval"`
	AcctServers         SwitchRadiusConfigAcctServerArrayInput `pulumi:"acctServers"`
	// enum: `ordered`, `unordered`
	AuthServerSelection pulumi.StringPtrInput                  `pulumi:"authServerSelection"`
	AuthServers         SwitchRadiusConfigAuthServerArrayInput `pulumi:"authServers"`
	// Radius auth session retries
	AuthServersRetries pulumi.IntPtrInput `pulumi:"authServersRetries"`
	// Radius auth session timeout
	AuthServersTimeout pulumi.IntPtrInput    `pulumi:"authServersTimeout"`
	CoaEnabled         pulumi.BoolPtrInput   `pulumi:"coaEnabled"`
	CoaPort            pulumi.StringPtrInput `pulumi:"coaPort"`
	FastDot1xTimers    pulumi.BoolPtrInput   `pulumi:"fastDot1xTimers"`
	// Use `network`or `sourceIp`. Which network the RADIUS server resides, if there's static IP for this network, we'd use it as source-ip
	Network pulumi.StringPtrInput `pulumi:"network"`
	// Use `network`or `sourceIp`
	SourceIp pulumi.StringPtrInput `pulumi:"sourceIp"`
}

func (SwitchRadiusConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchRadiusConfig)(nil)).Elem()
}

func (i SwitchRadiusConfigArgs) ToSwitchRadiusConfigOutput() SwitchRadiusConfigOutput {
	return i.ToSwitchRadiusConfigOutputWithContext(context.Background())
}

func (i SwitchRadiusConfigArgs) ToSwitchRadiusConfigOutputWithContext(ctx context.Context) SwitchRadiusConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchRadiusConfigOutput)
}

func (i SwitchRadiusConfigArgs) ToSwitchRadiusConfigPtrOutput() SwitchRadiusConfigPtrOutput {
	return i.ToSwitchRadiusConfigPtrOutputWithContext(context.Background())
}

func (i SwitchRadiusConfigArgs) ToSwitchRadiusConfigPtrOutputWithContext(ctx context.Context) SwitchRadiusConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchRadiusConfigOutput).ToSwitchRadiusConfigPtrOutputWithContext(ctx)
}

// SwitchRadiusConfigPtrInput is an input type that accepts SwitchRadiusConfigArgs, SwitchRadiusConfigPtr and SwitchRadiusConfigPtrOutput values.
// You can construct a concrete instance of `SwitchRadiusConfigPtrInput` via:
//
//	        SwitchRadiusConfigArgs{...}
//
//	or:
//
//	        nil
type SwitchRadiusConfigPtrInput interface {
	pulumi.Input

	ToSwitchRadiusConfigPtrOutput() SwitchRadiusConfigPtrOutput
	ToSwitchRadiusConfigPtrOutputWithContext(context.Context) SwitchRadiusConfigPtrOutput
}

type switchRadiusConfigPtrType SwitchRadiusConfigArgs

func SwitchRadiusConfigPtr(v *SwitchRadiusConfigArgs) SwitchRadiusConfigPtrInput {
	return (*switchRadiusConfigPtrType)(v)
}

func (*switchRadiusConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchRadiusConfig)(nil)).Elem()
}

func (i *switchRadiusConfigPtrType) ToSwitchRadiusConfigPtrOutput() SwitchRadiusConfigPtrOutput {
	return i.ToSwitchRadiusConfigPtrOutputWithContext(context.Background())
}

func (i *switchRadiusConfigPtrType) ToSwitchRadiusConfigPtrOutputWithContext(ctx context.Context) SwitchRadiusConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchRadiusConfigPtrOutput)
}

type SwitchRadiusConfigOutput struct{ *pulumi.OutputState }

func (SwitchRadiusConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchRadiusConfig)(nil)).Elem()
}

func (o SwitchRadiusConfigOutput) ToSwitchRadiusConfigOutput() SwitchRadiusConfigOutput {
	return o
}

func (o SwitchRadiusConfigOutput) ToSwitchRadiusConfigOutputWithContext(ctx context.Context) SwitchRadiusConfigOutput {
	return o
}

func (o SwitchRadiusConfigOutput) ToSwitchRadiusConfigPtrOutput() SwitchRadiusConfigPtrOutput {
	return o.ToSwitchRadiusConfigPtrOutputWithContext(context.Background())
}

func (o SwitchRadiusConfigOutput) ToSwitchRadiusConfigPtrOutputWithContext(ctx context.Context) SwitchRadiusConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SwitchRadiusConfig) *SwitchRadiusConfig {
		return &v
	}).(SwitchRadiusConfigPtrOutput)
}

func (o SwitchRadiusConfigOutput) AcctImmediateUpdate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SwitchRadiusConfig) *bool { return v.AcctImmediateUpdate }).(pulumi.BoolPtrOutput)
}

// How frequently should interim accounting be reported, 60-65535. default is 0 (use one specified in Access-Accept request from RADIUS Server). Very frequent messages can affect the performance of the radius server, 600 and up is recommended when enabled
func (o SwitchRadiusConfigOutput) AcctInterimInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchRadiusConfig) *int { return v.AcctInterimInterval }).(pulumi.IntPtrOutput)
}

func (o SwitchRadiusConfigOutput) AcctServers() SwitchRadiusConfigAcctServerArrayOutput {
	return o.ApplyT(func(v SwitchRadiusConfig) []SwitchRadiusConfigAcctServer { return v.AcctServers }).(SwitchRadiusConfigAcctServerArrayOutput)
}

// enum: `ordered`, `unordered`
func (o SwitchRadiusConfigOutput) AuthServerSelection() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchRadiusConfig) *string { return v.AuthServerSelection }).(pulumi.StringPtrOutput)
}

func (o SwitchRadiusConfigOutput) AuthServers() SwitchRadiusConfigAuthServerArrayOutput {
	return o.ApplyT(func(v SwitchRadiusConfig) []SwitchRadiusConfigAuthServer { return v.AuthServers }).(SwitchRadiusConfigAuthServerArrayOutput)
}

// Radius auth session retries
func (o SwitchRadiusConfigOutput) AuthServersRetries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchRadiusConfig) *int { return v.AuthServersRetries }).(pulumi.IntPtrOutput)
}

// Radius auth session timeout
func (o SwitchRadiusConfigOutput) AuthServersTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchRadiusConfig) *int { return v.AuthServersTimeout }).(pulumi.IntPtrOutput)
}

func (o SwitchRadiusConfigOutput) CoaEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SwitchRadiusConfig) *bool { return v.CoaEnabled }).(pulumi.BoolPtrOutput)
}

func (o SwitchRadiusConfigOutput) CoaPort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchRadiusConfig) *string { return v.CoaPort }).(pulumi.StringPtrOutput)
}

func (o SwitchRadiusConfigOutput) FastDot1xTimers() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SwitchRadiusConfig) *bool { return v.FastDot1xTimers }).(pulumi.BoolPtrOutput)
}

// Use `network`or `sourceIp`. Which network the RADIUS server resides, if there's static IP for this network, we'd use it as source-ip
func (o SwitchRadiusConfigOutput) Network() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchRadiusConfig) *string { return v.Network }).(pulumi.StringPtrOutput)
}

// Use `network`or `sourceIp`
func (o SwitchRadiusConfigOutput) SourceIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchRadiusConfig) *string { return v.SourceIp }).(pulumi.StringPtrOutput)
}

type SwitchRadiusConfigPtrOutput struct{ *pulumi.OutputState }

func (SwitchRadiusConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchRadiusConfig)(nil)).Elem()
}

func (o SwitchRadiusConfigPtrOutput) ToSwitchRadiusConfigPtrOutput() SwitchRadiusConfigPtrOutput {
	return o
}

func (o SwitchRadiusConfigPtrOutput) ToSwitchRadiusConfigPtrOutputWithContext(ctx context.Context) SwitchRadiusConfigPtrOutput {
	return o
}

func (o SwitchRadiusConfigPtrOutput) Elem() SwitchRadiusConfigOutput {
	return o.ApplyT(func(v *SwitchRadiusConfig) SwitchRadiusConfig {
		if v != nil {
			return *v
		}
		var ret SwitchRadiusConfig
		return ret
	}).(SwitchRadiusConfigOutput)
}

func (o SwitchRadiusConfigPtrOutput) AcctImmediateUpdate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SwitchRadiusConfig) *bool {
		if v == nil {
			return nil
		}
		return v.AcctImmediateUpdate
	}).(pulumi.BoolPtrOutput)
}

// How frequently should interim accounting be reported, 60-65535. default is 0 (use one specified in Access-Accept request from RADIUS Server). Very frequent messages can affect the performance of the radius server, 600 and up is recommended when enabled
func (o SwitchRadiusConfigPtrOutput) AcctInterimInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SwitchRadiusConfig) *int {
		if v == nil {
			return nil
		}
		return v.AcctInterimInterval
	}).(pulumi.IntPtrOutput)
}

func (o SwitchRadiusConfigPtrOutput) AcctServers() SwitchRadiusConfigAcctServerArrayOutput {
	return o.ApplyT(func(v *SwitchRadiusConfig) []SwitchRadiusConfigAcctServer {
		if v == nil {
			return nil
		}
		return v.AcctServers
	}).(SwitchRadiusConfigAcctServerArrayOutput)
}

// enum: `ordered`, `unordered`
func (o SwitchRadiusConfigPtrOutput) AuthServerSelection() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchRadiusConfig) *string {
		if v == nil {
			return nil
		}
		return v.AuthServerSelection
	}).(pulumi.StringPtrOutput)
}

func (o SwitchRadiusConfigPtrOutput) AuthServers() SwitchRadiusConfigAuthServerArrayOutput {
	return o.ApplyT(func(v *SwitchRadiusConfig) []SwitchRadiusConfigAuthServer {
		if v == nil {
			return nil
		}
		return v.AuthServers
	}).(SwitchRadiusConfigAuthServerArrayOutput)
}

// Radius auth session retries
func (o SwitchRadiusConfigPtrOutput) AuthServersRetries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SwitchRadiusConfig) *int {
		if v == nil {
			return nil
		}
		return v.AuthServersRetries
	}).(pulumi.IntPtrOutput)
}

// Radius auth session timeout
func (o SwitchRadiusConfigPtrOutput) AuthServersTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SwitchRadiusConfig) *int {
		if v == nil {
			return nil
		}
		return v.AuthServersTimeout
	}).(pulumi.IntPtrOutput)
}

func (o SwitchRadiusConfigPtrOutput) CoaEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SwitchRadiusConfig) *bool {
		if v == nil {
			return nil
		}
		return v.CoaEnabled
	}).(pulumi.BoolPtrOutput)
}

func (o SwitchRadiusConfigPtrOutput) CoaPort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchRadiusConfig) *string {
		if v == nil {
			return nil
		}
		return v.CoaPort
	}).(pulumi.StringPtrOutput)
}

func (o SwitchRadiusConfigPtrOutput) FastDot1xTimers() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SwitchRadiusConfig) *bool {
		if v == nil {
			return nil
		}
		return v.FastDot1xTimers
	}).(pulumi.BoolPtrOutput)
}

// Use `network`or `sourceIp`. Which network the RADIUS server resides, if there's static IP for this network, we'd use it as source-ip
func (o SwitchRadiusConfigPtrOutput) Network() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchRadiusConfig) *string {
		if v == nil {
			return nil
		}
		return v.Network
	}).(pulumi.StringPtrOutput)
}

// Use `network`or `sourceIp`
func (o SwitchRadiusConfigPtrOutput) SourceIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchRadiusConfig) *string {
		if v == nil {
			return nil
		}
		return v.SourceIp
	}).(pulumi.StringPtrOutput)
}

type SwitchRadiusConfigAcctServer struct {
	// IP/ hostname of RADIUS server
	Host           string `pulumi:"host"`
	KeywrapEnabled *bool  `pulumi:"keywrapEnabled"`
	// enum: `ascii`, `hex`
	KeywrapFormat *string `pulumi:"keywrapFormat"`
	KeywrapKek    *string `pulumi:"keywrapKek"`
	KeywrapMack   *string `pulumi:"keywrapMack"`
	Port          *string `pulumi:"port"`
	// Secret of RADIUS server
	Secret string `pulumi:"secret"`
}

// SwitchRadiusConfigAcctServerInput is an input type that accepts SwitchRadiusConfigAcctServerArgs and SwitchRadiusConfigAcctServerOutput values.
// You can construct a concrete instance of `SwitchRadiusConfigAcctServerInput` via:
//
//	SwitchRadiusConfigAcctServerArgs{...}
type SwitchRadiusConfigAcctServerInput interface {
	pulumi.Input

	ToSwitchRadiusConfigAcctServerOutput() SwitchRadiusConfigAcctServerOutput
	ToSwitchRadiusConfigAcctServerOutputWithContext(context.Context) SwitchRadiusConfigAcctServerOutput
}

type SwitchRadiusConfigAcctServerArgs struct {
	// IP/ hostname of RADIUS server
	Host           pulumi.StringInput  `pulumi:"host"`
	KeywrapEnabled pulumi.BoolPtrInput `pulumi:"keywrapEnabled"`
	// enum: `ascii`, `hex`
	KeywrapFormat pulumi.StringPtrInput `pulumi:"keywrapFormat"`
	KeywrapKek    pulumi.StringPtrInput `pulumi:"keywrapKek"`
	KeywrapMack   pulumi.StringPtrInput `pulumi:"keywrapMack"`
	Port          pulumi.StringPtrInput `pulumi:"port"`
	// Secret of RADIUS server
	Secret pulumi.StringInput `pulumi:"secret"`
}

func (SwitchRadiusConfigAcctServerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchRadiusConfigAcctServer)(nil)).Elem()
}

func (i SwitchRadiusConfigAcctServerArgs) ToSwitchRadiusConfigAcctServerOutput() SwitchRadiusConfigAcctServerOutput {
	return i.ToSwitchRadiusConfigAcctServerOutputWithContext(context.Background())
}

func (i SwitchRadiusConfigAcctServerArgs) ToSwitchRadiusConfigAcctServerOutputWithContext(ctx context.Context) SwitchRadiusConfigAcctServerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchRadiusConfigAcctServerOutput)
}

// SwitchRadiusConfigAcctServerArrayInput is an input type that accepts SwitchRadiusConfigAcctServerArray and SwitchRadiusConfigAcctServerArrayOutput values.
// You can construct a concrete instance of `SwitchRadiusConfigAcctServerArrayInput` via:
//
//	SwitchRadiusConfigAcctServerArray{ SwitchRadiusConfigAcctServerArgs{...} }
type SwitchRadiusConfigAcctServerArrayInput interface {
	pulumi.Input

	ToSwitchRadiusConfigAcctServerArrayOutput() SwitchRadiusConfigAcctServerArrayOutput
	ToSwitchRadiusConfigAcctServerArrayOutputWithContext(context.Context) SwitchRadiusConfigAcctServerArrayOutput
}

type SwitchRadiusConfigAcctServerArray []SwitchRadiusConfigAcctServerInput

func (SwitchRadiusConfigAcctServerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchRadiusConfigAcctServer)(nil)).Elem()
}

func (i SwitchRadiusConfigAcctServerArray) ToSwitchRadiusConfigAcctServerArrayOutput() SwitchRadiusConfigAcctServerArrayOutput {
	return i.ToSwitchRadiusConfigAcctServerArrayOutputWithContext(context.Background())
}

func (i SwitchRadiusConfigAcctServerArray) ToSwitchRadiusConfigAcctServerArrayOutputWithContext(ctx context.Context) SwitchRadiusConfigAcctServerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchRadiusConfigAcctServerArrayOutput)
}

type SwitchRadiusConfigAcctServerOutput struct{ *pulumi.OutputState }

func (SwitchRadiusConfigAcctServerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchRadiusConfigAcctServer)(nil)).Elem()
}

func (o SwitchRadiusConfigAcctServerOutput) ToSwitchRadiusConfigAcctServerOutput() SwitchRadiusConfigAcctServerOutput {
	return o
}

func (o SwitchRadiusConfigAcctServerOutput) ToSwitchRadiusConfigAcctServerOutputWithContext(ctx context.Context) SwitchRadiusConfigAcctServerOutput {
	return o
}

// IP/ hostname of RADIUS server
func (o SwitchRadiusConfigAcctServerOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v SwitchRadiusConfigAcctServer) string { return v.Host }).(pulumi.StringOutput)
}

func (o SwitchRadiusConfigAcctServerOutput) KeywrapEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SwitchRadiusConfigAcctServer) *bool { return v.KeywrapEnabled }).(pulumi.BoolPtrOutput)
}

// enum: `ascii`, `hex`
func (o SwitchRadiusConfigAcctServerOutput) KeywrapFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchRadiusConfigAcctServer) *string { return v.KeywrapFormat }).(pulumi.StringPtrOutput)
}

func (o SwitchRadiusConfigAcctServerOutput) KeywrapKek() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchRadiusConfigAcctServer) *string { return v.KeywrapKek }).(pulumi.StringPtrOutput)
}

func (o SwitchRadiusConfigAcctServerOutput) KeywrapMack() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchRadiusConfigAcctServer) *string { return v.KeywrapMack }).(pulumi.StringPtrOutput)
}

func (o SwitchRadiusConfigAcctServerOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchRadiusConfigAcctServer) *string { return v.Port }).(pulumi.StringPtrOutput)
}

// Secret of RADIUS server
func (o SwitchRadiusConfigAcctServerOutput) Secret() pulumi.StringOutput {
	return o.ApplyT(func(v SwitchRadiusConfigAcctServer) string { return v.Secret }).(pulumi.StringOutput)
}

type SwitchRadiusConfigAcctServerArrayOutput struct{ *pulumi.OutputState }

func (SwitchRadiusConfigAcctServerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchRadiusConfigAcctServer)(nil)).Elem()
}

func (o SwitchRadiusConfigAcctServerArrayOutput) ToSwitchRadiusConfigAcctServerArrayOutput() SwitchRadiusConfigAcctServerArrayOutput {
	return o
}

func (o SwitchRadiusConfigAcctServerArrayOutput) ToSwitchRadiusConfigAcctServerArrayOutputWithContext(ctx context.Context) SwitchRadiusConfigAcctServerArrayOutput {
	return o
}

func (o SwitchRadiusConfigAcctServerArrayOutput) Index(i pulumi.IntInput) SwitchRadiusConfigAcctServerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwitchRadiusConfigAcctServer {
		return vs[0].([]SwitchRadiusConfigAcctServer)[vs[1].(int)]
	}).(SwitchRadiusConfigAcctServerOutput)
}

type SwitchRadiusConfigAuthServer struct {
	// IP/ hostname of RADIUS server
	Host           string `pulumi:"host"`
	KeywrapEnabled *bool  `pulumi:"keywrapEnabled"`
	// enum: `ascii`, `hex`
	KeywrapFormat *string `pulumi:"keywrapFormat"`
	KeywrapKek    *string `pulumi:"keywrapKek"`
	KeywrapMack   *string `pulumi:"keywrapMack"`
	Port          *string `pulumi:"port"`
	// Whether to require Message-Authenticator in requests
	RequireMessageAuthenticator *bool `pulumi:"requireMessageAuthenticator"`
	// Secret of RADIUS server
	Secret string `pulumi:"secret"`
}

// SwitchRadiusConfigAuthServerInput is an input type that accepts SwitchRadiusConfigAuthServerArgs and SwitchRadiusConfigAuthServerOutput values.
// You can construct a concrete instance of `SwitchRadiusConfigAuthServerInput` via:
//
//	SwitchRadiusConfigAuthServerArgs{...}
type SwitchRadiusConfigAuthServerInput interface {
	pulumi.Input

	ToSwitchRadiusConfigAuthServerOutput() SwitchRadiusConfigAuthServerOutput
	ToSwitchRadiusConfigAuthServerOutputWithContext(context.Context) SwitchRadiusConfigAuthServerOutput
}

type SwitchRadiusConfigAuthServerArgs struct {
	// IP/ hostname of RADIUS server
	Host           pulumi.StringInput  `pulumi:"host"`
	KeywrapEnabled pulumi.BoolPtrInput `pulumi:"keywrapEnabled"`
	// enum: `ascii`, `hex`
	KeywrapFormat pulumi.StringPtrInput `pulumi:"keywrapFormat"`
	KeywrapKek    pulumi.StringPtrInput `pulumi:"keywrapKek"`
	KeywrapMack   pulumi.StringPtrInput `pulumi:"keywrapMack"`
	Port          pulumi.StringPtrInput `pulumi:"port"`
	// Whether to require Message-Authenticator in requests
	RequireMessageAuthenticator pulumi.BoolPtrInput `pulumi:"requireMessageAuthenticator"`
	// Secret of RADIUS server
	Secret pulumi.StringInput `pulumi:"secret"`
}

func (SwitchRadiusConfigAuthServerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchRadiusConfigAuthServer)(nil)).Elem()
}

func (i SwitchRadiusConfigAuthServerArgs) ToSwitchRadiusConfigAuthServerOutput() SwitchRadiusConfigAuthServerOutput {
	return i.ToSwitchRadiusConfigAuthServerOutputWithContext(context.Background())
}

func (i SwitchRadiusConfigAuthServerArgs) ToSwitchRadiusConfigAuthServerOutputWithContext(ctx context.Context) SwitchRadiusConfigAuthServerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchRadiusConfigAuthServerOutput)
}

// SwitchRadiusConfigAuthServerArrayInput is an input type that accepts SwitchRadiusConfigAuthServerArray and SwitchRadiusConfigAuthServerArrayOutput values.
// You can construct a concrete instance of `SwitchRadiusConfigAuthServerArrayInput` via:
//
//	SwitchRadiusConfigAuthServerArray{ SwitchRadiusConfigAuthServerArgs{...} }
type SwitchRadiusConfigAuthServerArrayInput interface {
	pulumi.Input

	ToSwitchRadiusConfigAuthServerArrayOutput() SwitchRadiusConfigAuthServerArrayOutput
	ToSwitchRadiusConfigAuthServerArrayOutputWithContext(context.Context) SwitchRadiusConfigAuthServerArrayOutput
}

type SwitchRadiusConfigAuthServerArray []SwitchRadiusConfigAuthServerInput

func (SwitchRadiusConfigAuthServerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchRadiusConfigAuthServer)(nil)).Elem()
}

func (i SwitchRadiusConfigAuthServerArray) ToSwitchRadiusConfigAuthServerArrayOutput() SwitchRadiusConfigAuthServerArrayOutput {
	return i.ToSwitchRadiusConfigAuthServerArrayOutputWithContext(context.Background())
}

func (i SwitchRadiusConfigAuthServerArray) ToSwitchRadiusConfigAuthServerArrayOutputWithContext(ctx context.Context) SwitchRadiusConfigAuthServerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchRadiusConfigAuthServerArrayOutput)
}

type SwitchRadiusConfigAuthServerOutput struct{ *pulumi.OutputState }

func (SwitchRadiusConfigAuthServerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchRadiusConfigAuthServer)(nil)).Elem()
}

func (o SwitchRadiusConfigAuthServerOutput) ToSwitchRadiusConfigAuthServerOutput() SwitchRadiusConfigAuthServerOutput {
	return o
}

func (o SwitchRadiusConfigAuthServerOutput) ToSwitchRadiusConfigAuthServerOutputWithContext(ctx context.Context) SwitchRadiusConfigAuthServerOutput {
	return o
}

// IP/ hostname of RADIUS server
func (o SwitchRadiusConfigAuthServerOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v SwitchRadiusConfigAuthServer) string { return v.Host }).(pulumi.StringOutput)
}

func (o SwitchRadiusConfigAuthServerOutput) KeywrapEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SwitchRadiusConfigAuthServer) *bool { return v.KeywrapEnabled }).(pulumi.BoolPtrOutput)
}

// enum: `ascii`, `hex`
func (o SwitchRadiusConfigAuthServerOutput) KeywrapFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchRadiusConfigAuthServer) *string { return v.KeywrapFormat }).(pulumi.StringPtrOutput)
}

func (o SwitchRadiusConfigAuthServerOutput) KeywrapKek() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchRadiusConfigAuthServer) *string { return v.KeywrapKek }).(pulumi.StringPtrOutput)
}

func (o SwitchRadiusConfigAuthServerOutput) KeywrapMack() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchRadiusConfigAuthServer) *string { return v.KeywrapMack }).(pulumi.StringPtrOutput)
}

func (o SwitchRadiusConfigAuthServerOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchRadiusConfigAuthServer) *string { return v.Port }).(pulumi.StringPtrOutput)
}

// Whether to require Message-Authenticator in requests
func (o SwitchRadiusConfigAuthServerOutput) RequireMessageAuthenticator() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SwitchRadiusConfigAuthServer) *bool { return v.RequireMessageAuthenticator }).(pulumi.BoolPtrOutput)
}

// Secret of RADIUS server
func (o SwitchRadiusConfigAuthServerOutput) Secret() pulumi.StringOutput {
	return o.ApplyT(func(v SwitchRadiusConfigAuthServer) string { return v.Secret }).(pulumi.StringOutput)
}

type SwitchRadiusConfigAuthServerArrayOutput struct{ *pulumi.OutputState }

func (SwitchRadiusConfigAuthServerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchRadiusConfigAuthServer)(nil)).Elem()
}

func (o SwitchRadiusConfigAuthServerArrayOutput) ToSwitchRadiusConfigAuthServerArrayOutput() SwitchRadiusConfigAuthServerArrayOutput {
	return o
}

func (o SwitchRadiusConfigAuthServerArrayOutput) ToSwitchRadiusConfigAuthServerArrayOutputWithContext(ctx context.Context) SwitchRadiusConfigAuthServerArrayOutput {
	return o
}

func (o SwitchRadiusConfigAuthServerArrayOutput) Index(i pulumi.IntInput) SwitchRadiusConfigAuthServerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwitchRadiusConfigAuthServer {
		return vs[0].([]SwitchRadiusConfigAuthServer)[vs[1].(int)]
	}).(SwitchRadiusConfigAuthServerOutput)
}

type SwitchRemoteSyslog struct {
	Archive *SwitchRemoteSyslogArchive `pulumi:"archive"`
	Console *SwitchRemoteSyslogConsole `pulumi:"console"`
	Enabled *bool                      `pulumi:"enabled"`
	Files   []SwitchRemoteSyslogFile   `pulumi:"files"`
	// If sourceAddress is configured, will use the vlan firstly otherwise use source_ip
	Network          *string                    `pulumi:"network"`
	SendToAllServers *bool                      `pulumi:"sendToAllServers"`
	Servers          []SwitchRemoteSyslogServer `pulumi:"servers"`
	// enum: `millisecond`, `year`, `year millisecond`
	TimeFormat *string                  `pulumi:"timeFormat"`
	Users      []SwitchRemoteSyslogUser `pulumi:"users"`
}

// SwitchRemoteSyslogInput is an input type that accepts SwitchRemoteSyslogArgs and SwitchRemoteSyslogOutput values.
// You can construct a concrete instance of `SwitchRemoteSyslogInput` via:
//
//	SwitchRemoteSyslogArgs{...}
type SwitchRemoteSyslogInput interface {
	pulumi.Input

	ToSwitchRemoteSyslogOutput() SwitchRemoteSyslogOutput
	ToSwitchRemoteSyslogOutputWithContext(context.Context) SwitchRemoteSyslogOutput
}

type SwitchRemoteSyslogArgs struct {
	Archive SwitchRemoteSyslogArchivePtrInput `pulumi:"archive"`
	Console SwitchRemoteSyslogConsolePtrInput `pulumi:"console"`
	Enabled pulumi.BoolPtrInput               `pulumi:"enabled"`
	Files   SwitchRemoteSyslogFileArrayInput  `pulumi:"files"`
	// If sourceAddress is configured, will use the vlan firstly otherwise use source_ip
	Network          pulumi.StringPtrInput              `pulumi:"network"`
	SendToAllServers pulumi.BoolPtrInput                `pulumi:"sendToAllServers"`
	Servers          SwitchRemoteSyslogServerArrayInput `pulumi:"servers"`
	// enum: `millisecond`, `year`, `year millisecond`
	TimeFormat pulumi.StringPtrInput            `pulumi:"timeFormat"`
	Users      SwitchRemoteSyslogUserArrayInput `pulumi:"users"`
}

func (SwitchRemoteSyslogArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchRemoteSyslog)(nil)).Elem()
}

func (i SwitchRemoteSyslogArgs) ToSwitchRemoteSyslogOutput() SwitchRemoteSyslogOutput {
	return i.ToSwitchRemoteSyslogOutputWithContext(context.Background())
}

func (i SwitchRemoteSyslogArgs) ToSwitchRemoteSyslogOutputWithContext(ctx context.Context) SwitchRemoteSyslogOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchRemoteSyslogOutput)
}

func (i SwitchRemoteSyslogArgs) ToSwitchRemoteSyslogPtrOutput() SwitchRemoteSyslogPtrOutput {
	return i.ToSwitchRemoteSyslogPtrOutputWithContext(context.Background())
}

func (i SwitchRemoteSyslogArgs) ToSwitchRemoteSyslogPtrOutputWithContext(ctx context.Context) SwitchRemoteSyslogPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchRemoteSyslogOutput).ToSwitchRemoteSyslogPtrOutputWithContext(ctx)
}

// SwitchRemoteSyslogPtrInput is an input type that accepts SwitchRemoteSyslogArgs, SwitchRemoteSyslogPtr and SwitchRemoteSyslogPtrOutput values.
// You can construct a concrete instance of `SwitchRemoteSyslogPtrInput` via:
//
//	        SwitchRemoteSyslogArgs{...}
//
//	or:
//
//	        nil
type SwitchRemoteSyslogPtrInput interface {
	pulumi.Input

	ToSwitchRemoteSyslogPtrOutput() SwitchRemoteSyslogPtrOutput
	ToSwitchRemoteSyslogPtrOutputWithContext(context.Context) SwitchRemoteSyslogPtrOutput
}

type switchRemoteSyslogPtrType SwitchRemoteSyslogArgs

func SwitchRemoteSyslogPtr(v *SwitchRemoteSyslogArgs) SwitchRemoteSyslogPtrInput {
	return (*switchRemoteSyslogPtrType)(v)
}

func (*switchRemoteSyslogPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchRemoteSyslog)(nil)).Elem()
}

func (i *switchRemoteSyslogPtrType) ToSwitchRemoteSyslogPtrOutput() SwitchRemoteSyslogPtrOutput {
	return i.ToSwitchRemoteSyslogPtrOutputWithContext(context.Background())
}

func (i *switchRemoteSyslogPtrType) ToSwitchRemoteSyslogPtrOutputWithContext(ctx context.Context) SwitchRemoteSyslogPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchRemoteSyslogPtrOutput)
}

type SwitchRemoteSyslogOutput struct{ *pulumi.OutputState }

func (SwitchRemoteSyslogOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchRemoteSyslog)(nil)).Elem()
}

func (o SwitchRemoteSyslogOutput) ToSwitchRemoteSyslogOutput() SwitchRemoteSyslogOutput {
	return o
}

func (o SwitchRemoteSyslogOutput) ToSwitchRemoteSyslogOutputWithContext(ctx context.Context) SwitchRemoteSyslogOutput {
	return o
}

func (o SwitchRemoteSyslogOutput) ToSwitchRemoteSyslogPtrOutput() SwitchRemoteSyslogPtrOutput {
	return o.ToSwitchRemoteSyslogPtrOutputWithContext(context.Background())
}

func (o SwitchRemoteSyslogOutput) ToSwitchRemoteSyslogPtrOutputWithContext(ctx context.Context) SwitchRemoteSyslogPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SwitchRemoteSyslog) *SwitchRemoteSyslog {
		return &v
	}).(SwitchRemoteSyslogPtrOutput)
}

func (o SwitchRemoteSyslogOutput) Archive() SwitchRemoteSyslogArchivePtrOutput {
	return o.ApplyT(func(v SwitchRemoteSyslog) *SwitchRemoteSyslogArchive { return v.Archive }).(SwitchRemoteSyslogArchivePtrOutput)
}

func (o SwitchRemoteSyslogOutput) Console() SwitchRemoteSyslogConsolePtrOutput {
	return o.ApplyT(func(v SwitchRemoteSyslog) *SwitchRemoteSyslogConsole { return v.Console }).(SwitchRemoteSyslogConsolePtrOutput)
}

func (o SwitchRemoteSyslogOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SwitchRemoteSyslog) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

func (o SwitchRemoteSyslogOutput) Files() SwitchRemoteSyslogFileArrayOutput {
	return o.ApplyT(func(v SwitchRemoteSyslog) []SwitchRemoteSyslogFile { return v.Files }).(SwitchRemoteSyslogFileArrayOutput)
}

// If sourceAddress is configured, will use the vlan firstly otherwise use source_ip
func (o SwitchRemoteSyslogOutput) Network() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchRemoteSyslog) *string { return v.Network }).(pulumi.StringPtrOutput)
}

func (o SwitchRemoteSyslogOutput) SendToAllServers() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SwitchRemoteSyslog) *bool { return v.SendToAllServers }).(pulumi.BoolPtrOutput)
}

func (o SwitchRemoteSyslogOutput) Servers() SwitchRemoteSyslogServerArrayOutput {
	return o.ApplyT(func(v SwitchRemoteSyslog) []SwitchRemoteSyslogServer { return v.Servers }).(SwitchRemoteSyslogServerArrayOutput)
}

// enum: `millisecond`, `year`, `year millisecond`
func (o SwitchRemoteSyslogOutput) TimeFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchRemoteSyslog) *string { return v.TimeFormat }).(pulumi.StringPtrOutput)
}

func (o SwitchRemoteSyslogOutput) Users() SwitchRemoteSyslogUserArrayOutput {
	return o.ApplyT(func(v SwitchRemoteSyslog) []SwitchRemoteSyslogUser { return v.Users }).(SwitchRemoteSyslogUserArrayOutput)
}

type SwitchRemoteSyslogPtrOutput struct{ *pulumi.OutputState }

func (SwitchRemoteSyslogPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchRemoteSyslog)(nil)).Elem()
}

func (o SwitchRemoteSyslogPtrOutput) ToSwitchRemoteSyslogPtrOutput() SwitchRemoteSyslogPtrOutput {
	return o
}

func (o SwitchRemoteSyslogPtrOutput) ToSwitchRemoteSyslogPtrOutputWithContext(ctx context.Context) SwitchRemoteSyslogPtrOutput {
	return o
}

func (o SwitchRemoteSyslogPtrOutput) Elem() SwitchRemoteSyslogOutput {
	return o.ApplyT(func(v *SwitchRemoteSyslog) SwitchRemoteSyslog {
		if v != nil {
			return *v
		}
		var ret SwitchRemoteSyslog
		return ret
	}).(SwitchRemoteSyslogOutput)
}

func (o SwitchRemoteSyslogPtrOutput) Archive() SwitchRemoteSyslogArchivePtrOutput {
	return o.ApplyT(func(v *SwitchRemoteSyslog) *SwitchRemoteSyslogArchive {
		if v == nil {
			return nil
		}
		return v.Archive
	}).(SwitchRemoteSyslogArchivePtrOutput)
}

func (o SwitchRemoteSyslogPtrOutput) Console() SwitchRemoteSyslogConsolePtrOutput {
	return o.ApplyT(func(v *SwitchRemoteSyslog) *SwitchRemoteSyslogConsole {
		if v == nil {
			return nil
		}
		return v.Console
	}).(SwitchRemoteSyslogConsolePtrOutput)
}

func (o SwitchRemoteSyslogPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SwitchRemoteSyslog) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

func (o SwitchRemoteSyslogPtrOutput) Files() SwitchRemoteSyslogFileArrayOutput {
	return o.ApplyT(func(v *SwitchRemoteSyslog) []SwitchRemoteSyslogFile {
		if v == nil {
			return nil
		}
		return v.Files
	}).(SwitchRemoteSyslogFileArrayOutput)
}

// If sourceAddress is configured, will use the vlan firstly otherwise use source_ip
func (o SwitchRemoteSyslogPtrOutput) Network() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchRemoteSyslog) *string {
		if v == nil {
			return nil
		}
		return v.Network
	}).(pulumi.StringPtrOutput)
}

func (o SwitchRemoteSyslogPtrOutput) SendToAllServers() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SwitchRemoteSyslog) *bool {
		if v == nil {
			return nil
		}
		return v.SendToAllServers
	}).(pulumi.BoolPtrOutput)
}

func (o SwitchRemoteSyslogPtrOutput) Servers() SwitchRemoteSyslogServerArrayOutput {
	return o.ApplyT(func(v *SwitchRemoteSyslog) []SwitchRemoteSyslogServer {
		if v == nil {
			return nil
		}
		return v.Servers
	}).(SwitchRemoteSyslogServerArrayOutput)
}

// enum: `millisecond`, `year`, `year millisecond`
func (o SwitchRemoteSyslogPtrOutput) TimeFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchRemoteSyslog) *string {
		if v == nil {
			return nil
		}
		return v.TimeFormat
	}).(pulumi.StringPtrOutput)
}

func (o SwitchRemoteSyslogPtrOutput) Users() SwitchRemoteSyslogUserArrayOutput {
	return o.ApplyT(func(v *SwitchRemoteSyslog) []SwitchRemoteSyslogUser {
		if v == nil {
			return nil
		}
		return v.Users
	}).(SwitchRemoteSyslogUserArrayOutput)
}

type SwitchRemoteSyslogArchive struct {
	Files *string `pulumi:"files"`
	Size  *string `pulumi:"size"`
}

// SwitchRemoteSyslogArchiveInput is an input type that accepts SwitchRemoteSyslogArchiveArgs and SwitchRemoteSyslogArchiveOutput values.
// You can construct a concrete instance of `SwitchRemoteSyslogArchiveInput` via:
//
//	SwitchRemoteSyslogArchiveArgs{...}
type SwitchRemoteSyslogArchiveInput interface {
	pulumi.Input

	ToSwitchRemoteSyslogArchiveOutput() SwitchRemoteSyslogArchiveOutput
	ToSwitchRemoteSyslogArchiveOutputWithContext(context.Context) SwitchRemoteSyslogArchiveOutput
}

type SwitchRemoteSyslogArchiveArgs struct {
	Files pulumi.StringPtrInput `pulumi:"files"`
	Size  pulumi.StringPtrInput `pulumi:"size"`
}

func (SwitchRemoteSyslogArchiveArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchRemoteSyslogArchive)(nil)).Elem()
}

func (i SwitchRemoteSyslogArchiveArgs) ToSwitchRemoteSyslogArchiveOutput() SwitchRemoteSyslogArchiveOutput {
	return i.ToSwitchRemoteSyslogArchiveOutputWithContext(context.Background())
}

func (i SwitchRemoteSyslogArchiveArgs) ToSwitchRemoteSyslogArchiveOutputWithContext(ctx context.Context) SwitchRemoteSyslogArchiveOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchRemoteSyslogArchiveOutput)
}

func (i SwitchRemoteSyslogArchiveArgs) ToSwitchRemoteSyslogArchivePtrOutput() SwitchRemoteSyslogArchivePtrOutput {
	return i.ToSwitchRemoteSyslogArchivePtrOutputWithContext(context.Background())
}

func (i SwitchRemoteSyslogArchiveArgs) ToSwitchRemoteSyslogArchivePtrOutputWithContext(ctx context.Context) SwitchRemoteSyslogArchivePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchRemoteSyslogArchiveOutput).ToSwitchRemoteSyslogArchivePtrOutputWithContext(ctx)
}

// SwitchRemoteSyslogArchivePtrInput is an input type that accepts SwitchRemoteSyslogArchiveArgs, SwitchRemoteSyslogArchivePtr and SwitchRemoteSyslogArchivePtrOutput values.
// You can construct a concrete instance of `SwitchRemoteSyslogArchivePtrInput` via:
//
//	        SwitchRemoteSyslogArchiveArgs{...}
//
//	or:
//
//	        nil
type SwitchRemoteSyslogArchivePtrInput interface {
	pulumi.Input

	ToSwitchRemoteSyslogArchivePtrOutput() SwitchRemoteSyslogArchivePtrOutput
	ToSwitchRemoteSyslogArchivePtrOutputWithContext(context.Context) SwitchRemoteSyslogArchivePtrOutput
}

type switchRemoteSyslogArchivePtrType SwitchRemoteSyslogArchiveArgs

func SwitchRemoteSyslogArchivePtr(v *SwitchRemoteSyslogArchiveArgs) SwitchRemoteSyslogArchivePtrInput {
	return (*switchRemoteSyslogArchivePtrType)(v)
}

func (*switchRemoteSyslogArchivePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchRemoteSyslogArchive)(nil)).Elem()
}

func (i *switchRemoteSyslogArchivePtrType) ToSwitchRemoteSyslogArchivePtrOutput() SwitchRemoteSyslogArchivePtrOutput {
	return i.ToSwitchRemoteSyslogArchivePtrOutputWithContext(context.Background())
}

func (i *switchRemoteSyslogArchivePtrType) ToSwitchRemoteSyslogArchivePtrOutputWithContext(ctx context.Context) SwitchRemoteSyslogArchivePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchRemoteSyslogArchivePtrOutput)
}

type SwitchRemoteSyslogArchiveOutput struct{ *pulumi.OutputState }

func (SwitchRemoteSyslogArchiveOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchRemoteSyslogArchive)(nil)).Elem()
}

func (o SwitchRemoteSyslogArchiveOutput) ToSwitchRemoteSyslogArchiveOutput() SwitchRemoteSyslogArchiveOutput {
	return o
}

func (o SwitchRemoteSyslogArchiveOutput) ToSwitchRemoteSyslogArchiveOutputWithContext(ctx context.Context) SwitchRemoteSyslogArchiveOutput {
	return o
}

func (o SwitchRemoteSyslogArchiveOutput) ToSwitchRemoteSyslogArchivePtrOutput() SwitchRemoteSyslogArchivePtrOutput {
	return o.ToSwitchRemoteSyslogArchivePtrOutputWithContext(context.Background())
}

func (o SwitchRemoteSyslogArchiveOutput) ToSwitchRemoteSyslogArchivePtrOutputWithContext(ctx context.Context) SwitchRemoteSyslogArchivePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SwitchRemoteSyslogArchive) *SwitchRemoteSyslogArchive {
		return &v
	}).(SwitchRemoteSyslogArchivePtrOutput)
}

func (o SwitchRemoteSyslogArchiveOutput) Files() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchRemoteSyslogArchive) *string { return v.Files }).(pulumi.StringPtrOutput)
}

func (o SwitchRemoteSyslogArchiveOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchRemoteSyslogArchive) *string { return v.Size }).(pulumi.StringPtrOutput)
}

type SwitchRemoteSyslogArchivePtrOutput struct{ *pulumi.OutputState }

func (SwitchRemoteSyslogArchivePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchRemoteSyslogArchive)(nil)).Elem()
}

func (o SwitchRemoteSyslogArchivePtrOutput) ToSwitchRemoteSyslogArchivePtrOutput() SwitchRemoteSyslogArchivePtrOutput {
	return o
}

func (o SwitchRemoteSyslogArchivePtrOutput) ToSwitchRemoteSyslogArchivePtrOutputWithContext(ctx context.Context) SwitchRemoteSyslogArchivePtrOutput {
	return o
}

func (o SwitchRemoteSyslogArchivePtrOutput) Elem() SwitchRemoteSyslogArchiveOutput {
	return o.ApplyT(func(v *SwitchRemoteSyslogArchive) SwitchRemoteSyslogArchive {
		if v != nil {
			return *v
		}
		var ret SwitchRemoteSyslogArchive
		return ret
	}).(SwitchRemoteSyslogArchiveOutput)
}

func (o SwitchRemoteSyslogArchivePtrOutput) Files() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchRemoteSyslogArchive) *string {
		if v == nil {
			return nil
		}
		return v.Files
	}).(pulumi.StringPtrOutput)
}

func (o SwitchRemoteSyslogArchivePtrOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchRemoteSyslogArchive) *string {
		if v == nil {
			return nil
		}
		return v.Size
	}).(pulumi.StringPtrOutput)
}

type SwitchRemoteSyslogConsole struct {
	Contents []SwitchRemoteSyslogConsoleContent `pulumi:"contents"`
}

// SwitchRemoteSyslogConsoleInput is an input type that accepts SwitchRemoteSyslogConsoleArgs and SwitchRemoteSyslogConsoleOutput values.
// You can construct a concrete instance of `SwitchRemoteSyslogConsoleInput` via:
//
//	SwitchRemoteSyslogConsoleArgs{...}
type SwitchRemoteSyslogConsoleInput interface {
	pulumi.Input

	ToSwitchRemoteSyslogConsoleOutput() SwitchRemoteSyslogConsoleOutput
	ToSwitchRemoteSyslogConsoleOutputWithContext(context.Context) SwitchRemoteSyslogConsoleOutput
}

type SwitchRemoteSyslogConsoleArgs struct {
	Contents SwitchRemoteSyslogConsoleContentArrayInput `pulumi:"contents"`
}

func (SwitchRemoteSyslogConsoleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchRemoteSyslogConsole)(nil)).Elem()
}

func (i SwitchRemoteSyslogConsoleArgs) ToSwitchRemoteSyslogConsoleOutput() SwitchRemoteSyslogConsoleOutput {
	return i.ToSwitchRemoteSyslogConsoleOutputWithContext(context.Background())
}

func (i SwitchRemoteSyslogConsoleArgs) ToSwitchRemoteSyslogConsoleOutputWithContext(ctx context.Context) SwitchRemoteSyslogConsoleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchRemoteSyslogConsoleOutput)
}

func (i SwitchRemoteSyslogConsoleArgs) ToSwitchRemoteSyslogConsolePtrOutput() SwitchRemoteSyslogConsolePtrOutput {
	return i.ToSwitchRemoteSyslogConsolePtrOutputWithContext(context.Background())
}

func (i SwitchRemoteSyslogConsoleArgs) ToSwitchRemoteSyslogConsolePtrOutputWithContext(ctx context.Context) SwitchRemoteSyslogConsolePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchRemoteSyslogConsoleOutput).ToSwitchRemoteSyslogConsolePtrOutputWithContext(ctx)
}

// SwitchRemoteSyslogConsolePtrInput is an input type that accepts SwitchRemoteSyslogConsoleArgs, SwitchRemoteSyslogConsolePtr and SwitchRemoteSyslogConsolePtrOutput values.
// You can construct a concrete instance of `SwitchRemoteSyslogConsolePtrInput` via:
//
//	        SwitchRemoteSyslogConsoleArgs{...}
//
//	or:
//
//	        nil
type SwitchRemoteSyslogConsolePtrInput interface {
	pulumi.Input

	ToSwitchRemoteSyslogConsolePtrOutput() SwitchRemoteSyslogConsolePtrOutput
	ToSwitchRemoteSyslogConsolePtrOutputWithContext(context.Context) SwitchRemoteSyslogConsolePtrOutput
}

type switchRemoteSyslogConsolePtrType SwitchRemoteSyslogConsoleArgs

func SwitchRemoteSyslogConsolePtr(v *SwitchRemoteSyslogConsoleArgs) SwitchRemoteSyslogConsolePtrInput {
	return (*switchRemoteSyslogConsolePtrType)(v)
}

func (*switchRemoteSyslogConsolePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchRemoteSyslogConsole)(nil)).Elem()
}

func (i *switchRemoteSyslogConsolePtrType) ToSwitchRemoteSyslogConsolePtrOutput() SwitchRemoteSyslogConsolePtrOutput {
	return i.ToSwitchRemoteSyslogConsolePtrOutputWithContext(context.Background())
}

func (i *switchRemoteSyslogConsolePtrType) ToSwitchRemoteSyslogConsolePtrOutputWithContext(ctx context.Context) SwitchRemoteSyslogConsolePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchRemoteSyslogConsolePtrOutput)
}

type SwitchRemoteSyslogConsoleOutput struct{ *pulumi.OutputState }

func (SwitchRemoteSyslogConsoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchRemoteSyslogConsole)(nil)).Elem()
}

func (o SwitchRemoteSyslogConsoleOutput) ToSwitchRemoteSyslogConsoleOutput() SwitchRemoteSyslogConsoleOutput {
	return o
}

func (o SwitchRemoteSyslogConsoleOutput) ToSwitchRemoteSyslogConsoleOutputWithContext(ctx context.Context) SwitchRemoteSyslogConsoleOutput {
	return o
}

func (o SwitchRemoteSyslogConsoleOutput) ToSwitchRemoteSyslogConsolePtrOutput() SwitchRemoteSyslogConsolePtrOutput {
	return o.ToSwitchRemoteSyslogConsolePtrOutputWithContext(context.Background())
}

func (o SwitchRemoteSyslogConsoleOutput) ToSwitchRemoteSyslogConsolePtrOutputWithContext(ctx context.Context) SwitchRemoteSyslogConsolePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SwitchRemoteSyslogConsole) *SwitchRemoteSyslogConsole {
		return &v
	}).(SwitchRemoteSyslogConsolePtrOutput)
}

func (o SwitchRemoteSyslogConsoleOutput) Contents() SwitchRemoteSyslogConsoleContentArrayOutput {
	return o.ApplyT(func(v SwitchRemoteSyslogConsole) []SwitchRemoteSyslogConsoleContent { return v.Contents }).(SwitchRemoteSyslogConsoleContentArrayOutput)
}

type SwitchRemoteSyslogConsolePtrOutput struct{ *pulumi.OutputState }

func (SwitchRemoteSyslogConsolePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchRemoteSyslogConsole)(nil)).Elem()
}

func (o SwitchRemoteSyslogConsolePtrOutput) ToSwitchRemoteSyslogConsolePtrOutput() SwitchRemoteSyslogConsolePtrOutput {
	return o
}

func (o SwitchRemoteSyslogConsolePtrOutput) ToSwitchRemoteSyslogConsolePtrOutputWithContext(ctx context.Context) SwitchRemoteSyslogConsolePtrOutput {
	return o
}

func (o SwitchRemoteSyslogConsolePtrOutput) Elem() SwitchRemoteSyslogConsoleOutput {
	return o.ApplyT(func(v *SwitchRemoteSyslogConsole) SwitchRemoteSyslogConsole {
		if v != nil {
			return *v
		}
		var ret SwitchRemoteSyslogConsole
		return ret
	}).(SwitchRemoteSyslogConsoleOutput)
}

func (o SwitchRemoteSyslogConsolePtrOutput) Contents() SwitchRemoteSyslogConsoleContentArrayOutput {
	return o.ApplyT(func(v *SwitchRemoteSyslogConsole) []SwitchRemoteSyslogConsoleContent {
		if v == nil {
			return nil
		}
		return v.Contents
	}).(SwitchRemoteSyslogConsoleContentArrayOutput)
}

type SwitchRemoteSyslogConsoleContent struct {
	// enum: `any`, `authorization`, `change-log`, `config`, `conflict-log`, `daemon`, `dfc`, `external`, `firewall`, `ftp`, `interactive-commands`, `kernel`, `ntp`, `pfe`, `security`, `user`
	Facility *string `pulumi:"facility"`
	// enum: `alert`, `any`, `critical`, `emergency`, `error`, `info`, `notice`, `warning`
	Severity *string `pulumi:"severity"`
}

// SwitchRemoteSyslogConsoleContentInput is an input type that accepts SwitchRemoteSyslogConsoleContentArgs and SwitchRemoteSyslogConsoleContentOutput values.
// You can construct a concrete instance of `SwitchRemoteSyslogConsoleContentInput` via:
//
//	SwitchRemoteSyslogConsoleContentArgs{...}
type SwitchRemoteSyslogConsoleContentInput interface {
	pulumi.Input

	ToSwitchRemoteSyslogConsoleContentOutput() SwitchRemoteSyslogConsoleContentOutput
	ToSwitchRemoteSyslogConsoleContentOutputWithContext(context.Context) SwitchRemoteSyslogConsoleContentOutput
}

type SwitchRemoteSyslogConsoleContentArgs struct {
	// enum: `any`, `authorization`, `change-log`, `config`, `conflict-log`, `daemon`, `dfc`, `external`, `firewall`, `ftp`, `interactive-commands`, `kernel`, `ntp`, `pfe`, `security`, `user`
	Facility pulumi.StringPtrInput `pulumi:"facility"`
	// enum: `alert`, `any`, `critical`, `emergency`, `error`, `info`, `notice`, `warning`
	Severity pulumi.StringPtrInput `pulumi:"severity"`
}

func (SwitchRemoteSyslogConsoleContentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchRemoteSyslogConsoleContent)(nil)).Elem()
}

func (i SwitchRemoteSyslogConsoleContentArgs) ToSwitchRemoteSyslogConsoleContentOutput() SwitchRemoteSyslogConsoleContentOutput {
	return i.ToSwitchRemoteSyslogConsoleContentOutputWithContext(context.Background())
}

func (i SwitchRemoteSyslogConsoleContentArgs) ToSwitchRemoteSyslogConsoleContentOutputWithContext(ctx context.Context) SwitchRemoteSyslogConsoleContentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchRemoteSyslogConsoleContentOutput)
}

// SwitchRemoteSyslogConsoleContentArrayInput is an input type that accepts SwitchRemoteSyslogConsoleContentArray and SwitchRemoteSyslogConsoleContentArrayOutput values.
// You can construct a concrete instance of `SwitchRemoteSyslogConsoleContentArrayInput` via:
//
//	SwitchRemoteSyslogConsoleContentArray{ SwitchRemoteSyslogConsoleContentArgs{...} }
type SwitchRemoteSyslogConsoleContentArrayInput interface {
	pulumi.Input

	ToSwitchRemoteSyslogConsoleContentArrayOutput() SwitchRemoteSyslogConsoleContentArrayOutput
	ToSwitchRemoteSyslogConsoleContentArrayOutputWithContext(context.Context) SwitchRemoteSyslogConsoleContentArrayOutput
}

type SwitchRemoteSyslogConsoleContentArray []SwitchRemoteSyslogConsoleContentInput

func (SwitchRemoteSyslogConsoleContentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchRemoteSyslogConsoleContent)(nil)).Elem()
}

func (i SwitchRemoteSyslogConsoleContentArray) ToSwitchRemoteSyslogConsoleContentArrayOutput() SwitchRemoteSyslogConsoleContentArrayOutput {
	return i.ToSwitchRemoteSyslogConsoleContentArrayOutputWithContext(context.Background())
}

func (i SwitchRemoteSyslogConsoleContentArray) ToSwitchRemoteSyslogConsoleContentArrayOutputWithContext(ctx context.Context) SwitchRemoteSyslogConsoleContentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchRemoteSyslogConsoleContentArrayOutput)
}

type SwitchRemoteSyslogConsoleContentOutput struct{ *pulumi.OutputState }

func (SwitchRemoteSyslogConsoleContentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchRemoteSyslogConsoleContent)(nil)).Elem()
}

func (o SwitchRemoteSyslogConsoleContentOutput) ToSwitchRemoteSyslogConsoleContentOutput() SwitchRemoteSyslogConsoleContentOutput {
	return o
}

func (o SwitchRemoteSyslogConsoleContentOutput) ToSwitchRemoteSyslogConsoleContentOutputWithContext(ctx context.Context) SwitchRemoteSyslogConsoleContentOutput {
	return o
}

// enum: `any`, `authorization`, `change-log`, `config`, `conflict-log`, `daemon`, `dfc`, `external`, `firewall`, `ftp`, `interactive-commands`, `kernel`, `ntp`, `pfe`, `security`, `user`
func (o SwitchRemoteSyslogConsoleContentOutput) Facility() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchRemoteSyslogConsoleContent) *string { return v.Facility }).(pulumi.StringPtrOutput)
}

// enum: `alert`, `any`, `critical`, `emergency`, `error`, `info`, `notice`, `warning`
func (o SwitchRemoteSyslogConsoleContentOutput) Severity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchRemoteSyslogConsoleContent) *string { return v.Severity }).(pulumi.StringPtrOutput)
}

type SwitchRemoteSyslogConsoleContentArrayOutput struct{ *pulumi.OutputState }

func (SwitchRemoteSyslogConsoleContentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchRemoteSyslogConsoleContent)(nil)).Elem()
}

func (o SwitchRemoteSyslogConsoleContentArrayOutput) ToSwitchRemoteSyslogConsoleContentArrayOutput() SwitchRemoteSyslogConsoleContentArrayOutput {
	return o
}

func (o SwitchRemoteSyslogConsoleContentArrayOutput) ToSwitchRemoteSyslogConsoleContentArrayOutputWithContext(ctx context.Context) SwitchRemoteSyslogConsoleContentArrayOutput {
	return o
}

func (o SwitchRemoteSyslogConsoleContentArrayOutput) Index(i pulumi.IntInput) SwitchRemoteSyslogConsoleContentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwitchRemoteSyslogConsoleContent {
		return vs[0].([]SwitchRemoteSyslogConsoleContent)[vs[1].(int)]
	}).(SwitchRemoteSyslogConsoleContentOutput)
}

type SwitchRemoteSyslogFile struct {
	Archive          *SwitchRemoteSyslogFileArchive  `pulumi:"archive"`
	Contents         []SwitchRemoteSyslogFileContent `pulumi:"contents"`
	ExplicitPriority *bool                           `pulumi:"explicitPriority"`
	File             *string                         `pulumi:"file"`
	Match            *string                         `pulumi:"match"`
	StructuredData   *bool                           `pulumi:"structuredData"`
}

// SwitchRemoteSyslogFileInput is an input type that accepts SwitchRemoteSyslogFileArgs and SwitchRemoteSyslogFileOutput values.
// You can construct a concrete instance of `SwitchRemoteSyslogFileInput` via:
//
//	SwitchRemoteSyslogFileArgs{...}
type SwitchRemoteSyslogFileInput interface {
	pulumi.Input

	ToSwitchRemoteSyslogFileOutput() SwitchRemoteSyslogFileOutput
	ToSwitchRemoteSyslogFileOutputWithContext(context.Context) SwitchRemoteSyslogFileOutput
}

type SwitchRemoteSyslogFileArgs struct {
	Archive          SwitchRemoteSyslogFileArchivePtrInput   `pulumi:"archive"`
	Contents         SwitchRemoteSyslogFileContentArrayInput `pulumi:"contents"`
	ExplicitPriority pulumi.BoolPtrInput                     `pulumi:"explicitPriority"`
	File             pulumi.StringPtrInput                   `pulumi:"file"`
	Match            pulumi.StringPtrInput                   `pulumi:"match"`
	StructuredData   pulumi.BoolPtrInput                     `pulumi:"structuredData"`
}

func (SwitchRemoteSyslogFileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchRemoteSyslogFile)(nil)).Elem()
}

func (i SwitchRemoteSyslogFileArgs) ToSwitchRemoteSyslogFileOutput() SwitchRemoteSyslogFileOutput {
	return i.ToSwitchRemoteSyslogFileOutputWithContext(context.Background())
}

func (i SwitchRemoteSyslogFileArgs) ToSwitchRemoteSyslogFileOutputWithContext(ctx context.Context) SwitchRemoteSyslogFileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchRemoteSyslogFileOutput)
}

// SwitchRemoteSyslogFileArrayInput is an input type that accepts SwitchRemoteSyslogFileArray and SwitchRemoteSyslogFileArrayOutput values.
// You can construct a concrete instance of `SwitchRemoteSyslogFileArrayInput` via:
//
//	SwitchRemoteSyslogFileArray{ SwitchRemoteSyslogFileArgs{...} }
type SwitchRemoteSyslogFileArrayInput interface {
	pulumi.Input

	ToSwitchRemoteSyslogFileArrayOutput() SwitchRemoteSyslogFileArrayOutput
	ToSwitchRemoteSyslogFileArrayOutputWithContext(context.Context) SwitchRemoteSyslogFileArrayOutput
}

type SwitchRemoteSyslogFileArray []SwitchRemoteSyslogFileInput

func (SwitchRemoteSyslogFileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchRemoteSyslogFile)(nil)).Elem()
}

func (i SwitchRemoteSyslogFileArray) ToSwitchRemoteSyslogFileArrayOutput() SwitchRemoteSyslogFileArrayOutput {
	return i.ToSwitchRemoteSyslogFileArrayOutputWithContext(context.Background())
}

func (i SwitchRemoteSyslogFileArray) ToSwitchRemoteSyslogFileArrayOutputWithContext(ctx context.Context) SwitchRemoteSyslogFileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchRemoteSyslogFileArrayOutput)
}

type SwitchRemoteSyslogFileOutput struct{ *pulumi.OutputState }

func (SwitchRemoteSyslogFileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchRemoteSyslogFile)(nil)).Elem()
}

func (o SwitchRemoteSyslogFileOutput) ToSwitchRemoteSyslogFileOutput() SwitchRemoteSyslogFileOutput {
	return o
}

func (o SwitchRemoteSyslogFileOutput) ToSwitchRemoteSyslogFileOutputWithContext(ctx context.Context) SwitchRemoteSyslogFileOutput {
	return o
}

func (o SwitchRemoteSyslogFileOutput) Archive() SwitchRemoteSyslogFileArchivePtrOutput {
	return o.ApplyT(func(v SwitchRemoteSyslogFile) *SwitchRemoteSyslogFileArchive { return v.Archive }).(SwitchRemoteSyslogFileArchivePtrOutput)
}

func (o SwitchRemoteSyslogFileOutput) Contents() SwitchRemoteSyslogFileContentArrayOutput {
	return o.ApplyT(func(v SwitchRemoteSyslogFile) []SwitchRemoteSyslogFileContent { return v.Contents }).(SwitchRemoteSyslogFileContentArrayOutput)
}

func (o SwitchRemoteSyslogFileOutput) ExplicitPriority() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SwitchRemoteSyslogFile) *bool { return v.ExplicitPriority }).(pulumi.BoolPtrOutput)
}

func (o SwitchRemoteSyslogFileOutput) File() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchRemoteSyslogFile) *string { return v.File }).(pulumi.StringPtrOutput)
}

func (o SwitchRemoteSyslogFileOutput) Match() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchRemoteSyslogFile) *string { return v.Match }).(pulumi.StringPtrOutput)
}

func (o SwitchRemoteSyslogFileOutput) StructuredData() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SwitchRemoteSyslogFile) *bool { return v.StructuredData }).(pulumi.BoolPtrOutput)
}

type SwitchRemoteSyslogFileArrayOutput struct{ *pulumi.OutputState }

func (SwitchRemoteSyslogFileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchRemoteSyslogFile)(nil)).Elem()
}

func (o SwitchRemoteSyslogFileArrayOutput) ToSwitchRemoteSyslogFileArrayOutput() SwitchRemoteSyslogFileArrayOutput {
	return o
}

func (o SwitchRemoteSyslogFileArrayOutput) ToSwitchRemoteSyslogFileArrayOutputWithContext(ctx context.Context) SwitchRemoteSyslogFileArrayOutput {
	return o
}

func (o SwitchRemoteSyslogFileArrayOutput) Index(i pulumi.IntInput) SwitchRemoteSyslogFileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwitchRemoteSyslogFile {
		return vs[0].([]SwitchRemoteSyslogFile)[vs[1].(int)]
	}).(SwitchRemoteSyslogFileOutput)
}

type SwitchRemoteSyslogFileArchive struct {
	Files *string `pulumi:"files"`
	Size  *string `pulumi:"size"`
}

// SwitchRemoteSyslogFileArchiveInput is an input type that accepts SwitchRemoteSyslogFileArchiveArgs and SwitchRemoteSyslogFileArchiveOutput values.
// You can construct a concrete instance of `SwitchRemoteSyslogFileArchiveInput` via:
//
//	SwitchRemoteSyslogFileArchiveArgs{...}
type SwitchRemoteSyslogFileArchiveInput interface {
	pulumi.Input

	ToSwitchRemoteSyslogFileArchiveOutput() SwitchRemoteSyslogFileArchiveOutput
	ToSwitchRemoteSyslogFileArchiveOutputWithContext(context.Context) SwitchRemoteSyslogFileArchiveOutput
}

type SwitchRemoteSyslogFileArchiveArgs struct {
	Files pulumi.StringPtrInput `pulumi:"files"`
	Size  pulumi.StringPtrInput `pulumi:"size"`
}

func (SwitchRemoteSyslogFileArchiveArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchRemoteSyslogFileArchive)(nil)).Elem()
}

func (i SwitchRemoteSyslogFileArchiveArgs) ToSwitchRemoteSyslogFileArchiveOutput() SwitchRemoteSyslogFileArchiveOutput {
	return i.ToSwitchRemoteSyslogFileArchiveOutputWithContext(context.Background())
}

func (i SwitchRemoteSyslogFileArchiveArgs) ToSwitchRemoteSyslogFileArchiveOutputWithContext(ctx context.Context) SwitchRemoteSyslogFileArchiveOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchRemoteSyslogFileArchiveOutput)
}

func (i SwitchRemoteSyslogFileArchiveArgs) ToSwitchRemoteSyslogFileArchivePtrOutput() SwitchRemoteSyslogFileArchivePtrOutput {
	return i.ToSwitchRemoteSyslogFileArchivePtrOutputWithContext(context.Background())
}

func (i SwitchRemoteSyslogFileArchiveArgs) ToSwitchRemoteSyslogFileArchivePtrOutputWithContext(ctx context.Context) SwitchRemoteSyslogFileArchivePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchRemoteSyslogFileArchiveOutput).ToSwitchRemoteSyslogFileArchivePtrOutputWithContext(ctx)
}

// SwitchRemoteSyslogFileArchivePtrInput is an input type that accepts SwitchRemoteSyslogFileArchiveArgs, SwitchRemoteSyslogFileArchivePtr and SwitchRemoteSyslogFileArchivePtrOutput values.
// You can construct a concrete instance of `SwitchRemoteSyslogFileArchivePtrInput` via:
//
//	        SwitchRemoteSyslogFileArchiveArgs{...}
//
//	or:
//
//	        nil
type SwitchRemoteSyslogFileArchivePtrInput interface {
	pulumi.Input

	ToSwitchRemoteSyslogFileArchivePtrOutput() SwitchRemoteSyslogFileArchivePtrOutput
	ToSwitchRemoteSyslogFileArchivePtrOutputWithContext(context.Context) SwitchRemoteSyslogFileArchivePtrOutput
}

type switchRemoteSyslogFileArchivePtrType SwitchRemoteSyslogFileArchiveArgs

func SwitchRemoteSyslogFileArchivePtr(v *SwitchRemoteSyslogFileArchiveArgs) SwitchRemoteSyslogFileArchivePtrInput {
	return (*switchRemoteSyslogFileArchivePtrType)(v)
}

func (*switchRemoteSyslogFileArchivePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchRemoteSyslogFileArchive)(nil)).Elem()
}

func (i *switchRemoteSyslogFileArchivePtrType) ToSwitchRemoteSyslogFileArchivePtrOutput() SwitchRemoteSyslogFileArchivePtrOutput {
	return i.ToSwitchRemoteSyslogFileArchivePtrOutputWithContext(context.Background())
}

func (i *switchRemoteSyslogFileArchivePtrType) ToSwitchRemoteSyslogFileArchivePtrOutputWithContext(ctx context.Context) SwitchRemoteSyslogFileArchivePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchRemoteSyslogFileArchivePtrOutput)
}

type SwitchRemoteSyslogFileArchiveOutput struct{ *pulumi.OutputState }

func (SwitchRemoteSyslogFileArchiveOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchRemoteSyslogFileArchive)(nil)).Elem()
}

func (o SwitchRemoteSyslogFileArchiveOutput) ToSwitchRemoteSyslogFileArchiveOutput() SwitchRemoteSyslogFileArchiveOutput {
	return o
}

func (o SwitchRemoteSyslogFileArchiveOutput) ToSwitchRemoteSyslogFileArchiveOutputWithContext(ctx context.Context) SwitchRemoteSyslogFileArchiveOutput {
	return o
}

func (o SwitchRemoteSyslogFileArchiveOutput) ToSwitchRemoteSyslogFileArchivePtrOutput() SwitchRemoteSyslogFileArchivePtrOutput {
	return o.ToSwitchRemoteSyslogFileArchivePtrOutputWithContext(context.Background())
}

func (o SwitchRemoteSyslogFileArchiveOutput) ToSwitchRemoteSyslogFileArchivePtrOutputWithContext(ctx context.Context) SwitchRemoteSyslogFileArchivePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SwitchRemoteSyslogFileArchive) *SwitchRemoteSyslogFileArchive {
		return &v
	}).(SwitchRemoteSyslogFileArchivePtrOutput)
}

func (o SwitchRemoteSyslogFileArchiveOutput) Files() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchRemoteSyslogFileArchive) *string { return v.Files }).(pulumi.StringPtrOutput)
}

func (o SwitchRemoteSyslogFileArchiveOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchRemoteSyslogFileArchive) *string { return v.Size }).(pulumi.StringPtrOutput)
}

type SwitchRemoteSyslogFileArchivePtrOutput struct{ *pulumi.OutputState }

func (SwitchRemoteSyslogFileArchivePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchRemoteSyslogFileArchive)(nil)).Elem()
}

func (o SwitchRemoteSyslogFileArchivePtrOutput) ToSwitchRemoteSyslogFileArchivePtrOutput() SwitchRemoteSyslogFileArchivePtrOutput {
	return o
}

func (o SwitchRemoteSyslogFileArchivePtrOutput) ToSwitchRemoteSyslogFileArchivePtrOutputWithContext(ctx context.Context) SwitchRemoteSyslogFileArchivePtrOutput {
	return o
}

func (o SwitchRemoteSyslogFileArchivePtrOutput) Elem() SwitchRemoteSyslogFileArchiveOutput {
	return o.ApplyT(func(v *SwitchRemoteSyslogFileArchive) SwitchRemoteSyslogFileArchive {
		if v != nil {
			return *v
		}
		var ret SwitchRemoteSyslogFileArchive
		return ret
	}).(SwitchRemoteSyslogFileArchiveOutput)
}

func (o SwitchRemoteSyslogFileArchivePtrOutput) Files() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchRemoteSyslogFileArchive) *string {
		if v == nil {
			return nil
		}
		return v.Files
	}).(pulumi.StringPtrOutput)
}

func (o SwitchRemoteSyslogFileArchivePtrOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchRemoteSyslogFileArchive) *string {
		if v == nil {
			return nil
		}
		return v.Size
	}).(pulumi.StringPtrOutput)
}

type SwitchRemoteSyslogFileContent struct {
	// enum: `any`, `authorization`, `change-log`, `config`, `conflict-log`, `daemon`, `dfc`, `external`, `firewall`, `ftp`, `interactive-commands`, `kernel`, `ntp`, `pfe`, `security`, `user`
	Facility *string `pulumi:"facility"`
	// enum: `alert`, `any`, `critical`, `emergency`, `error`, `info`, `notice`, `warning`
	Severity *string `pulumi:"severity"`
}

// SwitchRemoteSyslogFileContentInput is an input type that accepts SwitchRemoteSyslogFileContentArgs and SwitchRemoteSyslogFileContentOutput values.
// You can construct a concrete instance of `SwitchRemoteSyslogFileContentInput` via:
//
//	SwitchRemoteSyslogFileContentArgs{...}
type SwitchRemoteSyslogFileContentInput interface {
	pulumi.Input

	ToSwitchRemoteSyslogFileContentOutput() SwitchRemoteSyslogFileContentOutput
	ToSwitchRemoteSyslogFileContentOutputWithContext(context.Context) SwitchRemoteSyslogFileContentOutput
}

type SwitchRemoteSyslogFileContentArgs struct {
	// enum: `any`, `authorization`, `change-log`, `config`, `conflict-log`, `daemon`, `dfc`, `external`, `firewall`, `ftp`, `interactive-commands`, `kernel`, `ntp`, `pfe`, `security`, `user`
	Facility pulumi.StringPtrInput `pulumi:"facility"`
	// enum: `alert`, `any`, `critical`, `emergency`, `error`, `info`, `notice`, `warning`
	Severity pulumi.StringPtrInput `pulumi:"severity"`
}

func (SwitchRemoteSyslogFileContentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchRemoteSyslogFileContent)(nil)).Elem()
}

func (i SwitchRemoteSyslogFileContentArgs) ToSwitchRemoteSyslogFileContentOutput() SwitchRemoteSyslogFileContentOutput {
	return i.ToSwitchRemoteSyslogFileContentOutputWithContext(context.Background())
}

func (i SwitchRemoteSyslogFileContentArgs) ToSwitchRemoteSyslogFileContentOutputWithContext(ctx context.Context) SwitchRemoteSyslogFileContentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchRemoteSyslogFileContentOutput)
}

// SwitchRemoteSyslogFileContentArrayInput is an input type that accepts SwitchRemoteSyslogFileContentArray and SwitchRemoteSyslogFileContentArrayOutput values.
// You can construct a concrete instance of `SwitchRemoteSyslogFileContentArrayInput` via:
//
//	SwitchRemoteSyslogFileContentArray{ SwitchRemoteSyslogFileContentArgs{...} }
type SwitchRemoteSyslogFileContentArrayInput interface {
	pulumi.Input

	ToSwitchRemoteSyslogFileContentArrayOutput() SwitchRemoteSyslogFileContentArrayOutput
	ToSwitchRemoteSyslogFileContentArrayOutputWithContext(context.Context) SwitchRemoteSyslogFileContentArrayOutput
}

type SwitchRemoteSyslogFileContentArray []SwitchRemoteSyslogFileContentInput

func (SwitchRemoteSyslogFileContentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchRemoteSyslogFileContent)(nil)).Elem()
}

func (i SwitchRemoteSyslogFileContentArray) ToSwitchRemoteSyslogFileContentArrayOutput() SwitchRemoteSyslogFileContentArrayOutput {
	return i.ToSwitchRemoteSyslogFileContentArrayOutputWithContext(context.Background())
}

func (i SwitchRemoteSyslogFileContentArray) ToSwitchRemoteSyslogFileContentArrayOutputWithContext(ctx context.Context) SwitchRemoteSyslogFileContentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchRemoteSyslogFileContentArrayOutput)
}

type SwitchRemoteSyslogFileContentOutput struct{ *pulumi.OutputState }

func (SwitchRemoteSyslogFileContentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchRemoteSyslogFileContent)(nil)).Elem()
}

func (o SwitchRemoteSyslogFileContentOutput) ToSwitchRemoteSyslogFileContentOutput() SwitchRemoteSyslogFileContentOutput {
	return o
}

func (o SwitchRemoteSyslogFileContentOutput) ToSwitchRemoteSyslogFileContentOutputWithContext(ctx context.Context) SwitchRemoteSyslogFileContentOutput {
	return o
}

// enum: `any`, `authorization`, `change-log`, `config`, `conflict-log`, `daemon`, `dfc`, `external`, `firewall`, `ftp`, `interactive-commands`, `kernel`, `ntp`, `pfe`, `security`, `user`
func (o SwitchRemoteSyslogFileContentOutput) Facility() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchRemoteSyslogFileContent) *string { return v.Facility }).(pulumi.StringPtrOutput)
}

// enum: `alert`, `any`, `critical`, `emergency`, `error`, `info`, `notice`, `warning`
func (o SwitchRemoteSyslogFileContentOutput) Severity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchRemoteSyslogFileContent) *string { return v.Severity }).(pulumi.StringPtrOutput)
}

type SwitchRemoteSyslogFileContentArrayOutput struct{ *pulumi.OutputState }

func (SwitchRemoteSyslogFileContentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchRemoteSyslogFileContent)(nil)).Elem()
}

func (o SwitchRemoteSyslogFileContentArrayOutput) ToSwitchRemoteSyslogFileContentArrayOutput() SwitchRemoteSyslogFileContentArrayOutput {
	return o
}

func (o SwitchRemoteSyslogFileContentArrayOutput) ToSwitchRemoteSyslogFileContentArrayOutputWithContext(ctx context.Context) SwitchRemoteSyslogFileContentArrayOutput {
	return o
}

func (o SwitchRemoteSyslogFileContentArrayOutput) Index(i pulumi.IntInput) SwitchRemoteSyslogFileContentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwitchRemoteSyslogFileContent {
		return vs[0].([]SwitchRemoteSyslogFileContent)[vs[1].(int)]
	}).(SwitchRemoteSyslogFileContentOutput)
}

type SwitchRemoteSyslogServer struct {
	Contents         []SwitchRemoteSyslogServerContent `pulumi:"contents"`
	ExplicitPriority *bool                             `pulumi:"explicitPriority"`
	// enum: `any`, `authorization`, `change-log`, `config`, `conflict-log`, `daemon`, `dfc`, `external`, `firewall`, `ftp`, `interactive-commands`, `kernel`, `ntp`, `pfe`, `security`, `user`
	Facility *string `pulumi:"facility"`
	Host     *string `pulumi:"host"`
	Match    *string `pulumi:"match"`
	Port     *string `pulumi:"port"`
	// enum: `tcp`, `udp`
	Protocol        *string `pulumi:"protocol"`
	RoutingInstance *string `pulumi:"routingInstance"`
	// enum: `alert`, `any`, `critical`, `emergency`, `error`, `info`, `notice`, `warning`
	Severity *string `pulumi:"severity"`
	// If sourceAddress is configured, will use the vlan firstly otherwise use source_ip
	SourceAddress  *string `pulumi:"sourceAddress"`
	StructuredData *bool   `pulumi:"structuredData"`
	Tag            *string `pulumi:"tag"`
}

// SwitchRemoteSyslogServerInput is an input type that accepts SwitchRemoteSyslogServerArgs and SwitchRemoteSyslogServerOutput values.
// You can construct a concrete instance of `SwitchRemoteSyslogServerInput` via:
//
//	SwitchRemoteSyslogServerArgs{...}
type SwitchRemoteSyslogServerInput interface {
	pulumi.Input

	ToSwitchRemoteSyslogServerOutput() SwitchRemoteSyslogServerOutput
	ToSwitchRemoteSyslogServerOutputWithContext(context.Context) SwitchRemoteSyslogServerOutput
}

type SwitchRemoteSyslogServerArgs struct {
	Contents         SwitchRemoteSyslogServerContentArrayInput `pulumi:"contents"`
	ExplicitPriority pulumi.BoolPtrInput                       `pulumi:"explicitPriority"`
	// enum: `any`, `authorization`, `change-log`, `config`, `conflict-log`, `daemon`, `dfc`, `external`, `firewall`, `ftp`, `interactive-commands`, `kernel`, `ntp`, `pfe`, `security`, `user`
	Facility pulumi.StringPtrInput `pulumi:"facility"`
	Host     pulumi.StringPtrInput `pulumi:"host"`
	Match    pulumi.StringPtrInput `pulumi:"match"`
	Port     pulumi.StringPtrInput `pulumi:"port"`
	// enum: `tcp`, `udp`
	Protocol        pulumi.StringPtrInput `pulumi:"protocol"`
	RoutingInstance pulumi.StringPtrInput `pulumi:"routingInstance"`
	// enum: `alert`, `any`, `critical`, `emergency`, `error`, `info`, `notice`, `warning`
	Severity pulumi.StringPtrInput `pulumi:"severity"`
	// If sourceAddress is configured, will use the vlan firstly otherwise use source_ip
	SourceAddress  pulumi.StringPtrInput `pulumi:"sourceAddress"`
	StructuredData pulumi.BoolPtrInput   `pulumi:"structuredData"`
	Tag            pulumi.StringPtrInput `pulumi:"tag"`
}

func (SwitchRemoteSyslogServerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchRemoteSyslogServer)(nil)).Elem()
}

func (i SwitchRemoteSyslogServerArgs) ToSwitchRemoteSyslogServerOutput() SwitchRemoteSyslogServerOutput {
	return i.ToSwitchRemoteSyslogServerOutputWithContext(context.Background())
}

func (i SwitchRemoteSyslogServerArgs) ToSwitchRemoteSyslogServerOutputWithContext(ctx context.Context) SwitchRemoteSyslogServerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchRemoteSyslogServerOutput)
}

// SwitchRemoteSyslogServerArrayInput is an input type that accepts SwitchRemoteSyslogServerArray and SwitchRemoteSyslogServerArrayOutput values.
// You can construct a concrete instance of `SwitchRemoteSyslogServerArrayInput` via:
//
//	SwitchRemoteSyslogServerArray{ SwitchRemoteSyslogServerArgs{...} }
type SwitchRemoteSyslogServerArrayInput interface {
	pulumi.Input

	ToSwitchRemoteSyslogServerArrayOutput() SwitchRemoteSyslogServerArrayOutput
	ToSwitchRemoteSyslogServerArrayOutputWithContext(context.Context) SwitchRemoteSyslogServerArrayOutput
}

type SwitchRemoteSyslogServerArray []SwitchRemoteSyslogServerInput

func (SwitchRemoteSyslogServerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchRemoteSyslogServer)(nil)).Elem()
}

func (i SwitchRemoteSyslogServerArray) ToSwitchRemoteSyslogServerArrayOutput() SwitchRemoteSyslogServerArrayOutput {
	return i.ToSwitchRemoteSyslogServerArrayOutputWithContext(context.Background())
}

func (i SwitchRemoteSyslogServerArray) ToSwitchRemoteSyslogServerArrayOutputWithContext(ctx context.Context) SwitchRemoteSyslogServerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchRemoteSyslogServerArrayOutput)
}

type SwitchRemoteSyslogServerOutput struct{ *pulumi.OutputState }

func (SwitchRemoteSyslogServerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchRemoteSyslogServer)(nil)).Elem()
}

func (o SwitchRemoteSyslogServerOutput) ToSwitchRemoteSyslogServerOutput() SwitchRemoteSyslogServerOutput {
	return o
}

func (o SwitchRemoteSyslogServerOutput) ToSwitchRemoteSyslogServerOutputWithContext(ctx context.Context) SwitchRemoteSyslogServerOutput {
	return o
}

func (o SwitchRemoteSyslogServerOutput) Contents() SwitchRemoteSyslogServerContentArrayOutput {
	return o.ApplyT(func(v SwitchRemoteSyslogServer) []SwitchRemoteSyslogServerContent { return v.Contents }).(SwitchRemoteSyslogServerContentArrayOutput)
}

func (o SwitchRemoteSyslogServerOutput) ExplicitPriority() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SwitchRemoteSyslogServer) *bool { return v.ExplicitPriority }).(pulumi.BoolPtrOutput)
}

// enum: `any`, `authorization`, `change-log`, `config`, `conflict-log`, `daemon`, `dfc`, `external`, `firewall`, `ftp`, `interactive-commands`, `kernel`, `ntp`, `pfe`, `security`, `user`
func (o SwitchRemoteSyslogServerOutput) Facility() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchRemoteSyslogServer) *string { return v.Facility }).(pulumi.StringPtrOutput)
}

func (o SwitchRemoteSyslogServerOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchRemoteSyslogServer) *string { return v.Host }).(pulumi.StringPtrOutput)
}

func (o SwitchRemoteSyslogServerOutput) Match() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchRemoteSyslogServer) *string { return v.Match }).(pulumi.StringPtrOutput)
}

func (o SwitchRemoteSyslogServerOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchRemoteSyslogServer) *string { return v.Port }).(pulumi.StringPtrOutput)
}

// enum: `tcp`, `udp`
func (o SwitchRemoteSyslogServerOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchRemoteSyslogServer) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

func (o SwitchRemoteSyslogServerOutput) RoutingInstance() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchRemoteSyslogServer) *string { return v.RoutingInstance }).(pulumi.StringPtrOutput)
}

// enum: `alert`, `any`, `critical`, `emergency`, `error`, `info`, `notice`, `warning`
func (o SwitchRemoteSyslogServerOutput) Severity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchRemoteSyslogServer) *string { return v.Severity }).(pulumi.StringPtrOutput)
}

// If sourceAddress is configured, will use the vlan firstly otherwise use source_ip
func (o SwitchRemoteSyslogServerOutput) SourceAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchRemoteSyslogServer) *string { return v.SourceAddress }).(pulumi.StringPtrOutput)
}

func (o SwitchRemoteSyslogServerOutput) StructuredData() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SwitchRemoteSyslogServer) *bool { return v.StructuredData }).(pulumi.BoolPtrOutput)
}

func (o SwitchRemoteSyslogServerOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchRemoteSyslogServer) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type SwitchRemoteSyslogServerArrayOutput struct{ *pulumi.OutputState }

func (SwitchRemoteSyslogServerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchRemoteSyslogServer)(nil)).Elem()
}

func (o SwitchRemoteSyslogServerArrayOutput) ToSwitchRemoteSyslogServerArrayOutput() SwitchRemoteSyslogServerArrayOutput {
	return o
}

func (o SwitchRemoteSyslogServerArrayOutput) ToSwitchRemoteSyslogServerArrayOutputWithContext(ctx context.Context) SwitchRemoteSyslogServerArrayOutput {
	return o
}

func (o SwitchRemoteSyslogServerArrayOutput) Index(i pulumi.IntInput) SwitchRemoteSyslogServerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwitchRemoteSyslogServer {
		return vs[0].([]SwitchRemoteSyslogServer)[vs[1].(int)]
	}).(SwitchRemoteSyslogServerOutput)
}

type SwitchRemoteSyslogServerContent struct {
	// enum: `any`, `authorization`, `change-log`, `config`, `conflict-log`, `daemon`, `dfc`, `external`, `firewall`, `ftp`, `interactive-commands`, `kernel`, `ntp`, `pfe`, `security`, `user`
	Facility *string `pulumi:"facility"`
	// enum: `alert`, `any`, `critical`, `emergency`, `error`, `info`, `notice`, `warning`
	Severity *string `pulumi:"severity"`
}

// SwitchRemoteSyslogServerContentInput is an input type that accepts SwitchRemoteSyslogServerContentArgs and SwitchRemoteSyslogServerContentOutput values.
// You can construct a concrete instance of `SwitchRemoteSyslogServerContentInput` via:
//
//	SwitchRemoteSyslogServerContentArgs{...}
type SwitchRemoteSyslogServerContentInput interface {
	pulumi.Input

	ToSwitchRemoteSyslogServerContentOutput() SwitchRemoteSyslogServerContentOutput
	ToSwitchRemoteSyslogServerContentOutputWithContext(context.Context) SwitchRemoteSyslogServerContentOutput
}

type SwitchRemoteSyslogServerContentArgs struct {
	// enum: `any`, `authorization`, `change-log`, `config`, `conflict-log`, `daemon`, `dfc`, `external`, `firewall`, `ftp`, `interactive-commands`, `kernel`, `ntp`, `pfe`, `security`, `user`
	Facility pulumi.StringPtrInput `pulumi:"facility"`
	// enum: `alert`, `any`, `critical`, `emergency`, `error`, `info`, `notice`, `warning`
	Severity pulumi.StringPtrInput `pulumi:"severity"`
}

func (SwitchRemoteSyslogServerContentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchRemoteSyslogServerContent)(nil)).Elem()
}

func (i SwitchRemoteSyslogServerContentArgs) ToSwitchRemoteSyslogServerContentOutput() SwitchRemoteSyslogServerContentOutput {
	return i.ToSwitchRemoteSyslogServerContentOutputWithContext(context.Background())
}

func (i SwitchRemoteSyslogServerContentArgs) ToSwitchRemoteSyslogServerContentOutputWithContext(ctx context.Context) SwitchRemoteSyslogServerContentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchRemoteSyslogServerContentOutput)
}

// SwitchRemoteSyslogServerContentArrayInput is an input type that accepts SwitchRemoteSyslogServerContentArray and SwitchRemoteSyslogServerContentArrayOutput values.
// You can construct a concrete instance of `SwitchRemoteSyslogServerContentArrayInput` via:
//
//	SwitchRemoteSyslogServerContentArray{ SwitchRemoteSyslogServerContentArgs{...} }
type SwitchRemoteSyslogServerContentArrayInput interface {
	pulumi.Input

	ToSwitchRemoteSyslogServerContentArrayOutput() SwitchRemoteSyslogServerContentArrayOutput
	ToSwitchRemoteSyslogServerContentArrayOutputWithContext(context.Context) SwitchRemoteSyslogServerContentArrayOutput
}

type SwitchRemoteSyslogServerContentArray []SwitchRemoteSyslogServerContentInput

func (SwitchRemoteSyslogServerContentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchRemoteSyslogServerContent)(nil)).Elem()
}

func (i SwitchRemoteSyslogServerContentArray) ToSwitchRemoteSyslogServerContentArrayOutput() SwitchRemoteSyslogServerContentArrayOutput {
	return i.ToSwitchRemoteSyslogServerContentArrayOutputWithContext(context.Background())
}

func (i SwitchRemoteSyslogServerContentArray) ToSwitchRemoteSyslogServerContentArrayOutputWithContext(ctx context.Context) SwitchRemoteSyslogServerContentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchRemoteSyslogServerContentArrayOutput)
}

type SwitchRemoteSyslogServerContentOutput struct{ *pulumi.OutputState }

func (SwitchRemoteSyslogServerContentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchRemoteSyslogServerContent)(nil)).Elem()
}

func (o SwitchRemoteSyslogServerContentOutput) ToSwitchRemoteSyslogServerContentOutput() SwitchRemoteSyslogServerContentOutput {
	return o
}

func (o SwitchRemoteSyslogServerContentOutput) ToSwitchRemoteSyslogServerContentOutputWithContext(ctx context.Context) SwitchRemoteSyslogServerContentOutput {
	return o
}

// enum: `any`, `authorization`, `change-log`, `config`, `conflict-log`, `daemon`, `dfc`, `external`, `firewall`, `ftp`, `interactive-commands`, `kernel`, `ntp`, `pfe`, `security`, `user`
func (o SwitchRemoteSyslogServerContentOutput) Facility() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchRemoteSyslogServerContent) *string { return v.Facility }).(pulumi.StringPtrOutput)
}

// enum: `alert`, `any`, `critical`, `emergency`, `error`, `info`, `notice`, `warning`
func (o SwitchRemoteSyslogServerContentOutput) Severity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchRemoteSyslogServerContent) *string { return v.Severity }).(pulumi.StringPtrOutput)
}

type SwitchRemoteSyslogServerContentArrayOutput struct{ *pulumi.OutputState }

func (SwitchRemoteSyslogServerContentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchRemoteSyslogServerContent)(nil)).Elem()
}

func (o SwitchRemoteSyslogServerContentArrayOutput) ToSwitchRemoteSyslogServerContentArrayOutput() SwitchRemoteSyslogServerContentArrayOutput {
	return o
}

func (o SwitchRemoteSyslogServerContentArrayOutput) ToSwitchRemoteSyslogServerContentArrayOutputWithContext(ctx context.Context) SwitchRemoteSyslogServerContentArrayOutput {
	return o
}

func (o SwitchRemoteSyslogServerContentArrayOutput) Index(i pulumi.IntInput) SwitchRemoteSyslogServerContentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwitchRemoteSyslogServerContent {
		return vs[0].([]SwitchRemoteSyslogServerContent)[vs[1].(int)]
	}).(SwitchRemoteSyslogServerContentOutput)
}

type SwitchRemoteSyslogUser struct {
	Contents []SwitchRemoteSyslogUserContent `pulumi:"contents"`
	Match    *string                         `pulumi:"match"`
	User     *string                         `pulumi:"user"`
}

// SwitchRemoteSyslogUserInput is an input type that accepts SwitchRemoteSyslogUserArgs and SwitchRemoteSyslogUserOutput values.
// You can construct a concrete instance of `SwitchRemoteSyslogUserInput` via:
//
//	SwitchRemoteSyslogUserArgs{...}
type SwitchRemoteSyslogUserInput interface {
	pulumi.Input

	ToSwitchRemoteSyslogUserOutput() SwitchRemoteSyslogUserOutput
	ToSwitchRemoteSyslogUserOutputWithContext(context.Context) SwitchRemoteSyslogUserOutput
}

type SwitchRemoteSyslogUserArgs struct {
	Contents SwitchRemoteSyslogUserContentArrayInput `pulumi:"contents"`
	Match    pulumi.StringPtrInput                   `pulumi:"match"`
	User     pulumi.StringPtrInput                   `pulumi:"user"`
}

func (SwitchRemoteSyslogUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchRemoteSyslogUser)(nil)).Elem()
}

func (i SwitchRemoteSyslogUserArgs) ToSwitchRemoteSyslogUserOutput() SwitchRemoteSyslogUserOutput {
	return i.ToSwitchRemoteSyslogUserOutputWithContext(context.Background())
}

func (i SwitchRemoteSyslogUserArgs) ToSwitchRemoteSyslogUserOutputWithContext(ctx context.Context) SwitchRemoteSyslogUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchRemoteSyslogUserOutput)
}

// SwitchRemoteSyslogUserArrayInput is an input type that accepts SwitchRemoteSyslogUserArray and SwitchRemoteSyslogUserArrayOutput values.
// You can construct a concrete instance of `SwitchRemoteSyslogUserArrayInput` via:
//
//	SwitchRemoteSyslogUserArray{ SwitchRemoteSyslogUserArgs{...} }
type SwitchRemoteSyslogUserArrayInput interface {
	pulumi.Input

	ToSwitchRemoteSyslogUserArrayOutput() SwitchRemoteSyslogUserArrayOutput
	ToSwitchRemoteSyslogUserArrayOutputWithContext(context.Context) SwitchRemoteSyslogUserArrayOutput
}

type SwitchRemoteSyslogUserArray []SwitchRemoteSyslogUserInput

func (SwitchRemoteSyslogUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchRemoteSyslogUser)(nil)).Elem()
}

func (i SwitchRemoteSyslogUserArray) ToSwitchRemoteSyslogUserArrayOutput() SwitchRemoteSyslogUserArrayOutput {
	return i.ToSwitchRemoteSyslogUserArrayOutputWithContext(context.Background())
}

func (i SwitchRemoteSyslogUserArray) ToSwitchRemoteSyslogUserArrayOutputWithContext(ctx context.Context) SwitchRemoteSyslogUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchRemoteSyslogUserArrayOutput)
}

type SwitchRemoteSyslogUserOutput struct{ *pulumi.OutputState }

func (SwitchRemoteSyslogUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchRemoteSyslogUser)(nil)).Elem()
}

func (o SwitchRemoteSyslogUserOutput) ToSwitchRemoteSyslogUserOutput() SwitchRemoteSyslogUserOutput {
	return o
}

func (o SwitchRemoteSyslogUserOutput) ToSwitchRemoteSyslogUserOutputWithContext(ctx context.Context) SwitchRemoteSyslogUserOutput {
	return o
}

func (o SwitchRemoteSyslogUserOutput) Contents() SwitchRemoteSyslogUserContentArrayOutput {
	return o.ApplyT(func(v SwitchRemoteSyslogUser) []SwitchRemoteSyslogUserContent { return v.Contents }).(SwitchRemoteSyslogUserContentArrayOutput)
}

func (o SwitchRemoteSyslogUserOutput) Match() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchRemoteSyslogUser) *string { return v.Match }).(pulumi.StringPtrOutput)
}

func (o SwitchRemoteSyslogUserOutput) User() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchRemoteSyslogUser) *string { return v.User }).(pulumi.StringPtrOutput)
}

type SwitchRemoteSyslogUserArrayOutput struct{ *pulumi.OutputState }

func (SwitchRemoteSyslogUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchRemoteSyslogUser)(nil)).Elem()
}

func (o SwitchRemoteSyslogUserArrayOutput) ToSwitchRemoteSyslogUserArrayOutput() SwitchRemoteSyslogUserArrayOutput {
	return o
}

func (o SwitchRemoteSyslogUserArrayOutput) ToSwitchRemoteSyslogUserArrayOutputWithContext(ctx context.Context) SwitchRemoteSyslogUserArrayOutput {
	return o
}

func (o SwitchRemoteSyslogUserArrayOutput) Index(i pulumi.IntInput) SwitchRemoteSyslogUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwitchRemoteSyslogUser {
		return vs[0].([]SwitchRemoteSyslogUser)[vs[1].(int)]
	}).(SwitchRemoteSyslogUserOutput)
}

type SwitchRemoteSyslogUserContent struct {
	// enum: `any`, `authorization`, `change-log`, `config`, `conflict-log`, `daemon`, `dfc`, `external`, `firewall`, `ftp`, `interactive-commands`, `kernel`, `ntp`, `pfe`, `security`, `user`
	Facility *string `pulumi:"facility"`
	// enum: `alert`, `any`, `critical`, `emergency`, `error`, `info`, `notice`, `warning`
	Severity *string `pulumi:"severity"`
}

// SwitchRemoteSyslogUserContentInput is an input type that accepts SwitchRemoteSyslogUserContentArgs and SwitchRemoteSyslogUserContentOutput values.
// You can construct a concrete instance of `SwitchRemoteSyslogUserContentInput` via:
//
//	SwitchRemoteSyslogUserContentArgs{...}
type SwitchRemoteSyslogUserContentInput interface {
	pulumi.Input

	ToSwitchRemoteSyslogUserContentOutput() SwitchRemoteSyslogUserContentOutput
	ToSwitchRemoteSyslogUserContentOutputWithContext(context.Context) SwitchRemoteSyslogUserContentOutput
}

type SwitchRemoteSyslogUserContentArgs struct {
	// enum: `any`, `authorization`, `change-log`, `config`, `conflict-log`, `daemon`, `dfc`, `external`, `firewall`, `ftp`, `interactive-commands`, `kernel`, `ntp`, `pfe`, `security`, `user`
	Facility pulumi.StringPtrInput `pulumi:"facility"`
	// enum: `alert`, `any`, `critical`, `emergency`, `error`, `info`, `notice`, `warning`
	Severity pulumi.StringPtrInput `pulumi:"severity"`
}

func (SwitchRemoteSyslogUserContentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchRemoteSyslogUserContent)(nil)).Elem()
}

func (i SwitchRemoteSyslogUserContentArgs) ToSwitchRemoteSyslogUserContentOutput() SwitchRemoteSyslogUserContentOutput {
	return i.ToSwitchRemoteSyslogUserContentOutputWithContext(context.Background())
}

func (i SwitchRemoteSyslogUserContentArgs) ToSwitchRemoteSyslogUserContentOutputWithContext(ctx context.Context) SwitchRemoteSyslogUserContentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchRemoteSyslogUserContentOutput)
}

// SwitchRemoteSyslogUserContentArrayInput is an input type that accepts SwitchRemoteSyslogUserContentArray and SwitchRemoteSyslogUserContentArrayOutput values.
// You can construct a concrete instance of `SwitchRemoteSyslogUserContentArrayInput` via:
//
//	SwitchRemoteSyslogUserContentArray{ SwitchRemoteSyslogUserContentArgs{...} }
type SwitchRemoteSyslogUserContentArrayInput interface {
	pulumi.Input

	ToSwitchRemoteSyslogUserContentArrayOutput() SwitchRemoteSyslogUserContentArrayOutput
	ToSwitchRemoteSyslogUserContentArrayOutputWithContext(context.Context) SwitchRemoteSyslogUserContentArrayOutput
}

type SwitchRemoteSyslogUserContentArray []SwitchRemoteSyslogUserContentInput

func (SwitchRemoteSyslogUserContentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchRemoteSyslogUserContent)(nil)).Elem()
}

func (i SwitchRemoteSyslogUserContentArray) ToSwitchRemoteSyslogUserContentArrayOutput() SwitchRemoteSyslogUserContentArrayOutput {
	return i.ToSwitchRemoteSyslogUserContentArrayOutputWithContext(context.Background())
}

func (i SwitchRemoteSyslogUserContentArray) ToSwitchRemoteSyslogUserContentArrayOutputWithContext(ctx context.Context) SwitchRemoteSyslogUserContentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchRemoteSyslogUserContentArrayOutput)
}

type SwitchRemoteSyslogUserContentOutput struct{ *pulumi.OutputState }

func (SwitchRemoteSyslogUserContentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchRemoteSyslogUserContent)(nil)).Elem()
}

func (o SwitchRemoteSyslogUserContentOutput) ToSwitchRemoteSyslogUserContentOutput() SwitchRemoteSyslogUserContentOutput {
	return o
}

func (o SwitchRemoteSyslogUserContentOutput) ToSwitchRemoteSyslogUserContentOutputWithContext(ctx context.Context) SwitchRemoteSyslogUserContentOutput {
	return o
}

// enum: `any`, `authorization`, `change-log`, `config`, `conflict-log`, `daemon`, `dfc`, `external`, `firewall`, `ftp`, `interactive-commands`, `kernel`, `ntp`, `pfe`, `security`, `user`
func (o SwitchRemoteSyslogUserContentOutput) Facility() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchRemoteSyslogUserContent) *string { return v.Facility }).(pulumi.StringPtrOutput)
}

// enum: `alert`, `any`, `critical`, `emergency`, `error`, `info`, `notice`, `warning`
func (o SwitchRemoteSyslogUserContentOutput) Severity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchRemoteSyslogUserContent) *string { return v.Severity }).(pulumi.StringPtrOutput)
}

type SwitchRemoteSyslogUserContentArrayOutput struct{ *pulumi.OutputState }

func (SwitchRemoteSyslogUserContentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchRemoteSyslogUserContent)(nil)).Elem()
}

func (o SwitchRemoteSyslogUserContentArrayOutput) ToSwitchRemoteSyslogUserContentArrayOutput() SwitchRemoteSyslogUserContentArrayOutput {
	return o
}

func (o SwitchRemoteSyslogUserContentArrayOutput) ToSwitchRemoteSyslogUserContentArrayOutputWithContext(ctx context.Context) SwitchRemoteSyslogUserContentArrayOutput {
	return o
}

func (o SwitchRemoteSyslogUserContentArrayOutput) Index(i pulumi.IntInput) SwitchRemoteSyslogUserContentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwitchRemoteSyslogUserContent {
		return vs[0].([]SwitchRemoteSyslogUserContent)[vs[1].(int)]
	}).(SwitchRemoteSyslogUserContentOutput)
}

type SwitchSnmpConfig struct {
	ClientLists []SwitchSnmpConfigClientList `pulumi:"clientLists"`
	Contact     *string                      `pulumi:"contact"`
	Description *string                      `pulumi:"description"`
	Enabled     *bool                        `pulumi:"enabled"`
	EngineId    *string                      `pulumi:"engineId"`
	Location    *string                      `pulumi:"location"`
	Name        *string                      `pulumi:"name"`
	Network     *string                      `pulumi:"network"`
	TrapGroups  []SwitchSnmpConfigTrapGroup  `pulumi:"trapGroups"`
	V2cConfigs  []SwitchSnmpConfigV2cConfig  `pulumi:"v2cConfigs"`
	V3Config    *SwitchSnmpConfigV3Config    `pulumi:"v3Config"`
	Views       []SwitchSnmpConfigView       `pulumi:"views"`
}

// SwitchSnmpConfigInput is an input type that accepts SwitchSnmpConfigArgs and SwitchSnmpConfigOutput values.
// You can construct a concrete instance of `SwitchSnmpConfigInput` via:
//
//	SwitchSnmpConfigArgs{...}
type SwitchSnmpConfigInput interface {
	pulumi.Input

	ToSwitchSnmpConfigOutput() SwitchSnmpConfigOutput
	ToSwitchSnmpConfigOutputWithContext(context.Context) SwitchSnmpConfigOutput
}

type SwitchSnmpConfigArgs struct {
	ClientLists SwitchSnmpConfigClientListArrayInput `pulumi:"clientLists"`
	Contact     pulumi.StringPtrInput                `pulumi:"contact"`
	Description pulumi.StringPtrInput                `pulumi:"description"`
	Enabled     pulumi.BoolPtrInput                  `pulumi:"enabled"`
	EngineId    pulumi.StringPtrInput                `pulumi:"engineId"`
	Location    pulumi.StringPtrInput                `pulumi:"location"`
	Name        pulumi.StringPtrInput                `pulumi:"name"`
	Network     pulumi.StringPtrInput                `pulumi:"network"`
	TrapGroups  SwitchSnmpConfigTrapGroupArrayInput  `pulumi:"trapGroups"`
	V2cConfigs  SwitchSnmpConfigV2cConfigArrayInput  `pulumi:"v2cConfigs"`
	V3Config    SwitchSnmpConfigV3ConfigPtrInput     `pulumi:"v3Config"`
	Views       SwitchSnmpConfigViewArrayInput       `pulumi:"views"`
}

func (SwitchSnmpConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchSnmpConfig)(nil)).Elem()
}

func (i SwitchSnmpConfigArgs) ToSwitchSnmpConfigOutput() SwitchSnmpConfigOutput {
	return i.ToSwitchSnmpConfigOutputWithContext(context.Background())
}

func (i SwitchSnmpConfigArgs) ToSwitchSnmpConfigOutputWithContext(ctx context.Context) SwitchSnmpConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchSnmpConfigOutput)
}

func (i SwitchSnmpConfigArgs) ToSwitchSnmpConfigPtrOutput() SwitchSnmpConfigPtrOutput {
	return i.ToSwitchSnmpConfigPtrOutputWithContext(context.Background())
}

func (i SwitchSnmpConfigArgs) ToSwitchSnmpConfigPtrOutputWithContext(ctx context.Context) SwitchSnmpConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchSnmpConfigOutput).ToSwitchSnmpConfigPtrOutputWithContext(ctx)
}

// SwitchSnmpConfigPtrInput is an input type that accepts SwitchSnmpConfigArgs, SwitchSnmpConfigPtr and SwitchSnmpConfigPtrOutput values.
// You can construct a concrete instance of `SwitchSnmpConfigPtrInput` via:
//
//	        SwitchSnmpConfigArgs{...}
//
//	or:
//
//	        nil
type SwitchSnmpConfigPtrInput interface {
	pulumi.Input

	ToSwitchSnmpConfigPtrOutput() SwitchSnmpConfigPtrOutput
	ToSwitchSnmpConfigPtrOutputWithContext(context.Context) SwitchSnmpConfigPtrOutput
}

type switchSnmpConfigPtrType SwitchSnmpConfigArgs

func SwitchSnmpConfigPtr(v *SwitchSnmpConfigArgs) SwitchSnmpConfigPtrInput {
	return (*switchSnmpConfigPtrType)(v)
}

func (*switchSnmpConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchSnmpConfig)(nil)).Elem()
}

func (i *switchSnmpConfigPtrType) ToSwitchSnmpConfigPtrOutput() SwitchSnmpConfigPtrOutput {
	return i.ToSwitchSnmpConfigPtrOutputWithContext(context.Background())
}

func (i *switchSnmpConfigPtrType) ToSwitchSnmpConfigPtrOutputWithContext(ctx context.Context) SwitchSnmpConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchSnmpConfigPtrOutput)
}

type SwitchSnmpConfigOutput struct{ *pulumi.OutputState }

func (SwitchSnmpConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchSnmpConfig)(nil)).Elem()
}

func (o SwitchSnmpConfigOutput) ToSwitchSnmpConfigOutput() SwitchSnmpConfigOutput {
	return o
}

func (o SwitchSnmpConfigOutput) ToSwitchSnmpConfigOutputWithContext(ctx context.Context) SwitchSnmpConfigOutput {
	return o
}

func (o SwitchSnmpConfigOutput) ToSwitchSnmpConfigPtrOutput() SwitchSnmpConfigPtrOutput {
	return o.ToSwitchSnmpConfigPtrOutputWithContext(context.Background())
}

func (o SwitchSnmpConfigOutput) ToSwitchSnmpConfigPtrOutputWithContext(ctx context.Context) SwitchSnmpConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SwitchSnmpConfig) *SwitchSnmpConfig {
		return &v
	}).(SwitchSnmpConfigPtrOutput)
}

func (o SwitchSnmpConfigOutput) ClientLists() SwitchSnmpConfigClientListArrayOutput {
	return o.ApplyT(func(v SwitchSnmpConfig) []SwitchSnmpConfigClientList { return v.ClientLists }).(SwitchSnmpConfigClientListArrayOutput)
}

func (o SwitchSnmpConfigOutput) Contact() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchSnmpConfig) *string { return v.Contact }).(pulumi.StringPtrOutput)
}

func (o SwitchSnmpConfigOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchSnmpConfig) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o SwitchSnmpConfigOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SwitchSnmpConfig) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

func (o SwitchSnmpConfigOutput) EngineId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchSnmpConfig) *string { return v.EngineId }).(pulumi.StringPtrOutput)
}

func (o SwitchSnmpConfigOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchSnmpConfig) *string { return v.Location }).(pulumi.StringPtrOutput)
}

func (o SwitchSnmpConfigOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchSnmpConfig) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o SwitchSnmpConfigOutput) Network() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchSnmpConfig) *string { return v.Network }).(pulumi.StringPtrOutput)
}

func (o SwitchSnmpConfigOutput) TrapGroups() SwitchSnmpConfigTrapGroupArrayOutput {
	return o.ApplyT(func(v SwitchSnmpConfig) []SwitchSnmpConfigTrapGroup { return v.TrapGroups }).(SwitchSnmpConfigTrapGroupArrayOutput)
}

func (o SwitchSnmpConfigOutput) V2cConfigs() SwitchSnmpConfigV2cConfigArrayOutput {
	return o.ApplyT(func(v SwitchSnmpConfig) []SwitchSnmpConfigV2cConfig { return v.V2cConfigs }).(SwitchSnmpConfigV2cConfigArrayOutput)
}

func (o SwitchSnmpConfigOutput) V3Config() SwitchSnmpConfigV3ConfigPtrOutput {
	return o.ApplyT(func(v SwitchSnmpConfig) *SwitchSnmpConfigV3Config { return v.V3Config }).(SwitchSnmpConfigV3ConfigPtrOutput)
}

func (o SwitchSnmpConfigOutput) Views() SwitchSnmpConfigViewArrayOutput {
	return o.ApplyT(func(v SwitchSnmpConfig) []SwitchSnmpConfigView { return v.Views }).(SwitchSnmpConfigViewArrayOutput)
}

type SwitchSnmpConfigPtrOutput struct{ *pulumi.OutputState }

func (SwitchSnmpConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchSnmpConfig)(nil)).Elem()
}

func (o SwitchSnmpConfigPtrOutput) ToSwitchSnmpConfigPtrOutput() SwitchSnmpConfigPtrOutput {
	return o
}

func (o SwitchSnmpConfigPtrOutput) ToSwitchSnmpConfigPtrOutputWithContext(ctx context.Context) SwitchSnmpConfigPtrOutput {
	return o
}

func (o SwitchSnmpConfigPtrOutput) Elem() SwitchSnmpConfigOutput {
	return o.ApplyT(func(v *SwitchSnmpConfig) SwitchSnmpConfig {
		if v != nil {
			return *v
		}
		var ret SwitchSnmpConfig
		return ret
	}).(SwitchSnmpConfigOutput)
}

func (o SwitchSnmpConfigPtrOutput) ClientLists() SwitchSnmpConfigClientListArrayOutput {
	return o.ApplyT(func(v *SwitchSnmpConfig) []SwitchSnmpConfigClientList {
		if v == nil {
			return nil
		}
		return v.ClientLists
	}).(SwitchSnmpConfigClientListArrayOutput)
}

func (o SwitchSnmpConfigPtrOutput) Contact() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchSnmpConfig) *string {
		if v == nil {
			return nil
		}
		return v.Contact
	}).(pulumi.StringPtrOutput)
}

func (o SwitchSnmpConfigPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchSnmpConfig) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

func (o SwitchSnmpConfigPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SwitchSnmpConfig) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

func (o SwitchSnmpConfigPtrOutput) EngineId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchSnmpConfig) *string {
		if v == nil {
			return nil
		}
		return v.EngineId
	}).(pulumi.StringPtrOutput)
}

func (o SwitchSnmpConfigPtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchSnmpConfig) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

func (o SwitchSnmpConfigPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchSnmpConfig) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func (o SwitchSnmpConfigPtrOutput) Network() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchSnmpConfig) *string {
		if v == nil {
			return nil
		}
		return v.Network
	}).(pulumi.StringPtrOutput)
}

func (o SwitchSnmpConfigPtrOutput) TrapGroups() SwitchSnmpConfigTrapGroupArrayOutput {
	return o.ApplyT(func(v *SwitchSnmpConfig) []SwitchSnmpConfigTrapGroup {
		if v == nil {
			return nil
		}
		return v.TrapGroups
	}).(SwitchSnmpConfigTrapGroupArrayOutput)
}

func (o SwitchSnmpConfigPtrOutput) V2cConfigs() SwitchSnmpConfigV2cConfigArrayOutput {
	return o.ApplyT(func(v *SwitchSnmpConfig) []SwitchSnmpConfigV2cConfig {
		if v == nil {
			return nil
		}
		return v.V2cConfigs
	}).(SwitchSnmpConfigV2cConfigArrayOutput)
}

func (o SwitchSnmpConfigPtrOutput) V3Config() SwitchSnmpConfigV3ConfigPtrOutput {
	return o.ApplyT(func(v *SwitchSnmpConfig) *SwitchSnmpConfigV3Config {
		if v == nil {
			return nil
		}
		return v.V3Config
	}).(SwitchSnmpConfigV3ConfigPtrOutput)
}

func (o SwitchSnmpConfigPtrOutput) Views() SwitchSnmpConfigViewArrayOutput {
	return o.ApplyT(func(v *SwitchSnmpConfig) []SwitchSnmpConfigView {
		if v == nil {
			return nil
		}
		return v.Views
	}).(SwitchSnmpConfigViewArrayOutput)
}

type SwitchSnmpConfigClientList struct {
	ClientListName *string  `pulumi:"clientListName"`
	Clients        []string `pulumi:"clients"`
}

// SwitchSnmpConfigClientListInput is an input type that accepts SwitchSnmpConfigClientListArgs and SwitchSnmpConfigClientListOutput values.
// You can construct a concrete instance of `SwitchSnmpConfigClientListInput` via:
//
//	SwitchSnmpConfigClientListArgs{...}
type SwitchSnmpConfigClientListInput interface {
	pulumi.Input

	ToSwitchSnmpConfigClientListOutput() SwitchSnmpConfigClientListOutput
	ToSwitchSnmpConfigClientListOutputWithContext(context.Context) SwitchSnmpConfigClientListOutput
}

type SwitchSnmpConfigClientListArgs struct {
	ClientListName pulumi.StringPtrInput   `pulumi:"clientListName"`
	Clients        pulumi.StringArrayInput `pulumi:"clients"`
}

func (SwitchSnmpConfigClientListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchSnmpConfigClientList)(nil)).Elem()
}

func (i SwitchSnmpConfigClientListArgs) ToSwitchSnmpConfigClientListOutput() SwitchSnmpConfigClientListOutput {
	return i.ToSwitchSnmpConfigClientListOutputWithContext(context.Background())
}

func (i SwitchSnmpConfigClientListArgs) ToSwitchSnmpConfigClientListOutputWithContext(ctx context.Context) SwitchSnmpConfigClientListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchSnmpConfigClientListOutput)
}

// SwitchSnmpConfigClientListArrayInput is an input type that accepts SwitchSnmpConfigClientListArray and SwitchSnmpConfigClientListArrayOutput values.
// You can construct a concrete instance of `SwitchSnmpConfigClientListArrayInput` via:
//
//	SwitchSnmpConfigClientListArray{ SwitchSnmpConfigClientListArgs{...} }
type SwitchSnmpConfigClientListArrayInput interface {
	pulumi.Input

	ToSwitchSnmpConfigClientListArrayOutput() SwitchSnmpConfigClientListArrayOutput
	ToSwitchSnmpConfigClientListArrayOutputWithContext(context.Context) SwitchSnmpConfigClientListArrayOutput
}

type SwitchSnmpConfigClientListArray []SwitchSnmpConfigClientListInput

func (SwitchSnmpConfigClientListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchSnmpConfigClientList)(nil)).Elem()
}

func (i SwitchSnmpConfigClientListArray) ToSwitchSnmpConfigClientListArrayOutput() SwitchSnmpConfigClientListArrayOutput {
	return i.ToSwitchSnmpConfigClientListArrayOutputWithContext(context.Background())
}

func (i SwitchSnmpConfigClientListArray) ToSwitchSnmpConfigClientListArrayOutputWithContext(ctx context.Context) SwitchSnmpConfigClientListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchSnmpConfigClientListArrayOutput)
}

type SwitchSnmpConfigClientListOutput struct{ *pulumi.OutputState }

func (SwitchSnmpConfigClientListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchSnmpConfigClientList)(nil)).Elem()
}

func (o SwitchSnmpConfigClientListOutput) ToSwitchSnmpConfigClientListOutput() SwitchSnmpConfigClientListOutput {
	return o
}

func (o SwitchSnmpConfigClientListOutput) ToSwitchSnmpConfigClientListOutputWithContext(ctx context.Context) SwitchSnmpConfigClientListOutput {
	return o
}

func (o SwitchSnmpConfigClientListOutput) ClientListName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchSnmpConfigClientList) *string { return v.ClientListName }).(pulumi.StringPtrOutput)
}

func (o SwitchSnmpConfigClientListOutput) Clients() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SwitchSnmpConfigClientList) []string { return v.Clients }).(pulumi.StringArrayOutput)
}

type SwitchSnmpConfigClientListArrayOutput struct{ *pulumi.OutputState }

func (SwitchSnmpConfigClientListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchSnmpConfigClientList)(nil)).Elem()
}

func (o SwitchSnmpConfigClientListArrayOutput) ToSwitchSnmpConfigClientListArrayOutput() SwitchSnmpConfigClientListArrayOutput {
	return o
}

func (o SwitchSnmpConfigClientListArrayOutput) ToSwitchSnmpConfigClientListArrayOutputWithContext(ctx context.Context) SwitchSnmpConfigClientListArrayOutput {
	return o
}

func (o SwitchSnmpConfigClientListArrayOutput) Index(i pulumi.IntInput) SwitchSnmpConfigClientListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwitchSnmpConfigClientList {
		return vs[0].([]SwitchSnmpConfigClientList)[vs[1].(int)]
	}).(SwitchSnmpConfigClientListOutput)
}

type SwitchSnmpConfigTrapGroup struct {
	Categories []string `pulumi:"categories"`
	// Categories list can refer to https://www.juniper.net/documentation/software/topics/task/configuration/snmp_trap-groups-configuring-junos-nm.html
	GroupName *string  `pulumi:"groupName"`
	Targets   []string `pulumi:"targets"`
	// enum: `all`, `v1`, `v2`
	Version *string `pulumi:"version"`
}

// SwitchSnmpConfigTrapGroupInput is an input type that accepts SwitchSnmpConfigTrapGroupArgs and SwitchSnmpConfigTrapGroupOutput values.
// You can construct a concrete instance of `SwitchSnmpConfigTrapGroupInput` via:
//
//	SwitchSnmpConfigTrapGroupArgs{...}
type SwitchSnmpConfigTrapGroupInput interface {
	pulumi.Input

	ToSwitchSnmpConfigTrapGroupOutput() SwitchSnmpConfigTrapGroupOutput
	ToSwitchSnmpConfigTrapGroupOutputWithContext(context.Context) SwitchSnmpConfigTrapGroupOutput
}

type SwitchSnmpConfigTrapGroupArgs struct {
	Categories pulumi.StringArrayInput `pulumi:"categories"`
	// Categories list can refer to https://www.juniper.net/documentation/software/topics/task/configuration/snmp_trap-groups-configuring-junos-nm.html
	GroupName pulumi.StringPtrInput   `pulumi:"groupName"`
	Targets   pulumi.StringArrayInput `pulumi:"targets"`
	// enum: `all`, `v1`, `v2`
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (SwitchSnmpConfigTrapGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchSnmpConfigTrapGroup)(nil)).Elem()
}

func (i SwitchSnmpConfigTrapGroupArgs) ToSwitchSnmpConfigTrapGroupOutput() SwitchSnmpConfigTrapGroupOutput {
	return i.ToSwitchSnmpConfigTrapGroupOutputWithContext(context.Background())
}

func (i SwitchSnmpConfigTrapGroupArgs) ToSwitchSnmpConfigTrapGroupOutputWithContext(ctx context.Context) SwitchSnmpConfigTrapGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchSnmpConfigTrapGroupOutput)
}

// SwitchSnmpConfigTrapGroupArrayInput is an input type that accepts SwitchSnmpConfigTrapGroupArray and SwitchSnmpConfigTrapGroupArrayOutput values.
// You can construct a concrete instance of `SwitchSnmpConfigTrapGroupArrayInput` via:
//
//	SwitchSnmpConfigTrapGroupArray{ SwitchSnmpConfigTrapGroupArgs{...} }
type SwitchSnmpConfigTrapGroupArrayInput interface {
	pulumi.Input

	ToSwitchSnmpConfigTrapGroupArrayOutput() SwitchSnmpConfigTrapGroupArrayOutput
	ToSwitchSnmpConfigTrapGroupArrayOutputWithContext(context.Context) SwitchSnmpConfigTrapGroupArrayOutput
}

type SwitchSnmpConfigTrapGroupArray []SwitchSnmpConfigTrapGroupInput

func (SwitchSnmpConfigTrapGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchSnmpConfigTrapGroup)(nil)).Elem()
}

func (i SwitchSnmpConfigTrapGroupArray) ToSwitchSnmpConfigTrapGroupArrayOutput() SwitchSnmpConfigTrapGroupArrayOutput {
	return i.ToSwitchSnmpConfigTrapGroupArrayOutputWithContext(context.Background())
}

func (i SwitchSnmpConfigTrapGroupArray) ToSwitchSnmpConfigTrapGroupArrayOutputWithContext(ctx context.Context) SwitchSnmpConfigTrapGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchSnmpConfigTrapGroupArrayOutput)
}

type SwitchSnmpConfigTrapGroupOutput struct{ *pulumi.OutputState }

func (SwitchSnmpConfigTrapGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchSnmpConfigTrapGroup)(nil)).Elem()
}

func (o SwitchSnmpConfigTrapGroupOutput) ToSwitchSnmpConfigTrapGroupOutput() SwitchSnmpConfigTrapGroupOutput {
	return o
}

func (o SwitchSnmpConfigTrapGroupOutput) ToSwitchSnmpConfigTrapGroupOutputWithContext(ctx context.Context) SwitchSnmpConfigTrapGroupOutput {
	return o
}

func (o SwitchSnmpConfigTrapGroupOutput) Categories() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SwitchSnmpConfigTrapGroup) []string { return v.Categories }).(pulumi.StringArrayOutput)
}

// Categories list can refer to https://www.juniper.net/documentation/software/topics/task/configuration/snmp_trap-groups-configuring-junos-nm.html
func (o SwitchSnmpConfigTrapGroupOutput) GroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchSnmpConfigTrapGroup) *string { return v.GroupName }).(pulumi.StringPtrOutput)
}

func (o SwitchSnmpConfigTrapGroupOutput) Targets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SwitchSnmpConfigTrapGroup) []string { return v.Targets }).(pulumi.StringArrayOutput)
}

// enum: `all`, `v1`, `v2`
func (o SwitchSnmpConfigTrapGroupOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchSnmpConfigTrapGroup) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type SwitchSnmpConfigTrapGroupArrayOutput struct{ *pulumi.OutputState }

func (SwitchSnmpConfigTrapGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchSnmpConfigTrapGroup)(nil)).Elem()
}

func (o SwitchSnmpConfigTrapGroupArrayOutput) ToSwitchSnmpConfigTrapGroupArrayOutput() SwitchSnmpConfigTrapGroupArrayOutput {
	return o
}

func (o SwitchSnmpConfigTrapGroupArrayOutput) ToSwitchSnmpConfigTrapGroupArrayOutputWithContext(ctx context.Context) SwitchSnmpConfigTrapGroupArrayOutput {
	return o
}

func (o SwitchSnmpConfigTrapGroupArrayOutput) Index(i pulumi.IntInput) SwitchSnmpConfigTrapGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwitchSnmpConfigTrapGroup {
		return vs[0].([]SwitchSnmpConfigTrapGroup)[vs[1].(int)]
	}).(SwitchSnmpConfigTrapGroupOutput)
}

type SwitchSnmpConfigV2cConfig struct {
	Authorization *string `pulumi:"authorization"`
	// Client_list_name here should refer to clientList above
	ClientListName *string `pulumi:"clientListName"`
	CommunityName  *string `pulumi:"communityName"`
	// View name here should be defined in views above
	View *string `pulumi:"view"`
}

// SwitchSnmpConfigV2cConfigInput is an input type that accepts SwitchSnmpConfigV2cConfigArgs and SwitchSnmpConfigV2cConfigOutput values.
// You can construct a concrete instance of `SwitchSnmpConfigV2cConfigInput` via:
//
//	SwitchSnmpConfigV2cConfigArgs{...}
type SwitchSnmpConfigV2cConfigInput interface {
	pulumi.Input

	ToSwitchSnmpConfigV2cConfigOutput() SwitchSnmpConfigV2cConfigOutput
	ToSwitchSnmpConfigV2cConfigOutputWithContext(context.Context) SwitchSnmpConfigV2cConfigOutput
}

type SwitchSnmpConfigV2cConfigArgs struct {
	Authorization pulumi.StringPtrInput `pulumi:"authorization"`
	// Client_list_name here should refer to clientList above
	ClientListName pulumi.StringPtrInput `pulumi:"clientListName"`
	CommunityName  pulumi.StringPtrInput `pulumi:"communityName"`
	// View name here should be defined in views above
	View pulumi.StringPtrInput `pulumi:"view"`
}

func (SwitchSnmpConfigV2cConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchSnmpConfigV2cConfig)(nil)).Elem()
}

func (i SwitchSnmpConfigV2cConfigArgs) ToSwitchSnmpConfigV2cConfigOutput() SwitchSnmpConfigV2cConfigOutput {
	return i.ToSwitchSnmpConfigV2cConfigOutputWithContext(context.Background())
}

func (i SwitchSnmpConfigV2cConfigArgs) ToSwitchSnmpConfigV2cConfigOutputWithContext(ctx context.Context) SwitchSnmpConfigV2cConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchSnmpConfigV2cConfigOutput)
}

// SwitchSnmpConfigV2cConfigArrayInput is an input type that accepts SwitchSnmpConfigV2cConfigArray and SwitchSnmpConfigV2cConfigArrayOutput values.
// You can construct a concrete instance of `SwitchSnmpConfigV2cConfigArrayInput` via:
//
//	SwitchSnmpConfigV2cConfigArray{ SwitchSnmpConfigV2cConfigArgs{...} }
type SwitchSnmpConfigV2cConfigArrayInput interface {
	pulumi.Input

	ToSwitchSnmpConfigV2cConfigArrayOutput() SwitchSnmpConfigV2cConfigArrayOutput
	ToSwitchSnmpConfigV2cConfigArrayOutputWithContext(context.Context) SwitchSnmpConfigV2cConfigArrayOutput
}

type SwitchSnmpConfigV2cConfigArray []SwitchSnmpConfigV2cConfigInput

func (SwitchSnmpConfigV2cConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchSnmpConfigV2cConfig)(nil)).Elem()
}

func (i SwitchSnmpConfigV2cConfigArray) ToSwitchSnmpConfigV2cConfigArrayOutput() SwitchSnmpConfigV2cConfigArrayOutput {
	return i.ToSwitchSnmpConfigV2cConfigArrayOutputWithContext(context.Background())
}

func (i SwitchSnmpConfigV2cConfigArray) ToSwitchSnmpConfigV2cConfigArrayOutputWithContext(ctx context.Context) SwitchSnmpConfigV2cConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchSnmpConfigV2cConfigArrayOutput)
}

type SwitchSnmpConfigV2cConfigOutput struct{ *pulumi.OutputState }

func (SwitchSnmpConfigV2cConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchSnmpConfigV2cConfig)(nil)).Elem()
}

func (o SwitchSnmpConfigV2cConfigOutput) ToSwitchSnmpConfigV2cConfigOutput() SwitchSnmpConfigV2cConfigOutput {
	return o
}

func (o SwitchSnmpConfigV2cConfigOutput) ToSwitchSnmpConfigV2cConfigOutputWithContext(ctx context.Context) SwitchSnmpConfigV2cConfigOutput {
	return o
}

func (o SwitchSnmpConfigV2cConfigOutput) Authorization() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchSnmpConfigV2cConfig) *string { return v.Authorization }).(pulumi.StringPtrOutput)
}

// Client_list_name here should refer to clientList above
func (o SwitchSnmpConfigV2cConfigOutput) ClientListName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchSnmpConfigV2cConfig) *string { return v.ClientListName }).(pulumi.StringPtrOutput)
}

func (o SwitchSnmpConfigV2cConfigOutput) CommunityName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchSnmpConfigV2cConfig) *string { return v.CommunityName }).(pulumi.StringPtrOutput)
}

// View name here should be defined in views above
func (o SwitchSnmpConfigV2cConfigOutput) View() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchSnmpConfigV2cConfig) *string { return v.View }).(pulumi.StringPtrOutput)
}

type SwitchSnmpConfigV2cConfigArrayOutput struct{ *pulumi.OutputState }

func (SwitchSnmpConfigV2cConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchSnmpConfigV2cConfig)(nil)).Elem()
}

func (o SwitchSnmpConfigV2cConfigArrayOutput) ToSwitchSnmpConfigV2cConfigArrayOutput() SwitchSnmpConfigV2cConfigArrayOutput {
	return o
}

func (o SwitchSnmpConfigV2cConfigArrayOutput) ToSwitchSnmpConfigV2cConfigArrayOutputWithContext(ctx context.Context) SwitchSnmpConfigV2cConfigArrayOutput {
	return o
}

func (o SwitchSnmpConfigV2cConfigArrayOutput) Index(i pulumi.IntInput) SwitchSnmpConfigV2cConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwitchSnmpConfigV2cConfig {
		return vs[0].([]SwitchSnmpConfigV2cConfig)[vs[1].(int)]
	}).(SwitchSnmpConfigV2cConfigOutput)
}

type SwitchSnmpConfigV3Config struct {
	Notifies         []SwitchSnmpConfigV3ConfigNotify          `pulumi:"notifies"`
	NotifyFilters    []SwitchSnmpConfigV3ConfigNotifyFilter    `pulumi:"notifyFilters"`
	TargetAddresses  []SwitchSnmpConfigV3ConfigTargetAddress   `pulumi:"targetAddresses"`
	TargetParameters []SwitchSnmpConfigV3ConfigTargetParameter `pulumi:"targetParameters"`
	Usms             []SwitchSnmpConfigV3ConfigUsm             `pulumi:"usms"`
	Vacm             *SwitchSnmpConfigV3ConfigVacm             `pulumi:"vacm"`
}

// SwitchSnmpConfigV3ConfigInput is an input type that accepts SwitchSnmpConfigV3ConfigArgs and SwitchSnmpConfigV3ConfigOutput values.
// You can construct a concrete instance of `SwitchSnmpConfigV3ConfigInput` via:
//
//	SwitchSnmpConfigV3ConfigArgs{...}
type SwitchSnmpConfigV3ConfigInput interface {
	pulumi.Input

	ToSwitchSnmpConfigV3ConfigOutput() SwitchSnmpConfigV3ConfigOutput
	ToSwitchSnmpConfigV3ConfigOutputWithContext(context.Context) SwitchSnmpConfigV3ConfigOutput
}

type SwitchSnmpConfigV3ConfigArgs struct {
	Notifies         SwitchSnmpConfigV3ConfigNotifyArrayInput          `pulumi:"notifies"`
	NotifyFilters    SwitchSnmpConfigV3ConfigNotifyFilterArrayInput    `pulumi:"notifyFilters"`
	TargetAddresses  SwitchSnmpConfigV3ConfigTargetAddressArrayInput   `pulumi:"targetAddresses"`
	TargetParameters SwitchSnmpConfigV3ConfigTargetParameterArrayInput `pulumi:"targetParameters"`
	Usms             SwitchSnmpConfigV3ConfigUsmArrayInput             `pulumi:"usms"`
	Vacm             SwitchSnmpConfigV3ConfigVacmPtrInput              `pulumi:"vacm"`
}

func (SwitchSnmpConfigV3ConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchSnmpConfigV3Config)(nil)).Elem()
}

func (i SwitchSnmpConfigV3ConfigArgs) ToSwitchSnmpConfigV3ConfigOutput() SwitchSnmpConfigV3ConfigOutput {
	return i.ToSwitchSnmpConfigV3ConfigOutputWithContext(context.Background())
}

func (i SwitchSnmpConfigV3ConfigArgs) ToSwitchSnmpConfigV3ConfigOutputWithContext(ctx context.Context) SwitchSnmpConfigV3ConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchSnmpConfigV3ConfigOutput)
}

func (i SwitchSnmpConfigV3ConfigArgs) ToSwitchSnmpConfigV3ConfigPtrOutput() SwitchSnmpConfigV3ConfigPtrOutput {
	return i.ToSwitchSnmpConfigV3ConfigPtrOutputWithContext(context.Background())
}

func (i SwitchSnmpConfigV3ConfigArgs) ToSwitchSnmpConfigV3ConfigPtrOutputWithContext(ctx context.Context) SwitchSnmpConfigV3ConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchSnmpConfigV3ConfigOutput).ToSwitchSnmpConfigV3ConfigPtrOutputWithContext(ctx)
}

// SwitchSnmpConfigV3ConfigPtrInput is an input type that accepts SwitchSnmpConfigV3ConfigArgs, SwitchSnmpConfigV3ConfigPtr and SwitchSnmpConfigV3ConfigPtrOutput values.
// You can construct a concrete instance of `SwitchSnmpConfigV3ConfigPtrInput` via:
//
//	        SwitchSnmpConfigV3ConfigArgs{...}
//
//	or:
//
//	        nil
type SwitchSnmpConfigV3ConfigPtrInput interface {
	pulumi.Input

	ToSwitchSnmpConfigV3ConfigPtrOutput() SwitchSnmpConfigV3ConfigPtrOutput
	ToSwitchSnmpConfigV3ConfigPtrOutputWithContext(context.Context) SwitchSnmpConfigV3ConfigPtrOutput
}

type switchSnmpConfigV3ConfigPtrType SwitchSnmpConfigV3ConfigArgs

func SwitchSnmpConfigV3ConfigPtr(v *SwitchSnmpConfigV3ConfigArgs) SwitchSnmpConfigV3ConfigPtrInput {
	return (*switchSnmpConfigV3ConfigPtrType)(v)
}

func (*switchSnmpConfigV3ConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchSnmpConfigV3Config)(nil)).Elem()
}

func (i *switchSnmpConfigV3ConfigPtrType) ToSwitchSnmpConfigV3ConfigPtrOutput() SwitchSnmpConfigV3ConfigPtrOutput {
	return i.ToSwitchSnmpConfigV3ConfigPtrOutputWithContext(context.Background())
}

func (i *switchSnmpConfigV3ConfigPtrType) ToSwitchSnmpConfigV3ConfigPtrOutputWithContext(ctx context.Context) SwitchSnmpConfigV3ConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchSnmpConfigV3ConfigPtrOutput)
}

type SwitchSnmpConfigV3ConfigOutput struct{ *pulumi.OutputState }

func (SwitchSnmpConfigV3ConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchSnmpConfigV3Config)(nil)).Elem()
}

func (o SwitchSnmpConfigV3ConfigOutput) ToSwitchSnmpConfigV3ConfigOutput() SwitchSnmpConfigV3ConfigOutput {
	return o
}

func (o SwitchSnmpConfigV3ConfigOutput) ToSwitchSnmpConfigV3ConfigOutputWithContext(ctx context.Context) SwitchSnmpConfigV3ConfigOutput {
	return o
}

func (o SwitchSnmpConfigV3ConfigOutput) ToSwitchSnmpConfigV3ConfigPtrOutput() SwitchSnmpConfigV3ConfigPtrOutput {
	return o.ToSwitchSnmpConfigV3ConfigPtrOutputWithContext(context.Background())
}

func (o SwitchSnmpConfigV3ConfigOutput) ToSwitchSnmpConfigV3ConfigPtrOutputWithContext(ctx context.Context) SwitchSnmpConfigV3ConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SwitchSnmpConfigV3Config) *SwitchSnmpConfigV3Config {
		return &v
	}).(SwitchSnmpConfigV3ConfigPtrOutput)
}

func (o SwitchSnmpConfigV3ConfigOutput) Notifies() SwitchSnmpConfigV3ConfigNotifyArrayOutput {
	return o.ApplyT(func(v SwitchSnmpConfigV3Config) []SwitchSnmpConfigV3ConfigNotify { return v.Notifies }).(SwitchSnmpConfigV3ConfigNotifyArrayOutput)
}

func (o SwitchSnmpConfigV3ConfigOutput) NotifyFilters() SwitchSnmpConfigV3ConfigNotifyFilterArrayOutput {
	return o.ApplyT(func(v SwitchSnmpConfigV3Config) []SwitchSnmpConfigV3ConfigNotifyFilter { return v.NotifyFilters }).(SwitchSnmpConfigV3ConfigNotifyFilterArrayOutput)
}

func (o SwitchSnmpConfigV3ConfigOutput) TargetAddresses() SwitchSnmpConfigV3ConfigTargetAddressArrayOutput {
	return o.ApplyT(func(v SwitchSnmpConfigV3Config) []SwitchSnmpConfigV3ConfigTargetAddress { return v.TargetAddresses }).(SwitchSnmpConfigV3ConfigTargetAddressArrayOutput)
}

func (o SwitchSnmpConfigV3ConfigOutput) TargetParameters() SwitchSnmpConfigV3ConfigTargetParameterArrayOutput {
	return o.ApplyT(func(v SwitchSnmpConfigV3Config) []SwitchSnmpConfigV3ConfigTargetParameter { return v.TargetParameters }).(SwitchSnmpConfigV3ConfigTargetParameterArrayOutput)
}

func (o SwitchSnmpConfigV3ConfigOutput) Usms() SwitchSnmpConfigV3ConfigUsmArrayOutput {
	return o.ApplyT(func(v SwitchSnmpConfigV3Config) []SwitchSnmpConfigV3ConfigUsm { return v.Usms }).(SwitchSnmpConfigV3ConfigUsmArrayOutput)
}

func (o SwitchSnmpConfigV3ConfigOutput) Vacm() SwitchSnmpConfigV3ConfigVacmPtrOutput {
	return o.ApplyT(func(v SwitchSnmpConfigV3Config) *SwitchSnmpConfigV3ConfigVacm { return v.Vacm }).(SwitchSnmpConfigV3ConfigVacmPtrOutput)
}

type SwitchSnmpConfigV3ConfigPtrOutput struct{ *pulumi.OutputState }

func (SwitchSnmpConfigV3ConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchSnmpConfigV3Config)(nil)).Elem()
}

func (o SwitchSnmpConfigV3ConfigPtrOutput) ToSwitchSnmpConfigV3ConfigPtrOutput() SwitchSnmpConfigV3ConfigPtrOutput {
	return o
}

func (o SwitchSnmpConfigV3ConfigPtrOutput) ToSwitchSnmpConfigV3ConfigPtrOutputWithContext(ctx context.Context) SwitchSnmpConfigV3ConfigPtrOutput {
	return o
}

func (o SwitchSnmpConfigV3ConfigPtrOutput) Elem() SwitchSnmpConfigV3ConfigOutput {
	return o.ApplyT(func(v *SwitchSnmpConfigV3Config) SwitchSnmpConfigV3Config {
		if v != nil {
			return *v
		}
		var ret SwitchSnmpConfigV3Config
		return ret
	}).(SwitchSnmpConfigV3ConfigOutput)
}

func (o SwitchSnmpConfigV3ConfigPtrOutput) Notifies() SwitchSnmpConfigV3ConfigNotifyArrayOutput {
	return o.ApplyT(func(v *SwitchSnmpConfigV3Config) []SwitchSnmpConfigV3ConfigNotify {
		if v == nil {
			return nil
		}
		return v.Notifies
	}).(SwitchSnmpConfigV3ConfigNotifyArrayOutput)
}

func (o SwitchSnmpConfigV3ConfigPtrOutput) NotifyFilters() SwitchSnmpConfigV3ConfigNotifyFilterArrayOutput {
	return o.ApplyT(func(v *SwitchSnmpConfigV3Config) []SwitchSnmpConfigV3ConfigNotifyFilter {
		if v == nil {
			return nil
		}
		return v.NotifyFilters
	}).(SwitchSnmpConfigV3ConfigNotifyFilterArrayOutput)
}

func (o SwitchSnmpConfigV3ConfigPtrOutput) TargetAddresses() SwitchSnmpConfigV3ConfigTargetAddressArrayOutput {
	return o.ApplyT(func(v *SwitchSnmpConfigV3Config) []SwitchSnmpConfigV3ConfigTargetAddress {
		if v == nil {
			return nil
		}
		return v.TargetAddresses
	}).(SwitchSnmpConfigV3ConfigTargetAddressArrayOutput)
}

func (o SwitchSnmpConfigV3ConfigPtrOutput) TargetParameters() SwitchSnmpConfigV3ConfigTargetParameterArrayOutput {
	return o.ApplyT(func(v *SwitchSnmpConfigV3Config) []SwitchSnmpConfigV3ConfigTargetParameter {
		if v == nil {
			return nil
		}
		return v.TargetParameters
	}).(SwitchSnmpConfigV3ConfigTargetParameterArrayOutput)
}

func (o SwitchSnmpConfigV3ConfigPtrOutput) Usms() SwitchSnmpConfigV3ConfigUsmArrayOutput {
	return o.ApplyT(func(v *SwitchSnmpConfigV3Config) []SwitchSnmpConfigV3ConfigUsm {
		if v == nil {
			return nil
		}
		return v.Usms
	}).(SwitchSnmpConfigV3ConfigUsmArrayOutput)
}

func (o SwitchSnmpConfigV3ConfigPtrOutput) Vacm() SwitchSnmpConfigV3ConfigVacmPtrOutput {
	return o.ApplyT(func(v *SwitchSnmpConfigV3Config) *SwitchSnmpConfigV3ConfigVacm {
		if v == nil {
			return nil
		}
		return v.Vacm
	}).(SwitchSnmpConfigV3ConfigVacmPtrOutput)
}

type SwitchSnmpConfigV3ConfigNotify struct {
	Name string `pulumi:"name"`
	Tag  string `pulumi:"tag"`
	// enum: `inform`, `trap`
	Type string `pulumi:"type"`
}

// SwitchSnmpConfigV3ConfigNotifyInput is an input type that accepts SwitchSnmpConfigV3ConfigNotifyArgs and SwitchSnmpConfigV3ConfigNotifyOutput values.
// You can construct a concrete instance of `SwitchSnmpConfigV3ConfigNotifyInput` via:
//
//	SwitchSnmpConfigV3ConfigNotifyArgs{...}
type SwitchSnmpConfigV3ConfigNotifyInput interface {
	pulumi.Input

	ToSwitchSnmpConfigV3ConfigNotifyOutput() SwitchSnmpConfigV3ConfigNotifyOutput
	ToSwitchSnmpConfigV3ConfigNotifyOutputWithContext(context.Context) SwitchSnmpConfigV3ConfigNotifyOutput
}

type SwitchSnmpConfigV3ConfigNotifyArgs struct {
	Name pulumi.StringInput `pulumi:"name"`
	Tag  pulumi.StringInput `pulumi:"tag"`
	// enum: `inform`, `trap`
	Type pulumi.StringInput `pulumi:"type"`
}

func (SwitchSnmpConfigV3ConfigNotifyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchSnmpConfigV3ConfigNotify)(nil)).Elem()
}

func (i SwitchSnmpConfigV3ConfigNotifyArgs) ToSwitchSnmpConfigV3ConfigNotifyOutput() SwitchSnmpConfigV3ConfigNotifyOutput {
	return i.ToSwitchSnmpConfigV3ConfigNotifyOutputWithContext(context.Background())
}

func (i SwitchSnmpConfigV3ConfigNotifyArgs) ToSwitchSnmpConfigV3ConfigNotifyOutputWithContext(ctx context.Context) SwitchSnmpConfigV3ConfigNotifyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchSnmpConfigV3ConfigNotifyOutput)
}

// SwitchSnmpConfigV3ConfigNotifyArrayInput is an input type that accepts SwitchSnmpConfigV3ConfigNotifyArray and SwitchSnmpConfigV3ConfigNotifyArrayOutput values.
// You can construct a concrete instance of `SwitchSnmpConfigV3ConfigNotifyArrayInput` via:
//
//	SwitchSnmpConfigV3ConfigNotifyArray{ SwitchSnmpConfigV3ConfigNotifyArgs{...} }
type SwitchSnmpConfigV3ConfigNotifyArrayInput interface {
	pulumi.Input

	ToSwitchSnmpConfigV3ConfigNotifyArrayOutput() SwitchSnmpConfigV3ConfigNotifyArrayOutput
	ToSwitchSnmpConfigV3ConfigNotifyArrayOutputWithContext(context.Context) SwitchSnmpConfigV3ConfigNotifyArrayOutput
}

type SwitchSnmpConfigV3ConfigNotifyArray []SwitchSnmpConfigV3ConfigNotifyInput

func (SwitchSnmpConfigV3ConfigNotifyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchSnmpConfigV3ConfigNotify)(nil)).Elem()
}

func (i SwitchSnmpConfigV3ConfigNotifyArray) ToSwitchSnmpConfigV3ConfigNotifyArrayOutput() SwitchSnmpConfigV3ConfigNotifyArrayOutput {
	return i.ToSwitchSnmpConfigV3ConfigNotifyArrayOutputWithContext(context.Background())
}

func (i SwitchSnmpConfigV3ConfigNotifyArray) ToSwitchSnmpConfigV3ConfigNotifyArrayOutputWithContext(ctx context.Context) SwitchSnmpConfigV3ConfigNotifyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchSnmpConfigV3ConfigNotifyArrayOutput)
}

type SwitchSnmpConfigV3ConfigNotifyOutput struct{ *pulumi.OutputState }

func (SwitchSnmpConfigV3ConfigNotifyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchSnmpConfigV3ConfigNotify)(nil)).Elem()
}

func (o SwitchSnmpConfigV3ConfigNotifyOutput) ToSwitchSnmpConfigV3ConfigNotifyOutput() SwitchSnmpConfigV3ConfigNotifyOutput {
	return o
}

func (o SwitchSnmpConfigV3ConfigNotifyOutput) ToSwitchSnmpConfigV3ConfigNotifyOutputWithContext(ctx context.Context) SwitchSnmpConfigV3ConfigNotifyOutput {
	return o
}

func (o SwitchSnmpConfigV3ConfigNotifyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SwitchSnmpConfigV3ConfigNotify) string { return v.Name }).(pulumi.StringOutput)
}

func (o SwitchSnmpConfigV3ConfigNotifyOutput) Tag() pulumi.StringOutput {
	return o.ApplyT(func(v SwitchSnmpConfigV3ConfigNotify) string { return v.Tag }).(pulumi.StringOutput)
}

// enum: `inform`, `trap`
func (o SwitchSnmpConfigV3ConfigNotifyOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SwitchSnmpConfigV3ConfigNotify) string { return v.Type }).(pulumi.StringOutput)
}

type SwitchSnmpConfigV3ConfigNotifyArrayOutput struct{ *pulumi.OutputState }

func (SwitchSnmpConfigV3ConfigNotifyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchSnmpConfigV3ConfigNotify)(nil)).Elem()
}

func (o SwitchSnmpConfigV3ConfigNotifyArrayOutput) ToSwitchSnmpConfigV3ConfigNotifyArrayOutput() SwitchSnmpConfigV3ConfigNotifyArrayOutput {
	return o
}

func (o SwitchSnmpConfigV3ConfigNotifyArrayOutput) ToSwitchSnmpConfigV3ConfigNotifyArrayOutputWithContext(ctx context.Context) SwitchSnmpConfigV3ConfigNotifyArrayOutput {
	return o
}

func (o SwitchSnmpConfigV3ConfigNotifyArrayOutput) Index(i pulumi.IntInput) SwitchSnmpConfigV3ConfigNotifyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwitchSnmpConfigV3ConfigNotify {
		return vs[0].([]SwitchSnmpConfigV3ConfigNotify)[vs[1].(int)]
	}).(SwitchSnmpConfigV3ConfigNotifyOutput)
}

type SwitchSnmpConfigV3ConfigNotifyFilter struct {
	Contents    []SwitchSnmpConfigV3ConfigNotifyFilterContent `pulumi:"contents"`
	ProfileName *string                                       `pulumi:"profileName"`
}

// SwitchSnmpConfigV3ConfigNotifyFilterInput is an input type that accepts SwitchSnmpConfigV3ConfigNotifyFilterArgs and SwitchSnmpConfigV3ConfigNotifyFilterOutput values.
// You can construct a concrete instance of `SwitchSnmpConfigV3ConfigNotifyFilterInput` via:
//
//	SwitchSnmpConfigV3ConfigNotifyFilterArgs{...}
type SwitchSnmpConfigV3ConfigNotifyFilterInput interface {
	pulumi.Input

	ToSwitchSnmpConfigV3ConfigNotifyFilterOutput() SwitchSnmpConfigV3ConfigNotifyFilterOutput
	ToSwitchSnmpConfigV3ConfigNotifyFilterOutputWithContext(context.Context) SwitchSnmpConfigV3ConfigNotifyFilterOutput
}

type SwitchSnmpConfigV3ConfigNotifyFilterArgs struct {
	Contents    SwitchSnmpConfigV3ConfigNotifyFilterContentArrayInput `pulumi:"contents"`
	ProfileName pulumi.StringPtrInput                                 `pulumi:"profileName"`
}

func (SwitchSnmpConfigV3ConfigNotifyFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchSnmpConfigV3ConfigNotifyFilter)(nil)).Elem()
}

func (i SwitchSnmpConfigV3ConfigNotifyFilterArgs) ToSwitchSnmpConfigV3ConfigNotifyFilterOutput() SwitchSnmpConfigV3ConfigNotifyFilterOutput {
	return i.ToSwitchSnmpConfigV3ConfigNotifyFilterOutputWithContext(context.Background())
}

func (i SwitchSnmpConfigV3ConfigNotifyFilterArgs) ToSwitchSnmpConfigV3ConfigNotifyFilterOutputWithContext(ctx context.Context) SwitchSnmpConfigV3ConfigNotifyFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchSnmpConfigV3ConfigNotifyFilterOutput)
}

// SwitchSnmpConfigV3ConfigNotifyFilterArrayInput is an input type that accepts SwitchSnmpConfigV3ConfigNotifyFilterArray and SwitchSnmpConfigV3ConfigNotifyFilterArrayOutput values.
// You can construct a concrete instance of `SwitchSnmpConfigV3ConfigNotifyFilterArrayInput` via:
//
//	SwitchSnmpConfigV3ConfigNotifyFilterArray{ SwitchSnmpConfigV3ConfigNotifyFilterArgs{...} }
type SwitchSnmpConfigV3ConfigNotifyFilterArrayInput interface {
	pulumi.Input

	ToSwitchSnmpConfigV3ConfigNotifyFilterArrayOutput() SwitchSnmpConfigV3ConfigNotifyFilterArrayOutput
	ToSwitchSnmpConfigV3ConfigNotifyFilterArrayOutputWithContext(context.Context) SwitchSnmpConfigV3ConfigNotifyFilterArrayOutput
}

type SwitchSnmpConfigV3ConfigNotifyFilterArray []SwitchSnmpConfigV3ConfigNotifyFilterInput

func (SwitchSnmpConfigV3ConfigNotifyFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchSnmpConfigV3ConfigNotifyFilter)(nil)).Elem()
}

func (i SwitchSnmpConfigV3ConfigNotifyFilterArray) ToSwitchSnmpConfigV3ConfigNotifyFilterArrayOutput() SwitchSnmpConfigV3ConfigNotifyFilterArrayOutput {
	return i.ToSwitchSnmpConfigV3ConfigNotifyFilterArrayOutputWithContext(context.Background())
}

func (i SwitchSnmpConfigV3ConfigNotifyFilterArray) ToSwitchSnmpConfigV3ConfigNotifyFilterArrayOutputWithContext(ctx context.Context) SwitchSnmpConfigV3ConfigNotifyFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchSnmpConfigV3ConfigNotifyFilterArrayOutput)
}

type SwitchSnmpConfigV3ConfigNotifyFilterOutput struct{ *pulumi.OutputState }

func (SwitchSnmpConfigV3ConfigNotifyFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchSnmpConfigV3ConfigNotifyFilter)(nil)).Elem()
}

func (o SwitchSnmpConfigV3ConfigNotifyFilterOutput) ToSwitchSnmpConfigV3ConfigNotifyFilterOutput() SwitchSnmpConfigV3ConfigNotifyFilterOutput {
	return o
}

func (o SwitchSnmpConfigV3ConfigNotifyFilterOutput) ToSwitchSnmpConfigV3ConfigNotifyFilterOutputWithContext(ctx context.Context) SwitchSnmpConfigV3ConfigNotifyFilterOutput {
	return o
}

func (o SwitchSnmpConfigV3ConfigNotifyFilterOutput) Contents() SwitchSnmpConfigV3ConfigNotifyFilterContentArrayOutput {
	return o.ApplyT(func(v SwitchSnmpConfigV3ConfigNotifyFilter) []SwitchSnmpConfigV3ConfigNotifyFilterContent {
		return v.Contents
	}).(SwitchSnmpConfigV3ConfigNotifyFilterContentArrayOutput)
}

func (o SwitchSnmpConfigV3ConfigNotifyFilterOutput) ProfileName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchSnmpConfigV3ConfigNotifyFilter) *string { return v.ProfileName }).(pulumi.StringPtrOutput)
}

type SwitchSnmpConfigV3ConfigNotifyFilterArrayOutput struct{ *pulumi.OutputState }

func (SwitchSnmpConfigV3ConfigNotifyFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchSnmpConfigV3ConfigNotifyFilter)(nil)).Elem()
}

func (o SwitchSnmpConfigV3ConfigNotifyFilterArrayOutput) ToSwitchSnmpConfigV3ConfigNotifyFilterArrayOutput() SwitchSnmpConfigV3ConfigNotifyFilterArrayOutput {
	return o
}

func (o SwitchSnmpConfigV3ConfigNotifyFilterArrayOutput) ToSwitchSnmpConfigV3ConfigNotifyFilterArrayOutputWithContext(ctx context.Context) SwitchSnmpConfigV3ConfigNotifyFilterArrayOutput {
	return o
}

func (o SwitchSnmpConfigV3ConfigNotifyFilterArrayOutput) Index(i pulumi.IntInput) SwitchSnmpConfigV3ConfigNotifyFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwitchSnmpConfigV3ConfigNotifyFilter {
		return vs[0].([]SwitchSnmpConfigV3ConfigNotifyFilter)[vs[1].(int)]
	}).(SwitchSnmpConfigV3ConfigNotifyFilterOutput)
}

type SwitchSnmpConfigV3ConfigNotifyFilterContent struct {
	Include *bool  `pulumi:"include"`
	Oid     string `pulumi:"oid"`
}

// SwitchSnmpConfigV3ConfigNotifyFilterContentInput is an input type that accepts SwitchSnmpConfigV3ConfigNotifyFilterContentArgs and SwitchSnmpConfigV3ConfigNotifyFilterContentOutput values.
// You can construct a concrete instance of `SwitchSnmpConfigV3ConfigNotifyFilterContentInput` via:
//
//	SwitchSnmpConfigV3ConfigNotifyFilterContentArgs{...}
type SwitchSnmpConfigV3ConfigNotifyFilterContentInput interface {
	pulumi.Input

	ToSwitchSnmpConfigV3ConfigNotifyFilterContentOutput() SwitchSnmpConfigV3ConfigNotifyFilterContentOutput
	ToSwitchSnmpConfigV3ConfigNotifyFilterContentOutputWithContext(context.Context) SwitchSnmpConfigV3ConfigNotifyFilterContentOutput
}

type SwitchSnmpConfigV3ConfigNotifyFilterContentArgs struct {
	Include pulumi.BoolPtrInput `pulumi:"include"`
	Oid     pulumi.StringInput  `pulumi:"oid"`
}

func (SwitchSnmpConfigV3ConfigNotifyFilterContentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchSnmpConfigV3ConfigNotifyFilterContent)(nil)).Elem()
}

func (i SwitchSnmpConfigV3ConfigNotifyFilterContentArgs) ToSwitchSnmpConfigV3ConfigNotifyFilterContentOutput() SwitchSnmpConfigV3ConfigNotifyFilterContentOutput {
	return i.ToSwitchSnmpConfigV3ConfigNotifyFilterContentOutputWithContext(context.Background())
}

func (i SwitchSnmpConfigV3ConfigNotifyFilterContentArgs) ToSwitchSnmpConfigV3ConfigNotifyFilterContentOutputWithContext(ctx context.Context) SwitchSnmpConfigV3ConfigNotifyFilterContentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchSnmpConfigV3ConfigNotifyFilterContentOutput)
}

// SwitchSnmpConfigV3ConfigNotifyFilterContentArrayInput is an input type that accepts SwitchSnmpConfigV3ConfigNotifyFilterContentArray and SwitchSnmpConfigV3ConfigNotifyFilterContentArrayOutput values.
// You can construct a concrete instance of `SwitchSnmpConfigV3ConfigNotifyFilterContentArrayInput` via:
//
//	SwitchSnmpConfigV3ConfigNotifyFilterContentArray{ SwitchSnmpConfigV3ConfigNotifyFilterContentArgs{...} }
type SwitchSnmpConfigV3ConfigNotifyFilterContentArrayInput interface {
	pulumi.Input

	ToSwitchSnmpConfigV3ConfigNotifyFilterContentArrayOutput() SwitchSnmpConfigV3ConfigNotifyFilterContentArrayOutput
	ToSwitchSnmpConfigV3ConfigNotifyFilterContentArrayOutputWithContext(context.Context) SwitchSnmpConfigV3ConfigNotifyFilterContentArrayOutput
}

type SwitchSnmpConfigV3ConfigNotifyFilterContentArray []SwitchSnmpConfigV3ConfigNotifyFilterContentInput

func (SwitchSnmpConfigV3ConfigNotifyFilterContentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchSnmpConfigV3ConfigNotifyFilterContent)(nil)).Elem()
}

func (i SwitchSnmpConfigV3ConfigNotifyFilterContentArray) ToSwitchSnmpConfigV3ConfigNotifyFilterContentArrayOutput() SwitchSnmpConfigV3ConfigNotifyFilterContentArrayOutput {
	return i.ToSwitchSnmpConfigV3ConfigNotifyFilterContentArrayOutputWithContext(context.Background())
}

func (i SwitchSnmpConfigV3ConfigNotifyFilterContentArray) ToSwitchSnmpConfigV3ConfigNotifyFilterContentArrayOutputWithContext(ctx context.Context) SwitchSnmpConfigV3ConfigNotifyFilterContentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchSnmpConfigV3ConfigNotifyFilterContentArrayOutput)
}

type SwitchSnmpConfigV3ConfigNotifyFilterContentOutput struct{ *pulumi.OutputState }

func (SwitchSnmpConfigV3ConfigNotifyFilterContentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchSnmpConfigV3ConfigNotifyFilterContent)(nil)).Elem()
}

func (o SwitchSnmpConfigV3ConfigNotifyFilterContentOutput) ToSwitchSnmpConfigV3ConfigNotifyFilterContentOutput() SwitchSnmpConfigV3ConfigNotifyFilterContentOutput {
	return o
}

func (o SwitchSnmpConfigV3ConfigNotifyFilterContentOutput) ToSwitchSnmpConfigV3ConfigNotifyFilterContentOutputWithContext(ctx context.Context) SwitchSnmpConfigV3ConfigNotifyFilterContentOutput {
	return o
}

func (o SwitchSnmpConfigV3ConfigNotifyFilterContentOutput) Include() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SwitchSnmpConfigV3ConfigNotifyFilterContent) *bool { return v.Include }).(pulumi.BoolPtrOutput)
}

func (o SwitchSnmpConfigV3ConfigNotifyFilterContentOutput) Oid() pulumi.StringOutput {
	return o.ApplyT(func(v SwitchSnmpConfigV3ConfigNotifyFilterContent) string { return v.Oid }).(pulumi.StringOutput)
}

type SwitchSnmpConfigV3ConfigNotifyFilterContentArrayOutput struct{ *pulumi.OutputState }

func (SwitchSnmpConfigV3ConfigNotifyFilterContentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchSnmpConfigV3ConfigNotifyFilterContent)(nil)).Elem()
}

func (o SwitchSnmpConfigV3ConfigNotifyFilterContentArrayOutput) ToSwitchSnmpConfigV3ConfigNotifyFilterContentArrayOutput() SwitchSnmpConfigV3ConfigNotifyFilterContentArrayOutput {
	return o
}

func (o SwitchSnmpConfigV3ConfigNotifyFilterContentArrayOutput) ToSwitchSnmpConfigV3ConfigNotifyFilterContentArrayOutputWithContext(ctx context.Context) SwitchSnmpConfigV3ConfigNotifyFilterContentArrayOutput {
	return o
}

func (o SwitchSnmpConfigV3ConfigNotifyFilterContentArrayOutput) Index(i pulumi.IntInput) SwitchSnmpConfigV3ConfigNotifyFilterContentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwitchSnmpConfigV3ConfigNotifyFilterContent {
		return vs[0].([]SwitchSnmpConfigV3ConfigNotifyFilterContent)[vs[1].(int)]
	}).(SwitchSnmpConfigV3ConfigNotifyFilterContentOutput)
}

type SwitchSnmpConfigV3ConfigTargetAddress struct {
	Address     string  `pulumi:"address"`
	AddressMask string  `pulumi:"addressMask"`
	Port        *string `pulumi:"port"`
	// Refer to notify tag, can be multiple with blank
	TagList           *string `pulumi:"tagList"`
	TargetAddressName string  `pulumi:"targetAddressName"`
	// Refer to notify target parameters name
	TargetParameters *string `pulumi:"targetParameters"`
}

// SwitchSnmpConfigV3ConfigTargetAddressInput is an input type that accepts SwitchSnmpConfigV3ConfigTargetAddressArgs and SwitchSnmpConfigV3ConfigTargetAddressOutput values.
// You can construct a concrete instance of `SwitchSnmpConfigV3ConfigTargetAddressInput` via:
//
//	SwitchSnmpConfigV3ConfigTargetAddressArgs{...}
type SwitchSnmpConfigV3ConfigTargetAddressInput interface {
	pulumi.Input

	ToSwitchSnmpConfigV3ConfigTargetAddressOutput() SwitchSnmpConfigV3ConfigTargetAddressOutput
	ToSwitchSnmpConfigV3ConfigTargetAddressOutputWithContext(context.Context) SwitchSnmpConfigV3ConfigTargetAddressOutput
}

type SwitchSnmpConfigV3ConfigTargetAddressArgs struct {
	Address     pulumi.StringInput    `pulumi:"address"`
	AddressMask pulumi.StringInput    `pulumi:"addressMask"`
	Port        pulumi.StringPtrInput `pulumi:"port"`
	// Refer to notify tag, can be multiple with blank
	TagList           pulumi.StringPtrInput `pulumi:"tagList"`
	TargetAddressName pulumi.StringInput    `pulumi:"targetAddressName"`
	// Refer to notify target parameters name
	TargetParameters pulumi.StringPtrInput `pulumi:"targetParameters"`
}

func (SwitchSnmpConfigV3ConfigTargetAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchSnmpConfigV3ConfigTargetAddress)(nil)).Elem()
}

func (i SwitchSnmpConfigV3ConfigTargetAddressArgs) ToSwitchSnmpConfigV3ConfigTargetAddressOutput() SwitchSnmpConfigV3ConfigTargetAddressOutput {
	return i.ToSwitchSnmpConfigV3ConfigTargetAddressOutputWithContext(context.Background())
}

func (i SwitchSnmpConfigV3ConfigTargetAddressArgs) ToSwitchSnmpConfigV3ConfigTargetAddressOutputWithContext(ctx context.Context) SwitchSnmpConfigV3ConfigTargetAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchSnmpConfigV3ConfigTargetAddressOutput)
}

// SwitchSnmpConfigV3ConfigTargetAddressArrayInput is an input type that accepts SwitchSnmpConfigV3ConfigTargetAddressArray and SwitchSnmpConfigV3ConfigTargetAddressArrayOutput values.
// You can construct a concrete instance of `SwitchSnmpConfigV3ConfigTargetAddressArrayInput` via:
//
//	SwitchSnmpConfigV3ConfigTargetAddressArray{ SwitchSnmpConfigV3ConfigTargetAddressArgs{...} }
type SwitchSnmpConfigV3ConfigTargetAddressArrayInput interface {
	pulumi.Input

	ToSwitchSnmpConfigV3ConfigTargetAddressArrayOutput() SwitchSnmpConfigV3ConfigTargetAddressArrayOutput
	ToSwitchSnmpConfigV3ConfigTargetAddressArrayOutputWithContext(context.Context) SwitchSnmpConfigV3ConfigTargetAddressArrayOutput
}

type SwitchSnmpConfigV3ConfigTargetAddressArray []SwitchSnmpConfigV3ConfigTargetAddressInput

func (SwitchSnmpConfigV3ConfigTargetAddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchSnmpConfigV3ConfigTargetAddress)(nil)).Elem()
}

func (i SwitchSnmpConfigV3ConfigTargetAddressArray) ToSwitchSnmpConfigV3ConfigTargetAddressArrayOutput() SwitchSnmpConfigV3ConfigTargetAddressArrayOutput {
	return i.ToSwitchSnmpConfigV3ConfigTargetAddressArrayOutputWithContext(context.Background())
}

func (i SwitchSnmpConfigV3ConfigTargetAddressArray) ToSwitchSnmpConfigV3ConfigTargetAddressArrayOutputWithContext(ctx context.Context) SwitchSnmpConfigV3ConfigTargetAddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchSnmpConfigV3ConfigTargetAddressArrayOutput)
}

type SwitchSnmpConfigV3ConfigTargetAddressOutput struct{ *pulumi.OutputState }

func (SwitchSnmpConfigV3ConfigTargetAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchSnmpConfigV3ConfigTargetAddress)(nil)).Elem()
}

func (o SwitchSnmpConfigV3ConfigTargetAddressOutput) ToSwitchSnmpConfigV3ConfigTargetAddressOutput() SwitchSnmpConfigV3ConfigTargetAddressOutput {
	return o
}

func (o SwitchSnmpConfigV3ConfigTargetAddressOutput) ToSwitchSnmpConfigV3ConfigTargetAddressOutputWithContext(ctx context.Context) SwitchSnmpConfigV3ConfigTargetAddressOutput {
	return o
}

func (o SwitchSnmpConfigV3ConfigTargetAddressOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v SwitchSnmpConfigV3ConfigTargetAddress) string { return v.Address }).(pulumi.StringOutput)
}

func (o SwitchSnmpConfigV3ConfigTargetAddressOutput) AddressMask() pulumi.StringOutput {
	return o.ApplyT(func(v SwitchSnmpConfigV3ConfigTargetAddress) string { return v.AddressMask }).(pulumi.StringOutput)
}

func (o SwitchSnmpConfigV3ConfigTargetAddressOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchSnmpConfigV3ConfigTargetAddress) *string { return v.Port }).(pulumi.StringPtrOutput)
}

// Refer to notify tag, can be multiple with blank
func (o SwitchSnmpConfigV3ConfigTargetAddressOutput) TagList() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchSnmpConfigV3ConfigTargetAddress) *string { return v.TagList }).(pulumi.StringPtrOutput)
}

func (o SwitchSnmpConfigV3ConfigTargetAddressOutput) TargetAddressName() pulumi.StringOutput {
	return o.ApplyT(func(v SwitchSnmpConfigV3ConfigTargetAddress) string { return v.TargetAddressName }).(pulumi.StringOutput)
}

// Refer to notify target parameters name
func (o SwitchSnmpConfigV3ConfigTargetAddressOutput) TargetParameters() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchSnmpConfigV3ConfigTargetAddress) *string { return v.TargetParameters }).(pulumi.StringPtrOutput)
}

type SwitchSnmpConfigV3ConfigTargetAddressArrayOutput struct{ *pulumi.OutputState }

func (SwitchSnmpConfigV3ConfigTargetAddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchSnmpConfigV3ConfigTargetAddress)(nil)).Elem()
}

func (o SwitchSnmpConfigV3ConfigTargetAddressArrayOutput) ToSwitchSnmpConfigV3ConfigTargetAddressArrayOutput() SwitchSnmpConfigV3ConfigTargetAddressArrayOutput {
	return o
}

func (o SwitchSnmpConfigV3ConfigTargetAddressArrayOutput) ToSwitchSnmpConfigV3ConfigTargetAddressArrayOutputWithContext(ctx context.Context) SwitchSnmpConfigV3ConfigTargetAddressArrayOutput {
	return o
}

func (o SwitchSnmpConfigV3ConfigTargetAddressArrayOutput) Index(i pulumi.IntInput) SwitchSnmpConfigV3ConfigTargetAddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwitchSnmpConfigV3ConfigTargetAddress {
		return vs[0].([]SwitchSnmpConfigV3ConfigTargetAddress)[vs[1].(int)]
	}).(SwitchSnmpConfigV3ConfigTargetAddressOutput)
}

type SwitchSnmpConfigV3ConfigTargetParameter struct {
	// enum: `v1`, `v2c`, `v3`
	MessageProcessingModel string `pulumi:"messageProcessingModel"`
	Name                   string `pulumi:"name"`
	// Refer to profile-name in notify_filter
	NotifyFilter *string `pulumi:"notifyFilter"`
	// enum: `authentication`, `none`, `privacy`
	SecurityLevel *string `pulumi:"securityLevel"`
	// enum: `usm`, `v1`, `v2c`
	SecurityModel *string `pulumi:"securityModel"`
	// Refer to securityName in usm
	SecurityName *string `pulumi:"securityName"`
}

// SwitchSnmpConfigV3ConfigTargetParameterInput is an input type that accepts SwitchSnmpConfigV3ConfigTargetParameterArgs and SwitchSnmpConfigV3ConfigTargetParameterOutput values.
// You can construct a concrete instance of `SwitchSnmpConfigV3ConfigTargetParameterInput` via:
//
//	SwitchSnmpConfigV3ConfigTargetParameterArgs{...}
type SwitchSnmpConfigV3ConfigTargetParameterInput interface {
	pulumi.Input

	ToSwitchSnmpConfigV3ConfigTargetParameterOutput() SwitchSnmpConfigV3ConfigTargetParameterOutput
	ToSwitchSnmpConfigV3ConfigTargetParameterOutputWithContext(context.Context) SwitchSnmpConfigV3ConfigTargetParameterOutput
}

type SwitchSnmpConfigV3ConfigTargetParameterArgs struct {
	// enum: `v1`, `v2c`, `v3`
	MessageProcessingModel pulumi.StringInput `pulumi:"messageProcessingModel"`
	Name                   pulumi.StringInput `pulumi:"name"`
	// Refer to profile-name in notify_filter
	NotifyFilter pulumi.StringPtrInput `pulumi:"notifyFilter"`
	// enum: `authentication`, `none`, `privacy`
	SecurityLevel pulumi.StringPtrInput `pulumi:"securityLevel"`
	// enum: `usm`, `v1`, `v2c`
	SecurityModel pulumi.StringPtrInput `pulumi:"securityModel"`
	// Refer to securityName in usm
	SecurityName pulumi.StringPtrInput `pulumi:"securityName"`
}

func (SwitchSnmpConfigV3ConfigTargetParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchSnmpConfigV3ConfigTargetParameter)(nil)).Elem()
}

func (i SwitchSnmpConfigV3ConfigTargetParameterArgs) ToSwitchSnmpConfigV3ConfigTargetParameterOutput() SwitchSnmpConfigV3ConfigTargetParameterOutput {
	return i.ToSwitchSnmpConfigV3ConfigTargetParameterOutputWithContext(context.Background())
}

func (i SwitchSnmpConfigV3ConfigTargetParameterArgs) ToSwitchSnmpConfigV3ConfigTargetParameterOutputWithContext(ctx context.Context) SwitchSnmpConfigV3ConfigTargetParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchSnmpConfigV3ConfigTargetParameterOutput)
}

// SwitchSnmpConfigV3ConfigTargetParameterArrayInput is an input type that accepts SwitchSnmpConfigV3ConfigTargetParameterArray and SwitchSnmpConfigV3ConfigTargetParameterArrayOutput values.
// You can construct a concrete instance of `SwitchSnmpConfigV3ConfigTargetParameterArrayInput` via:
//
//	SwitchSnmpConfigV3ConfigTargetParameterArray{ SwitchSnmpConfigV3ConfigTargetParameterArgs{...} }
type SwitchSnmpConfigV3ConfigTargetParameterArrayInput interface {
	pulumi.Input

	ToSwitchSnmpConfigV3ConfigTargetParameterArrayOutput() SwitchSnmpConfigV3ConfigTargetParameterArrayOutput
	ToSwitchSnmpConfigV3ConfigTargetParameterArrayOutputWithContext(context.Context) SwitchSnmpConfigV3ConfigTargetParameterArrayOutput
}

type SwitchSnmpConfigV3ConfigTargetParameterArray []SwitchSnmpConfigV3ConfigTargetParameterInput

func (SwitchSnmpConfigV3ConfigTargetParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchSnmpConfigV3ConfigTargetParameter)(nil)).Elem()
}

func (i SwitchSnmpConfigV3ConfigTargetParameterArray) ToSwitchSnmpConfigV3ConfigTargetParameterArrayOutput() SwitchSnmpConfigV3ConfigTargetParameterArrayOutput {
	return i.ToSwitchSnmpConfigV3ConfigTargetParameterArrayOutputWithContext(context.Background())
}

func (i SwitchSnmpConfigV3ConfigTargetParameterArray) ToSwitchSnmpConfigV3ConfigTargetParameterArrayOutputWithContext(ctx context.Context) SwitchSnmpConfigV3ConfigTargetParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchSnmpConfigV3ConfigTargetParameterArrayOutput)
}

type SwitchSnmpConfigV3ConfigTargetParameterOutput struct{ *pulumi.OutputState }

func (SwitchSnmpConfigV3ConfigTargetParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchSnmpConfigV3ConfigTargetParameter)(nil)).Elem()
}

func (o SwitchSnmpConfigV3ConfigTargetParameterOutput) ToSwitchSnmpConfigV3ConfigTargetParameterOutput() SwitchSnmpConfigV3ConfigTargetParameterOutput {
	return o
}

func (o SwitchSnmpConfigV3ConfigTargetParameterOutput) ToSwitchSnmpConfigV3ConfigTargetParameterOutputWithContext(ctx context.Context) SwitchSnmpConfigV3ConfigTargetParameterOutput {
	return o
}

// enum: `v1`, `v2c`, `v3`
func (o SwitchSnmpConfigV3ConfigTargetParameterOutput) MessageProcessingModel() pulumi.StringOutput {
	return o.ApplyT(func(v SwitchSnmpConfigV3ConfigTargetParameter) string { return v.MessageProcessingModel }).(pulumi.StringOutput)
}

func (o SwitchSnmpConfigV3ConfigTargetParameterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SwitchSnmpConfigV3ConfigTargetParameter) string { return v.Name }).(pulumi.StringOutput)
}

// Refer to profile-name in notify_filter
func (o SwitchSnmpConfigV3ConfigTargetParameterOutput) NotifyFilter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchSnmpConfigV3ConfigTargetParameter) *string { return v.NotifyFilter }).(pulumi.StringPtrOutput)
}

// enum: `authentication`, `none`, `privacy`
func (o SwitchSnmpConfigV3ConfigTargetParameterOutput) SecurityLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchSnmpConfigV3ConfigTargetParameter) *string { return v.SecurityLevel }).(pulumi.StringPtrOutput)
}

// enum: `usm`, `v1`, `v2c`
func (o SwitchSnmpConfigV3ConfigTargetParameterOutput) SecurityModel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchSnmpConfigV3ConfigTargetParameter) *string { return v.SecurityModel }).(pulumi.StringPtrOutput)
}

// Refer to securityName in usm
func (o SwitchSnmpConfigV3ConfigTargetParameterOutput) SecurityName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchSnmpConfigV3ConfigTargetParameter) *string { return v.SecurityName }).(pulumi.StringPtrOutput)
}

type SwitchSnmpConfigV3ConfigTargetParameterArrayOutput struct{ *pulumi.OutputState }

func (SwitchSnmpConfigV3ConfigTargetParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchSnmpConfigV3ConfigTargetParameter)(nil)).Elem()
}

func (o SwitchSnmpConfigV3ConfigTargetParameterArrayOutput) ToSwitchSnmpConfigV3ConfigTargetParameterArrayOutput() SwitchSnmpConfigV3ConfigTargetParameterArrayOutput {
	return o
}

func (o SwitchSnmpConfigV3ConfigTargetParameterArrayOutput) ToSwitchSnmpConfigV3ConfigTargetParameterArrayOutputWithContext(ctx context.Context) SwitchSnmpConfigV3ConfigTargetParameterArrayOutput {
	return o
}

func (o SwitchSnmpConfigV3ConfigTargetParameterArrayOutput) Index(i pulumi.IntInput) SwitchSnmpConfigV3ConfigTargetParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwitchSnmpConfigV3ConfigTargetParameter {
		return vs[0].([]SwitchSnmpConfigV3ConfigTargetParameter)[vs[1].(int)]
	}).(SwitchSnmpConfigV3ConfigTargetParameterOutput)
}

type SwitchSnmpConfigV3ConfigUsm struct {
	// enum: `localEngine`, `remoteEngine`
	EngineType string `pulumi:"engineType"`
	// Required only if `engineType`==`remoteEngine`
	RemoteEngineId *string                           `pulumi:"remoteEngineId"`
	Users          []SwitchSnmpConfigV3ConfigUsmUser `pulumi:"users"`
}

// SwitchSnmpConfigV3ConfigUsmInput is an input type that accepts SwitchSnmpConfigV3ConfigUsmArgs and SwitchSnmpConfigV3ConfigUsmOutput values.
// You can construct a concrete instance of `SwitchSnmpConfigV3ConfigUsmInput` via:
//
//	SwitchSnmpConfigV3ConfigUsmArgs{...}
type SwitchSnmpConfigV3ConfigUsmInput interface {
	pulumi.Input

	ToSwitchSnmpConfigV3ConfigUsmOutput() SwitchSnmpConfigV3ConfigUsmOutput
	ToSwitchSnmpConfigV3ConfigUsmOutputWithContext(context.Context) SwitchSnmpConfigV3ConfigUsmOutput
}

type SwitchSnmpConfigV3ConfigUsmArgs struct {
	// enum: `localEngine`, `remoteEngine`
	EngineType pulumi.StringInput `pulumi:"engineType"`
	// Required only if `engineType`==`remoteEngine`
	RemoteEngineId pulumi.StringPtrInput                     `pulumi:"remoteEngineId"`
	Users          SwitchSnmpConfigV3ConfigUsmUserArrayInput `pulumi:"users"`
}

func (SwitchSnmpConfigV3ConfigUsmArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchSnmpConfigV3ConfigUsm)(nil)).Elem()
}

func (i SwitchSnmpConfigV3ConfigUsmArgs) ToSwitchSnmpConfigV3ConfigUsmOutput() SwitchSnmpConfigV3ConfigUsmOutput {
	return i.ToSwitchSnmpConfigV3ConfigUsmOutputWithContext(context.Background())
}

func (i SwitchSnmpConfigV3ConfigUsmArgs) ToSwitchSnmpConfigV3ConfigUsmOutputWithContext(ctx context.Context) SwitchSnmpConfigV3ConfigUsmOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchSnmpConfigV3ConfigUsmOutput)
}

// SwitchSnmpConfigV3ConfigUsmArrayInput is an input type that accepts SwitchSnmpConfigV3ConfigUsmArray and SwitchSnmpConfigV3ConfigUsmArrayOutput values.
// You can construct a concrete instance of `SwitchSnmpConfigV3ConfigUsmArrayInput` via:
//
//	SwitchSnmpConfigV3ConfigUsmArray{ SwitchSnmpConfigV3ConfigUsmArgs{...} }
type SwitchSnmpConfigV3ConfigUsmArrayInput interface {
	pulumi.Input

	ToSwitchSnmpConfigV3ConfigUsmArrayOutput() SwitchSnmpConfigV3ConfigUsmArrayOutput
	ToSwitchSnmpConfigV3ConfigUsmArrayOutputWithContext(context.Context) SwitchSnmpConfigV3ConfigUsmArrayOutput
}

type SwitchSnmpConfigV3ConfigUsmArray []SwitchSnmpConfigV3ConfigUsmInput

func (SwitchSnmpConfigV3ConfigUsmArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchSnmpConfigV3ConfigUsm)(nil)).Elem()
}

func (i SwitchSnmpConfigV3ConfigUsmArray) ToSwitchSnmpConfigV3ConfigUsmArrayOutput() SwitchSnmpConfigV3ConfigUsmArrayOutput {
	return i.ToSwitchSnmpConfigV3ConfigUsmArrayOutputWithContext(context.Background())
}

func (i SwitchSnmpConfigV3ConfigUsmArray) ToSwitchSnmpConfigV3ConfigUsmArrayOutputWithContext(ctx context.Context) SwitchSnmpConfigV3ConfigUsmArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchSnmpConfigV3ConfigUsmArrayOutput)
}

type SwitchSnmpConfigV3ConfigUsmOutput struct{ *pulumi.OutputState }

func (SwitchSnmpConfigV3ConfigUsmOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchSnmpConfigV3ConfigUsm)(nil)).Elem()
}

func (o SwitchSnmpConfigV3ConfigUsmOutput) ToSwitchSnmpConfigV3ConfigUsmOutput() SwitchSnmpConfigV3ConfigUsmOutput {
	return o
}

func (o SwitchSnmpConfigV3ConfigUsmOutput) ToSwitchSnmpConfigV3ConfigUsmOutputWithContext(ctx context.Context) SwitchSnmpConfigV3ConfigUsmOutput {
	return o
}

// enum: `localEngine`, `remoteEngine`
func (o SwitchSnmpConfigV3ConfigUsmOutput) EngineType() pulumi.StringOutput {
	return o.ApplyT(func(v SwitchSnmpConfigV3ConfigUsm) string { return v.EngineType }).(pulumi.StringOutput)
}

// Required only if `engineType`==`remoteEngine`
func (o SwitchSnmpConfigV3ConfigUsmOutput) RemoteEngineId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchSnmpConfigV3ConfigUsm) *string { return v.RemoteEngineId }).(pulumi.StringPtrOutput)
}

func (o SwitchSnmpConfigV3ConfigUsmOutput) Users() SwitchSnmpConfigV3ConfigUsmUserArrayOutput {
	return o.ApplyT(func(v SwitchSnmpConfigV3ConfigUsm) []SwitchSnmpConfigV3ConfigUsmUser { return v.Users }).(SwitchSnmpConfigV3ConfigUsmUserArrayOutput)
}

type SwitchSnmpConfigV3ConfigUsmArrayOutput struct{ *pulumi.OutputState }

func (SwitchSnmpConfigV3ConfigUsmArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchSnmpConfigV3ConfigUsm)(nil)).Elem()
}

func (o SwitchSnmpConfigV3ConfigUsmArrayOutput) ToSwitchSnmpConfigV3ConfigUsmArrayOutput() SwitchSnmpConfigV3ConfigUsmArrayOutput {
	return o
}

func (o SwitchSnmpConfigV3ConfigUsmArrayOutput) ToSwitchSnmpConfigV3ConfigUsmArrayOutputWithContext(ctx context.Context) SwitchSnmpConfigV3ConfigUsmArrayOutput {
	return o
}

func (o SwitchSnmpConfigV3ConfigUsmArrayOutput) Index(i pulumi.IntInput) SwitchSnmpConfigV3ConfigUsmOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwitchSnmpConfigV3ConfigUsm {
		return vs[0].([]SwitchSnmpConfigV3ConfigUsm)[vs[1].(int)]
	}).(SwitchSnmpConfigV3ConfigUsmOutput)
}

type SwitchSnmpConfigV3ConfigUsmUser struct {
	// Not required if `authenticationType`==`authentication-none`. Include alphabetic, numeric, and special characters, but it cannot include control characters.
	AuthenticationPassword *string `pulumi:"authenticationPassword"`
	// sha224, sha256, sha384, sha512 are supported in 21.1 and newer release. enum: `authentication-md5`, `authentication-none`, `authentication-sha`, `authentication-sha224`, `authentication-sha256`, `authentication-sha384`, `authentication-sha512`
	AuthenticationType *string `pulumi:"authenticationType"`
	// Not required if `encryptionType`==`privacy-none`. Include alphabetic, numeric, and special characters, but it cannot include control characters
	EncryptionPassword *string `pulumi:"encryptionPassword"`
	// enum: `privacy-3des`, `privacy-aes128`, `privacy-des`, `privacy-none`
	EncryptionType *string `pulumi:"encryptionType"`
	Name           *string `pulumi:"name"`
}

// SwitchSnmpConfigV3ConfigUsmUserInput is an input type that accepts SwitchSnmpConfigV3ConfigUsmUserArgs and SwitchSnmpConfigV3ConfigUsmUserOutput values.
// You can construct a concrete instance of `SwitchSnmpConfigV3ConfigUsmUserInput` via:
//
//	SwitchSnmpConfigV3ConfigUsmUserArgs{...}
type SwitchSnmpConfigV3ConfigUsmUserInput interface {
	pulumi.Input

	ToSwitchSnmpConfigV3ConfigUsmUserOutput() SwitchSnmpConfigV3ConfigUsmUserOutput
	ToSwitchSnmpConfigV3ConfigUsmUserOutputWithContext(context.Context) SwitchSnmpConfigV3ConfigUsmUserOutput
}

type SwitchSnmpConfigV3ConfigUsmUserArgs struct {
	// Not required if `authenticationType`==`authentication-none`. Include alphabetic, numeric, and special characters, but it cannot include control characters.
	AuthenticationPassword pulumi.StringPtrInput `pulumi:"authenticationPassword"`
	// sha224, sha256, sha384, sha512 are supported in 21.1 and newer release. enum: `authentication-md5`, `authentication-none`, `authentication-sha`, `authentication-sha224`, `authentication-sha256`, `authentication-sha384`, `authentication-sha512`
	AuthenticationType pulumi.StringPtrInput `pulumi:"authenticationType"`
	// Not required if `encryptionType`==`privacy-none`. Include alphabetic, numeric, and special characters, but it cannot include control characters
	EncryptionPassword pulumi.StringPtrInput `pulumi:"encryptionPassword"`
	// enum: `privacy-3des`, `privacy-aes128`, `privacy-des`, `privacy-none`
	EncryptionType pulumi.StringPtrInput `pulumi:"encryptionType"`
	Name           pulumi.StringPtrInput `pulumi:"name"`
}

func (SwitchSnmpConfigV3ConfigUsmUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchSnmpConfigV3ConfigUsmUser)(nil)).Elem()
}

func (i SwitchSnmpConfigV3ConfigUsmUserArgs) ToSwitchSnmpConfigV3ConfigUsmUserOutput() SwitchSnmpConfigV3ConfigUsmUserOutput {
	return i.ToSwitchSnmpConfigV3ConfigUsmUserOutputWithContext(context.Background())
}

func (i SwitchSnmpConfigV3ConfigUsmUserArgs) ToSwitchSnmpConfigV3ConfigUsmUserOutputWithContext(ctx context.Context) SwitchSnmpConfigV3ConfigUsmUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchSnmpConfigV3ConfigUsmUserOutput)
}

// SwitchSnmpConfigV3ConfigUsmUserArrayInput is an input type that accepts SwitchSnmpConfigV3ConfigUsmUserArray and SwitchSnmpConfigV3ConfigUsmUserArrayOutput values.
// You can construct a concrete instance of `SwitchSnmpConfigV3ConfigUsmUserArrayInput` via:
//
//	SwitchSnmpConfigV3ConfigUsmUserArray{ SwitchSnmpConfigV3ConfigUsmUserArgs{...} }
type SwitchSnmpConfigV3ConfigUsmUserArrayInput interface {
	pulumi.Input

	ToSwitchSnmpConfigV3ConfigUsmUserArrayOutput() SwitchSnmpConfigV3ConfigUsmUserArrayOutput
	ToSwitchSnmpConfigV3ConfigUsmUserArrayOutputWithContext(context.Context) SwitchSnmpConfigV3ConfigUsmUserArrayOutput
}

type SwitchSnmpConfigV3ConfigUsmUserArray []SwitchSnmpConfigV3ConfigUsmUserInput

func (SwitchSnmpConfigV3ConfigUsmUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchSnmpConfigV3ConfigUsmUser)(nil)).Elem()
}

func (i SwitchSnmpConfigV3ConfigUsmUserArray) ToSwitchSnmpConfigV3ConfigUsmUserArrayOutput() SwitchSnmpConfigV3ConfigUsmUserArrayOutput {
	return i.ToSwitchSnmpConfigV3ConfigUsmUserArrayOutputWithContext(context.Background())
}

func (i SwitchSnmpConfigV3ConfigUsmUserArray) ToSwitchSnmpConfigV3ConfigUsmUserArrayOutputWithContext(ctx context.Context) SwitchSnmpConfigV3ConfigUsmUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchSnmpConfigV3ConfigUsmUserArrayOutput)
}

type SwitchSnmpConfigV3ConfigUsmUserOutput struct{ *pulumi.OutputState }

func (SwitchSnmpConfigV3ConfigUsmUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchSnmpConfigV3ConfigUsmUser)(nil)).Elem()
}

func (o SwitchSnmpConfigV3ConfigUsmUserOutput) ToSwitchSnmpConfigV3ConfigUsmUserOutput() SwitchSnmpConfigV3ConfigUsmUserOutput {
	return o
}

func (o SwitchSnmpConfigV3ConfigUsmUserOutput) ToSwitchSnmpConfigV3ConfigUsmUserOutputWithContext(ctx context.Context) SwitchSnmpConfigV3ConfigUsmUserOutput {
	return o
}

// Not required if `authenticationType`==`authentication-none`. Include alphabetic, numeric, and special characters, but it cannot include control characters.
func (o SwitchSnmpConfigV3ConfigUsmUserOutput) AuthenticationPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchSnmpConfigV3ConfigUsmUser) *string { return v.AuthenticationPassword }).(pulumi.StringPtrOutput)
}

// sha224, sha256, sha384, sha512 are supported in 21.1 and newer release. enum: `authentication-md5`, `authentication-none`, `authentication-sha`, `authentication-sha224`, `authentication-sha256`, `authentication-sha384`, `authentication-sha512`
func (o SwitchSnmpConfigV3ConfigUsmUserOutput) AuthenticationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchSnmpConfigV3ConfigUsmUser) *string { return v.AuthenticationType }).(pulumi.StringPtrOutput)
}

// Not required if `encryptionType`==`privacy-none`. Include alphabetic, numeric, and special characters, but it cannot include control characters
func (o SwitchSnmpConfigV3ConfigUsmUserOutput) EncryptionPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchSnmpConfigV3ConfigUsmUser) *string { return v.EncryptionPassword }).(pulumi.StringPtrOutput)
}

// enum: `privacy-3des`, `privacy-aes128`, `privacy-des`, `privacy-none`
func (o SwitchSnmpConfigV3ConfigUsmUserOutput) EncryptionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchSnmpConfigV3ConfigUsmUser) *string { return v.EncryptionType }).(pulumi.StringPtrOutput)
}

func (o SwitchSnmpConfigV3ConfigUsmUserOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchSnmpConfigV3ConfigUsmUser) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SwitchSnmpConfigV3ConfigUsmUserArrayOutput struct{ *pulumi.OutputState }

func (SwitchSnmpConfigV3ConfigUsmUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchSnmpConfigV3ConfigUsmUser)(nil)).Elem()
}

func (o SwitchSnmpConfigV3ConfigUsmUserArrayOutput) ToSwitchSnmpConfigV3ConfigUsmUserArrayOutput() SwitchSnmpConfigV3ConfigUsmUserArrayOutput {
	return o
}

func (o SwitchSnmpConfigV3ConfigUsmUserArrayOutput) ToSwitchSnmpConfigV3ConfigUsmUserArrayOutputWithContext(ctx context.Context) SwitchSnmpConfigV3ConfigUsmUserArrayOutput {
	return o
}

func (o SwitchSnmpConfigV3ConfigUsmUserArrayOutput) Index(i pulumi.IntInput) SwitchSnmpConfigV3ConfigUsmUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwitchSnmpConfigV3ConfigUsmUser {
		return vs[0].([]SwitchSnmpConfigV3ConfigUsmUser)[vs[1].(int)]
	}).(SwitchSnmpConfigV3ConfigUsmUserOutput)
}

type SwitchSnmpConfigV3ConfigVacm struct {
	Accesses        []SwitchSnmpConfigV3ConfigVacmAccess         `pulumi:"accesses"`
	SecurityToGroup *SwitchSnmpConfigV3ConfigVacmSecurityToGroup `pulumi:"securityToGroup"`
}

// SwitchSnmpConfigV3ConfigVacmInput is an input type that accepts SwitchSnmpConfigV3ConfigVacmArgs and SwitchSnmpConfigV3ConfigVacmOutput values.
// You can construct a concrete instance of `SwitchSnmpConfigV3ConfigVacmInput` via:
//
//	SwitchSnmpConfigV3ConfigVacmArgs{...}
type SwitchSnmpConfigV3ConfigVacmInput interface {
	pulumi.Input

	ToSwitchSnmpConfigV3ConfigVacmOutput() SwitchSnmpConfigV3ConfigVacmOutput
	ToSwitchSnmpConfigV3ConfigVacmOutputWithContext(context.Context) SwitchSnmpConfigV3ConfigVacmOutput
}

type SwitchSnmpConfigV3ConfigVacmArgs struct {
	Accesses        SwitchSnmpConfigV3ConfigVacmAccessArrayInput        `pulumi:"accesses"`
	SecurityToGroup SwitchSnmpConfigV3ConfigVacmSecurityToGroupPtrInput `pulumi:"securityToGroup"`
}

func (SwitchSnmpConfigV3ConfigVacmArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchSnmpConfigV3ConfigVacm)(nil)).Elem()
}

func (i SwitchSnmpConfigV3ConfigVacmArgs) ToSwitchSnmpConfigV3ConfigVacmOutput() SwitchSnmpConfigV3ConfigVacmOutput {
	return i.ToSwitchSnmpConfigV3ConfigVacmOutputWithContext(context.Background())
}

func (i SwitchSnmpConfigV3ConfigVacmArgs) ToSwitchSnmpConfigV3ConfigVacmOutputWithContext(ctx context.Context) SwitchSnmpConfigV3ConfigVacmOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchSnmpConfigV3ConfigVacmOutput)
}

func (i SwitchSnmpConfigV3ConfigVacmArgs) ToSwitchSnmpConfigV3ConfigVacmPtrOutput() SwitchSnmpConfigV3ConfigVacmPtrOutput {
	return i.ToSwitchSnmpConfigV3ConfigVacmPtrOutputWithContext(context.Background())
}

func (i SwitchSnmpConfigV3ConfigVacmArgs) ToSwitchSnmpConfigV3ConfigVacmPtrOutputWithContext(ctx context.Context) SwitchSnmpConfigV3ConfigVacmPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchSnmpConfigV3ConfigVacmOutput).ToSwitchSnmpConfigV3ConfigVacmPtrOutputWithContext(ctx)
}

// SwitchSnmpConfigV3ConfigVacmPtrInput is an input type that accepts SwitchSnmpConfigV3ConfigVacmArgs, SwitchSnmpConfigV3ConfigVacmPtr and SwitchSnmpConfigV3ConfigVacmPtrOutput values.
// You can construct a concrete instance of `SwitchSnmpConfigV3ConfigVacmPtrInput` via:
//
//	        SwitchSnmpConfigV3ConfigVacmArgs{...}
//
//	or:
//
//	        nil
type SwitchSnmpConfigV3ConfigVacmPtrInput interface {
	pulumi.Input

	ToSwitchSnmpConfigV3ConfigVacmPtrOutput() SwitchSnmpConfigV3ConfigVacmPtrOutput
	ToSwitchSnmpConfigV3ConfigVacmPtrOutputWithContext(context.Context) SwitchSnmpConfigV3ConfigVacmPtrOutput
}

type switchSnmpConfigV3ConfigVacmPtrType SwitchSnmpConfigV3ConfigVacmArgs

func SwitchSnmpConfigV3ConfigVacmPtr(v *SwitchSnmpConfigV3ConfigVacmArgs) SwitchSnmpConfigV3ConfigVacmPtrInput {
	return (*switchSnmpConfigV3ConfigVacmPtrType)(v)
}

func (*switchSnmpConfigV3ConfigVacmPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchSnmpConfigV3ConfigVacm)(nil)).Elem()
}

func (i *switchSnmpConfigV3ConfigVacmPtrType) ToSwitchSnmpConfigV3ConfigVacmPtrOutput() SwitchSnmpConfigV3ConfigVacmPtrOutput {
	return i.ToSwitchSnmpConfigV3ConfigVacmPtrOutputWithContext(context.Background())
}

func (i *switchSnmpConfigV3ConfigVacmPtrType) ToSwitchSnmpConfigV3ConfigVacmPtrOutputWithContext(ctx context.Context) SwitchSnmpConfigV3ConfigVacmPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchSnmpConfigV3ConfigVacmPtrOutput)
}

type SwitchSnmpConfigV3ConfigVacmOutput struct{ *pulumi.OutputState }

func (SwitchSnmpConfigV3ConfigVacmOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchSnmpConfigV3ConfigVacm)(nil)).Elem()
}

func (o SwitchSnmpConfigV3ConfigVacmOutput) ToSwitchSnmpConfigV3ConfigVacmOutput() SwitchSnmpConfigV3ConfigVacmOutput {
	return o
}

func (o SwitchSnmpConfigV3ConfigVacmOutput) ToSwitchSnmpConfigV3ConfigVacmOutputWithContext(ctx context.Context) SwitchSnmpConfigV3ConfigVacmOutput {
	return o
}

func (o SwitchSnmpConfigV3ConfigVacmOutput) ToSwitchSnmpConfigV3ConfigVacmPtrOutput() SwitchSnmpConfigV3ConfigVacmPtrOutput {
	return o.ToSwitchSnmpConfigV3ConfigVacmPtrOutputWithContext(context.Background())
}

func (o SwitchSnmpConfigV3ConfigVacmOutput) ToSwitchSnmpConfigV3ConfigVacmPtrOutputWithContext(ctx context.Context) SwitchSnmpConfigV3ConfigVacmPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SwitchSnmpConfigV3ConfigVacm) *SwitchSnmpConfigV3ConfigVacm {
		return &v
	}).(SwitchSnmpConfigV3ConfigVacmPtrOutput)
}

func (o SwitchSnmpConfigV3ConfigVacmOutput) Accesses() SwitchSnmpConfigV3ConfigVacmAccessArrayOutput {
	return o.ApplyT(func(v SwitchSnmpConfigV3ConfigVacm) []SwitchSnmpConfigV3ConfigVacmAccess { return v.Accesses }).(SwitchSnmpConfigV3ConfigVacmAccessArrayOutput)
}

func (o SwitchSnmpConfigV3ConfigVacmOutput) SecurityToGroup() SwitchSnmpConfigV3ConfigVacmSecurityToGroupPtrOutput {
	return o.ApplyT(func(v SwitchSnmpConfigV3ConfigVacm) *SwitchSnmpConfigV3ConfigVacmSecurityToGroup {
		return v.SecurityToGroup
	}).(SwitchSnmpConfigV3ConfigVacmSecurityToGroupPtrOutput)
}

type SwitchSnmpConfigV3ConfigVacmPtrOutput struct{ *pulumi.OutputState }

func (SwitchSnmpConfigV3ConfigVacmPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchSnmpConfigV3ConfigVacm)(nil)).Elem()
}

func (o SwitchSnmpConfigV3ConfigVacmPtrOutput) ToSwitchSnmpConfigV3ConfigVacmPtrOutput() SwitchSnmpConfigV3ConfigVacmPtrOutput {
	return o
}

func (o SwitchSnmpConfigV3ConfigVacmPtrOutput) ToSwitchSnmpConfigV3ConfigVacmPtrOutputWithContext(ctx context.Context) SwitchSnmpConfigV3ConfigVacmPtrOutput {
	return o
}

func (o SwitchSnmpConfigV3ConfigVacmPtrOutput) Elem() SwitchSnmpConfigV3ConfigVacmOutput {
	return o.ApplyT(func(v *SwitchSnmpConfigV3ConfigVacm) SwitchSnmpConfigV3ConfigVacm {
		if v != nil {
			return *v
		}
		var ret SwitchSnmpConfigV3ConfigVacm
		return ret
	}).(SwitchSnmpConfigV3ConfigVacmOutput)
}

func (o SwitchSnmpConfigV3ConfigVacmPtrOutput) Accesses() SwitchSnmpConfigV3ConfigVacmAccessArrayOutput {
	return o.ApplyT(func(v *SwitchSnmpConfigV3ConfigVacm) []SwitchSnmpConfigV3ConfigVacmAccess {
		if v == nil {
			return nil
		}
		return v.Accesses
	}).(SwitchSnmpConfigV3ConfigVacmAccessArrayOutput)
}

func (o SwitchSnmpConfigV3ConfigVacmPtrOutput) SecurityToGroup() SwitchSnmpConfigV3ConfigVacmSecurityToGroupPtrOutput {
	return o.ApplyT(func(v *SwitchSnmpConfigV3ConfigVacm) *SwitchSnmpConfigV3ConfigVacmSecurityToGroup {
		if v == nil {
			return nil
		}
		return v.SecurityToGroup
	}).(SwitchSnmpConfigV3ConfigVacmSecurityToGroupPtrOutput)
}

type SwitchSnmpConfigV3ConfigVacmAccess struct {
	GroupName   *string                                        `pulumi:"groupName"`
	PrefixLists []SwitchSnmpConfigV3ConfigVacmAccessPrefixList `pulumi:"prefixLists"`
}

// SwitchSnmpConfigV3ConfigVacmAccessInput is an input type that accepts SwitchSnmpConfigV3ConfigVacmAccessArgs and SwitchSnmpConfigV3ConfigVacmAccessOutput values.
// You can construct a concrete instance of `SwitchSnmpConfigV3ConfigVacmAccessInput` via:
//
//	SwitchSnmpConfigV3ConfigVacmAccessArgs{...}
type SwitchSnmpConfigV3ConfigVacmAccessInput interface {
	pulumi.Input

	ToSwitchSnmpConfigV3ConfigVacmAccessOutput() SwitchSnmpConfigV3ConfigVacmAccessOutput
	ToSwitchSnmpConfigV3ConfigVacmAccessOutputWithContext(context.Context) SwitchSnmpConfigV3ConfigVacmAccessOutput
}

type SwitchSnmpConfigV3ConfigVacmAccessArgs struct {
	GroupName   pulumi.StringPtrInput                                  `pulumi:"groupName"`
	PrefixLists SwitchSnmpConfigV3ConfigVacmAccessPrefixListArrayInput `pulumi:"prefixLists"`
}

func (SwitchSnmpConfigV3ConfigVacmAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchSnmpConfigV3ConfigVacmAccess)(nil)).Elem()
}

func (i SwitchSnmpConfigV3ConfigVacmAccessArgs) ToSwitchSnmpConfigV3ConfigVacmAccessOutput() SwitchSnmpConfigV3ConfigVacmAccessOutput {
	return i.ToSwitchSnmpConfigV3ConfigVacmAccessOutputWithContext(context.Background())
}

func (i SwitchSnmpConfigV3ConfigVacmAccessArgs) ToSwitchSnmpConfigV3ConfigVacmAccessOutputWithContext(ctx context.Context) SwitchSnmpConfigV3ConfigVacmAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchSnmpConfigV3ConfigVacmAccessOutput)
}

// SwitchSnmpConfigV3ConfigVacmAccessArrayInput is an input type that accepts SwitchSnmpConfigV3ConfigVacmAccessArray and SwitchSnmpConfigV3ConfigVacmAccessArrayOutput values.
// You can construct a concrete instance of `SwitchSnmpConfigV3ConfigVacmAccessArrayInput` via:
//
//	SwitchSnmpConfigV3ConfigVacmAccessArray{ SwitchSnmpConfigV3ConfigVacmAccessArgs{...} }
type SwitchSnmpConfigV3ConfigVacmAccessArrayInput interface {
	pulumi.Input

	ToSwitchSnmpConfigV3ConfigVacmAccessArrayOutput() SwitchSnmpConfigV3ConfigVacmAccessArrayOutput
	ToSwitchSnmpConfigV3ConfigVacmAccessArrayOutputWithContext(context.Context) SwitchSnmpConfigV3ConfigVacmAccessArrayOutput
}

type SwitchSnmpConfigV3ConfigVacmAccessArray []SwitchSnmpConfigV3ConfigVacmAccessInput

func (SwitchSnmpConfigV3ConfigVacmAccessArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchSnmpConfigV3ConfigVacmAccess)(nil)).Elem()
}

func (i SwitchSnmpConfigV3ConfigVacmAccessArray) ToSwitchSnmpConfigV3ConfigVacmAccessArrayOutput() SwitchSnmpConfigV3ConfigVacmAccessArrayOutput {
	return i.ToSwitchSnmpConfigV3ConfigVacmAccessArrayOutputWithContext(context.Background())
}

func (i SwitchSnmpConfigV3ConfigVacmAccessArray) ToSwitchSnmpConfigV3ConfigVacmAccessArrayOutputWithContext(ctx context.Context) SwitchSnmpConfigV3ConfigVacmAccessArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchSnmpConfigV3ConfigVacmAccessArrayOutput)
}

type SwitchSnmpConfigV3ConfigVacmAccessOutput struct{ *pulumi.OutputState }

func (SwitchSnmpConfigV3ConfigVacmAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchSnmpConfigV3ConfigVacmAccess)(nil)).Elem()
}

func (o SwitchSnmpConfigV3ConfigVacmAccessOutput) ToSwitchSnmpConfigV3ConfigVacmAccessOutput() SwitchSnmpConfigV3ConfigVacmAccessOutput {
	return o
}

func (o SwitchSnmpConfigV3ConfigVacmAccessOutput) ToSwitchSnmpConfigV3ConfigVacmAccessOutputWithContext(ctx context.Context) SwitchSnmpConfigV3ConfigVacmAccessOutput {
	return o
}

func (o SwitchSnmpConfigV3ConfigVacmAccessOutput) GroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchSnmpConfigV3ConfigVacmAccess) *string { return v.GroupName }).(pulumi.StringPtrOutput)
}

func (o SwitchSnmpConfigV3ConfigVacmAccessOutput) PrefixLists() SwitchSnmpConfigV3ConfigVacmAccessPrefixListArrayOutput {
	return o.ApplyT(func(v SwitchSnmpConfigV3ConfigVacmAccess) []SwitchSnmpConfigV3ConfigVacmAccessPrefixList {
		return v.PrefixLists
	}).(SwitchSnmpConfigV3ConfigVacmAccessPrefixListArrayOutput)
}

type SwitchSnmpConfigV3ConfigVacmAccessArrayOutput struct{ *pulumi.OutputState }

func (SwitchSnmpConfigV3ConfigVacmAccessArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchSnmpConfigV3ConfigVacmAccess)(nil)).Elem()
}

func (o SwitchSnmpConfigV3ConfigVacmAccessArrayOutput) ToSwitchSnmpConfigV3ConfigVacmAccessArrayOutput() SwitchSnmpConfigV3ConfigVacmAccessArrayOutput {
	return o
}

func (o SwitchSnmpConfigV3ConfigVacmAccessArrayOutput) ToSwitchSnmpConfigV3ConfigVacmAccessArrayOutputWithContext(ctx context.Context) SwitchSnmpConfigV3ConfigVacmAccessArrayOutput {
	return o
}

func (o SwitchSnmpConfigV3ConfigVacmAccessArrayOutput) Index(i pulumi.IntInput) SwitchSnmpConfigV3ConfigVacmAccessOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwitchSnmpConfigV3ConfigVacmAccess {
		return vs[0].([]SwitchSnmpConfigV3ConfigVacmAccess)[vs[1].(int)]
	}).(SwitchSnmpConfigV3ConfigVacmAccessOutput)
}

type SwitchSnmpConfigV3ConfigVacmAccessPrefixList struct {
	// Only required if `type`==`contextPrefix`
	ContextPrefix *string `pulumi:"contextPrefix"`
	// Refer to view name
	NotifyView *string `pulumi:"notifyView"`
	// Refer to view name
	ReadView *string `pulumi:"readView"`
	// enum: `authentication`, `none`, `privacy`
	SecurityLevel *string `pulumi:"securityLevel"`
	// enum: `any`, `usm`, `v1`, `v2c`
	SecurityModel *string `pulumi:"securityModel"`
	// enum: `contextPrefix`, `defaultContextPrefix`
	Type *string `pulumi:"type"`
	// Refer to view name
	WriteView *string `pulumi:"writeView"`
}

// SwitchSnmpConfigV3ConfigVacmAccessPrefixListInput is an input type that accepts SwitchSnmpConfigV3ConfigVacmAccessPrefixListArgs and SwitchSnmpConfigV3ConfigVacmAccessPrefixListOutput values.
// You can construct a concrete instance of `SwitchSnmpConfigV3ConfigVacmAccessPrefixListInput` via:
//
//	SwitchSnmpConfigV3ConfigVacmAccessPrefixListArgs{...}
type SwitchSnmpConfigV3ConfigVacmAccessPrefixListInput interface {
	pulumi.Input

	ToSwitchSnmpConfigV3ConfigVacmAccessPrefixListOutput() SwitchSnmpConfigV3ConfigVacmAccessPrefixListOutput
	ToSwitchSnmpConfigV3ConfigVacmAccessPrefixListOutputWithContext(context.Context) SwitchSnmpConfigV3ConfigVacmAccessPrefixListOutput
}

type SwitchSnmpConfigV3ConfigVacmAccessPrefixListArgs struct {
	// Only required if `type`==`contextPrefix`
	ContextPrefix pulumi.StringPtrInput `pulumi:"contextPrefix"`
	// Refer to view name
	NotifyView pulumi.StringPtrInput `pulumi:"notifyView"`
	// Refer to view name
	ReadView pulumi.StringPtrInput `pulumi:"readView"`
	// enum: `authentication`, `none`, `privacy`
	SecurityLevel pulumi.StringPtrInput `pulumi:"securityLevel"`
	// enum: `any`, `usm`, `v1`, `v2c`
	SecurityModel pulumi.StringPtrInput `pulumi:"securityModel"`
	// enum: `contextPrefix`, `defaultContextPrefix`
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Refer to view name
	WriteView pulumi.StringPtrInput `pulumi:"writeView"`
}

func (SwitchSnmpConfigV3ConfigVacmAccessPrefixListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchSnmpConfigV3ConfigVacmAccessPrefixList)(nil)).Elem()
}

func (i SwitchSnmpConfigV3ConfigVacmAccessPrefixListArgs) ToSwitchSnmpConfigV3ConfigVacmAccessPrefixListOutput() SwitchSnmpConfigV3ConfigVacmAccessPrefixListOutput {
	return i.ToSwitchSnmpConfigV3ConfigVacmAccessPrefixListOutputWithContext(context.Background())
}

func (i SwitchSnmpConfigV3ConfigVacmAccessPrefixListArgs) ToSwitchSnmpConfigV3ConfigVacmAccessPrefixListOutputWithContext(ctx context.Context) SwitchSnmpConfigV3ConfigVacmAccessPrefixListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchSnmpConfigV3ConfigVacmAccessPrefixListOutput)
}

// SwitchSnmpConfigV3ConfigVacmAccessPrefixListArrayInput is an input type that accepts SwitchSnmpConfigV3ConfigVacmAccessPrefixListArray and SwitchSnmpConfigV3ConfigVacmAccessPrefixListArrayOutput values.
// You can construct a concrete instance of `SwitchSnmpConfigV3ConfigVacmAccessPrefixListArrayInput` via:
//
//	SwitchSnmpConfigV3ConfigVacmAccessPrefixListArray{ SwitchSnmpConfigV3ConfigVacmAccessPrefixListArgs{...} }
type SwitchSnmpConfigV3ConfigVacmAccessPrefixListArrayInput interface {
	pulumi.Input

	ToSwitchSnmpConfigV3ConfigVacmAccessPrefixListArrayOutput() SwitchSnmpConfigV3ConfigVacmAccessPrefixListArrayOutput
	ToSwitchSnmpConfigV3ConfigVacmAccessPrefixListArrayOutputWithContext(context.Context) SwitchSnmpConfigV3ConfigVacmAccessPrefixListArrayOutput
}

type SwitchSnmpConfigV3ConfigVacmAccessPrefixListArray []SwitchSnmpConfigV3ConfigVacmAccessPrefixListInput

func (SwitchSnmpConfigV3ConfigVacmAccessPrefixListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchSnmpConfigV3ConfigVacmAccessPrefixList)(nil)).Elem()
}

func (i SwitchSnmpConfigV3ConfigVacmAccessPrefixListArray) ToSwitchSnmpConfigV3ConfigVacmAccessPrefixListArrayOutput() SwitchSnmpConfigV3ConfigVacmAccessPrefixListArrayOutput {
	return i.ToSwitchSnmpConfigV3ConfigVacmAccessPrefixListArrayOutputWithContext(context.Background())
}

func (i SwitchSnmpConfigV3ConfigVacmAccessPrefixListArray) ToSwitchSnmpConfigV3ConfigVacmAccessPrefixListArrayOutputWithContext(ctx context.Context) SwitchSnmpConfigV3ConfigVacmAccessPrefixListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchSnmpConfigV3ConfigVacmAccessPrefixListArrayOutput)
}

type SwitchSnmpConfigV3ConfigVacmAccessPrefixListOutput struct{ *pulumi.OutputState }

func (SwitchSnmpConfigV3ConfigVacmAccessPrefixListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchSnmpConfigV3ConfigVacmAccessPrefixList)(nil)).Elem()
}

func (o SwitchSnmpConfigV3ConfigVacmAccessPrefixListOutput) ToSwitchSnmpConfigV3ConfigVacmAccessPrefixListOutput() SwitchSnmpConfigV3ConfigVacmAccessPrefixListOutput {
	return o
}

func (o SwitchSnmpConfigV3ConfigVacmAccessPrefixListOutput) ToSwitchSnmpConfigV3ConfigVacmAccessPrefixListOutputWithContext(ctx context.Context) SwitchSnmpConfigV3ConfigVacmAccessPrefixListOutput {
	return o
}

// Only required if `type`==`contextPrefix`
func (o SwitchSnmpConfigV3ConfigVacmAccessPrefixListOutput) ContextPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchSnmpConfigV3ConfigVacmAccessPrefixList) *string { return v.ContextPrefix }).(pulumi.StringPtrOutput)
}

// Refer to view name
func (o SwitchSnmpConfigV3ConfigVacmAccessPrefixListOutput) NotifyView() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchSnmpConfigV3ConfigVacmAccessPrefixList) *string { return v.NotifyView }).(pulumi.StringPtrOutput)
}

// Refer to view name
func (o SwitchSnmpConfigV3ConfigVacmAccessPrefixListOutput) ReadView() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchSnmpConfigV3ConfigVacmAccessPrefixList) *string { return v.ReadView }).(pulumi.StringPtrOutput)
}

// enum: `authentication`, `none`, `privacy`
func (o SwitchSnmpConfigV3ConfigVacmAccessPrefixListOutput) SecurityLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchSnmpConfigV3ConfigVacmAccessPrefixList) *string { return v.SecurityLevel }).(pulumi.StringPtrOutput)
}

// enum: `any`, `usm`, `v1`, `v2c`
func (o SwitchSnmpConfigV3ConfigVacmAccessPrefixListOutput) SecurityModel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchSnmpConfigV3ConfigVacmAccessPrefixList) *string { return v.SecurityModel }).(pulumi.StringPtrOutput)
}

// enum: `contextPrefix`, `defaultContextPrefix`
func (o SwitchSnmpConfigV3ConfigVacmAccessPrefixListOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchSnmpConfigV3ConfigVacmAccessPrefixList) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Refer to view name
func (o SwitchSnmpConfigV3ConfigVacmAccessPrefixListOutput) WriteView() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchSnmpConfigV3ConfigVacmAccessPrefixList) *string { return v.WriteView }).(pulumi.StringPtrOutput)
}

type SwitchSnmpConfigV3ConfigVacmAccessPrefixListArrayOutput struct{ *pulumi.OutputState }

func (SwitchSnmpConfigV3ConfigVacmAccessPrefixListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchSnmpConfigV3ConfigVacmAccessPrefixList)(nil)).Elem()
}

func (o SwitchSnmpConfigV3ConfigVacmAccessPrefixListArrayOutput) ToSwitchSnmpConfigV3ConfigVacmAccessPrefixListArrayOutput() SwitchSnmpConfigV3ConfigVacmAccessPrefixListArrayOutput {
	return o
}

func (o SwitchSnmpConfigV3ConfigVacmAccessPrefixListArrayOutput) ToSwitchSnmpConfigV3ConfigVacmAccessPrefixListArrayOutputWithContext(ctx context.Context) SwitchSnmpConfigV3ConfigVacmAccessPrefixListArrayOutput {
	return o
}

func (o SwitchSnmpConfigV3ConfigVacmAccessPrefixListArrayOutput) Index(i pulumi.IntInput) SwitchSnmpConfigV3ConfigVacmAccessPrefixListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwitchSnmpConfigV3ConfigVacmAccessPrefixList {
		return vs[0].([]SwitchSnmpConfigV3ConfigVacmAccessPrefixList)[vs[1].(int)]
	}).(SwitchSnmpConfigV3ConfigVacmAccessPrefixListOutput)
}

type SwitchSnmpConfigV3ConfigVacmSecurityToGroup struct {
	Contents []SwitchSnmpConfigV3ConfigVacmSecurityToGroupContent `pulumi:"contents"`
	// enum: `usm`, `v1`, `v2c`
	SecurityModel *string `pulumi:"securityModel"`
}

// SwitchSnmpConfigV3ConfigVacmSecurityToGroupInput is an input type that accepts SwitchSnmpConfigV3ConfigVacmSecurityToGroupArgs and SwitchSnmpConfigV3ConfigVacmSecurityToGroupOutput values.
// You can construct a concrete instance of `SwitchSnmpConfigV3ConfigVacmSecurityToGroupInput` via:
//
//	SwitchSnmpConfigV3ConfigVacmSecurityToGroupArgs{...}
type SwitchSnmpConfigV3ConfigVacmSecurityToGroupInput interface {
	pulumi.Input

	ToSwitchSnmpConfigV3ConfigVacmSecurityToGroupOutput() SwitchSnmpConfigV3ConfigVacmSecurityToGroupOutput
	ToSwitchSnmpConfigV3ConfigVacmSecurityToGroupOutputWithContext(context.Context) SwitchSnmpConfigV3ConfigVacmSecurityToGroupOutput
}

type SwitchSnmpConfigV3ConfigVacmSecurityToGroupArgs struct {
	Contents SwitchSnmpConfigV3ConfigVacmSecurityToGroupContentArrayInput `pulumi:"contents"`
	// enum: `usm`, `v1`, `v2c`
	SecurityModel pulumi.StringPtrInput `pulumi:"securityModel"`
}

func (SwitchSnmpConfigV3ConfigVacmSecurityToGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchSnmpConfigV3ConfigVacmSecurityToGroup)(nil)).Elem()
}

func (i SwitchSnmpConfigV3ConfigVacmSecurityToGroupArgs) ToSwitchSnmpConfigV3ConfigVacmSecurityToGroupOutput() SwitchSnmpConfigV3ConfigVacmSecurityToGroupOutput {
	return i.ToSwitchSnmpConfigV3ConfigVacmSecurityToGroupOutputWithContext(context.Background())
}

func (i SwitchSnmpConfigV3ConfigVacmSecurityToGroupArgs) ToSwitchSnmpConfigV3ConfigVacmSecurityToGroupOutputWithContext(ctx context.Context) SwitchSnmpConfigV3ConfigVacmSecurityToGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchSnmpConfigV3ConfigVacmSecurityToGroupOutput)
}

func (i SwitchSnmpConfigV3ConfigVacmSecurityToGroupArgs) ToSwitchSnmpConfigV3ConfigVacmSecurityToGroupPtrOutput() SwitchSnmpConfigV3ConfigVacmSecurityToGroupPtrOutput {
	return i.ToSwitchSnmpConfigV3ConfigVacmSecurityToGroupPtrOutputWithContext(context.Background())
}

func (i SwitchSnmpConfigV3ConfigVacmSecurityToGroupArgs) ToSwitchSnmpConfigV3ConfigVacmSecurityToGroupPtrOutputWithContext(ctx context.Context) SwitchSnmpConfigV3ConfigVacmSecurityToGroupPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchSnmpConfigV3ConfigVacmSecurityToGroupOutput).ToSwitchSnmpConfigV3ConfigVacmSecurityToGroupPtrOutputWithContext(ctx)
}

// SwitchSnmpConfigV3ConfigVacmSecurityToGroupPtrInput is an input type that accepts SwitchSnmpConfigV3ConfigVacmSecurityToGroupArgs, SwitchSnmpConfigV3ConfigVacmSecurityToGroupPtr and SwitchSnmpConfigV3ConfigVacmSecurityToGroupPtrOutput values.
// You can construct a concrete instance of `SwitchSnmpConfigV3ConfigVacmSecurityToGroupPtrInput` via:
//
//	        SwitchSnmpConfigV3ConfigVacmSecurityToGroupArgs{...}
//
//	or:
//
//	        nil
type SwitchSnmpConfigV3ConfigVacmSecurityToGroupPtrInput interface {
	pulumi.Input

	ToSwitchSnmpConfigV3ConfigVacmSecurityToGroupPtrOutput() SwitchSnmpConfigV3ConfigVacmSecurityToGroupPtrOutput
	ToSwitchSnmpConfigV3ConfigVacmSecurityToGroupPtrOutputWithContext(context.Context) SwitchSnmpConfigV3ConfigVacmSecurityToGroupPtrOutput
}

type switchSnmpConfigV3ConfigVacmSecurityToGroupPtrType SwitchSnmpConfigV3ConfigVacmSecurityToGroupArgs

func SwitchSnmpConfigV3ConfigVacmSecurityToGroupPtr(v *SwitchSnmpConfigV3ConfigVacmSecurityToGroupArgs) SwitchSnmpConfigV3ConfigVacmSecurityToGroupPtrInput {
	return (*switchSnmpConfigV3ConfigVacmSecurityToGroupPtrType)(v)
}

func (*switchSnmpConfigV3ConfigVacmSecurityToGroupPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchSnmpConfigV3ConfigVacmSecurityToGroup)(nil)).Elem()
}

func (i *switchSnmpConfigV3ConfigVacmSecurityToGroupPtrType) ToSwitchSnmpConfigV3ConfigVacmSecurityToGroupPtrOutput() SwitchSnmpConfigV3ConfigVacmSecurityToGroupPtrOutput {
	return i.ToSwitchSnmpConfigV3ConfigVacmSecurityToGroupPtrOutputWithContext(context.Background())
}

func (i *switchSnmpConfigV3ConfigVacmSecurityToGroupPtrType) ToSwitchSnmpConfigV3ConfigVacmSecurityToGroupPtrOutputWithContext(ctx context.Context) SwitchSnmpConfigV3ConfigVacmSecurityToGroupPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchSnmpConfigV3ConfigVacmSecurityToGroupPtrOutput)
}

type SwitchSnmpConfigV3ConfigVacmSecurityToGroupOutput struct{ *pulumi.OutputState }

func (SwitchSnmpConfigV3ConfigVacmSecurityToGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchSnmpConfigV3ConfigVacmSecurityToGroup)(nil)).Elem()
}

func (o SwitchSnmpConfigV3ConfigVacmSecurityToGroupOutput) ToSwitchSnmpConfigV3ConfigVacmSecurityToGroupOutput() SwitchSnmpConfigV3ConfigVacmSecurityToGroupOutput {
	return o
}

func (o SwitchSnmpConfigV3ConfigVacmSecurityToGroupOutput) ToSwitchSnmpConfigV3ConfigVacmSecurityToGroupOutputWithContext(ctx context.Context) SwitchSnmpConfigV3ConfigVacmSecurityToGroupOutput {
	return o
}

func (o SwitchSnmpConfigV3ConfigVacmSecurityToGroupOutput) ToSwitchSnmpConfigV3ConfigVacmSecurityToGroupPtrOutput() SwitchSnmpConfigV3ConfigVacmSecurityToGroupPtrOutput {
	return o.ToSwitchSnmpConfigV3ConfigVacmSecurityToGroupPtrOutputWithContext(context.Background())
}

func (o SwitchSnmpConfigV3ConfigVacmSecurityToGroupOutput) ToSwitchSnmpConfigV3ConfigVacmSecurityToGroupPtrOutputWithContext(ctx context.Context) SwitchSnmpConfigV3ConfigVacmSecurityToGroupPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SwitchSnmpConfigV3ConfigVacmSecurityToGroup) *SwitchSnmpConfigV3ConfigVacmSecurityToGroup {
		return &v
	}).(SwitchSnmpConfigV3ConfigVacmSecurityToGroupPtrOutput)
}

func (o SwitchSnmpConfigV3ConfigVacmSecurityToGroupOutput) Contents() SwitchSnmpConfigV3ConfigVacmSecurityToGroupContentArrayOutput {
	return o.ApplyT(func(v SwitchSnmpConfigV3ConfigVacmSecurityToGroup) []SwitchSnmpConfigV3ConfigVacmSecurityToGroupContent {
		return v.Contents
	}).(SwitchSnmpConfigV3ConfigVacmSecurityToGroupContentArrayOutput)
}

// enum: `usm`, `v1`, `v2c`
func (o SwitchSnmpConfigV3ConfigVacmSecurityToGroupOutput) SecurityModel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchSnmpConfigV3ConfigVacmSecurityToGroup) *string { return v.SecurityModel }).(pulumi.StringPtrOutput)
}

type SwitchSnmpConfigV3ConfigVacmSecurityToGroupPtrOutput struct{ *pulumi.OutputState }

func (SwitchSnmpConfigV3ConfigVacmSecurityToGroupPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchSnmpConfigV3ConfigVacmSecurityToGroup)(nil)).Elem()
}

func (o SwitchSnmpConfigV3ConfigVacmSecurityToGroupPtrOutput) ToSwitchSnmpConfigV3ConfigVacmSecurityToGroupPtrOutput() SwitchSnmpConfigV3ConfigVacmSecurityToGroupPtrOutput {
	return o
}

func (o SwitchSnmpConfigV3ConfigVacmSecurityToGroupPtrOutput) ToSwitchSnmpConfigV3ConfigVacmSecurityToGroupPtrOutputWithContext(ctx context.Context) SwitchSnmpConfigV3ConfigVacmSecurityToGroupPtrOutput {
	return o
}

func (o SwitchSnmpConfigV3ConfigVacmSecurityToGroupPtrOutput) Elem() SwitchSnmpConfigV3ConfigVacmSecurityToGroupOutput {
	return o.ApplyT(func(v *SwitchSnmpConfigV3ConfigVacmSecurityToGroup) SwitchSnmpConfigV3ConfigVacmSecurityToGroup {
		if v != nil {
			return *v
		}
		var ret SwitchSnmpConfigV3ConfigVacmSecurityToGroup
		return ret
	}).(SwitchSnmpConfigV3ConfigVacmSecurityToGroupOutput)
}

func (o SwitchSnmpConfigV3ConfigVacmSecurityToGroupPtrOutput) Contents() SwitchSnmpConfigV3ConfigVacmSecurityToGroupContentArrayOutput {
	return o.ApplyT(func(v *SwitchSnmpConfigV3ConfigVacmSecurityToGroup) []SwitchSnmpConfigV3ConfigVacmSecurityToGroupContent {
		if v == nil {
			return nil
		}
		return v.Contents
	}).(SwitchSnmpConfigV3ConfigVacmSecurityToGroupContentArrayOutput)
}

// enum: `usm`, `v1`, `v2c`
func (o SwitchSnmpConfigV3ConfigVacmSecurityToGroupPtrOutput) SecurityModel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchSnmpConfigV3ConfigVacmSecurityToGroup) *string {
		if v == nil {
			return nil
		}
		return v.SecurityModel
	}).(pulumi.StringPtrOutput)
}

type SwitchSnmpConfigV3ConfigVacmSecurityToGroupContent struct {
	// Refer to groupName under access
	Group        *string `pulumi:"group"`
	SecurityName *string `pulumi:"securityName"`
}

// SwitchSnmpConfigV3ConfigVacmSecurityToGroupContentInput is an input type that accepts SwitchSnmpConfigV3ConfigVacmSecurityToGroupContentArgs and SwitchSnmpConfigV3ConfigVacmSecurityToGroupContentOutput values.
// You can construct a concrete instance of `SwitchSnmpConfigV3ConfigVacmSecurityToGroupContentInput` via:
//
//	SwitchSnmpConfigV3ConfigVacmSecurityToGroupContentArgs{...}
type SwitchSnmpConfigV3ConfigVacmSecurityToGroupContentInput interface {
	pulumi.Input

	ToSwitchSnmpConfigV3ConfigVacmSecurityToGroupContentOutput() SwitchSnmpConfigV3ConfigVacmSecurityToGroupContentOutput
	ToSwitchSnmpConfigV3ConfigVacmSecurityToGroupContentOutputWithContext(context.Context) SwitchSnmpConfigV3ConfigVacmSecurityToGroupContentOutput
}

type SwitchSnmpConfigV3ConfigVacmSecurityToGroupContentArgs struct {
	// Refer to groupName under access
	Group        pulumi.StringPtrInput `pulumi:"group"`
	SecurityName pulumi.StringPtrInput `pulumi:"securityName"`
}

func (SwitchSnmpConfigV3ConfigVacmSecurityToGroupContentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchSnmpConfigV3ConfigVacmSecurityToGroupContent)(nil)).Elem()
}

func (i SwitchSnmpConfigV3ConfigVacmSecurityToGroupContentArgs) ToSwitchSnmpConfigV3ConfigVacmSecurityToGroupContentOutput() SwitchSnmpConfigV3ConfigVacmSecurityToGroupContentOutput {
	return i.ToSwitchSnmpConfigV3ConfigVacmSecurityToGroupContentOutputWithContext(context.Background())
}

func (i SwitchSnmpConfigV3ConfigVacmSecurityToGroupContentArgs) ToSwitchSnmpConfigV3ConfigVacmSecurityToGroupContentOutputWithContext(ctx context.Context) SwitchSnmpConfigV3ConfigVacmSecurityToGroupContentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchSnmpConfigV3ConfigVacmSecurityToGroupContentOutput)
}

// SwitchSnmpConfigV3ConfigVacmSecurityToGroupContentArrayInput is an input type that accepts SwitchSnmpConfigV3ConfigVacmSecurityToGroupContentArray and SwitchSnmpConfigV3ConfigVacmSecurityToGroupContentArrayOutput values.
// You can construct a concrete instance of `SwitchSnmpConfigV3ConfigVacmSecurityToGroupContentArrayInput` via:
//
//	SwitchSnmpConfigV3ConfigVacmSecurityToGroupContentArray{ SwitchSnmpConfigV3ConfigVacmSecurityToGroupContentArgs{...} }
type SwitchSnmpConfigV3ConfigVacmSecurityToGroupContentArrayInput interface {
	pulumi.Input

	ToSwitchSnmpConfigV3ConfigVacmSecurityToGroupContentArrayOutput() SwitchSnmpConfigV3ConfigVacmSecurityToGroupContentArrayOutput
	ToSwitchSnmpConfigV3ConfigVacmSecurityToGroupContentArrayOutputWithContext(context.Context) SwitchSnmpConfigV3ConfigVacmSecurityToGroupContentArrayOutput
}

type SwitchSnmpConfigV3ConfigVacmSecurityToGroupContentArray []SwitchSnmpConfigV3ConfigVacmSecurityToGroupContentInput

func (SwitchSnmpConfigV3ConfigVacmSecurityToGroupContentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchSnmpConfigV3ConfigVacmSecurityToGroupContent)(nil)).Elem()
}

func (i SwitchSnmpConfigV3ConfigVacmSecurityToGroupContentArray) ToSwitchSnmpConfigV3ConfigVacmSecurityToGroupContentArrayOutput() SwitchSnmpConfigV3ConfigVacmSecurityToGroupContentArrayOutput {
	return i.ToSwitchSnmpConfigV3ConfigVacmSecurityToGroupContentArrayOutputWithContext(context.Background())
}

func (i SwitchSnmpConfigV3ConfigVacmSecurityToGroupContentArray) ToSwitchSnmpConfigV3ConfigVacmSecurityToGroupContentArrayOutputWithContext(ctx context.Context) SwitchSnmpConfigV3ConfigVacmSecurityToGroupContentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchSnmpConfigV3ConfigVacmSecurityToGroupContentArrayOutput)
}

type SwitchSnmpConfigV3ConfigVacmSecurityToGroupContentOutput struct{ *pulumi.OutputState }

func (SwitchSnmpConfigV3ConfigVacmSecurityToGroupContentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchSnmpConfigV3ConfigVacmSecurityToGroupContent)(nil)).Elem()
}

func (o SwitchSnmpConfigV3ConfigVacmSecurityToGroupContentOutput) ToSwitchSnmpConfigV3ConfigVacmSecurityToGroupContentOutput() SwitchSnmpConfigV3ConfigVacmSecurityToGroupContentOutput {
	return o
}

func (o SwitchSnmpConfigV3ConfigVacmSecurityToGroupContentOutput) ToSwitchSnmpConfigV3ConfigVacmSecurityToGroupContentOutputWithContext(ctx context.Context) SwitchSnmpConfigV3ConfigVacmSecurityToGroupContentOutput {
	return o
}

// Refer to groupName under access
func (o SwitchSnmpConfigV3ConfigVacmSecurityToGroupContentOutput) Group() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchSnmpConfigV3ConfigVacmSecurityToGroupContent) *string { return v.Group }).(pulumi.StringPtrOutput)
}

func (o SwitchSnmpConfigV3ConfigVacmSecurityToGroupContentOutput) SecurityName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchSnmpConfigV3ConfigVacmSecurityToGroupContent) *string { return v.SecurityName }).(pulumi.StringPtrOutput)
}

type SwitchSnmpConfigV3ConfigVacmSecurityToGroupContentArrayOutput struct{ *pulumi.OutputState }

func (SwitchSnmpConfigV3ConfigVacmSecurityToGroupContentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchSnmpConfigV3ConfigVacmSecurityToGroupContent)(nil)).Elem()
}

func (o SwitchSnmpConfigV3ConfigVacmSecurityToGroupContentArrayOutput) ToSwitchSnmpConfigV3ConfigVacmSecurityToGroupContentArrayOutput() SwitchSnmpConfigV3ConfigVacmSecurityToGroupContentArrayOutput {
	return o
}

func (o SwitchSnmpConfigV3ConfigVacmSecurityToGroupContentArrayOutput) ToSwitchSnmpConfigV3ConfigVacmSecurityToGroupContentArrayOutputWithContext(ctx context.Context) SwitchSnmpConfigV3ConfigVacmSecurityToGroupContentArrayOutput {
	return o
}

func (o SwitchSnmpConfigV3ConfigVacmSecurityToGroupContentArrayOutput) Index(i pulumi.IntInput) SwitchSnmpConfigV3ConfigVacmSecurityToGroupContentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwitchSnmpConfigV3ConfigVacmSecurityToGroupContent {
		return vs[0].([]SwitchSnmpConfigV3ConfigVacmSecurityToGroupContent)[vs[1].(int)]
	}).(SwitchSnmpConfigV3ConfigVacmSecurityToGroupContentOutput)
}

type SwitchSnmpConfigView struct {
	// If the root oid configured is included
	Include  *bool   `pulumi:"include"`
	Oid      *string `pulumi:"oid"`
	ViewName *string `pulumi:"viewName"`
}

// SwitchSnmpConfigViewInput is an input type that accepts SwitchSnmpConfigViewArgs and SwitchSnmpConfigViewOutput values.
// You can construct a concrete instance of `SwitchSnmpConfigViewInput` via:
//
//	SwitchSnmpConfigViewArgs{...}
type SwitchSnmpConfigViewInput interface {
	pulumi.Input

	ToSwitchSnmpConfigViewOutput() SwitchSnmpConfigViewOutput
	ToSwitchSnmpConfigViewOutputWithContext(context.Context) SwitchSnmpConfigViewOutput
}

type SwitchSnmpConfigViewArgs struct {
	// If the root oid configured is included
	Include  pulumi.BoolPtrInput   `pulumi:"include"`
	Oid      pulumi.StringPtrInput `pulumi:"oid"`
	ViewName pulumi.StringPtrInput `pulumi:"viewName"`
}

func (SwitchSnmpConfigViewArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchSnmpConfigView)(nil)).Elem()
}

func (i SwitchSnmpConfigViewArgs) ToSwitchSnmpConfigViewOutput() SwitchSnmpConfigViewOutput {
	return i.ToSwitchSnmpConfigViewOutputWithContext(context.Background())
}

func (i SwitchSnmpConfigViewArgs) ToSwitchSnmpConfigViewOutputWithContext(ctx context.Context) SwitchSnmpConfigViewOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchSnmpConfigViewOutput)
}

// SwitchSnmpConfigViewArrayInput is an input type that accepts SwitchSnmpConfigViewArray and SwitchSnmpConfigViewArrayOutput values.
// You can construct a concrete instance of `SwitchSnmpConfigViewArrayInput` via:
//
//	SwitchSnmpConfigViewArray{ SwitchSnmpConfigViewArgs{...} }
type SwitchSnmpConfigViewArrayInput interface {
	pulumi.Input

	ToSwitchSnmpConfigViewArrayOutput() SwitchSnmpConfigViewArrayOutput
	ToSwitchSnmpConfigViewArrayOutputWithContext(context.Context) SwitchSnmpConfigViewArrayOutput
}

type SwitchSnmpConfigViewArray []SwitchSnmpConfigViewInput

func (SwitchSnmpConfigViewArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchSnmpConfigView)(nil)).Elem()
}

func (i SwitchSnmpConfigViewArray) ToSwitchSnmpConfigViewArrayOutput() SwitchSnmpConfigViewArrayOutput {
	return i.ToSwitchSnmpConfigViewArrayOutputWithContext(context.Background())
}

func (i SwitchSnmpConfigViewArray) ToSwitchSnmpConfigViewArrayOutputWithContext(ctx context.Context) SwitchSnmpConfigViewArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchSnmpConfigViewArrayOutput)
}

type SwitchSnmpConfigViewOutput struct{ *pulumi.OutputState }

func (SwitchSnmpConfigViewOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchSnmpConfigView)(nil)).Elem()
}

func (o SwitchSnmpConfigViewOutput) ToSwitchSnmpConfigViewOutput() SwitchSnmpConfigViewOutput {
	return o
}

func (o SwitchSnmpConfigViewOutput) ToSwitchSnmpConfigViewOutputWithContext(ctx context.Context) SwitchSnmpConfigViewOutput {
	return o
}

// If the root oid configured is included
func (o SwitchSnmpConfigViewOutput) Include() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SwitchSnmpConfigView) *bool { return v.Include }).(pulumi.BoolPtrOutput)
}

func (o SwitchSnmpConfigViewOutput) Oid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchSnmpConfigView) *string { return v.Oid }).(pulumi.StringPtrOutput)
}

func (o SwitchSnmpConfigViewOutput) ViewName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchSnmpConfigView) *string { return v.ViewName }).(pulumi.StringPtrOutput)
}

type SwitchSnmpConfigViewArrayOutput struct{ *pulumi.OutputState }

func (SwitchSnmpConfigViewArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchSnmpConfigView)(nil)).Elem()
}

func (o SwitchSnmpConfigViewArrayOutput) ToSwitchSnmpConfigViewArrayOutput() SwitchSnmpConfigViewArrayOutput {
	return o
}

func (o SwitchSnmpConfigViewArrayOutput) ToSwitchSnmpConfigViewArrayOutputWithContext(ctx context.Context) SwitchSnmpConfigViewArrayOutput {
	return o
}

func (o SwitchSnmpConfigViewArrayOutput) Index(i pulumi.IntInput) SwitchSnmpConfigViewOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwitchSnmpConfigView {
		return vs[0].([]SwitchSnmpConfigView)[vs[1].(int)]
	}).(SwitchSnmpConfigViewOutput)
}

type SwitchStpConfig struct {
	// Switch STP priority. Range [0, 4k, 8k.. 60k] in steps of 4k. Bridge priority applies to both VSTP and RSTP.
	BridgePriority *string `pulumi:"bridgePriority"`
}

// SwitchStpConfigInput is an input type that accepts SwitchStpConfigArgs and SwitchStpConfigOutput values.
// You can construct a concrete instance of `SwitchStpConfigInput` via:
//
//	SwitchStpConfigArgs{...}
type SwitchStpConfigInput interface {
	pulumi.Input

	ToSwitchStpConfigOutput() SwitchStpConfigOutput
	ToSwitchStpConfigOutputWithContext(context.Context) SwitchStpConfigOutput
}

type SwitchStpConfigArgs struct {
	// Switch STP priority. Range [0, 4k, 8k.. 60k] in steps of 4k. Bridge priority applies to both VSTP and RSTP.
	BridgePriority pulumi.StringPtrInput `pulumi:"bridgePriority"`
}

func (SwitchStpConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchStpConfig)(nil)).Elem()
}

func (i SwitchStpConfigArgs) ToSwitchStpConfigOutput() SwitchStpConfigOutput {
	return i.ToSwitchStpConfigOutputWithContext(context.Background())
}

func (i SwitchStpConfigArgs) ToSwitchStpConfigOutputWithContext(ctx context.Context) SwitchStpConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchStpConfigOutput)
}

func (i SwitchStpConfigArgs) ToSwitchStpConfigPtrOutput() SwitchStpConfigPtrOutput {
	return i.ToSwitchStpConfigPtrOutputWithContext(context.Background())
}

func (i SwitchStpConfigArgs) ToSwitchStpConfigPtrOutputWithContext(ctx context.Context) SwitchStpConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchStpConfigOutput).ToSwitchStpConfigPtrOutputWithContext(ctx)
}

// SwitchStpConfigPtrInput is an input type that accepts SwitchStpConfigArgs, SwitchStpConfigPtr and SwitchStpConfigPtrOutput values.
// You can construct a concrete instance of `SwitchStpConfigPtrInput` via:
//
//	        SwitchStpConfigArgs{...}
//
//	or:
//
//	        nil
type SwitchStpConfigPtrInput interface {
	pulumi.Input

	ToSwitchStpConfigPtrOutput() SwitchStpConfigPtrOutput
	ToSwitchStpConfigPtrOutputWithContext(context.Context) SwitchStpConfigPtrOutput
}

type switchStpConfigPtrType SwitchStpConfigArgs

func SwitchStpConfigPtr(v *SwitchStpConfigArgs) SwitchStpConfigPtrInput {
	return (*switchStpConfigPtrType)(v)
}

func (*switchStpConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchStpConfig)(nil)).Elem()
}

func (i *switchStpConfigPtrType) ToSwitchStpConfigPtrOutput() SwitchStpConfigPtrOutput {
	return i.ToSwitchStpConfigPtrOutputWithContext(context.Background())
}

func (i *switchStpConfigPtrType) ToSwitchStpConfigPtrOutputWithContext(ctx context.Context) SwitchStpConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchStpConfigPtrOutput)
}

type SwitchStpConfigOutput struct{ *pulumi.OutputState }

func (SwitchStpConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchStpConfig)(nil)).Elem()
}

func (o SwitchStpConfigOutput) ToSwitchStpConfigOutput() SwitchStpConfigOutput {
	return o
}

func (o SwitchStpConfigOutput) ToSwitchStpConfigOutputWithContext(ctx context.Context) SwitchStpConfigOutput {
	return o
}

func (o SwitchStpConfigOutput) ToSwitchStpConfigPtrOutput() SwitchStpConfigPtrOutput {
	return o.ToSwitchStpConfigPtrOutputWithContext(context.Background())
}

func (o SwitchStpConfigOutput) ToSwitchStpConfigPtrOutputWithContext(ctx context.Context) SwitchStpConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SwitchStpConfig) *SwitchStpConfig {
		return &v
	}).(SwitchStpConfigPtrOutput)
}

// Switch STP priority. Range [0, 4k, 8k.. 60k] in steps of 4k. Bridge priority applies to both VSTP and RSTP.
func (o SwitchStpConfigOutput) BridgePriority() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchStpConfig) *string { return v.BridgePriority }).(pulumi.StringPtrOutput)
}

type SwitchStpConfigPtrOutput struct{ *pulumi.OutputState }

func (SwitchStpConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchStpConfig)(nil)).Elem()
}

func (o SwitchStpConfigPtrOutput) ToSwitchStpConfigPtrOutput() SwitchStpConfigPtrOutput {
	return o
}

func (o SwitchStpConfigPtrOutput) ToSwitchStpConfigPtrOutputWithContext(ctx context.Context) SwitchStpConfigPtrOutput {
	return o
}

func (o SwitchStpConfigPtrOutput) Elem() SwitchStpConfigOutput {
	return o.ApplyT(func(v *SwitchStpConfig) SwitchStpConfig {
		if v != nil {
			return *v
		}
		var ret SwitchStpConfig
		return ret
	}).(SwitchStpConfigOutput)
}

// Switch STP priority. Range [0, 4k, 8k.. 60k] in steps of 4k. Bridge priority applies to both VSTP and RSTP.
func (o SwitchStpConfigPtrOutput) BridgePriority() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchStpConfig) *string {
		if v == nil {
			return nil
		}
		return v.BridgePriority
	}).(pulumi.StringPtrOutput)
}

type SwitchSwitchMgmt struct {
	// AP_affinity_threshold apAffinityThreshold can be added as a field under site/setting. By default, this value is set to 12. If the field is set in both site/setting and org/setting, the value from site/setting will be used.
	ApAffinityThreshold *int `pulumi:"apAffinityThreshold"`
	// Set Banners for switches. Allows markup formatting
	CliBanner *string `pulumi:"cliBanner"`
	// Sets timeout for switches
	CliIdleTimeout *int `pulumi:"cliIdleTimeout"`
	// Rollback timer for commit confirmed
	ConfigRevertTimer *int `pulumi:"configRevertTimer"`
	// Enable to provide the FQDN with DHCP option 81
	DhcpOptionFqdn      *bool `pulumi:"dhcpOptionFqdn"`
	DisableOobDownAlarm *bool `pulumi:"disableOobDownAlarm"`
	FipsEnabled         *bool `pulumi:"fipsEnabled"`
	// Property key is the user name. For Local user authentication
	LocalAccounts map[string]SwitchSwitchMgmtLocalAccounts `pulumi:"localAccounts"`
	// IP Address or FQDN of the Mist Edge used to proxy the switch management traffic to the Mist Cloud
	MxedgeProxyHost *string `pulumi:"mxedgeProxyHost"`
	// Mist Edge port used to proxy the switch management traffic to the Mist Cloud. Value in range 1-65535
	MxedgeProxyPort *string `pulumi:"mxedgeProxyPort"`
	// Restrict inbound-traffic to host
	// when enabled, all traffic that is not essential to our operation will be dropped
	// e.g. ntp / dns / traffic to mist will be allowed by default, if dhcpd is enabled, we'll make sure it works
	ProtectRe    *SwitchSwitchMgmtProtectRe `pulumi:"protectRe"`
	RootPassword *string                    `pulumi:"rootPassword"`
	Tacacs       *SwitchSwitchMgmtTacacs    `pulumi:"tacacs"`
	// To use mxedge as proxy
	UseMxedgeProxy *bool `pulumi:"useMxedgeProxy"`
}

// SwitchSwitchMgmtInput is an input type that accepts SwitchSwitchMgmtArgs and SwitchSwitchMgmtOutput values.
// You can construct a concrete instance of `SwitchSwitchMgmtInput` via:
//
//	SwitchSwitchMgmtArgs{...}
type SwitchSwitchMgmtInput interface {
	pulumi.Input

	ToSwitchSwitchMgmtOutput() SwitchSwitchMgmtOutput
	ToSwitchSwitchMgmtOutputWithContext(context.Context) SwitchSwitchMgmtOutput
}

type SwitchSwitchMgmtArgs struct {
	// AP_affinity_threshold apAffinityThreshold can be added as a field under site/setting. By default, this value is set to 12. If the field is set in both site/setting and org/setting, the value from site/setting will be used.
	ApAffinityThreshold pulumi.IntPtrInput `pulumi:"apAffinityThreshold"`
	// Set Banners for switches. Allows markup formatting
	CliBanner pulumi.StringPtrInput `pulumi:"cliBanner"`
	// Sets timeout for switches
	CliIdleTimeout pulumi.IntPtrInput `pulumi:"cliIdleTimeout"`
	// Rollback timer for commit confirmed
	ConfigRevertTimer pulumi.IntPtrInput `pulumi:"configRevertTimer"`
	// Enable to provide the FQDN with DHCP option 81
	DhcpOptionFqdn      pulumi.BoolPtrInput `pulumi:"dhcpOptionFqdn"`
	DisableOobDownAlarm pulumi.BoolPtrInput `pulumi:"disableOobDownAlarm"`
	FipsEnabled         pulumi.BoolPtrInput `pulumi:"fipsEnabled"`
	// Property key is the user name. For Local user authentication
	LocalAccounts SwitchSwitchMgmtLocalAccountsMapInput `pulumi:"localAccounts"`
	// IP Address or FQDN of the Mist Edge used to proxy the switch management traffic to the Mist Cloud
	MxedgeProxyHost pulumi.StringPtrInput `pulumi:"mxedgeProxyHost"`
	// Mist Edge port used to proxy the switch management traffic to the Mist Cloud. Value in range 1-65535
	MxedgeProxyPort pulumi.StringPtrInput `pulumi:"mxedgeProxyPort"`
	// Restrict inbound-traffic to host
	// when enabled, all traffic that is not essential to our operation will be dropped
	// e.g. ntp / dns / traffic to mist will be allowed by default, if dhcpd is enabled, we'll make sure it works
	ProtectRe    SwitchSwitchMgmtProtectRePtrInput `pulumi:"protectRe"`
	RootPassword pulumi.StringPtrInput             `pulumi:"rootPassword"`
	Tacacs       SwitchSwitchMgmtTacacsPtrInput    `pulumi:"tacacs"`
	// To use mxedge as proxy
	UseMxedgeProxy pulumi.BoolPtrInput `pulumi:"useMxedgeProxy"`
}

func (SwitchSwitchMgmtArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchSwitchMgmt)(nil)).Elem()
}

func (i SwitchSwitchMgmtArgs) ToSwitchSwitchMgmtOutput() SwitchSwitchMgmtOutput {
	return i.ToSwitchSwitchMgmtOutputWithContext(context.Background())
}

func (i SwitchSwitchMgmtArgs) ToSwitchSwitchMgmtOutputWithContext(ctx context.Context) SwitchSwitchMgmtOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchSwitchMgmtOutput)
}

func (i SwitchSwitchMgmtArgs) ToSwitchSwitchMgmtPtrOutput() SwitchSwitchMgmtPtrOutput {
	return i.ToSwitchSwitchMgmtPtrOutputWithContext(context.Background())
}

func (i SwitchSwitchMgmtArgs) ToSwitchSwitchMgmtPtrOutputWithContext(ctx context.Context) SwitchSwitchMgmtPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchSwitchMgmtOutput).ToSwitchSwitchMgmtPtrOutputWithContext(ctx)
}

// SwitchSwitchMgmtPtrInput is an input type that accepts SwitchSwitchMgmtArgs, SwitchSwitchMgmtPtr and SwitchSwitchMgmtPtrOutput values.
// You can construct a concrete instance of `SwitchSwitchMgmtPtrInput` via:
//
//	        SwitchSwitchMgmtArgs{...}
//
//	or:
//
//	        nil
type SwitchSwitchMgmtPtrInput interface {
	pulumi.Input

	ToSwitchSwitchMgmtPtrOutput() SwitchSwitchMgmtPtrOutput
	ToSwitchSwitchMgmtPtrOutputWithContext(context.Context) SwitchSwitchMgmtPtrOutput
}

type switchSwitchMgmtPtrType SwitchSwitchMgmtArgs

func SwitchSwitchMgmtPtr(v *SwitchSwitchMgmtArgs) SwitchSwitchMgmtPtrInput {
	return (*switchSwitchMgmtPtrType)(v)
}

func (*switchSwitchMgmtPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchSwitchMgmt)(nil)).Elem()
}

func (i *switchSwitchMgmtPtrType) ToSwitchSwitchMgmtPtrOutput() SwitchSwitchMgmtPtrOutput {
	return i.ToSwitchSwitchMgmtPtrOutputWithContext(context.Background())
}

func (i *switchSwitchMgmtPtrType) ToSwitchSwitchMgmtPtrOutputWithContext(ctx context.Context) SwitchSwitchMgmtPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchSwitchMgmtPtrOutput)
}

type SwitchSwitchMgmtOutput struct{ *pulumi.OutputState }

func (SwitchSwitchMgmtOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchSwitchMgmt)(nil)).Elem()
}

func (o SwitchSwitchMgmtOutput) ToSwitchSwitchMgmtOutput() SwitchSwitchMgmtOutput {
	return o
}

func (o SwitchSwitchMgmtOutput) ToSwitchSwitchMgmtOutputWithContext(ctx context.Context) SwitchSwitchMgmtOutput {
	return o
}

func (o SwitchSwitchMgmtOutput) ToSwitchSwitchMgmtPtrOutput() SwitchSwitchMgmtPtrOutput {
	return o.ToSwitchSwitchMgmtPtrOutputWithContext(context.Background())
}

func (o SwitchSwitchMgmtOutput) ToSwitchSwitchMgmtPtrOutputWithContext(ctx context.Context) SwitchSwitchMgmtPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SwitchSwitchMgmt) *SwitchSwitchMgmt {
		return &v
	}).(SwitchSwitchMgmtPtrOutput)
}

// AP_affinity_threshold apAffinityThreshold can be added as a field under site/setting. By default, this value is set to 12. If the field is set in both site/setting and org/setting, the value from site/setting will be used.
func (o SwitchSwitchMgmtOutput) ApAffinityThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchSwitchMgmt) *int { return v.ApAffinityThreshold }).(pulumi.IntPtrOutput)
}

// Set Banners for switches. Allows markup formatting
func (o SwitchSwitchMgmtOutput) CliBanner() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchSwitchMgmt) *string { return v.CliBanner }).(pulumi.StringPtrOutput)
}

// Sets timeout for switches
func (o SwitchSwitchMgmtOutput) CliIdleTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchSwitchMgmt) *int { return v.CliIdleTimeout }).(pulumi.IntPtrOutput)
}

// Rollback timer for commit confirmed
func (o SwitchSwitchMgmtOutput) ConfigRevertTimer() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchSwitchMgmt) *int { return v.ConfigRevertTimer }).(pulumi.IntPtrOutput)
}

// Enable to provide the FQDN with DHCP option 81
func (o SwitchSwitchMgmtOutput) DhcpOptionFqdn() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SwitchSwitchMgmt) *bool { return v.DhcpOptionFqdn }).(pulumi.BoolPtrOutput)
}

func (o SwitchSwitchMgmtOutput) DisableOobDownAlarm() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SwitchSwitchMgmt) *bool { return v.DisableOobDownAlarm }).(pulumi.BoolPtrOutput)
}

func (o SwitchSwitchMgmtOutput) FipsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SwitchSwitchMgmt) *bool { return v.FipsEnabled }).(pulumi.BoolPtrOutput)
}

// Property key is the user name. For Local user authentication
func (o SwitchSwitchMgmtOutput) LocalAccounts() SwitchSwitchMgmtLocalAccountsMapOutput {
	return o.ApplyT(func(v SwitchSwitchMgmt) map[string]SwitchSwitchMgmtLocalAccounts { return v.LocalAccounts }).(SwitchSwitchMgmtLocalAccountsMapOutput)
}

// IP Address or FQDN of the Mist Edge used to proxy the switch management traffic to the Mist Cloud
func (o SwitchSwitchMgmtOutput) MxedgeProxyHost() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchSwitchMgmt) *string { return v.MxedgeProxyHost }).(pulumi.StringPtrOutput)
}

// Mist Edge port used to proxy the switch management traffic to the Mist Cloud. Value in range 1-65535
func (o SwitchSwitchMgmtOutput) MxedgeProxyPort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchSwitchMgmt) *string { return v.MxedgeProxyPort }).(pulumi.StringPtrOutput)
}

// Restrict inbound-traffic to host
// when enabled, all traffic that is not essential to our operation will be dropped
// e.g. ntp / dns / traffic to mist will be allowed by default, if dhcpd is enabled, we'll make sure it works
func (o SwitchSwitchMgmtOutput) ProtectRe() SwitchSwitchMgmtProtectRePtrOutput {
	return o.ApplyT(func(v SwitchSwitchMgmt) *SwitchSwitchMgmtProtectRe { return v.ProtectRe }).(SwitchSwitchMgmtProtectRePtrOutput)
}

func (o SwitchSwitchMgmtOutput) RootPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchSwitchMgmt) *string { return v.RootPassword }).(pulumi.StringPtrOutput)
}

func (o SwitchSwitchMgmtOutput) Tacacs() SwitchSwitchMgmtTacacsPtrOutput {
	return o.ApplyT(func(v SwitchSwitchMgmt) *SwitchSwitchMgmtTacacs { return v.Tacacs }).(SwitchSwitchMgmtTacacsPtrOutput)
}

// To use mxedge as proxy
func (o SwitchSwitchMgmtOutput) UseMxedgeProxy() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SwitchSwitchMgmt) *bool { return v.UseMxedgeProxy }).(pulumi.BoolPtrOutput)
}

type SwitchSwitchMgmtPtrOutput struct{ *pulumi.OutputState }

func (SwitchSwitchMgmtPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchSwitchMgmt)(nil)).Elem()
}

func (o SwitchSwitchMgmtPtrOutput) ToSwitchSwitchMgmtPtrOutput() SwitchSwitchMgmtPtrOutput {
	return o
}

func (o SwitchSwitchMgmtPtrOutput) ToSwitchSwitchMgmtPtrOutputWithContext(ctx context.Context) SwitchSwitchMgmtPtrOutput {
	return o
}

func (o SwitchSwitchMgmtPtrOutput) Elem() SwitchSwitchMgmtOutput {
	return o.ApplyT(func(v *SwitchSwitchMgmt) SwitchSwitchMgmt {
		if v != nil {
			return *v
		}
		var ret SwitchSwitchMgmt
		return ret
	}).(SwitchSwitchMgmtOutput)
}

// AP_affinity_threshold apAffinityThreshold can be added as a field under site/setting. By default, this value is set to 12. If the field is set in both site/setting and org/setting, the value from site/setting will be used.
func (o SwitchSwitchMgmtPtrOutput) ApAffinityThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SwitchSwitchMgmt) *int {
		if v == nil {
			return nil
		}
		return v.ApAffinityThreshold
	}).(pulumi.IntPtrOutput)
}

// Set Banners for switches. Allows markup formatting
func (o SwitchSwitchMgmtPtrOutput) CliBanner() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchSwitchMgmt) *string {
		if v == nil {
			return nil
		}
		return v.CliBanner
	}).(pulumi.StringPtrOutput)
}

// Sets timeout for switches
func (o SwitchSwitchMgmtPtrOutput) CliIdleTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SwitchSwitchMgmt) *int {
		if v == nil {
			return nil
		}
		return v.CliIdleTimeout
	}).(pulumi.IntPtrOutput)
}

// Rollback timer for commit confirmed
func (o SwitchSwitchMgmtPtrOutput) ConfigRevertTimer() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SwitchSwitchMgmt) *int {
		if v == nil {
			return nil
		}
		return v.ConfigRevertTimer
	}).(pulumi.IntPtrOutput)
}

// Enable to provide the FQDN with DHCP option 81
func (o SwitchSwitchMgmtPtrOutput) DhcpOptionFqdn() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SwitchSwitchMgmt) *bool {
		if v == nil {
			return nil
		}
		return v.DhcpOptionFqdn
	}).(pulumi.BoolPtrOutput)
}

func (o SwitchSwitchMgmtPtrOutput) DisableOobDownAlarm() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SwitchSwitchMgmt) *bool {
		if v == nil {
			return nil
		}
		return v.DisableOobDownAlarm
	}).(pulumi.BoolPtrOutput)
}

func (o SwitchSwitchMgmtPtrOutput) FipsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SwitchSwitchMgmt) *bool {
		if v == nil {
			return nil
		}
		return v.FipsEnabled
	}).(pulumi.BoolPtrOutput)
}

// Property key is the user name. For Local user authentication
func (o SwitchSwitchMgmtPtrOutput) LocalAccounts() SwitchSwitchMgmtLocalAccountsMapOutput {
	return o.ApplyT(func(v *SwitchSwitchMgmt) map[string]SwitchSwitchMgmtLocalAccounts {
		if v == nil {
			return nil
		}
		return v.LocalAccounts
	}).(SwitchSwitchMgmtLocalAccountsMapOutput)
}

// IP Address or FQDN of the Mist Edge used to proxy the switch management traffic to the Mist Cloud
func (o SwitchSwitchMgmtPtrOutput) MxedgeProxyHost() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchSwitchMgmt) *string {
		if v == nil {
			return nil
		}
		return v.MxedgeProxyHost
	}).(pulumi.StringPtrOutput)
}

// Mist Edge port used to proxy the switch management traffic to the Mist Cloud. Value in range 1-65535
func (o SwitchSwitchMgmtPtrOutput) MxedgeProxyPort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchSwitchMgmt) *string {
		if v == nil {
			return nil
		}
		return v.MxedgeProxyPort
	}).(pulumi.StringPtrOutput)
}

// Restrict inbound-traffic to host
// when enabled, all traffic that is not essential to our operation will be dropped
// e.g. ntp / dns / traffic to mist will be allowed by default, if dhcpd is enabled, we'll make sure it works
func (o SwitchSwitchMgmtPtrOutput) ProtectRe() SwitchSwitchMgmtProtectRePtrOutput {
	return o.ApplyT(func(v *SwitchSwitchMgmt) *SwitchSwitchMgmtProtectRe {
		if v == nil {
			return nil
		}
		return v.ProtectRe
	}).(SwitchSwitchMgmtProtectRePtrOutput)
}

func (o SwitchSwitchMgmtPtrOutput) RootPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchSwitchMgmt) *string {
		if v == nil {
			return nil
		}
		return v.RootPassword
	}).(pulumi.StringPtrOutput)
}

func (o SwitchSwitchMgmtPtrOutput) Tacacs() SwitchSwitchMgmtTacacsPtrOutput {
	return o.ApplyT(func(v *SwitchSwitchMgmt) *SwitchSwitchMgmtTacacs {
		if v == nil {
			return nil
		}
		return v.Tacacs
	}).(SwitchSwitchMgmtTacacsPtrOutput)
}

// To use mxedge as proxy
func (o SwitchSwitchMgmtPtrOutput) UseMxedgeProxy() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SwitchSwitchMgmt) *bool {
		if v == nil {
			return nil
		}
		return v.UseMxedgeProxy
	}).(pulumi.BoolPtrOutput)
}

type SwitchSwitchMgmtLocalAccounts struct {
	Password *string `pulumi:"password"`
	// enum: `admin`, `helpdesk`, `none`, `read`
	Role *string `pulumi:"role"`
}

// SwitchSwitchMgmtLocalAccountsInput is an input type that accepts SwitchSwitchMgmtLocalAccountsArgs and SwitchSwitchMgmtLocalAccountsOutput values.
// You can construct a concrete instance of `SwitchSwitchMgmtLocalAccountsInput` via:
//
//	SwitchSwitchMgmtLocalAccountsArgs{...}
type SwitchSwitchMgmtLocalAccountsInput interface {
	pulumi.Input

	ToSwitchSwitchMgmtLocalAccountsOutput() SwitchSwitchMgmtLocalAccountsOutput
	ToSwitchSwitchMgmtLocalAccountsOutputWithContext(context.Context) SwitchSwitchMgmtLocalAccountsOutput
}

type SwitchSwitchMgmtLocalAccountsArgs struct {
	Password pulumi.StringPtrInput `pulumi:"password"`
	// enum: `admin`, `helpdesk`, `none`, `read`
	Role pulumi.StringPtrInput `pulumi:"role"`
}

func (SwitchSwitchMgmtLocalAccountsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchSwitchMgmtLocalAccounts)(nil)).Elem()
}

func (i SwitchSwitchMgmtLocalAccountsArgs) ToSwitchSwitchMgmtLocalAccountsOutput() SwitchSwitchMgmtLocalAccountsOutput {
	return i.ToSwitchSwitchMgmtLocalAccountsOutputWithContext(context.Background())
}

func (i SwitchSwitchMgmtLocalAccountsArgs) ToSwitchSwitchMgmtLocalAccountsOutputWithContext(ctx context.Context) SwitchSwitchMgmtLocalAccountsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchSwitchMgmtLocalAccountsOutput)
}

// SwitchSwitchMgmtLocalAccountsMapInput is an input type that accepts SwitchSwitchMgmtLocalAccountsMap and SwitchSwitchMgmtLocalAccountsMapOutput values.
// You can construct a concrete instance of `SwitchSwitchMgmtLocalAccountsMapInput` via:
//
//	SwitchSwitchMgmtLocalAccountsMap{ "key": SwitchSwitchMgmtLocalAccountsArgs{...} }
type SwitchSwitchMgmtLocalAccountsMapInput interface {
	pulumi.Input

	ToSwitchSwitchMgmtLocalAccountsMapOutput() SwitchSwitchMgmtLocalAccountsMapOutput
	ToSwitchSwitchMgmtLocalAccountsMapOutputWithContext(context.Context) SwitchSwitchMgmtLocalAccountsMapOutput
}

type SwitchSwitchMgmtLocalAccountsMap map[string]SwitchSwitchMgmtLocalAccountsInput

func (SwitchSwitchMgmtLocalAccountsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]SwitchSwitchMgmtLocalAccounts)(nil)).Elem()
}

func (i SwitchSwitchMgmtLocalAccountsMap) ToSwitchSwitchMgmtLocalAccountsMapOutput() SwitchSwitchMgmtLocalAccountsMapOutput {
	return i.ToSwitchSwitchMgmtLocalAccountsMapOutputWithContext(context.Background())
}

func (i SwitchSwitchMgmtLocalAccountsMap) ToSwitchSwitchMgmtLocalAccountsMapOutputWithContext(ctx context.Context) SwitchSwitchMgmtLocalAccountsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchSwitchMgmtLocalAccountsMapOutput)
}

type SwitchSwitchMgmtLocalAccountsOutput struct{ *pulumi.OutputState }

func (SwitchSwitchMgmtLocalAccountsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchSwitchMgmtLocalAccounts)(nil)).Elem()
}

func (o SwitchSwitchMgmtLocalAccountsOutput) ToSwitchSwitchMgmtLocalAccountsOutput() SwitchSwitchMgmtLocalAccountsOutput {
	return o
}

func (o SwitchSwitchMgmtLocalAccountsOutput) ToSwitchSwitchMgmtLocalAccountsOutputWithContext(ctx context.Context) SwitchSwitchMgmtLocalAccountsOutput {
	return o
}

func (o SwitchSwitchMgmtLocalAccountsOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchSwitchMgmtLocalAccounts) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// enum: `admin`, `helpdesk`, `none`, `read`
func (o SwitchSwitchMgmtLocalAccountsOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchSwitchMgmtLocalAccounts) *string { return v.Role }).(pulumi.StringPtrOutput)
}

type SwitchSwitchMgmtLocalAccountsMapOutput struct{ *pulumi.OutputState }

func (SwitchSwitchMgmtLocalAccountsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]SwitchSwitchMgmtLocalAccounts)(nil)).Elem()
}

func (o SwitchSwitchMgmtLocalAccountsMapOutput) ToSwitchSwitchMgmtLocalAccountsMapOutput() SwitchSwitchMgmtLocalAccountsMapOutput {
	return o
}

func (o SwitchSwitchMgmtLocalAccountsMapOutput) ToSwitchSwitchMgmtLocalAccountsMapOutputWithContext(ctx context.Context) SwitchSwitchMgmtLocalAccountsMapOutput {
	return o
}

func (o SwitchSwitchMgmtLocalAccountsMapOutput) MapIndex(k pulumi.StringInput) SwitchSwitchMgmtLocalAccountsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) SwitchSwitchMgmtLocalAccounts {
		return vs[0].(map[string]SwitchSwitchMgmtLocalAccounts)[vs[1].(string)]
	}).(SwitchSwitchMgmtLocalAccountsOutput)
}

type SwitchSwitchMgmtProtectRe struct {
	// optionally, services we'll allow. enum: `icmp`, `ssh`
	AllowedServices []string                          `pulumi:"allowedServices"`
	Customs         []SwitchSwitchMgmtProtectReCustom `pulumi:"customs"`
	// When enabled, all traffic that is not essential to our operation will be dropped
	// e.g. ntp / dns / traffic to mist will be allowed by default
	//      if dhcpd is enabled, we'll make sure it works
	Enabled *bool `pulumi:"enabled"`
	// host/subnets we'll allow traffic to/from
	TrustedHosts []string `pulumi:"trustedHosts"`
}

// SwitchSwitchMgmtProtectReInput is an input type that accepts SwitchSwitchMgmtProtectReArgs and SwitchSwitchMgmtProtectReOutput values.
// You can construct a concrete instance of `SwitchSwitchMgmtProtectReInput` via:
//
//	SwitchSwitchMgmtProtectReArgs{...}
type SwitchSwitchMgmtProtectReInput interface {
	pulumi.Input

	ToSwitchSwitchMgmtProtectReOutput() SwitchSwitchMgmtProtectReOutput
	ToSwitchSwitchMgmtProtectReOutputWithContext(context.Context) SwitchSwitchMgmtProtectReOutput
}

type SwitchSwitchMgmtProtectReArgs struct {
	// optionally, services we'll allow. enum: `icmp`, `ssh`
	AllowedServices pulumi.StringArrayInput                   `pulumi:"allowedServices"`
	Customs         SwitchSwitchMgmtProtectReCustomArrayInput `pulumi:"customs"`
	// When enabled, all traffic that is not essential to our operation will be dropped
	// e.g. ntp / dns / traffic to mist will be allowed by default
	//      if dhcpd is enabled, we'll make sure it works
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// host/subnets we'll allow traffic to/from
	TrustedHosts pulumi.StringArrayInput `pulumi:"trustedHosts"`
}

func (SwitchSwitchMgmtProtectReArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchSwitchMgmtProtectRe)(nil)).Elem()
}

func (i SwitchSwitchMgmtProtectReArgs) ToSwitchSwitchMgmtProtectReOutput() SwitchSwitchMgmtProtectReOutput {
	return i.ToSwitchSwitchMgmtProtectReOutputWithContext(context.Background())
}

func (i SwitchSwitchMgmtProtectReArgs) ToSwitchSwitchMgmtProtectReOutputWithContext(ctx context.Context) SwitchSwitchMgmtProtectReOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchSwitchMgmtProtectReOutput)
}

func (i SwitchSwitchMgmtProtectReArgs) ToSwitchSwitchMgmtProtectRePtrOutput() SwitchSwitchMgmtProtectRePtrOutput {
	return i.ToSwitchSwitchMgmtProtectRePtrOutputWithContext(context.Background())
}

func (i SwitchSwitchMgmtProtectReArgs) ToSwitchSwitchMgmtProtectRePtrOutputWithContext(ctx context.Context) SwitchSwitchMgmtProtectRePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchSwitchMgmtProtectReOutput).ToSwitchSwitchMgmtProtectRePtrOutputWithContext(ctx)
}

// SwitchSwitchMgmtProtectRePtrInput is an input type that accepts SwitchSwitchMgmtProtectReArgs, SwitchSwitchMgmtProtectRePtr and SwitchSwitchMgmtProtectRePtrOutput values.
// You can construct a concrete instance of `SwitchSwitchMgmtProtectRePtrInput` via:
//
//	        SwitchSwitchMgmtProtectReArgs{...}
//
//	or:
//
//	        nil
type SwitchSwitchMgmtProtectRePtrInput interface {
	pulumi.Input

	ToSwitchSwitchMgmtProtectRePtrOutput() SwitchSwitchMgmtProtectRePtrOutput
	ToSwitchSwitchMgmtProtectRePtrOutputWithContext(context.Context) SwitchSwitchMgmtProtectRePtrOutput
}

type switchSwitchMgmtProtectRePtrType SwitchSwitchMgmtProtectReArgs

func SwitchSwitchMgmtProtectRePtr(v *SwitchSwitchMgmtProtectReArgs) SwitchSwitchMgmtProtectRePtrInput {
	return (*switchSwitchMgmtProtectRePtrType)(v)
}

func (*switchSwitchMgmtProtectRePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchSwitchMgmtProtectRe)(nil)).Elem()
}

func (i *switchSwitchMgmtProtectRePtrType) ToSwitchSwitchMgmtProtectRePtrOutput() SwitchSwitchMgmtProtectRePtrOutput {
	return i.ToSwitchSwitchMgmtProtectRePtrOutputWithContext(context.Background())
}

func (i *switchSwitchMgmtProtectRePtrType) ToSwitchSwitchMgmtProtectRePtrOutputWithContext(ctx context.Context) SwitchSwitchMgmtProtectRePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchSwitchMgmtProtectRePtrOutput)
}

type SwitchSwitchMgmtProtectReOutput struct{ *pulumi.OutputState }

func (SwitchSwitchMgmtProtectReOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchSwitchMgmtProtectRe)(nil)).Elem()
}

func (o SwitchSwitchMgmtProtectReOutput) ToSwitchSwitchMgmtProtectReOutput() SwitchSwitchMgmtProtectReOutput {
	return o
}

func (o SwitchSwitchMgmtProtectReOutput) ToSwitchSwitchMgmtProtectReOutputWithContext(ctx context.Context) SwitchSwitchMgmtProtectReOutput {
	return o
}

func (o SwitchSwitchMgmtProtectReOutput) ToSwitchSwitchMgmtProtectRePtrOutput() SwitchSwitchMgmtProtectRePtrOutput {
	return o.ToSwitchSwitchMgmtProtectRePtrOutputWithContext(context.Background())
}

func (o SwitchSwitchMgmtProtectReOutput) ToSwitchSwitchMgmtProtectRePtrOutputWithContext(ctx context.Context) SwitchSwitchMgmtProtectRePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SwitchSwitchMgmtProtectRe) *SwitchSwitchMgmtProtectRe {
		return &v
	}).(SwitchSwitchMgmtProtectRePtrOutput)
}

// optionally, services we'll allow. enum: `icmp`, `ssh`
func (o SwitchSwitchMgmtProtectReOutput) AllowedServices() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SwitchSwitchMgmtProtectRe) []string { return v.AllowedServices }).(pulumi.StringArrayOutput)
}

func (o SwitchSwitchMgmtProtectReOutput) Customs() SwitchSwitchMgmtProtectReCustomArrayOutput {
	return o.ApplyT(func(v SwitchSwitchMgmtProtectRe) []SwitchSwitchMgmtProtectReCustom { return v.Customs }).(SwitchSwitchMgmtProtectReCustomArrayOutput)
}

// When enabled, all traffic that is not essential to our operation will be dropped
// e.g. ntp / dns / traffic to mist will be allowed by default
//
//	if dhcpd is enabled, we'll make sure it works
func (o SwitchSwitchMgmtProtectReOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SwitchSwitchMgmtProtectRe) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// host/subnets we'll allow traffic to/from
func (o SwitchSwitchMgmtProtectReOutput) TrustedHosts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SwitchSwitchMgmtProtectRe) []string { return v.TrustedHosts }).(pulumi.StringArrayOutput)
}

type SwitchSwitchMgmtProtectRePtrOutput struct{ *pulumi.OutputState }

func (SwitchSwitchMgmtProtectRePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchSwitchMgmtProtectRe)(nil)).Elem()
}

func (o SwitchSwitchMgmtProtectRePtrOutput) ToSwitchSwitchMgmtProtectRePtrOutput() SwitchSwitchMgmtProtectRePtrOutput {
	return o
}

func (o SwitchSwitchMgmtProtectRePtrOutput) ToSwitchSwitchMgmtProtectRePtrOutputWithContext(ctx context.Context) SwitchSwitchMgmtProtectRePtrOutput {
	return o
}

func (o SwitchSwitchMgmtProtectRePtrOutput) Elem() SwitchSwitchMgmtProtectReOutput {
	return o.ApplyT(func(v *SwitchSwitchMgmtProtectRe) SwitchSwitchMgmtProtectRe {
		if v != nil {
			return *v
		}
		var ret SwitchSwitchMgmtProtectRe
		return ret
	}).(SwitchSwitchMgmtProtectReOutput)
}

// optionally, services we'll allow. enum: `icmp`, `ssh`
func (o SwitchSwitchMgmtProtectRePtrOutput) AllowedServices() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SwitchSwitchMgmtProtectRe) []string {
		if v == nil {
			return nil
		}
		return v.AllowedServices
	}).(pulumi.StringArrayOutput)
}

func (o SwitchSwitchMgmtProtectRePtrOutput) Customs() SwitchSwitchMgmtProtectReCustomArrayOutput {
	return o.ApplyT(func(v *SwitchSwitchMgmtProtectRe) []SwitchSwitchMgmtProtectReCustom {
		if v == nil {
			return nil
		}
		return v.Customs
	}).(SwitchSwitchMgmtProtectReCustomArrayOutput)
}

// When enabled, all traffic that is not essential to our operation will be dropped
// e.g. ntp / dns / traffic to mist will be allowed by default
//
//	if dhcpd is enabled, we'll make sure it works
func (o SwitchSwitchMgmtProtectRePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SwitchSwitchMgmtProtectRe) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// host/subnets we'll allow traffic to/from
func (o SwitchSwitchMgmtProtectRePtrOutput) TrustedHosts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SwitchSwitchMgmtProtectRe) []string {
		if v == nil {
			return nil
		}
		return v.TrustedHosts
	}).(pulumi.StringArrayOutput)
}

type SwitchSwitchMgmtProtectReCustom struct {
	// matched dst port, "0" means any. Note: For `protocol`==`any` and  `portRange`==`any`, configure `trustedHosts` instead
	PortRange *string `pulumi:"portRange"`
	// enum: `any`, `icmp`, `tcp`, `udp`. Note: For `protocol`==`any` and  `portRange`==`any`, configure `trustedHosts` instead
	Protocol *string  `pulumi:"protocol"`
	Subnets  []string `pulumi:"subnets"`
}

// SwitchSwitchMgmtProtectReCustomInput is an input type that accepts SwitchSwitchMgmtProtectReCustomArgs and SwitchSwitchMgmtProtectReCustomOutput values.
// You can construct a concrete instance of `SwitchSwitchMgmtProtectReCustomInput` via:
//
//	SwitchSwitchMgmtProtectReCustomArgs{...}
type SwitchSwitchMgmtProtectReCustomInput interface {
	pulumi.Input

	ToSwitchSwitchMgmtProtectReCustomOutput() SwitchSwitchMgmtProtectReCustomOutput
	ToSwitchSwitchMgmtProtectReCustomOutputWithContext(context.Context) SwitchSwitchMgmtProtectReCustomOutput
}

type SwitchSwitchMgmtProtectReCustomArgs struct {
	// matched dst port, "0" means any. Note: For `protocol`==`any` and  `portRange`==`any`, configure `trustedHosts` instead
	PortRange pulumi.StringPtrInput `pulumi:"portRange"`
	// enum: `any`, `icmp`, `tcp`, `udp`. Note: For `protocol`==`any` and  `portRange`==`any`, configure `trustedHosts` instead
	Protocol pulumi.StringPtrInput   `pulumi:"protocol"`
	Subnets  pulumi.StringArrayInput `pulumi:"subnets"`
}

func (SwitchSwitchMgmtProtectReCustomArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchSwitchMgmtProtectReCustom)(nil)).Elem()
}

func (i SwitchSwitchMgmtProtectReCustomArgs) ToSwitchSwitchMgmtProtectReCustomOutput() SwitchSwitchMgmtProtectReCustomOutput {
	return i.ToSwitchSwitchMgmtProtectReCustomOutputWithContext(context.Background())
}

func (i SwitchSwitchMgmtProtectReCustomArgs) ToSwitchSwitchMgmtProtectReCustomOutputWithContext(ctx context.Context) SwitchSwitchMgmtProtectReCustomOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchSwitchMgmtProtectReCustomOutput)
}

// SwitchSwitchMgmtProtectReCustomArrayInput is an input type that accepts SwitchSwitchMgmtProtectReCustomArray and SwitchSwitchMgmtProtectReCustomArrayOutput values.
// You can construct a concrete instance of `SwitchSwitchMgmtProtectReCustomArrayInput` via:
//
//	SwitchSwitchMgmtProtectReCustomArray{ SwitchSwitchMgmtProtectReCustomArgs{...} }
type SwitchSwitchMgmtProtectReCustomArrayInput interface {
	pulumi.Input

	ToSwitchSwitchMgmtProtectReCustomArrayOutput() SwitchSwitchMgmtProtectReCustomArrayOutput
	ToSwitchSwitchMgmtProtectReCustomArrayOutputWithContext(context.Context) SwitchSwitchMgmtProtectReCustomArrayOutput
}

type SwitchSwitchMgmtProtectReCustomArray []SwitchSwitchMgmtProtectReCustomInput

func (SwitchSwitchMgmtProtectReCustomArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchSwitchMgmtProtectReCustom)(nil)).Elem()
}

func (i SwitchSwitchMgmtProtectReCustomArray) ToSwitchSwitchMgmtProtectReCustomArrayOutput() SwitchSwitchMgmtProtectReCustomArrayOutput {
	return i.ToSwitchSwitchMgmtProtectReCustomArrayOutputWithContext(context.Background())
}

func (i SwitchSwitchMgmtProtectReCustomArray) ToSwitchSwitchMgmtProtectReCustomArrayOutputWithContext(ctx context.Context) SwitchSwitchMgmtProtectReCustomArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchSwitchMgmtProtectReCustomArrayOutput)
}

type SwitchSwitchMgmtProtectReCustomOutput struct{ *pulumi.OutputState }

func (SwitchSwitchMgmtProtectReCustomOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchSwitchMgmtProtectReCustom)(nil)).Elem()
}

func (o SwitchSwitchMgmtProtectReCustomOutput) ToSwitchSwitchMgmtProtectReCustomOutput() SwitchSwitchMgmtProtectReCustomOutput {
	return o
}

func (o SwitchSwitchMgmtProtectReCustomOutput) ToSwitchSwitchMgmtProtectReCustomOutputWithContext(ctx context.Context) SwitchSwitchMgmtProtectReCustomOutput {
	return o
}

// matched dst port, "0" means any. Note: For `protocol`==`any` and  `portRange`==`any`, configure `trustedHosts` instead
func (o SwitchSwitchMgmtProtectReCustomOutput) PortRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchSwitchMgmtProtectReCustom) *string { return v.PortRange }).(pulumi.StringPtrOutput)
}

// enum: `any`, `icmp`, `tcp`, `udp`. Note: For `protocol`==`any` and  `portRange`==`any`, configure `trustedHosts` instead
func (o SwitchSwitchMgmtProtectReCustomOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchSwitchMgmtProtectReCustom) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

func (o SwitchSwitchMgmtProtectReCustomOutput) Subnets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SwitchSwitchMgmtProtectReCustom) []string { return v.Subnets }).(pulumi.StringArrayOutput)
}

type SwitchSwitchMgmtProtectReCustomArrayOutput struct{ *pulumi.OutputState }

func (SwitchSwitchMgmtProtectReCustomArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchSwitchMgmtProtectReCustom)(nil)).Elem()
}

func (o SwitchSwitchMgmtProtectReCustomArrayOutput) ToSwitchSwitchMgmtProtectReCustomArrayOutput() SwitchSwitchMgmtProtectReCustomArrayOutput {
	return o
}

func (o SwitchSwitchMgmtProtectReCustomArrayOutput) ToSwitchSwitchMgmtProtectReCustomArrayOutputWithContext(ctx context.Context) SwitchSwitchMgmtProtectReCustomArrayOutput {
	return o
}

func (o SwitchSwitchMgmtProtectReCustomArrayOutput) Index(i pulumi.IntInput) SwitchSwitchMgmtProtectReCustomOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwitchSwitchMgmtProtectReCustom {
		return vs[0].([]SwitchSwitchMgmtProtectReCustom)[vs[1].(int)]
	}).(SwitchSwitchMgmtProtectReCustomOutput)
}

type SwitchSwitchMgmtTacacs struct {
	AcctServers []SwitchSwitchMgmtTacacsAcctServer `pulumi:"acctServers"`
	// enum: `admin`, `helpdesk`, `none`, `read`
	DefaultRole *string `pulumi:"defaultRole"`
	Enabled     *bool   `pulumi:"enabled"`
	// Which network the TACACS server resides
	Network        *string                               `pulumi:"network"`
	TacplusServers []SwitchSwitchMgmtTacacsTacplusServer `pulumi:"tacplusServers"`
}

// SwitchSwitchMgmtTacacsInput is an input type that accepts SwitchSwitchMgmtTacacsArgs and SwitchSwitchMgmtTacacsOutput values.
// You can construct a concrete instance of `SwitchSwitchMgmtTacacsInput` via:
//
//	SwitchSwitchMgmtTacacsArgs{...}
type SwitchSwitchMgmtTacacsInput interface {
	pulumi.Input

	ToSwitchSwitchMgmtTacacsOutput() SwitchSwitchMgmtTacacsOutput
	ToSwitchSwitchMgmtTacacsOutputWithContext(context.Context) SwitchSwitchMgmtTacacsOutput
}

type SwitchSwitchMgmtTacacsArgs struct {
	AcctServers SwitchSwitchMgmtTacacsAcctServerArrayInput `pulumi:"acctServers"`
	// enum: `admin`, `helpdesk`, `none`, `read`
	DefaultRole pulumi.StringPtrInput `pulumi:"defaultRole"`
	Enabled     pulumi.BoolPtrInput   `pulumi:"enabled"`
	// Which network the TACACS server resides
	Network        pulumi.StringPtrInput                         `pulumi:"network"`
	TacplusServers SwitchSwitchMgmtTacacsTacplusServerArrayInput `pulumi:"tacplusServers"`
}

func (SwitchSwitchMgmtTacacsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchSwitchMgmtTacacs)(nil)).Elem()
}

func (i SwitchSwitchMgmtTacacsArgs) ToSwitchSwitchMgmtTacacsOutput() SwitchSwitchMgmtTacacsOutput {
	return i.ToSwitchSwitchMgmtTacacsOutputWithContext(context.Background())
}

func (i SwitchSwitchMgmtTacacsArgs) ToSwitchSwitchMgmtTacacsOutputWithContext(ctx context.Context) SwitchSwitchMgmtTacacsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchSwitchMgmtTacacsOutput)
}

func (i SwitchSwitchMgmtTacacsArgs) ToSwitchSwitchMgmtTacacsPtrOutput() SwitchSwitchMgmtTacacsPtrOutput {
	return i.ToSwitchSwitchMgmtTacacsPtrOutputWithContext(context.Background())
}

func (i SwitchSwitchMgmtTacacsArgs) ToSwitchSwitchMgmtTacacsPtrOutputWithContext(ctx context.Context) SwitchSwitchMgmtTacacsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchSwitchMgmtTacacsOutput).ToSwitchSwitchMgmtTacacsPtrOutputWithContext(ctx)
}

// SwitchSwitchMgmtTacacsPtrInput is an input type that accepts SwitchSwitchMgmtTacacsArgs, SwitchSwitchMgmtTacacsPtr and SwitchSwitchMgmtTacacsPtrOutput values.
// You can construct a concrete instance of `SwitchSwitchMgmtTacacsPtrInput` via:
//
//	        SwitchSwitchMgmtTacacsArgs{...}
//
//	or:
//
//	        nil
type SwitchSwitchMgmtTacacsPtrInput interface {
	pulumi.Input

	ToSwitchSwitchMgmtTacacsPtrOutput() SwitchSwitchMgmtTacacsPtrOutput
	ToSwitchSwitchMgmtTacacsPtrOutputWithContext(context.Context) SwitchSwitchMgmtTacacsPtrOutput
}

type switchSwitchMgmtTacacsPtrType SwitchSwitchMgmtTacacsArgs

func SwitchSwitchMgmtTacacsPtr(v *SwitchSwitchMgmtTacacsArgs) SwitchSwitchMgmtTacacsPtrInput {
	return (*switchSwitchMgmtTacacsPtrType)(v)
}

func (*switchSwitchMgmtTacacsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchSwitchMgmtTacacs)(nil)).Elem()
}

func (i *switchSwitchMgmtTacacsPtrType) ToSwitchSwitchMgmtTacacsPtrOutput() SwitchSwitchMgmtTacacsPtrOutput {
	return i.ToSwitchSwitchMgmtTacacsPtrOutputWithContext(context.Background())
}

func (i *switchSwitchMgmtTacacsPtrType) ToSwitchSwitchMgmtTacacsPtrOutputWithContext(ctx context.Context) SwitchSwitchMgmtTacacsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchSwitchMgmtTacacsPtrOutput)
}

type SwitchSwitchMgmtTacacsOutput struct{ *pulumi.OutputState }

func (SwitchSwitchMgmtTacacsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchSwitchMgmtTacacs)(nil)).Elem()
}

func (o SwitchSwitchMgmtTacacsOutput) ToSwitchSwitchMgmtTacacsOutput() SwitchSwitchMgmtTacacsOutput {
	return o
}

func (o SwitchSwitchMgmtTacacsOutput) ToSwitchSwitchMgmtTacacsOutputWithContext(ctx context.Context) SwitchSwitchMgmtTacacsOutput {
	return o
}

func (o SwitchSwitchMgmtTacacsOutput) ToSwitchSwitchMgmtTacacsPtrOutput() SwitchSwitchMgmtTacacsPtrOutput {
	return o.ToSwitchSwitchMgmtTacacsPtrOutputWithContext(context.Background())
}

func (o SwitchSwitchMgmtTacacsOutput) ToSwitchSwitchMgmtTacacsPtrOutputWithContext(ctx context.Context) SwitchSwitchMgmtTacacsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SwitchSwitchMgmtTacacs) *SwitchSwitchMgmtTacacs {
		return &v
	}).(SwitchSwitchMgmtTacacsPtrOutput)
}

func (o SwitchSwitchMgmtTacacsOutput) AcctServers() SwitchSwitchMgmtTacacsAcctServerArrayOutput {
	return o.ApplyT(func(v SwitchSwitchMgmtTacacs) []SwitchSwitchMgmtTacacsAcctServer { return v.AcctServers }).(SwitchSwitchMgmtTacacsAcctServerArrayOutput)
}

// enum: `admin`, `helpdesk`, `none`, `read`
func (o SwitchSwitchMgmtTacacsOutput) DefaultRole() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchSwitchMgmtTacacs) *string { return v.DefaultRole }).(pulumi.StringPtrOutput)
}

func (o SwitchSwitchMgmtTacacsOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SwitchSwitchMgmtTacacs) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Which network the TACACS server resides
func (o SwitchSwitchMgmtTacacsOutput) Network() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchSwitchMgmtTacacs) *string { return v.Network }).(pulumi.StringPtrOutput)
}

func (o SwitchSwitchMgmtTacacsOutput) TacplusServers() SwitchSwitchMgmtTacacsTacplusServerArrayOutput {
	return o.ApplyT(func(v SwitchSwitchMgmtTacacs) []SwitchSwitchMgmtTacacsTacplusServer { return v.TacplusServers }).(SwitchSwitchMgmtTacacsTacplusServerArrayOutput)
}

type SwitchSwitchMgmtTacacsPtrOutput struct{ *pulumi.OutputState }

func (SwitchSwitchMgmtTacacsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchSwitchMgmtTacacs)(nil)).Elem()
}

func (o SwitchSwitchMgmtTacacsPtrOutput) ToSwitchSwitchMgmtTacacsPtrOutput() SwitchSwitchMgmtTacacsPtrOutput {
	return o
}

func (o SwitchSwitchMgmtTacacsPtrOutput) ToSwitchSwitchMgmtTacacsPtrOutputWithContext(ctx context.Context) SwitchSwitchMgmtTacacsPtrOutput {
	return o
}

func (o SwitchSwitchMgmtTacacsPtrOutput) Elem() SwitchSwitchMgmtTacacsOutput {
	return o.ApplyT(func(v *SwitchSwitchMgmtTacacs) SwitchSwitchMgmtTacacs {
		if v != nil {
			return *v
		}
		var ret SwitchSwitchMgmtTacacs
		return ret
	}).(SwitchSwitchMgmtTacacsOutput)
}

func (o SwitchSwitchMgmtTacacsPtrOutput) AcctServers() SwitchSwitchMgmtTacacsAcctServerArrayOutput {
	return o.ApplyT(func(v *SwitchSwitchMgmtTacacs) []SwitchSwitchMgmtTacacsAcctServer {
		if v == nil {
			return nil
		}
		return v.AcctServers
	}).(SwitchSwitchMgmtTacacsAcctServerArrayOutput)
}

// enum: `admin`, `helpdesk`, `none`, `read`
func (o SwitchSwitchMgmtTacacsPtrOutput) DefaultRole() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchSwitchMgmtTacacs) *string {
		if v == nil {
			return nil
		}
		return v.DefaultRole
	}).(pulumi.StringPtrOutput)
}

func (o SwitchSwitchMgmtTacacsPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SwitchSwitchMgmtTacacs) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Which network the TACACS server resides
func (o SwitchSwitchMgmtTacacsPtrOutput) Network() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchSwitchMgmtTacacs) *string {
		if v == nil {
			return nil
		}
		return v.Network
	}).(pulumi.StringPtrOutput)
}

func (o SwitchSwitchMgmtTacacsPtrOutput) TacplusServers() SwitchSwitchMgmtTacacsTacplusServerArrayOutput {
	return o.ApplyT(func(v *SwitchSwitchMgmtTacacs) []SwitchSwitchMgmtTacacsTacplusServer {
		if v == nil {
			return nil
		}
		return v.TacplusServers
	}).(SwitchSwitchMgmtTacacsTacplusServerArrayOutput)
}

type SwitchSwitchMgmtTacacsAcctServer struct {
	Host    *string `pulumi:"host"`
	Port    *string `pulumi:"port"`
	Secret  *string `pulumi:"secret"`
	Timeout *int    `pulumi:"timeout"`
}

// SwitchSwitchMgmtTacacsAcctServerInput is an input type that accepts SwitchSwitchMgmtTacacsAcctServerArgs and SwitchSwitchMgmtTacacsAcctServerOutput values.
// You can construct a concrete instance of `SwitchSwitchMgmtTacacsAcctServerInput` via:
//
//	SwitchSwitchMgmtTacacsAcctServerArgs{...}
type SwitchSwitchMgmtTacacsAcctServerInput interface {
	pulumi.Input

	ToSwitchSwitchMgmtTacacsAcctServerOutput() SwitchSwitchMgmtTacacsAcctServerOutput
	ToSwitchSwitchMgmtTacacsAcctServerOutputWithContext(context.Context) SwitchSwitchMgmtTacacsAcctServerOutput
}

type SwitchSwitchMgmtTacacsAcctServerArgs struct {
	Host    pulumi.StringPtrInput `pulumi:"host"`
	Port    pulumi.StringPtrInput `pulumi:"port"`
	Secret  pulumi.StringPtrInput `pulumi:"secret"`
	Timeout pulumi.IntPtrInput    `pulumi:"timeout"`
}

func (SwitchSwitchMgmtTacacsAcctServerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchSwitchMgmtTacacsAcctServer)(nil)).Elem()
}

func (i SwitchSwitchMgmtTacacsAcctServerArgs) ToSwitchSwitchMgmtTacacsAcctServerOutput() SwitchSwitchMgmtTacacsAcctServerOutput {
	return i.ToSwitchSwitchMgmtTacacsAcctServerOutputWithContext(context.Background())
}

func (i SwitchSwitchMgmtTacacsAcctServerArgs) ToSwitchSwitchMgmtTacacsAcctServerOutputWithContext(ctx context.Context) SwitchSwitchMgmtTacacsAcctServerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchSwitchMgmtTacacsAcctServerOutput)
}

// SwitchSwitchMgmtTacacsAcctServerArrayInput is an input type that accepts SwitchSwitchMgmtTacacsAcctServerArray and SwitchSwitchMgmtTacacsAcctServerArrayOutput values.
// You can construct a concrete instance of `SwitchSwitchMgmtTacacsAcctServerArrayInput` via:
//
//	SwitchSwitchMgmtTacacsAcctServerArray{ SwitchSwitchMgmtTacacsAcctServerArgs{...} }
type SwitchSwitchMgmtTacacsAcctServerArrayInput interface {
	pulumi.Input

	ToSwitchSwitchMgmtTacacsAcctServerArrayOutput() SwitchSwitchMgmtTacacsAcctServerArrayOutput
	ToSwitchSwitchMgmtTacacsAcctServerArrayOutputWithContext(context.Context) SwitchSwitchMgmtTacacsAcctServerArrayOutput
}

type SwitchSwitchMgmtTacacsAcctServerArray []SwitchSwitchMgmtTacacsAcctServerInput

func (SwitchSwitchMgmtTacacsAcctServerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchSwitchMgmtTacacsAcctServer)(nil)).Elem()
}

func (i SwitchSwitchMgmtTacacsAcctServerArray) ToSwitchSwitchMgmtTacacsAcctServerArrayOutput() SwitchSwitchMgmtTacacsAcctServerArrayOutput {
	return i.ToSwitchSwitchMgmtTacacsAcctServerArrayOutputWithContext(context.Background())
}

func (i SwitchSwitchMgmtTacacsAcctServerArray) ToSwitchSwitchMgmtTacacsAcctServerArrayOutputWithContext(ctx context.Context) SwitchSwitchMgmtTacacsAcctServerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchSwitchMgmtTacacsAcctServerArrayOutput)
}

type SwitchSwitchMgmtTacacsAcctServerOutput struct{ *pulumi.OutputState }

func (SwitchSwitchMgmtTacacsAcctServerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchSwitchMgmtTacacsAcctServer)(nil)).Elem()
}

func (o SwitchSwitchMgmtTacacsAcctServerOutput) ToSwitchSwitchMgmtTacacsAcctServerOutput() SwitchSwitchMgmtTacacsAcctServerOutput {
	return o
}

func (o SwitchSwitchMgmtTacacsAcctServerOutput) ToSwitchSwitchMgmtTacacsAcctServerOutputWithContext(ctx context.Context) SwitchSwitchMgmtTacacsAcctServerOutput {
	return o
}

func (o SwitchSwitchMgmtTacacsAcctServerOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchSwitchMgmtTacacsAcctServer) *string { return v.Host }).(pulumi.StringPtrOutput)
}

func (o SwitchSwitchMgmtTacacsAcctServerOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchSwitchMgmtTacacsAcctServer) *string { return v.Port }).(pulumi.StringPtrOutput)
}

func (o SwitchSwitchMgmtTacacsAcctServerOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchSwitchMgmtTacacsAcctServer) *string { return v.Secret }).(pulumi.StringPtrOutput)
}

func (o SwitchSwitchMgmtTacacsAcctServerOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchSwitchMgmtTacacsAcctServer) *int { return v.Timeout }).(pulumi.IntPtrOutput)
}

type SwitchSwitchMgmtTacacsAcctServerArrayOutput struct{ *pulumi.OutputState }

func (SwitchSwitchMgmtTacacsAcctServerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchSwitchMgmtTacacsAcctServer)(nil)).Elem()
}

func (o SwitchSwitchMgmtTacacsAcctServerArrayOutput) ToSwitchSwitchMgmtTacacsAcctServerArrayOutput() SwitchSwitchMgmtTacacsAcctServerArrayOutput {
	return o
}

func (o SwitchSwitchMgmtTacacsAcctServerArrayOutput) ToSwitchSwitchMgmtTacacsAcctServerArrayOutputWithContext(ctx context.Context) SwitchSwitchMgmtTacacsAcctServerArrayOutput {
	return o
}

func (o SwitchSwitchMgmtTacacsAcctServerArrayOutput) Index(i pulumi.IntInput) SwitchSwitchMgmtTacacsAcctServerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwitchSwitchMgmtTacacsAcctServer {
		return vs[0].([]SwitchSwitchMgmtTacacsAcctServer)[vs[1].(int)]
	}).(SwitchSwitchMgmtTacacsAcctServerOutput)
}

type SwitchSwitchMgmtTacacsTacplusServer struct {
	Host    *string `pulumi:"host"`
	Port    *string `pulumi:"port"`
	Secret  *string `pulumi:"secret"`
	Timeout *int    `pulumi:"timeout"`
}

// SwitchSwitchMgmtTacacsTacplusServerInput is an input type that accepts SwitchSwitchMgmtTacacsTacplusServerArgs and SwitchSwitchMgmtTacacsTacplusServerOutput values.
// You can construct a concrete instance of `SwitchSwitchMgmtTacacsTacplusServerInput` via:
//
//	SwitchSwitchMgmtTacacsTacplusServerArgs{...}
type SwitchSwitchMgmtTacacsTacplusServerInput interface {
	pulumi.Input

	ToSwitchSwitchMgmtTacacsTacplusServerOutput() SwitchSwitchMgmtTacacsTacplusServerOutput
	ToSwitchSwitchMgmtTacacsTacplusServerOutputWithContext(context.Context) SwitchSwitchMgmtTacacsTacplusServerOutput
}

type SwitchSwitchMgmtTacacsTacplusServerArgs struct {
	Host    pulumi.StringPtrInput `pulumi:"host"`
	Port    pulumi.StringPtrInput `pulumi:"port"`
	Secret  pulumi.StringPtrInput `pulumi:"secret"`
	Timeout pulumi.IntPtrInput    `pulumi:"timeout"`
}

func (SwitchSwitchMgmtTacacsTacplusServerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchSwitchMgmtTacacsTacplusServer)(nil)).Elem()
}

func (i SwitchSwitchMgmtTacacsTacplusServerArgs) ToSwitchSwitchMgmtTacacsTacplusServerOutput() SwitchSwitchMgmtTacacsTacplusServerOutput {
	return i.ToSwitchSwitchMgmtTacacsTacplusServerOutputWithContext(context.Background())
}

func (i SwitchSwitchMgmtTacacsTacplusServerArgs) ToSwitchSwitchMgmtTacacsTacplusServerOutputWithContext(ctx context.Context) SwitchSwitchMgmtTacacsTacplusServerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchSwitchMgmtTacacsTacplusServerOutput)
}

// SwitchSwitchMgmtTacacsTacplusServerArrayInput is an input type that accepts SwitchSwitchMgmtTacacsTacplusServerArray and SwitchSwitchMgmtTacacsTacplusServerArrayOutput values.
// You can construct a concrete instance of `SwitchSwitchMgmtTacacsTacplusServerArrayInput` via:
//
//	SwitchSwitchMgmtTacacsTacplusServerArray{ SwitchSwitchMgmtTacacsTacplusServerArgs{...} }
type SwitchSwitchMgmtTacacsTacplusServerArrayInput interface {
	pulumi.Input

	ToSwitchSwitchMgmtTacacsTacplusServerArrayOutput() SwitchSwitchMgmtTacacsTacplusServerArrayOutput
	ToSwitchSwitchMgmtTacacsTacplusServerArrayOutputWithContext(context.Context) SwitchSwitchMgmtTacacsTacplusServerArrayOutput
}

type SwitchSwitchMgmtTacacsTacplusServerArray []SwitchSwitchMgmtTacacsTacplusServerInput

func (SwitchSwitchMgmtTacacsTacplusServerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchSwitchMgmtTacacsTacplusServer)(nil)).Elem()
}

func (i SwitchSwitchMgmtTacacsTacplusServerArray) ToSwitchSwitchMgmtTacacsTacplusServerArrayOutput() SwitchSwitchMgmtTacacsTacplusServerArrayOutput {
	return i.ToSwitchSwitchMgmtTacacsTacplusServerArrayOutputWithContext(context.Background())
}

func (i SwitchSwitchMgmtTacacsTacplusServerArray) ToSwitchSwitchMgmtTacacsTacplusServerArrayOutputWithContext(ctx context.Context) SwitchSwitchMgmtTacacsTacplusServerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchSwitchMgmtTacacsTacplusServerArrayOutput)
}

type SwitchSwitchMgmtTacacsTacplusServerOutput struct{ *pulumi.OutputState }

func (SwitchSwitchMgmtTacacsTacplusServerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchSwitchMgmtTacacsTacplusServer)(nil)).Elem()
}

func (o SwitchSwitchMgmtTacacsTacplusServerOutput) ToSwitchSwitchMgmtTacacsTacplusServerOutput() SwitchSwitchMgmtTacacsTacplusServerOutput {
	return o
}

func (o SwitchSwitchMgmtTacacsTacplusServerOutput) ToSwitchSwitchMgmtTacacsTacplusServerOutputWithContext(ctx context.Context) SwitchSwitchMgmtTacacsTacplusServerOutput {
	return o
}

func (o SwitchSwitchMgmtTacacsTacplusServerOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchSwitchMgmtTacacsTacplusServer) *string { return v.Host }).(pulumi.StringPtrOutput)
}

func (o SwitchSwitchMgmtTacacsTacplusServerOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchSwitchMgmtTacacsTacplusServer) *string { return v.Port }).(pulumi.StringPtrOutput)
}

func (o SwitchSwitchMgmtTacacsTacplusServerOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchSwitchMgmtTacacsTacplusServer) *string { return v.Secret }).(pulumi.StringPtrOutput)
}

func (o SwitchSwitchMgmtTacacsTacplusServerOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchSwitchMgmtTacacsTacplusServer) *int { return v.Timeout }).(pulumi.IntPtrOutput)
}

type SwitchSwitchMgmtTacacsTacplusServerArrayOutput struct{ *pulumi.OutputState }

func (SwitchSwitchMgmtTacacsTacplusServerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchSwitchMgmtTacacsTacplusServer)(nil)).Elem()
}

func (o SwitchSwitchMgmtTacacsTacplusServerArrayOutput) ToSwitchSwitchMgmtTacacsTacplusServerArrayOutput() SwitchSwitchMgmtTacacsTacplusServerArrayOutput {
	return o
}

func (o SwitchSwitchMgmtTacacsTacplusServerArrayOutput) ToSwitchSwitchMgmtTacacsTacplusServerArrayOutputWithContext(ctx context.Context) SwitchSwitchMgmtTacacsTacplusServerArrayOutput {
	return o
}

func (o SwitchSwitchMgmtTacacsTacplusServerArrayOutput) Index(i pulumi.IntInput) SwitchSwitchMgmtTacacsTacplusServerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwitchSwitchMgmtTacacsTacplusServer {
		return vs[0].([]SwitchSwitchMgmtTacacsTacplusServer)[vs[1].(int)]
	}).(SwitchSwitchMgmtTacacsTacplusServerOutput)
}

type SwitchVirtualChassis struct {
	// List of Virtual Chassis members
	Members []SwitchVirtualChassisMember `pulumi:"members"`
	// To configure whether the VC is preprovisioned or nonprovisioned
	Preprovisioned *bool `pulumi:"preprovisioned"`
}

// SwitchVirtualChassisInput is an input type that accepts SwitchVirtualChassisArgs and SwitchVirtualChassisOutput values.
// You can construct a concrete instance of `SwitchVirtualChassisInput` via:
//
//	SwitchVirtualChassisArgs{...}
type SwitchVirtualChassisInput interface {
	pulumi.Input

	ToSwitchVirtualChassisOutput() SwitchVirtualChassisOutput
	ToSwitchVirtualChassisOutputWithContext(context.Context) SwitchVirtualChassisOutput
}

type SwitchVirtualChassisArgs struct {
	// List of Virtual Chassis members
	Members SwitchVirtualChassisMemberArrayInput `pulumi:"members"`
	// To configure whether the VC is preprovisioned or nonprovisioned
	Preprovisioned pulumi.BoolPtrInput `pulumi:"preprovisioned"`
}

func (SwitchVirtualChassisArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchVirtualChassis)(nil)).Elem()
}

func (i SwitchVirtualChassisArgs) ToSwitchVirtualChassisOutput() SwitchVirtualChassisOutput {
	return i.ToSwitchVirtualChassisOutputWithContext(context.Background())
}

func (i SwitchVirtualChassisArgs) ToSwitchVirtualChassisOutputWithContext(ctx context.Context) SwitchVirtualChassisOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchVirtualChassisOutput)
}

func (i SwitchVirtualChassisArgs) ToSwitchVirtualChassisPtrOutput() SwitchVirtualChassisPtrOutput {
	return i.ToSwitchVirtualChassisPtrOutputWithContext(context.Background())
}

func (i SwitchVirtualChassisArgs) ToSwitchVirtualChassisPtrOutputWithContext(ctx context.Context) SwitchVirtualChassisPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchVirtualChassisOutput).ToSwitchVirtualChassisPtrOutputWithContext(ctx)
}

// SwitchVirtualChassisPtrInput is an input type that accepts SwitchVirtualChassisArgs, SwitchVirtualChassisPtr and SwitchVirtualChassisPtrOutput values.
// You can construct a concrete instance of `SwitchVirtualChassisPtrInput` via:
//
//	        SwitchVirtualChassisArgs{...}
//
//	or:
//
//	        nil
type SwitchVirtualChassisPtrInput interface {
	pulumi.Input

	ToSwitchVirtualChassisPtrOutput() SwitchVirtualChassisPtrOutput
	ToSwitchVirtualChassisPtrOutputWithContext(context.Context) SwitchVirtualChassisPtrOutput
}

type switchVirtualChassisPtrType SwitchVirtualChassisArgs

func SwitchVirtualChassisPtr(v *SwitchVirtualChassisArgs) SwitchVirtualChassisPtrInput {
	return (*switchVirtualChassisPtrType)(v)
}

func (*switchVirtualChassisPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchVirtualChassis)(nil)).Elem()
}

func (i *switchVirtualChassisPtrType) ToSwitchVirtualChassisPtrOutput() SwitchVirtualChassisPtrOutput {
	return i.ToSwitchVirtualChassisPtrOutputWithContext(context.Background())
}

func (i *switchVirtualChassisPtrType) ToSwitchVirtualChassisPtrOutputWithContext(ctx context.Context) SwitchVirtualChassisPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchVirtualChassisPtrOutput)
}

type SwitchVirtualChassisOutput struct{ *pulumi.OutputState }

func (SwitchVirtualChassisOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchVirtualChassis)(nil)).Elem()
}

func (o SwitchVirtualChassisOutput) ToSwitchVirtualChassisOutput() SwitchVirtualChassisOutput {
	return o
}

func (o SwitchVirtualChassisOutput) ToSwitchVirtualChassisOutputWithContext(ctx context.Context) SwitchVirtualChassisOutput {
	return o
}

func (o SwitchVirtualChassisOutput) ToSwitchVirtualChassisPtrOutput() SwitchVirtualChassisPtrOutput {
	return o.ToSwitchVirtualChassisPtrOutputWithContext(context.Background())
}

func (o SwitchVirtualChassisOutput) ToSwitchVirtualChassisPtrOutputWithContext(ctx context.Context) SwitchVirtualChassisPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SwitchVirtualChassis) *SwitchVirtualChassis {
		return &v
	}).(SwitchVirtualChassisPtrOutput)
}

// List of Virtual Chassis members
func (o SwitchVirtualChassisOutput) Members() SwitchVirtualChassisMemberArrayOutput {
	return o.ApplyT(func(v SwitchVirtualChassis) []SwitchVirtualChassisMember { return v.Members }).(SwitchVirtualChassisMemberArrayOutput)
}

// To configure whether the VC is preprovisioned or nonprovisioned
func (o SwitchVirtualChassisOutput) Preprovisioned() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SwitchVirtualChassis) *bool { return v.Preprovisioned }).(pulumi.BoolPtrOutput)
}

type SwitchVirtualChassisPtrOutput struct{ *pulumi.OutputState }

func (SwitchVirtualChassisPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchVirtualChassis)(nil)).Elem()
}

func (o SwitchVirtualChassisPtrOutput) ToSwitchVirtualChassisPtrOutput() SwitchVirtualChassisPtrOutput {
	return o
}

func (o SwitchVirtualChassisPtrOutput) ToSwitchVirtualChassisPtrOutputWithContext(ctx context.Context) SwitchVirtualChassisPtrOutput {
	return o
}

func (o SwitchVirtualChassisPtrOutput) Elem() SwitchVirtualChassisOutput {
	return o.ApplyT(func(v *SwitchVirtualChassis) SwitchVirtualChassis {
		if v != nil {
			return *v
		}
		var ret SwitchVirtualChassis
		return ret
	}).(SwitchVirtualChassisOutput)
}

// List of Virtual Chassis members
func (o SwitchVirtualChassisPtrOutput) Members() SwitchVirtualChassisMemberArrayOutput {
	return o.ApplyT(func(v *SwitchVirtualChassis) []SwitchVirtualChassisMember {
		if v == nil {
			return nil
		}
		return v.Members
	}).(SwitchVirtualChassisMemberArrayOutput)
}

// To configure whether the VC is preprovisioned or nonprovisioned
func (o SwitchVirtualChassisPtrOutput) Preprovisioned() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SwitchVirtualChassis) *bool {
		if v == nil {
			return nil
		}
		return v.Preprovisioned
	}).(pulumi.BoolPtrOutput)
}

type SwitchVirtualChassisMember struct {
	// fpc0, same as the mac of device_id
	Mac      string `pulumi:"mac"`
	MemberId int    `pulumi:"memberId"`
	// Both vcRole master and backup will be matched to routing-engine role in Junos preprovisioned VC config. enum: `backup`, `linecard`, `master`
	VcRole string `pulumi:"vcRole"`
}

// SwitchVirtualChassisMemberInput is an input type that accepts SwitchVirtualChassisMemberArgs and SwitchVirtualChassisMemberOutput values.
// You can construct a concrete instance of `SwitchVirtualChassisMemberInput` via:
//
//	SwitchVirtualChassisMemberArgs{...}
type SwitchVirtualChassisMemberInput interface {
	pulumi.Input

	ToSwitchVirtualChassisMemberOutput() SwitchVirtualChassisMemberOutput
	ToSwitchVirtualChassisMemberOutputWithContext(context.Context) SwitchVirtualChassisMemberOutput
}

type SwitchVirtualChassisMemberArgs struct {
	// fpc0, same as the mac of device_id
	Mac      pulumi.StringInput `pulumi:"mac"`
	MemberId pulumi.IntInput    `pulumi:"memberId"`
	// Both vcRole master and backup will be matched to routing-engine role in Junos preprovisioned VC config. enum: `backup`, `linecard`, `master`
	VcRole pulumi.StringInput `pulumi:"vcRole"`
}

func (SwitchVirtualChassisMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchVirtualChassisMember)(nil)).Elem()
}

func (i SwitchVirtualChassisMemberArgs) ToSwitchVirtualChassisMemberOutput() SwitchVirtualChassisMemberOutput {
	return i.ToSwitchVirtualChassisMemberOutputWithContext(context.Background())
}

func (i SwitchVirtualChassisMemberArgs) ToSwitchVirtualChassisMemberOutputWithContext(ctx context.Context) SwitchVirtualChassisMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchVirtualChassisMemberOutput)
}

// SwitchVirtualChassisMemberArrayInput is an input type that accepts SwitchVirtualChassisMemberArray and SwitchVirtualChassisMemberArrayOutput values.
// You can construct a concrete instance of `SwitchVirtualChassisMemberArrayInput` via:
//
//	SwitchVirtualChassisMemberArray{ SwitchVirtualChassisMemberArgs{...} }
type SwitchVirtualChassisMemberArrayInput interface {
	pulumi.Input

	ToSwitchVirtualChassisMemberArrayOutput() SwitchVirtualChassisMemberArrayOutput
	ToSwitchVirtualChassisMemberArrayOutputWithContext(context.Context) SwitchVirtualChassisMemberArrayOutput
}

type SwitchVirtualChassisMemberArray []SwitchVirtualChassisMemberInput

func (SwitchVirtualChassisMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchVirtualChassisMember)(nil)).Elem()
}

func (i SwitchVirtualChassisMemberArray) ToSwitchVirtualChassisMemberArrayOutput() SwitchVirtualChassisMemberArrayOutput {
	return i.ToSwitchVirtualChassisMemberArrayOutputWithContext(context.Background())
}

func (i SwitchVirtualChassisMemberArray) ToSwitchVirtualChassisMemberArrayOutputWithContext(ctx context.Context) SwitchVirtualChassisMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchVirtualChassisMemberArrayOutput)
}

type SwitchVirtualChassisMemberOutput struct{ *pulumi.OutputState }

func (SwitchVirtualChassisMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchVirtualChassisMember)(nil)).Elem()
}

func (o SwitchVirtualChassisMemberOutput) ToSwitchVirtualChassisMemberOutput() SwitchVirtualChassisMemberOutput {
	return o
}

func (o SwitchVirtualChassisMemberOutput) ToSwitchVirtualChassisMemberOutputWithContext(ctx context.Context) SwitchVirtualChassisMemberOutput {
	return o
}

// fpc0, same as the mac of device_id
func (o SwitchVirtualChassisMemberOutput) Mac() pulumi.StringOutput {
	return o.ApplyT(func(v SwitchVirtualChassisMember) string { return v.Mac }).(pulumi.StringOutput)
}

func (o SwitchVirtualChassisMemberOutput) MemberId() pulumi.IntOutput {
	return o.ApplyT(func(v SwitchVirtualChassisMember) int { return v.MemberId }).(pulumi.IntOutput)
}

// Both vcRole master and backup will be matched to routing-engine role in Junos preprovisioned VC config. enum: `backup`, `linecard`, `master`
func (o SwitchVirtualChassisMemberOutput) VcRole() pulumi.StringOutput {
	return o.ApplyT(func(v SwitchVirtualChassisMember) string { return v.VcRole }).(pulumi.StringOutput)
}

type SwitchVirtualChassisMemberArrayOutput struct{ *pulumi.OutputState }

func (SwitchVirtualChassisMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchVirtualChassisMember)(nil)).Elem()
}

func (o SwitchVirtualChassisMemberArrayOutput) ToSwitchVirtualChassisMemberArrayOutput() SwitchVirtualChassisMemberArrayOutput {
	return o
}

func (o SwitchVirtualChassisMemberArrayOutput) ToSwitchVirtualChassisMemberArrayOutputWithContext(ctx context.Context) SwitchVirtualChassisMemberArrayOutput {
	return o
}

func (o SwitchVirtualChassisMemberArrayOutput) Index(i pulumi.IntInput) SwitchVirtualChassisMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwitchVirtualChassisMember {
		return vs[0].([]SwitchVirtualChassisMember)[vs[1].(int)]
	}).(SwitchVirtualChassisMemberOutput)
}

type SwitchVrfConfig struct {
	// Whether to enable VRF (when supported on the device)
	Enabled *bool `pulumi:"enabled"`
}

// SwitchVrfConfigInput is an input type that accepts SwitchVrfConfigArgs and SwitchVrfConfigOutput values.
// You can construct a concrete instance of `SwitchVrfConfigInput` via:
//
//	SwitchVrfConfigArgs{...}
type SwitchVrfConfigInput interface {
	pulumi.Input

	ToSwitchVrfConfigOutput() SwitchVrfConfigOutput
	ToSwitchVrfConfigOutputWithContext(context.Context) SwitchVrfConfigOutput
}

type SwitchVrfConfigArgs struct {
	// Whether to enable VRF (when supported on the device)
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (SwitchVrfConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchVrfConfig)(nil)).Elem()
}

func (i SwitchVrfConfigArgs) ToSwitchVrfConfigOutput() SwitchVrfConfigOutput {
	return i.ToSwitchVrfConfigOutputWithContext(context.Background())
}

func (i SwitchVrfConfigArgs) ToSwitchVrfConfigOutputWithContext(ctx context.Context) SwitchVrfConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchVrfConfigOutput)
}

func (i SwitchVrfConfigArgs) ToSwitchVrfConfigPtrOutput() SwitchVrfConfigPtrOutput {
	return i.ToSwitchVrfConfigPtrOutputWithContext(context.Background())
}

func (i SwitchVrfConfigArgs) ToSwitchVrfConfigPtrOutputWithContext(ctx context.Context) SwitchVrfConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchVrfConfigOutput).ToSwitchVrfConfigPtrOutputWithContext(ctx)
}

// SwitchVrfConfigPtrInput is an input type that accepts SwitchVrfConfigArgs, SwitchVrfConfigPtr and SwitchVrfConfigPtrOutput values.
// You can construct a concrete instance of `SwitchVrfConfigPtrInput` via:
//
//	        SwitchVrfConfigArgs{...}
//
//	or:
//
//	        nil
type SwitchVrfConfigPtrInput interface {
	pulumi.Input

	ToSwitchVrfConfigPtrOutput() SwitchVrfConfigPtrOutput
	ToSwitchVrfConfigPtrOutputWithContext(context.Context) SwitchVrfConfigPtrOutput
}

type switchVrfConfigPtrType SwitchVrfConfigArgs

func SwitchVrfConfigPtr(v *SwitchVrfConfigArgs) SwitchVrfConfigPtrInput {
	return (*switchVrfConfigPtrType)(v)
}

func (*switchVrfConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchVrfConfig)(nil)).Elem()
}

func (i *switchVrfConfigPtrType) ToSwitchVrfConfigPtrOutput() SwitchVrfConfigPtrOutput {
	return i.ToSwitchVrfConfigPtrOutputWithContext(context.Background())
}

func (i *switchVrfConfigPtrType) ToSwitchVrfConfigPtrOutputWithContext(ctx context.Context) SwitchVrfConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchVrfConfigPtrOutput)
}

type SwitchVrfConfigOutput struct{ *pulumi.OutputState }

func (SwitchVrfConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchVrfConfig)(nil)).Elem()
}

func (o SwitchVrfConfigOutput) ToSwitchVrfConfigOutput() SwitchVrfConfigOutput {
	return o
}

func (o SwitchVrfConfigOutput) ToSwitchVrfConfigOutputWithContext(ctx context.Context) SwitchVrfConfigOutput {
	return o
}

func (o SwitchVrfConfigOutput) ToSwitchVrfConfigPtrOutput() SwitchVrfConfigPtrOutput {
	return o.ToSwitchVrfConfigPtrOutputWithContext(context.Background())
}

func (o SwitchVrfConfigOutput) ToSwitchVrfConfigPtrOutputWithContext(ctx context.Context) SwitchVrfConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SwitchVrfConfig) *SwitchVrfConfig {
		return &v
	}).(SwitchVrfConfigPtrOutput)
}

// Whether to enable VRF (when supported on the device)
func (o SwitchVrfConfigOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SwitchVrfConfig) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type SwitchVrfConfigPtrOutput struct{ *pulumi.OutputState }

func (SwitchVrfConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchVrfConfig)(nil)).Elem()
}

func (o SwitchVrfConfigPtrOutput) ToSwitchVrfConfigPtrOutput() SwitchVrfConfigPtrOutput {
	return o
}

func (o SwitchVrfConfigPtrOutput) ToSwitchVrfConfigPtrOutputWithContext(ctx context.Context) SwitchVrfConfigPtrOutput {
	return o
}

func (o SwitchVrfConfigPtrOutput) Elem() SwitchVrfConfigOutput {
	return o.ApplyT(func(v *SwitchVrfConfig) SwitchVrfConfig {
		if v != nil {
			return *v
		}
		var ret SwitchVrfConfig
		return ret
	}).(SwitchVrfConfigOutput)
}

// Whether to enable VRF (when supported on the device)
func (o SwitchVrfConfigPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SwitchVrfConfig) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type SwitchVrfInstances struct {
	EvpnAutoLoopbackSubnet  *string `pulumi:"evpnAutoLoopbackSubnet"`
	EvpnAutoLoopbackSubnet6 *string `pulumi:"evpnAutoLoopbackSubnet6"`
	// Property key is the destination CIDR (e.g. "10.0.0.0/8")
	ExtraRoutes map[string]SwitchVrfInstancesExtraRoutes `pulumi:"extraRoutes"`
	// Property key is the destination CIDR (e.g. "2a02:1234:420a:10c9::/64")
	ExtraRoutes6 map[string]SwitchVrfInstancesExtraRoutes6 `pulumi:"extraRoutes6"`
	Networks     []string                                  `pulumi:"networks"`
}

// SwitchVrfInstancesInput is an input type that accepts SwitchVrfInstancesArgs and SwitchVrfInstancesOutput values.
// You can construct a concrete instance of `SwitchVrfInstancesInput` via:
//
//	SwitchVrfInstancesArgs{...}
type SwitchVrfInstancesInput interface {
	pulumi.Input

	ToSwitchVrfInstancesOutput() SwitchVrfInstancesOutput
	ToSwitchVrfInstancesOutputWithContext(context.Context) SwitchVrfInstancesOutput
}

type SwitchVrfInstancesArgs struct {
	EvpnAutoLoopbackSubnet  pulumi.StringPtrInput `pulumi:"evpnAutoLoopbackSubnet"`
	EvpnAutoLoopbackSubnet6 pulumi.StringPtrInput `pulumi:"evpnAutoLoopbackSubnet6"`
	// Property key is the destination CIDR (e.g. "10.0.0.0/8")
	ExtraRoutes SwitchVrfInstancesExtraRoutesMapInput `pulumi:"extraRoutes"`
	// Property key is the destination CIDR (e.g. "2a02:1234:420a:10c9::/64")
	ExtraRoutes6 SwitchVrfInstancesExtraRoutes6MapInput `pulumi:"extraRoutes6"`
	Networks     pulumi.StringArrayInput                `pulumi:"networks"`
}

func (SwitchVrfInstancesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchVrfInstances)(nil)).Elem()
}

func (i SwitchVrfInstancesArgs) ToSwitchVrfInstancesOutput() SwitchVrfInstancesOutput {
	return i.ToSwitchVrfInstancesOutputWithContext(context.Background())
}

func (i SwitchVrfInstancesArgs) ToSwitchVrfInstancesOutputWithContext(ctx context.Context) SwitchVrfInstancesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchVrfInstancesOutput)
}

// SwitchVrfInstancesMapInput is an input type that accepts SwitchVrfInstancesMap and SwitchVrfInstancesMapOutput values.
// You can construct a concrete instance of `SwitchVrfInstancesMapInput` via:
//
//	SwitchVrfInstancesMap{ "key": SwitchVrfInstancesArgs{...} }
type SwitchVrfInstancesMapInput interface {
	pulumi.Input

	ToSwitchVrfInstancesMapOutput() SwitchVrfInstancesMapOutput
	ToSwitchVrfInstancesMapOutputWithContext(context.Context) SwitchVrfInstancesMapOutput
}

type SwitchVrfInstancesMap map[string]SwitchVrfInstancesInput

func (SwitchVrfInstancesMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]SwitchVrfInstances)(nil)).Elem()
}

func (i SwitchVrfInstancesMap) ToSwitchVrfInstancesMapOutput() SwitchVrfInstancesMapOutput {
	return i.ToSwitchVrfInstancesMapOutputWithContext(context.Background())
}

func (i SwitchVrfInstancesMap) ToSwitchVrfInstancesMapOutputWithContext(ctx context.Context) SwitchVrfInstancesMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchVrfInstancesMapOutput)
}

type SwitchVrfInstancesOutput struct{ *pulumi.OutputState }

func (SwitchVrfInstancesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchVrfInstances)(nil)).Elem()
}

func (o SwitchVrfInstancesOutput) ToSwitchVrfInstancesOutput() SwitchVrfInstancesOutput {
	return o
}

func (o SwitchVrfInstancesOutput) ToSwitchVrfInstancesOutputWithContext(ctx context.Context) SwitchVrfInstancesOutput {
	return o
}

func (o SwitchVrfInstancesOutput) EvpnAutoLoopbackSubnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchVrfInstances) *string { return v.EvpnAutoLoopbackSubnet }).(pulumi.StringPtrOutput)
}

func (o SwitchVrfInstancesOutput) EvpnAutoLoopbackSubnet6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchVrfInstances) *string { return v.EvpnAutoLoopbackSubnet6 }).(pulumi.StringPtrOutput)
}

// Property key is the destination CIDR (e.g. "10.0.0.0/8")
func (o SwitchVrfInstancesOutput) ExtraRoutes() SwitchVrfInstancesExtraRoutesMapOutput {
	return o.ApplyT(func(v SwitchVrfInstances) map[string]SwitchVrfInstancesExtraRoutes { return v.ExtraRoutes }).(SwitchVrfInstancesExtraRoutesMapOutput)
}

// Property key is the destination CIDR (e.g. "2a02:1234:420a:10c9::/64")
func (o SwitchVrfInstancesOutput) ExtraRoutes6() SwitchVrfInstancesExtraRoutes6MapOutput {
	return o.ApplyT(func(v SwitchVrfInstances) map[string]SwitchVrfInstancesExtraRoutes6 { return v.ExtraRoutes6 }).(SwitchVrfInstancesExtraRoutes6MapOutput)
}

func (o SwitchVrfInstancesOutput) Networks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SwitchVrfInstances) []string { return v.Networks }).(pulumi.StringArrayOutput)
}

type SwitchVrfInstancesMapOutput struct{ *pulumi.OutputState }

func (SwitchVrfInstancesMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]SwitchVrfInstances)(nil)).Elem()
}

func (o SwitchVrfInstancesMapOutput) ToSwitchVrfInstancesMapOutput() SwitchVrfInstancesMapOutput {
	return o
}

func (o SwitchVrfInstancesMapOutput) ToSwitchVrfInstancesMapOutputWithContext(ctx context.Context) SwitchVrfInstancesMapOutput {
	return o
}

func (o SwitchVrfInstancesMapOutput) MapIndex(k pulumi.StringInput) SwitchVrfInstancesOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) SwitchVrfInstances {
		return vs[0].(map[string]SwitchVrfInstances)[vs[1].(string)]
	}).(SwitchVrfInstancesOutput)
}

type SwitchVrfInstancesExtraRoutes6 struct {
	// Next-hop address
	Via *string `pulumi:"via"`
}

// SwitchVrfInstancesExtraRoutes6Input is an input type that accepts SwitchVrfInstancesExtraRoutes6Args and SwitchVrfInstancesExtraRoutes6Output values.
// You can construct a concrete instance of `SwitchVrfInstancesExtraRoutes6Input` via:
//
//	SwitchVrfInstancesExtraRoutes6Args{...}
type SwitchVrfInstancesExtraRoutes6Input interface {
	pulumi.Input

	ToSwitchVrfInstancesExtraRoutes6Output() SwitchVrfInstancesExtraRoutes6Output
	ToSwitchVrfInstancesExtraRoutes6OutputWithContext(context.Context) SwitchVrfInstancesExtraRoutes6Output
}

type SwitchVrfInstancesExtraRoutes6Args struct {
	// Next-hop address
	Via pulumi.StringPtrInput `pulumi:"via"`
}

func (SwitchVrfInstancesExtraRoutes6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchVrfInstancesExtraRoutes6)(nil)).Elem()
}

func (i SwitchVrfInstancesExtraRoutes6Args) ToSwitchVrfInstancesExtraRoutes6Output() SwitchVrfInstancesExtraRoutes6Output {
	return i.ToSwitchVrfInstancesExtraRoutes6OutputWithContext(context.Background())
}

func (i SwitchVrfInstancesExtraRoutes6Args) ToSwitchVrfInstancesExtraRoutes6OutputWithContext(ctx context.Context) SwitchVrfInstancesExtraRoutes6Output {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchVrfInstancesExtraRoutes6Output)
}

// SwitchVrfInstancesExtraRoutes6MapInput is an input type that accepts SwitchVrfInstancesExtraRoutes6Map and SwitchVrfInstancesExtraRoutes6MapOutput values.
// You can construct a concrete instance of `SwitchVrfInstancesExtraRoutes6MapInput` via:
//
//	SwitchVrfInstancesExtraRoutes6Map{ "key": SwitchVrfInstancesExtraRoutes6Args{...} }
type SwitchVrfInstancesExtraRoutes6MapInput interface {
	pulumi.Input

	ToSwitchVrfInstancesExtraRoutes6MapOutput() SwitchVrfInstancesExtraRoutes6MapOutput
	ToSwitchVrfInstancesExtraRoutes6MapOutputWithContext(context.Context) SwitchVrfInstancesExtraRoutes6MapOutput
}

type SwitchVrfInstancesExtraRoutes6Map map[string]SwitchVrfInstancesExtraRoutes6Input

func (SwitchVrfInstancesExtraRoutes6Map) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]SwitchVrfInstancesExtraRoutes6)(nil)).Elem()
}

func (i SwitchVrfInstancesExtraRoutes6Map) ToSwitchVrfInstancesExtraRoutes6MapOutput() SwitchVrfInstancesExtraRoutes6MapOutput {
	return i.ToSwitchVrfInstancesExtraRoutes6MapOutputWithContext(context.Background())
}

func (i SwitchVrfInstancesExtraRoutes6Map) ToSwitchVrfInstancesExtraRoutes6MapOutputWithContext(ctx context.Context) SwitchVrfInstancesExtraRoutes6MapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchVrfInstancesExtraRoutes6MapOutput)
}

type SwitchVrfInstancesExtraRoutes6Output struct{ *pulumi.OutputState }

func (SwitchVrfInstancesExtraRoutes6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchVrfInstancesExtraRoutes6)(nil)).Elem()
}

func (o SwitchVrfInstancesExtraRoutes6Output) ToSwitchVrfInstancesExtraRoutes6Output() SwitchVrfInstancesExtraRoutes6Output {
	return o
}

func (o SwitchVrfInstancesExtraRoutes6Output) ToSwitchVrfInstancesExtraRoutes6OutputWithContext(ctx context.Context) SwitchVrfInstancesExtraRoutes6Output {
	return o
}

// Next-hop address
func (o SwitchVrfInstancesExtraRoutes6Output) Via() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchVrfInstancesExtraRoutes6) *string { return v.Via }).(pulumi.StringPtrOutput)
}

type SwitchVrfInstancesExtraRoutes6MapOutput struct{ *pulumi.OutputState }

func (SwitchVrfInstancesExtraRoutes6MapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]SwitchVrfInstancesExtraRoutes6)(nil)).Elem()
}

func (o SwitchVrfInstancesExtraRoutes6MapOutput) ToSwitchVrfInstancesExtraRoutes6MapOutput() SwitchVrfInstancesExtraRoutes6MapOutput {
	return o
}

func (o SwitchVrfInstancesExtraRoutes6MapOutput) ToSwitchVrfInstancesExtraRoutes6MapOutputWithContext(ctx context.Context) SwitchVrfInstancesExtraRoutes6MapOutput {
	return o
}

func (o SwitchVrfInstancesExtraRoutes6MapOutput) MapIndex(k pulumi.StringInput) SwitchVrfInstancesExtraRoutes6Output {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) SwitchVrfInstancesExtraRoutes6 {
		return vs[0].(map[string]SwitchVrfInstancesExtraRoutes6)[vs[1].(string)]
	}).(SwitchVrfInstancesExtraRoutes6Output)
}

type SwitchVrfInstancesExtraRoutes struct {
	// Next-hop address
	Via string `pulumi:"via"`
}

// SwitchVrfInstancesExtraRoutesInput is an input type that accepts SwitchVrfInstancesExtraRoutesArgs and SwitchVrfInstancesExtraRoutesOutput values.
// You can construct a concrete instance of `SwitchVrfInstancesExtraRoutesInput` via:
//
//	SwitchVrfInstancesExtraRoutesArgs{...}
type SwitchVrfInstancesExtraRoutesInput interface {
	pulumi.Input

	ToSwitchVrfInstancesExtraRoutesOutput() SwitchVrfInstancesExtraRoutesOutput
	ToSwitchVrfInstancesExtraRoutesOutputWithContext(context.Context) SwitchVrfInstancesExtraRoutesOutput
}

type SwitchVrfInstancesExtraRoutesArgs struct {
	// Next-hop address
	Via pulumi.StringInput `pulumi:"via"`
}

func (SwitchVrfInstancesExtraRoutesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchVrfInstancesExtraRoutes)(nil)).Elem()
}

func (i SwitchVrfInstancesExtraRoutesArgs) ToSwitchVrfInstancesExtraRoutesOutput() SwitchVrfInstancesExtraRoutesOutput {
	return i.ToSwitchVrfInstancesExtraRoutesOutputWithContext(context.Background())
}

func (i SwitchVrfInstancesExtraRoutesArgs) ToSwitchVrfInstancesExtraRoutesOutputWithContext(ctx context.Context) SwitchVrfInstancesExtraRoutesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchVrfInstancesExtraRoutesOutput)
}

// SwitchVrfInstancesExtraRoutesMapInput is an input type that accepts SwitchVrfInstancesExtraRoutesMap and SwitchVrfInstancesExtraRoutesMapOutput values.
// You can construct a concrete instance of `SwitchVrfInstancesExtraRoutesMapInput` via:
//
//	SwitchVrfInstancesExtraRoutesMap{ "key": SwitchVrfInstancesExtraRoutesArgs{...} }
type SwitchVrfInstancesExtraRoutesMapInput interface {
	pulumi.Input

	ToSwitchVrfInstancesExtraRoutesMapOutput() SwitchVrfInstancesExtraRoutesMapOutput
	ToSwitchVrfInstancesExtraRoutesMapOutputWithContext(context.Context) SwitchVrfInstancesExtraRoutesMapOutput
}

type SwitchVrfInstancesExtraRoutesMap map[string]SwitchVrfInstancesExtraRoutesInput

func (SwitchVrfInstancesExtraRoutesMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]SwitchVrfInstancesExtraRoutes)(nil)).Elem()
}

func (i SwitchVrfInstancesExtraRoutesMap) ToSwitchVrfInstancesExtraRoutesMapOutput() SwitchVrfInstancesExtraRoutesMapOutput {
	return i.ToSwitchVrfInstancesExtraRoutesMapOutputWithContext(context.Background())
}

func (i SwitchVrfInstancesExtraRoutesMap) ToSwitchVrfInstancesExtraRoutesMapOutputWithContext(ctx context.Context) SwitchVrfInstancesExtraRoutesMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchVrfInstancesExtraRoutesMapOutput)
}

type SwitchVrfInstancesExtraRoutesOutput struct{ *pulumi.OutputState }

func (SwitchVrfInstancesExtraRoutesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchVrfInstancesExtraRoutes)(nil)).Elem()
}

func (o SwitchVrfInstancesExtraRoutesOutput) ToSwitchVrfInstancesExtraRoutesOutput() SwitchVrfInstancesExtraRoutesOutput {
	return o
}

func (o SwitchVrfInstancesExtraRoutesOutput) ToSwitchVrfInstancesExtraRoutesOutputWithContext(ctx context.Context) SwitchVrfInstancesExtraRoutesOutput {
	return o
}

// Next-hop address
func (o SwitchVrfInstancesExtraRoutesOutput) Via() pulumi.StringOutput {
	return o.ApplyT(func(v SwitchVrfInstancesExtraRoutes) string { return v.Via }).(pulumi.StringOutput)
}

type SwitchVrfInstancesExtraRoutesMapOutput struct{ *pulumi.OutputState }

func (SwitchVrfInstancesExtraRoutesMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]SwitchVrfInstancesExtraRoutes)(nil)).Elem()
}

func (o SwitchVrfInstancesExtraRoutesMapOutput) ToSwitchVrfInstancesExtraRoutesMapOutput() SwitchVrfInstancesExtraRoutesMapOutput {
	return o
}

func (o SwitchVrfInstancesExtraRoutesMapOutput) ToSwitchVrfInstancesExtraRoutesMapOutputWithContext(ctx context.Context) SwitchVrfInstancesExtraRoutesMapOutput {
	return o
}

func (o SwitchVrfInstancesExtraRoutesMapOutput) MapIndex(k pulumi.StringInput) SwitchVrfInstancesExtraRoutesOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) SwitchVrfInstancesExtraRoutes {
		return vs[0].(map[string]SwitchVrfInstancesExtraRoutes)[vs[1].(string)]
	}).(SwitchVrfInstancesExtraRoutesOutput)
}

type SwitchVrrpConfig struct {
	Enabled *bool `pulumi:"enabled"`
	// Property key is the VRRP name
	Groups map[string]SwitchVrrpConfigGroups `pulumi:"groups"`
}

// SwitchVrrpConfigInput is an input type that accepts SwitchVrrpConfigArgs and SwitchVrrpConfigOutput values.
// You can construct a concrete instance of `SwitchVrrpConfigInput` via:
//
//	SwitchVrrpConfigArgs{...}
type SwitchVrrpConfigInput interface {
	pulumi.Input

	ToSwitchVrrpConfigOutput() SwitchVrrpConfigOutput
	ToSwitchVrrpConfigOutputWithContext(context.Context) SwitchVrrpConfigOutput
}

type SwitchVrrpConfigArgs struct {
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Property key is the VRRP name
	Groups SwitchVrrpConfigGroupsMapInput `pulumi:"groups"`
}

func (SwitchVrrpConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchVrrpConfig)(nil)).Elem()
}

func (i SwitchVrrpConfigArgs) ToSwitchVrrpConfigOutput() SwitchVrrpConfigOutput {
	return i.ToSwitchVrrpConfigOutputWithContext(context.Background())
}

func (i SwitchVrrpConfigArgs) ToSwitchVrrpConfigOutputWithContext(ctx context.Context) SwitchVrrpConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchVrrpConfigOutput)
}

func (i SwitchVrrpConfigArgs) ToSwitchVrrpConfigPtrOutput() SwitchVrrpConfigPtrOutput {
	return i.ToSwitchVrrpConfigPtrOutputWithContext(context.Background())
}

func (i SwitchVrrpConfigArgs) ToSwitchVrrpConfigPtrOutputWithContext(ctx context.Context) SwitchVrrpConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchVrrpConfigOutput).ToSwitchVrrpConfigPtrOutputWithContext(ctx)
}

// SwitchVrrpConfigPtrInput is an input type that accepts SwitchVrrpConfigArgs, SwitchVrrpConfigPtr and SwitchVrrpConfigPtrOutput values.
// You can construct a concrete instance of `SwitchVrrpConfigPtrInput` via:
//
//	        SwitchVrrpConfigArgs{...}
//
//	or:
//
//	        nil
type SwitchVrrpConfigPtrInput interface {
	pulumi.Input

	ToSwitchVrrpConfigPtrOutput() SwitchVrrpConfigPtrOutput
	ToSwitchVrrpConfigPtrOutputWithContext(context.Context) SwitchVrrpConfigPtrOutput
}

type switchVrrpConfigPtrType SwitchVrrpConfigArgs

func SwitchVrrpConfigPtr(v *SwitchVrrpConfigArgs) SwitchVrrpConfigPtrInput {
	return (*switchVrrpConfigPtrType)(v)
}

func (*switchVrrpConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchVrrpConfig)(nil)).Elem()
}

func (i *switchVrrpConfigPtrType) ToSwitchVrrpConfigPtrOutput() SwitchVrrpConfigPtrOutput {
	return i.ToSwitchVrrpConfigPtrOutputWithContext(context.Background())
}

func (i *switchVrrpConfigPtrType) ToSwitchVrrpConfigPtrOutputWithContext(ctx context.Context) SwitchVrrpConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchVrrpConfigPtrOutput)
}

type SwitchVrrpConfigOutput struct{ *pulumi.OutputState }

func (SwitchVrrpConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchVrrpConfig)(nil)).Elem()
}

func (o SwitchVrrpConfigOutput) ToSwitchVrrpConfigOutput() SwitchVrrpConfigOutput {
	return o
}

func (o SwitchVrrpConfigOutput) ToSwitchVrrpConfigOutputWithContext(ctx context.Context) SwitchVrrpConfigOutput {
	return o
}

func (o SwitchVrrpConfigOutput) ToSwitchVrrpConfigPtrOutput() SwitchVrrpConfigPtrOutput {
	return o.ToSwitchVrrpConfigPtrOutputWithContext(context.Background())
}

func (o SwitchVrrpConfigOutput) ToSwitchVrrpConfigPtrOutputWithContext(ctx context.Context) SwitchVrrpConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SwitchVrrpConfig) *SwitchVrrpConfig {
		return &v
	}).(SwitchVrrpConfigPtrOutput)
}

func (o SwitchVrrpConfigOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SwitchVrrpConfig) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Property key is the VRRP name
func (o SwitchVrrpConfigOutput) Groups() SwitchVrrpConfigGroupsMapOutput {
	return o.ApplyT(func(v SwitchVrrpConfig) map[string]SwitchVrrpConfigGroups { return v.Groups }).(SwitchVrrpConfigGroupsMapOutput)
}

type SwitchVrrpConfigPtrOutput struct{ *pulumi.OutputState }

func (SwitchVrrpConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchVrrpConfig)(nil)).Elem()
}

func (o SwitchVrrpConfigPtrOutput) ToSwitchVrrpConfigPtrOutput() SwitchVrrpConfigPtrOutput {
	return o
}

func (o SwitchVrrpConfigPtrOutput) ToSwitchVrrpConfigPtrOutputWithContext(ctx context.Context) SwitchVrrpConfigPtrOutput {
	return o
}

func (o SwitchVrrpConfigPtrOutput) Elem() SwitchVrrpConfigOutput {
	return o.ApplyT(func(v *SwitchVrrpConfig) SwitchVrrpConfig {
		if v != nil {
			return *v
		}
		var ret SwitchVrrpConfig
		return ret
	}).(SwitchVrrpConfigOutput)
}

func (o SwitchVrrpConfigPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SwitchVrrpConfig) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Property key is the VRRP name
func (o SwitchVrrpConfigPtrOutput) Groups() SwitchVrrpConfigGroupsMapOutput {
	return o.ApplyT(func(v *SwitchVrrpConfig) map[string]SwitchVrrpConfigGroups {
		if v == nil {
			return nil
		}
		return v.Groups
	}).(SwitchVrrpConfigGroupsMapOutput)
}

type SwitchVrrpConfigGroups struct {
	Priority *int `pulumi:"priority"`
}

// SwitchVrrpConfigGroupsInput is an input type that accepts SwitchVrrpConfigGroupsArgs and SwitchVrrpConfigGroupsOutput values.
// You can construct a concrete instance of `SwitchVrrpConfigGroupsInput` via:
//
//	SwitchVrrpConfigGroupsArgs{...}
type SwitchVrrpConfigGroupsInput interface {
	pulumi.Input

	ToSwitchVrrpConfigGroupsOutput() SwitchVrrpConfigGroupsOutput
	ToSwitchVrrpConfigGroupsOutputWithContext(context.Context) SwitchVrrpConfigGroupsOutput
}

type SwitchVrrpConfigGroupsArgs struct {
	Priority pulumi.IntPtrInput `pulumi:"priority"`
}

func (SwitchVrrpConfigGroupsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchVrrpConfigGroups)(nil)).Elem()
}

func (i SwitchVrrpConfigGroupsArgs) ToSwitchVrrpConfigGroupsOutput() SwitchVrrpConfigGroupsOutput {
	return i.ToSwitchVrrpConfigGroupsOutputWithContext(context.Background())
}

func (i SwitchVrrpConfigGroupsArgs) ToSwitchVrrpConfigGroupsOutputWithContext(ctx context.Context) SwitchVrrpConfigGroupsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchVrrpConfigGroupsOutput)
}

// SwitchVrrpConfigGroupsMapInput is an input type that accepts SwitchVrrpConfigGroupsMap and SwitchVrrpConfigGroupsMapOutput values.
// You can construct a concrete instance of `SwitchVrrpConfigGroupsMapInput` via:
//
//	SwitchVrrpConfigGroupsMap{ "key": SwitchVrrpConfigGroupsArgs{...} }
type SwitchVrrpConfigGroupsMapInput interface {
	pulumi.Input

	ToSwitchVrrpConfigGroupsMapOutput() SwitchVrrpConfigGroupsMapOutput
	ToSwitchVrrpConfigGroupsMapOutputWithContext(context.Context) SwitchVrrpConfigGroupsMapOutput
}

type SwitchVrrpConfigGroupsMap map[string]SwitchVrrpConfigGroupsInput

func (SwitchVrrpConfigGroupsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]SwitchVrrpConfigGroups)(nil)).Elem()
}

func (i SwitchVrrpConfigGroupsMap) ToSwitchVrrpConfigGroupsMapOutput() SwitchVrrpConfigGroupsMapOutput {
	return i.ToSwitchVrrpConfigGroupsMapOutputWithContext(context.Background())
}

func (i SwitchVrrpConfigGroupsMap) ToSwitchVrrpConfigGroupsMapOutputWithContext(ctx context.Context) SwitchVrrpConfigGroupsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchVrrpConfigGroupsMapOutput)
}

type SwitchVrrpConfigGroupsOutput struct{ *pulumi.OutputState }

func (SwitchVrrpConfigGroupsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchVrrpConfigGroups)(nil)).Elem()
}

func (o SwitchVrrpConfigGroupsOutput) ToSwitchVrrpConfigGroupsOutput() SwitchVrrpConfigGroupsOutput {
	return o
}

func (o SwitchVrrpConfigGroupsOutput) ToSwitchVrrpConfigGroupsOutputWithContext(ctx context.Context) SwitchVrrpConfigGroupsOutput {
	return o
}

func (o SwitchVrrpConfigGroupsOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchVrrpConfigGroups) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

type SwitchVrrpConfigGroupsMapOutput struct{ *pulumi.OutputState }

func (SwitchVrrpConfigGroupsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]SwitchVrrpConfigGroups)(nil)).Elem()
}

func (o SwitchVrrpConfigGroupsMapOutput) ToSwitchVrrpConfigGroupsMapOutput() SwitchVrrpConfigGroupsMapOutput {
	return o
}

func (o SwitchVrrpConfigGroupsMapOutput) ToSwitchVrrpConfigGroupsMapOutputWithContext(ctx context.Context) SwitchVrrpConfigGroupsMapOutput {
	return o
}

func (o SwitchVrrpConfigGroupsMapOutput) MapIndex(k pulumi.StringInput) SwitchVrrpConfigGroupsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) SwitchVrrpConfigGroups {
		return vs[0].(map[string]SwitchVrrpConfigGroups)[vs[1].(string)]
	}).(SwitchVrrpConfigGroupsOutput)
}

type BaseLatlng struct {
	Lat float64 `pulumi:"lat"`
	Lng float64 `pulumi:"lng"`
}

// BaseLatlngInput is an input type that accepts BaseLatlngArgs and BaseLatlngOutput values.
// You can construct a concrete instance of `BaseLatlngInput` via:
//
//	BaseLatlngArgs{...}
type BaseLatlngInput interface {
	pulumi.Input

	ToBaseLatlngOutput() BaseLatlngOutput
	ToBaseLatlngOutputWithContext(context.Context) BaseLatlngOutput
}

type BaseLatlngArgs struct {
	Lat pulumi.Float64Input `pulumi:"lat"`
	Lng pulumi.Float64Input `pulumi:"lng"`
}

func (BaseLatlngArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BaseLatlng)(nil)).Elem()
}

func (i BaseLatlngArgs) ToBaseLatlngOutput() BaseLatlngOutput {
	return i.ToBaseLatlngOutputWithContext(context.Background())
}

func (i BaseLatlngArgs) ToBaseLatlngOutputWithContext(ctx context.Context) BaseLatlngOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BaseLatlngOutput)
}

func (i BaseLatlngArgs) ToBaseLatlngPtrOutput() BaseLatlngPtrOutput {
	return i.ToBaseLatlngPtrOutputWithContext(context.Background())
}

func (i BaseLatlngArgs) ToBaseLatlngPtrOutputWithContext(ctx context.Context) BaseLatlngPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BaseLatlngOutput).ToBaseLatlngPtrOutputWithContext(ctx)
}

// BaseLatlngPtrInput is an input type that accepts BaseLatlngArgs, BaseLatlngPtr and BaseLatlngPtrOutput values.
// You can construct a concrete instance of `BaseLatlngPtrInput` via:
//
//	        BaseLatlngArgs{...}
//
//	or:
//
//	        nil
type BaseLatlngPtrInput interface {
	pulumi.Input

	ToBaseLatlngPtrOutput() BaseLatlngPtrOutput
	ToBaseLatlngPtrOutputWithContext(context.Context) BaseLatlngPtrOutput
}

type baseLatlngPtrType BaseLatlngArgs

func BaseLatlngPtr(v *BaseLatlngArgs) BaseLatlngPtrInput {
	return (*baseLatlngPtrType)(v)
}

func (*baseLatlngPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BaseLatlng)(nil)).Elem()
}

func (i *baseLatlngPtrType) ToBaseLatlngPtrOutput() BaseLatlngPtrOutput {
	return i.ToBaseLatlngPtrOutputWithContext(context.Background())
}

func (i *baseLatlngPtrType) ToBaseLatlngPtrOutputWithContext(ctx context.Context) BaseLatlngPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BaseLatlngPtrOutput)
}

type BaseLatlngOutput struct{ *pulumi.OutputState }

func (BaseLatlngOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BaseLatlng)(nil)).Elem()
}

func (o BaseLatlngOutput) ToBaseLatlngOutput() BaseLatlngOutput {
	return o
}

func (o BaseLatlngOutput) ToBaseLatlngOutputWithContext(ctx context.Context) BaseLatlngOutput {
	return o
}

func (o BaseLatlngOutput) ToBaseLatlngPtrOutput() BaseLatlngPtrOutput {
	return o.ToBaseLatlngPtrOutputWithContext(context.Background())
}

func (o BaseLatlngOutput) ToBaseLatlngPtrOutputWithContext(ctx context.Context) BaseLatlngPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BaseLatlng) *BaseLatlng {
		return &v
	}).(BaseLatlngPtrOutput)
}

func (o BaseLatlngOutput) Lat() pulumi.Float64Output {
	return o.ApplyT(func(v BaseLatlng) float64 { return v.Lat }).(pulumi.Float64Output)
}

func (o BaseLatlngOutput) Lng() pulumi.Float64Output {
	return o.ApplyT(func(v BaseLatlng) float64 { return v.Lng }).(pulumi.Float64Output)
}

type BaseLatlngPtrOutput struct{ *pulumi.OutputState }

func (BaseLatlngPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BaseLatlng)(nil)).Elem()
}

func (o BaseLatlngPtrOutput) ToBaseLatlngPtrOutput() BaseLatlngPtrOutput {
	return o
}

func (o BaseLatlngPtrOutput) ToBaseLatlngPtrOutputWithContext(ctx context.Context) BaseLatlngPtrOutput {
	return o
}

func (o BaseLatlngPtrOutput) Elem() BaseLatlngOutput {
	return o.ApplyT(func(v *BaseLatlng) BaseLatlng {
		if v != nil {
			return *v
		}
		var ret BaseLatlng
		return ret
	}).(BaseLatlngOutput)
}

func (o BaseLatlngPtrOutput) Lat() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *BaseLatlng) *float64 {
		if v == nil {
			return nil
		}
		return &v.Lat
	}).(pulumi.Float64PtrOutput)
}

func (o BaseLatlngPtrOutput) Lng() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *BaseLatlng) *float64 {
		if v == nil {
			return nil
		}
		return &v.Lng
	}).(pulumi.Float64PtrOutput)
}

type GetApStatsDeviceApStat struct {
	AutoPlacement   GetApStatsDeviceApStatAutoPlacement   `pulumi:"autoPlacement"`
	AutoUpgradeStat GetApStatsDeviceApStatAutoUpgradeStat `pulumi:"autoUpgradeStat"`
	BleStat         GetApStatsDeviceApStatBleStat         `pulumi:"bleStat"`
	CertExpiry      float64                               `pulumi:"certExpiry"`
	ConfigReverted  bool                                  `pulumi:"configReverted"`
	CpuSystem       int                                   `pulumi:"cpuSystem"`
	CpuUtil         int                                   `pulumi:"cpuUtil"`
	// When the object has been created, in epoch
	CreatedTime     float64 `pulumi:"createdTime"`
	DeviceprofileId string  `pulumi:"deviceprofileId"`
	// Device environment, including CPU temperature, Ambient temperature, Humidity, Attitude, Pressure, Accelerometers, Magnetometers and vCore Voltage
	EnvStat  GetApStatsDeviceApStatEnvStat  `pulumi:"envStat"`
	EslStat  GetApStatsDeviceApStatEslStat  `pulumi:"eslStat"`
	ExtIp    string                         `pulumi:"extIp"`
	Fwupdate GetApStatsDeviceApStatFwupdate `pulumi:"fwupdate"`
	Gps      GetApStatsDeviceApStatGps      `pulumi:"gps"`
	HwRev    string                         `pulumi:"hwRev"`
	// Unique ID of the object instance in the Mist Organization
	Id                 string                                   `pulumi:"id"`
	InactiveWiredVlans []int                                    `pulumi:"inactiveWiredVlans"`
	IotStat            map[string]GetApStatsDeviceApStatIotStat `pulumi:"iotStat"`
	Ip                 string                                   `pulumi:"ip"`
	// IP AP settings
	IpConfig GetApStatsDeviceApStatIpConfig `pulumi:"ipConfig"`
	IpStat   GetApStatsDeviceApStatIpStat   `pulumi:"ipStat"`
	// L2TP tunnel status (key is the wxtunnel_id)
	L2tpStat map[string]GetApStatsDeviceApStatL2tpStat `pulumi:"l2tpStat"`
	// Last seen timestamp
	LastSeen float64 `pulumi:"lastSeen"`
	// Last trouble code of switch
	LastTrouble GetApStatsDeviceApStatLastTrouble `pulumi:"lastTrouble"`
	// LED AP settings
	Led GetApStatsDeviceApStatLed `pulumi:"led"`
	// LLDP Stat (neighbor information, power negotiations)
	LldpStat GetApStatsDeviceApStatLldpStat `pulumi:"lldpStat"`
	Locating bool                           `pulumi:"locating"`
	// Whether this AP is considered locked (placement / orientation has been vetted)
	Locked bool `pulumi:"locked"`
	// Device mac
	Mac       string `pulumi:"mac"`
	MapId     string `pulumi:"mapId"`
	MemUsedKb int    `pulumi:"memUsedKb"`
	// Property key is the mesh downlink id (e.g. `00000000-0000-0000-1000-5c5b35000010`)
	MeshDownlinks map[string]GetApStatsDeviceApStatMeshDownlinks `pulumi:"meshDownlinks"`
	MeshUplink    GetApStatsDeviceApStatMeshUplink               `pulumi:"meshUplink"`
	// Device model
	Model string `pulumi:"model"`
	// When the object has been modified for the last time, in epoch
	ModifiedTime float64 `pulumi:"modifiedTime"`
	Mount        string  `pulumi:"mount"`
	Name         string  `pulumi:"name"`
	Notes        string  `pulumi:"notes"`
	// How many wireless clients are currently connected
	NumClients int `pulumi:"numClients"`
	// How many WLANs are applied to the device
	NumWlans int    `pulumi:"numWlans"`
	OrgId    string `pulumi:"orgId"`
	// Property key is the port name (e.g. `eth0`)
	PortStat map[string]GetApStatsDeviceApStatPortStat `pulumi:"portStat"`
	// In mW, surplus if positive or deficit if negative
	PowerBudget int `pulumi:"powerBudget"`
	// Whether insufficient power
	PowerConstrained bool `pulumi:"powerConstrained"`
	// Constrained mode
	PowerOpmode string `pulumi:"powerOpmode"`
	// DC Input / PoE 802.3at / PoE 802.3af / LLDP / ? (unknown)
	PowerSrc  string                          `pulumi:"powerSrc"`
	RadioStat GetApStatsDeviceApStatRadioStat `pulumi:"radioStat"`
	// Rate of receiving traffic, bits/seconds, last known
	RxBps int `pulumi:"rxBps"`
	// Amount of traffic received since connection
	RxBytes int `pulumi:"rxBytes"`
	// Amount of packets received since connection
	RxPkts int `pulumi:"rxPkts"`
	// Serial Number
	Serial           string                                 `pulumi:"serial"`
	SiteId           string                                 `pulumi:"siteId"`
	Status           string                                 `pulumi:"status"`
	SwitchRedundancy GetApStatsDeviceApStatSwitchRedundancy `pulumi:"switchRedundancy"`
	// Rate of transmitting traffic, bits/seconds, last known
	TxBps int `pulumi:"txBps"`
	// Amount of traffic sent since connection
	TxBytes int `pulumi:"txBytes"`
	// Amount of packets sent since connection
	TxPkts int `pulumi:"txPkts"`
	// How long, in seconds, has the device been up (or rebooted)
	Uptime  float64                       `pulumi:"uptime"`
	UsbStat GetApStatsDeviceApStatUsbStat `pulumi:"usbStat"`
	Version string                        `pulumi:"version"`
	X       float64                       `pulumi:"x"`
	Y       float64                       `pulumi:"y"`
}

// GetApStatsDeviceApStatInput is an input type that accepts GetApStatsDeviceApStatArgs and GetApStatsDeviceApStatOutput values.
// You can construct a concrete instance of `GetApStatsDeviceApStatInput` via:
//
//	GetApStatsDeviceApStatArgs{...}
type GetApStatsDeviceApStatInput interface {
	pulumi.Input

	ToGetApStatsDeviceApStatOutput() GetApStatsDeviceApStatOutput
	ToGetApStatsDeviceApStatOutputWithContext(context.Context) GetApStatsDeviceApStatOutput
}

type GetApStatsDeviceApStatArgs struct {
	AutoPlacement   GetApStatsDeviceApStatAutoPlacementInput   `pulumi:"autoPlacement"`
	AutoUpgradeStat GetApStatsDeviceApStatAutoUpgradeStatInput `pulumi:"autoUpgradeStat"`
	BleStat         GetApStatsDeviceApStatBleStatInput         `pulumi:"bleStat"`
	CertExpiry      pulumi.Float64Input                        `pulumi:"certExpiry"`
	ConfigReverted  pulumi.BoolInput                           `pulumi:"configReverted"`
	CpuSystem       pulumi.IntInput                            `pulumi:"cpuSystem"`
	CpuUtil         pulumi.IntInput                            `pulumi:"cpuUtil"`
	// When the object has been created, in epoch
	CreatedTime     pulumi.Float64Input `pulumi:"createdTime"`
	DeviceprofileId pulumi.StringInput  `pulumi:"deviceprofileId"`
	// Device environment, including CPU temperature, Ambient temperature, Humidity, Attitude, Pressure, Accelerometers, Magnetometers and vCore Voltage
	EnvStat  GetApStatsDeviceApStatEnvStatInput  `pulumi:"envStat"`
	EslStat  GetApStatsDeviceApStatEslStatInput  `pulumi:"eslStat"`
	ExtIp    pulumi.StringInput                  `pulumi:"extIp"`
	Fwupdate GetApStatsDeviceApStatFwupdateInput `pulumi:"fwupdate"`
	Gps      GetApStatsDeviceApStatGpsInput      `pulumi:"gps"`
	HwRev    pulumi.StringInput                  `pulumi:"hwRev"`
	// Unique ID of the object instance in the Mist Organization
	Id                 pulumi.StringInput                    `pulumi:"id"`
	InactiveWiredVlans pulumi.IntArrayInput                  `pulumi:"inactiveWiredVlans"`
	IotStat            GetApStatsDeviceApStatIotStatMapInput `pulumi:"iotStat"`
	Ip                 pulumi.StringInput                    `pulumi:"ip"`
	// IP AP settings
	IpConfig GetApStatsDeviceApStatIpConfigInput `pulumi:"ipConfig"`
	IpStat   GetApStatsDeviceApStatIpStatInput   `pulumi:"ipStat"`
	// L2TP tunnel status (key is the wxtunnel_id)
	L2tpStat GetApStatsDeviceApStatL2tpStatMapInput `pulumi:"l2tpStat"`
	// Last seen timestamp
	LastSeen pulumi.Float64Input `pulumi:"lastSeen"`
	// Last trouble code of switch
	LastTrouble GetApStatsDeviceApStatLastTroubleInput `pulumi:"lastTrouble"`
	// LED AP settings
	Led GetApStatsDeviceApStatLedInput `pulumi:"led"`
	// LLDP Stat (neighbor information, power negotiations)
	LldpStat GetApStatsDeviceApStatLldpStatInput `pulumi:"lldpStat"`
	Locating pulumi.BoolInput                    `pulumi:"locating"`
	// Whether this AP is considered locked (placement / orientation has been vetted)
	Locked pulumi.BoolInput `pulumi:"locked"`
	// Device mac
	Mac       pulumi.StringInput `pulumi:"mac"`
	MapId     pulumi.StringInput `pulumi:"mapId"`
	MemUsedKb pulumi.IntInput    `pulumi:"memUsedKb"`
	// Property key is the mesh downlink id (e.g. `00000000-0000-0000-1000-5c5b35000010`)
	MeshDownlinks GetApStatsDeviceApStatMeshDownlinksMapInput `pulumi:"meshDownlinks"`
	MeshUplink    GetApStatsDeviceApStatMeshUplinkInput       `pulumi:"meshUplink"`
	// Device model
	Model pulumi.StringInput `pulumi:"model"`
	// When the object has been modified for the last time, in epoch
	ModifiedTime pulumi.Float64Input `pulumi:"modifiedTime"`
	Mount        pulumi.StringInput  `pulumi:"mount"`
	Name         pulumi.StringInput  `pulumi:"name"`
	Notes        pulumi.StringInput  `pulumi:"notes"`
	// How many wireless clients are currently connected
	NumClients pulumi.IntInput `pulumi:"numClients"`
	// How many WLANs are applied to the device
	NumWlans pulumi.IntInput    `pulumi:"numWlans"`
	OrgId    pulumi.StringInput `pulumi:"orgId"`
	// Property key is the port name (e.g. `eth0`)
	PortStat GetApStatsDeviceApStatPortStatMapInput `pulumi:"portStat"`
	// In mW, surplus if positive or deficit if negative
	PowerBudget pulumi.IntInput `pulumi:"powerBudget"`
	// Whether insufficient power
	PowerConstrained pulumi.BoolInput `pulumi:"powerConstrained"`
	// Constrained mode
	PowerOpmode pulumi.StringInput `pulumi:"powerOpmode"`
	// DC Input / PoE 802.3at / PoE 802.3af / LLDP / ? (unknown)
	PowerSrc  pulumi.StringInput                   `pulumi:"powerSrc"`
	RadioStat GetApStatsDeviceApStatRadioStatInput `pulumi:"radioStat"`
	// Rate of receiving traffic, bits/seconds, last known
	RxBps pulumi.IntInput `pulumi:"rxBps"`
	// Amount of traffic received since connection
	RxBytes pulumi.IntInput `pulumi:"rxBytes"`
	// Amount of packets received since connection
	RxPkts pulumi.IntInput `pulumi:"rxPkts"`
	// Serial Number
	Serial           pulumi.StringInput                          `pulumi:"serial"`
	SiteId           pulumi.StringInput                          `pulumi:"siteId"`
	Status           pulumi.StringInput                          `pulumi:"status"`
	SwitchRedundancy GetApStatsDeviceApStatSwitchRedundancyInput `pulumi:"switchRedundancy"`
	// Rate of transmitting traffic, bits/seconds, last known
	TxBps pulumi.IntInput `pulumi:"txBps"`
	// Amount of traffic sent since connection
	TxBytes pulumi.IntInput `pulumi:"txBytes"`
	// Amount of packets sent since connection
	TxPkts pulumi.IntInput `pulumi:"txPkts"`
	// How long, in seconds, has the device been up (or rebooted)
	Uptime  pulumi.Float64Input                `pulumi:"uptime"`
	UsbStat GetApStatsDeviceApStatUsbStatInput `pulumi:"usbStat"`
	Version pulumi.StringInput                 `pulumi:"version"`
	X       pulumi.Float64Input                `pulumi:"x"`
	Y       pulumi.Float64Input                `pulumi:"y"`
}

func (GetApStatsDeviceApStatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApStatsDeviceApStat)(nil)).Elem()
}

func (i GetApStatsDeviceApStatArgs) ToGetApStatsDeviceApStatOutput() GetApStatsDeviceApStatOutput {
	return i.ToGetApStatsDeviceApStatOutputWithContext(context.Background())
}

func (i GetApStatsDeviceApStatArgs) ToGetApStatsDeviceApStatOutputWithContext(ctx context.Context) GetApStatsDeviceApStatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApStatsDeviceApStatOutput)
}

// GetApStatsDeviceApStatArrayInput is an input type that accepts GetApStatsDeviceApStatArray and GetApStatsDeviceApStatArrayOutput values.
// You can construct a concrete instance of `GetApStatsDeviceApStatArrayInput` via:
//
//	GetApStatsDeviceApStatArray{ GetApStatsDeviceApStatArgs{...} }
type GetApStatsDeviceApStatArrayInput interface {
	pulumi.Input

	ToGetApStatsDeviceApStatArrayOutput() GetApStatsDeviceApStatArrayOutput
	ToGetApStatsDeviceApStatArrayOutputWithContext(context.Context) GetApStatsDeviceApStatArrayOutput
}

type GetApStatsDeviceApStatArray []GetApStatsDeviceApStatInput

func (GetApStatsDeviceApStatArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApStatsDeviceApStat)(nil)).Elem()
}

func (i GetApStatsDeviceApStatArray) ToGetApStatsDeviceApStatArrayOutput() GetApStatsDeviceApStatArrayOutput {
	return i.ToGetApStatsDeviceApStatArrayOutputWithContext(context.Background())
}

func (i GetApStatsDeviceApStatArray) ToGetApStatsDeviceApStatArrayOutputWithContext(ctx context.Context) GetApStatsDeviceApStatArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApStatsDeviceApStatArrayOutput)
}

type GetApStatsDeviceApStatOutput struct{ *pulumi.OutputState }

func (GetApStatsDeviceApStatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApStatsDeviceApStat)(nil)).Elem()
}

func (o GetApStatsDeviceApStatOutput) ToGetApStatsDeviceApStatOutput() GetApStatsDeviceApStatOutput {
	return o
}

func (o GetApStatsDeviceApStatOutput) ToGetApStatsDeviceApStatOutputWithContext(ctx context.Context) GetApStatsDeviceApStatOutput {
	return o
}

func (o GetApStatsDeviceApStatOutput) AutoPlacement() GetApStatsDeviceApStatAutoPlacementOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStat) GetApStatsDeviceApStatAutoPlacement { return v.AutoPlacement }).(GetApStatsDeviceApStatAutoPlacementOutput)
}

func (o GetApStatsDeviceApStatOutput) AutoUpgradeStat() GetApStatsDeviceApStatAutoUpgradeStatOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStat) GetApStatsDeviceApStatAutoUpgradeStat { return v.AutoUpgradeStat }).(GetApStatsDeviceApStatAutoUpgradeStatOutput)
}

func (o GetApStatsDeviceApStatOutput) BleStat() GetApStatsDeviceApStatBleStatOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStat) GetApStatsDeviceApStatBleStat { return v.BleStat }).(GetApStatsDeviceApStatBleStatOutput)
}

func (o GetApStatsDeviceApStatOutput) CertExpiry() pulumi.Float64Output {
	return o.ApplyT(func(v GetApStatsDeviceApStat) float64 { return v.CertExpiry }).(pulumi.Float64Output)
}

func (o GetApStatsDeviceApStatOutput) ConfigReverted() pulumi.BoolOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStat) bool { return v.ConfigReverted }).(pulumi.BoolOutput)
}

func (o GetApStatsDeviceApStatOutput) CpuSystem() pulumi.IntOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStat) int { return v.CpuSystem }).(pulumi.IntOutput)
}

func (o GetApStatsDeviceApStatOutput) CpuUtil() pulumi.IntOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStat) int { return v.CpuUtil }).(pulumi.IntOutput)
}

// When the object has been created, in epoch
func (o GetApStatsDeviceApStatOutput) CreatedTime() pulumi.Float64Output {
	return o.ApplyT(func(v GetApStatsDeviceApStat) float64 { return v.CreatedTime }).(pulumi.Float64Output)
}

func (o GetApStatsDeviceApStatOutput) DeviceprofileId() pulumi.StringOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStat) string { return v.DeviceprofileId }).(pulumi.StringOutput)
}

// Device environment, including CPU temperature, Ambient temperature, Humidity, Attitude, Pressure, Accelerometers, Magnetometers and vCore Voltage
func (o GetApStatsDeviceApStatOutput) EnvStat() GetApStatsDeviceApStatEnvStatOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStat) GetApStatsDeviceApStatEnvStat { return v.EnvStat }).(GetApStatsDeviceApStatEnvStatOutput)
}

func (o GetApStatsDeviceApStatOutput) EslStat() GetApStatsDeviceApStatEslStatOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStat) GetApStatsDeviceApStatEslStat { return v.EslStat }).(GetApStatsDeviceApStatEslStatOutput)
}

func (o GetApStatsDeviceApStatOutput) ExtIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStat) string { return v.ExtIp }).(pulumi.StringOutput)
}

func (o GetApStatsDeviceApStatOutput) Fwupdate() GetApStatsDeviceApStatFwupdateOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStat) GetApStatsDeviceApStatFwupdate { return v.Fwupdate }).(GetApStatsDeviceApStatFwupdateOutput)
}

func (o GetApStatsDeviceApStatOutput) Gps() GetApStatsDeviceApStatGpsOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStat) GetApStatsDeviceApStatGps { return v.Gps }).(GetApStatsDeviceApStatGpsOutput)
}

func (o GetApStatsDeviceApStatOutput) HwRev() pulumi.StringOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStat) string { return v.HwRev }).(pulumi.StringOutput)
}

// Unique ID of the object instance in the Mist Organization
func (o GetApStatsDeviceApStatOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStat) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetApStatsDeviceApStatOutput) InactiveWiredVlans() pulumi.IntArrayOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStat) []int { return v.InactiveWiredVlans }).(pulumi.IntArrayOutput)
}

func (o GetApStatsDeviceApStatOutput) IotStat() GetApStatsDeviceApStatIotStatMapOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStat) map[string]GetApStatsDeviceApStatIotStat { return v.IotStat }).(GetApStatsDeviceApStatIotStatMapOutput)
}

func (o GetApStatsDeviceApStatOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStat) string { return v.Ip }).(pulumi.StringOutput)
}

// IP AP settings
func (o GetApStatsDeviceApStatOutput) IpConfig() GetApStatsDeviceApStatIpConfigOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStat) GetApStatsDeviceApStatIpConfig { return v.IpConfig }).(GetApStatsDeviceApStatIpConfigOutput)
}

func (o GetApStatsDeviceApStatOutput) IpStat() GetApStatsDeviceApStatIpStatOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStat) GetApStatsDeviceApStatIpStat { return v.IpStat }).(GetApStatsDeviceApStatIpStatOutput)
}

// L2TP tunnel status (key is the wxtunnel_id)
func (o GetApStatsDeviceApStatOutput) L2tpStat() GetApStatsDeviceApStatL2tpStatMapOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStat) map[string]GetApStatsDeviceApStatL2tpStat { return v.L2tpStat }).(GetApStatsDeviceApStatL2tpStatMapOutput)
}

// Last seen timestamp
func (o GetApStatsDeviceApStatOutput) LastSeen() pulumi.Float64Output {
	return o.ApplyT(func(v GetApStatsDeviceApStat) float64 { return v.LastSeen }).(pulumi.Float64Output)
}

// Last trouble code of switch
func (o GetApStatsDeviceApStatOutput) LastTrouble() GetApStatsDeviceApStatLastTroubleOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStat) GetApStatsDeviceApStatLastTrouble { return v.LastTrouble }).(GetApStatsDeviceApStatLastTroubleOutput)
}

// LED AP settings
func (o GetApStatsDeviceApStatOutput) Led() GetApStatsDeviceApStatLedOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStat) GetApStatsDeviceApStatLed { return v.Led }).(GetApStatsDeviceApStatLedOutput)
}

// LLDP Stat (neighbor information, power negotiations)
func (o GetApStatsDeviceApStatOutput) LldpStat() GetApStatsDeviceApStatLldpStatOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStat) GetApStatsDeviceApStatLldpStat { return v.LldpStat }).(GetApStatsDeviceApStatLldpStatOutput)
}

func (o GetApStatsDeviceApStatOutput) Locating() pulumi.BoolOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStat) bool { return v.Locating }).(pulumi.BoolOutput)
}

// Whether this AP is considered locked (placement / orientation has been vetted)
func (o GetApStatsDeviceApStatOutput) Locked() pulumi.BoolOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStat) bool { return v.Locked }).(pulumi.BoolOutput)
}

// Device mac
func (o GetApStatsDeviceApStatOutput) Mac() pulumi.StringOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStat) string { return v.Mac }).(pulumi.StringOutput)
}

func (o GetApStatsDeviceApStatOutput) MapId() pulumi.StringOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStat) string { return v.MapId }).(pulumi.StringOutput)
}

func (o GetApStatsDeviceApStatOutput) MemUsedKb() pulumi.IntOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStat) int { return v.MemUsedKb }).(pulumi.IntOutput)
}

// Property key is the mesh downlink id (e.g. `00000000-0000-0000-1000-5c5b35000010`)
func (o GetApStatsDeviceApStatOutput) MeshDownlinks() GetApStatsDeviceApStatMeshDownlinksMapOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStat) map[string]GetApStatsDeviceApStatMeshDownlinks { return v.MeshDownlinks }).(GetApStatsDeviceApStatMeshDownlinksMapOutput)
}

func (o GetApStatsDeviceApStatOutput) MeshUplink() GetApStatsDeviceApStatMeshUplinkOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStat) GetApStatsDeviceApStatMeshUplink { return v.MeshUplink }).(GetApStatsDeviceApStatMeshUplinkOutput)
}

// Device model
func (o GetApStatsDeviceApStatOutput) Model() pulumi.StringOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStat) string { return v.Model }).(pulumi.StringOutput)
}

// When the object has been modified for the last time, in epoch
func (o GetApStatsDeviceApStatOutput) ModifiedTime() pulumi.Float64Output {
	return o.ApplyT(func(v GetApStatsDeviceApStat) float64 { return v.ModifiedTime }).(pulumi.Float64Output)
}

func (o GetApStatsDeviceApStatOutput) Mount() pulumi.StringOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStat) string { return v.Mount }).(pulumi.StringOutput)
}

func (o GetApStatsDeviceApStatOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStat) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetApStatsDeviceApStatOutput) Notes() pulumi.StringOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStat) string { return v.Notes }).(pulumi.StringOutput)
}

// How many wireless clients are currently connected
func (o GetApStatsDeviceApStatOutput) NumClients() pulumi.IntOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStat) int { return v.NumClients }).(pulumi.IntOutput)
}

// How many WLANs are applied to the device
func (o GetApStatsDeviceApStatOutput) NumWlans() pulumi.IntOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStat) int { return v.NumWlans }).(pulumi.IntOutput)
}

func (o GetApStatsDeviceApStatOutput) OrgId() pulumi.StringOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStat) string { return v.OrgId }).(pulumi.StringOutput)
}

// Property key is the port name (e.g. `eth0`)
func (o GetApStatsDeviceApStatOutput) PortStat() GetApStatsDeviceApStatPortStatMapOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStat) map[string]GetApStatsDeviceApStatPortStat { return v.PortStat }).(GetApStatsDeviceApStatPortStatMapOutput)
}

// In mW, surplus if positive or deficit if negative
func (o GetApStatsDeviceApStatOutput) PowerBudget() pulumi.IntOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStat) int { return v.PowerBudget }).(pulumi.IntOutput)
}

// Whether insufficient power
func (o GetApStatsDeviceApStatOutput) PowerConstrained() pulumi.BoolOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStat) bool { return v.PowerConstrained }).(pulumi.BoolOutput)
}

// Constrained mode
func (o GetApStatsDeviceApStatOutput) PowerOpmode() pulumi.StringOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStat) string { return v.PowerOpmode }).(pulumi.StringOutput)
}

// DC Input / PoE 802.3at / PoE 802.3af / LLDP / ? (unknown)
func (o GetApStatsDeviceApStatOutput) PowerSrc() pulumi.StringOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStat) string { return v.PowerSrc }).(pulumi.StringOutput)
}

func (o GetApStatsDeviceApStatOutput) RadioStat() GetApStatsDeviceApStatRadioStatOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStat) GetApStatsDeviceApStatRadioStat { return v.RadioStat }).(GetApStatsDeviceApStatRadioStatOutput)
}

// Rate of receiving traffic, bits/seconds, last known
func (o GetApStatsDeviceApStatOutput) RxBps() pulumi.IntOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStat) int { return v.RxBps }).(pulumi.IntOutput)
}

// Amount of traffic received since connection
func (o GetApStatsDeviceApStatOutput) RxBytes() pulumi.IntOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStat) int { return v.RxBytes }).(pulumi.IntOutput)
}

// Amount of packets received since connection
func (o GetApStatsDeviceApStatOutput) RxPkts() pulumi.IntOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStat) int { return v.RxPkts }).(pulumi.IntOutput)
}

// Serial Number
func (o GetApStatsDeviceApStatOutput) Serial() pulumi.StringOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStat) string { return v.Serial }).(pulumi.StringOutput)
}

func (o GetApStatsDeviceApStatOutput) SiteId() pulumi.StringOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStat) string { return v.SiteId }).(pulumi.StringOutput)
}

func (o GetApStatsDeviceApStatOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStat) string { return v.Status }).(pulumi.StringOutput)
}

func (o GetApStatsDeviceApStatOutput) SwitchRedundancy() GetApStatsDeviceApStatSwitchRedundancyOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStat) GetApStatsDeviceApStatSwitchRedundancy { return v.SwitchRedundancy }).(GetApStatsDeviceApStatSwitchRedundancyOutput)
}

// Rate of transmitting traffic, bits/seconds, last known
func (o GetApStatsDeviceApStatOutput) TxBps() pulumi.IntOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStat) int { return v.TxBps }).(pulumi.IntOutput)
}

// Amount of traffic sent since connection
func (o GetApStatsDeviceApStatOutput) TxBytes() pulumi.IntOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStat) int { return v.TxBytes }).(pulumi.IntOutput)
}

// Amount of packets sent since connection
func (o GetApStatsDeviceApStatOutput) TxPkts() pulumi.IntOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStat) int { return v.TxPkts }).(pulumi.IntOutput)
}

// How long, in seconds, has the device been up (or rebooted)
func (o GetApStatsDeviceApStatOutput) Uptime() pulumi.Float64Output {
	return o.ApplyT(func(v GetApStatsDeviceApStat) float64 { return v.Uptime }).(pulumi.Float64Output)
}

func (o GetApStatsDeviceApStatOutput) UsbStat() GetApStatsDeviceApStatUsbStatOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStat) GetApStatsDeviceApStatUsbStat { return v.UsbStat }).(GetApStatsDeviceApStatUsbStatOutput)
}

func (o GetApStatsDeviceApStatOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStat) string { return v.Version }).(pulumi.StringOutput)
}

func (o GetApStatsDeviceApStatOutput) X() pulumi.Float64Output {
	return o.ApplyT(func(v GetApStatsDeviceApStat) float64 { return v.X }).(pulumi.Float64Output)
}

func (o GetApStatsDeviceApStatOutput) Y() pulumi.Float64Output {
	return o.ApplyT(func(v GetApStatsDeviceApStat) float64 { return v.Y }).(pulumi.Float64Output)
}

type GetApStatsDeviceApStatArrayOutput struct{ *pulumi.OutputState }

func (GetApStatsDeviceApStatArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApStatsDeviceApStat)(nil)).Elem()
}

func (o GetApStatsDeviceApStatArrayOutput) ToGetApStatsDeviceApStatArrayOutput() GetApStatsDeviceApStatArrayOutput {
	return o
}

func (o GetApStatsDeviceApStatArrayOutput) ToGetApStatsDeviceApStatArrayOutputWithContext(ctx context.Context) GetApStatsDeviceApStatArrayOutput {
	return o
}

func (o GetApStatsDeviceApStatArrayOutput) Index(i pulumi.IntInput) GetApStatsDeviceApStatOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApStatsDeviceApStat {
		return vs[0].([]GetApStatsDeviceApStat)[vs[1].(int)]
	}).(GetApStatsDeviceApStatOutput)
}

type GetApStatsDeviceApStatAutoPlacement struct {
	// Additional information about auto placements AP data
	Info GetApStatsDeviceApStatAutoPlacementInfo `pulumi:"info"`
	// Flag to represent if AP is recommended as an anchor by auto placement service
	RecommendedAnchor bool `pulumi:"recommendedAnchor"`
	// Basic Placement Status
	Status string `pulumi:"status"`
	// Additional info about placement status
	StatusDetail string `pulumi:"statusDetail"`
	// X Autoplaced Position in pixels
	X float64 `pulumi:"x"`
	// X Autoplaced Position in meters
	XM float64 `pulumi:"xM"`
	// Y Autoplaced Position in pixels
	Y float64 `pulumi:"y"`
	// X Autoplaced Position in meters
	YM float64 `pulumi:"yM"`
}

// GetApStatsDeviceApStatAutoPlacementInput is an input type that accepts GetApStatsDeviceApStatAutoPlacementArgs and GetApStatsDeviceApStatAutoPlacementOutput values.
// You can construct a concrete instance of `GetApStatsDeviceApStatAutoPlacementInput` via:
//
//	GetApStatsDeviceApStatAutoPlacementArgs{...}
type GetApStatsDeviceApStatAutoPlacementInput interface {
	pulumi.Input

	ToGetApStatsDeviceApStatAutoPlacementOutput() GetApStatsDeviceApStatAutoPlacementOutput
	ToGetApStatsDeviceApStatAutoPlacementOutputWithContext(context.Context) GetApStatsDeviceApStatAutoPlacementOutput
}

type GetApStatsDeviceApStatAutoPlacementArgs struct {
	// Additional information about auto placements AP data
	Info GetApStatsDeviceApStatAutoPlacementInfoInput `pulumi:"info"`
	// Flag to represent if AP is recommended as an anchor by auto placement service
	RecommendedAnchor pulumi.BoolInput `pulumi:"recommendedAnchor"`
	// Basic Placement Status
	Status pulumi.StringInput `pulumi:"status"`
	// Additional info about placement status
	StatusDetail pulumi.StringInput `pulumi:"statusDetail"`
	// X Autoplaced Position in pixels
	X pulumi.Float64Input `pulumi:"x"`
	// X Autoplaced Position in meters
	XM pulumi.Float64Input `pulumi:"xM"`
	// Y Autoplaced Position in pixels
	Y pulumi.Float64Input `pulumi:"y"`
	// X Autoplaced Position in meters
	YM pulumi.Float64Input `pulumi:"yM"`
}

func (GetApStatsDeviceApStatAutoPlacementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApStatsDeviceApStatAutoPlacement)(nil)).Elem()
}

func (i GetApStatsDeviceApStatAutoPlacementArgs) ToGetApStatsDeviceApStatAutoPlacementOutput() GetApStatsDeviceApStatAutoPlacementOutput {
	return i.ToGetApStatsDeviceApStatAutoPlacementOutputWithContext(context.Background())
}

func (i GetApStatsDeviceApStatAutoPlacementArgs) ToGetApStatsDeviceApStatAutoPlacementOutputWithContext(ctx context.Context) GetApStatsDeviceApStatAutoPlacementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApStatsDeviceApStatAutoPlacementOutput)
}

type GetApStatsDeviceApStatAutoPlacementOutput struct{ *pulumi.OutputState }

func (GetApStatsDeviceApStatAutoPlacementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApStatsDeviceApStatAutoPlacement)(nil)).Elem()
}

func (o GetApStatsDeviceApStatAutoPlacementOutput) ToGetApStatsDeviceApStatAutoPlacementOutput() GetApStatsDeviceApStatAutoPlacementOutput {
	return o
}

func (o GetApStatsDeviceApStatAutoPlacementOutput) ToGetApStatsDeviceApStatAutoPlacementOutputWithContext(ctx context.Context) GetApStatsDeviceApStatAutoPlacementOutput {
	return o
}

// Additional information about auto placements AP data
func (o GetApStatsDeviceApStatAutoPlacementOutput) Info() GetApStatsDeviceApStatAutoPlacementInfoOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatAutoPlacement) GetApStatsDeviceApStatAutoPlacementInfo { return v.Info }).(GetApStatsDeviceApStatAutoPlacementInfoOutput)
}

// Flag to represent if AP is recommended as an anchor by auto placement service
func (o GetApStatsDeviceApStatAutoPlacementOutput) RecommendedAnchor() pulumi.BoolOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatAutoPlacement) bool { return v.RecommendedAnchor }).(pulumi.BoolOutput)
}

// Basic Placement Status
func (o GetApStatsDeviceApStatAutoPlacementOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatAutoPlacement) string { return v.Status }).(pulumi.StringOutput)
}

// Additional info about placement status
func (o GetApStatsDeviceApStatAutoPlacementOutput) StatusDetail() pulumi.StringOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatAutoPlacement) string { return v.StatusDetail }).(pulumi.StringOutput)
}

// X Autoplaced Position in pixels
func (o GetApStatsDeviceApStatAutoPlacementOutput) X() pulumi.Float64Output {
	return o.ApplyT(func(v GetApStatsDeviceApStatAutoPlacement) float64 { return v.X }).(pulumi.Float64Output)
}

// X Autoplaced Position in meters
func (o GetApStatsDeviceApStatAutoPlacementOutput) XM() pulumi.Float64Output {
	return o.ApplyT(func(v GetApStatsDeviceApStatAutoPlacement) float64 { return v.XM }).(pulumi.Float64Output)
}

// Y Autoplaced Position in pixels
func (o GetApStatsDeviceApStatAutoPlacementOutput) Y() pulumi.Float64Output {
	return o.ApplyT(func(v GetApStatsDeviceApStatAutoPlacement) float64 { return v.Y }).(pulumi.Float64Output)
}

// X Autoplaced Position in meters
func (o GetApStatsDeviceApStatAutoPlacementOutput) YM() pulumi.Float64Output {
	return o.ApplyT(func(v GetApStatsDeviceApStatAutoPlacement) float64 { return v.YM }).(pulumi.Float64Output)
}

type GetApStatsDeviceApStatAutoPlacementInfo struct {
	// All APs sharing a given cluster number can be placed relative to each other
	ClusterNumber int `pulumi:"clusterNumber"`
	// The orientation of an AP
	OrientationStats int `pulumi:"orientationStats"`
	// Coordinates representing a circle where the AP is most likely exists in the event of an inaccurate placement result
	ProbabilitySurface GetApStatsDeviceApStatAutoPlacementInfoProbabilitySurface `pulumi:"probabilitySurface"`
}

// GetApStatsDeviceApStatAutoPlacementInfoInput is an input type that accepts GetApStatsDeviceApStatAutoPlacementInfoArgs and GetApStatsDeviceApStatAutoPlacementInfoOutput values.
// You can construct a concrete instance of `GetApStatsDeviceApStatAutoPlacementInfoInput` via:
//
//	GetApStatsDeviceApStatAutoPlacementInfoArgs{...}
type GetApStatsDeviceApStatAutoPlacementInfoInput interface {
	pulumi.Input

	ToGetApStatsDeviceApStatAutoPlacementInfoOutput() GetApStatsDeviceApStatAutoPlacementInfoOutput
	ToGetApStatsDeviceApStatAutoPlacementInfoOutputWithContext(context.Context) GetApStatsDeviceApStatAutoPlacementInfoOutput
}

type GetApStatsDeviceApStatAutoPlacementInfoArgs struct {
	// All APs sharing a given cluster number can be placed relative to each other
	ClusterNumber pulumi.IntInput `pulumi:"clusterNumber"`
	// The orientation of an AP
	OrientationStats pulumi.IntInput `pulumi:"orientationStats"`
	// Coordinates representing a circle where the AP is most likely exists in the event of an inaccurate placement result
	ProbabilitySurface GetApStatsDeviceApStatAutoPlacementInfoProbabilitySurfaceInput `pulumi:"probabilitySurface"`
}

func (GetApStatsDeviceApStatAutoPlacementInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApStatsDeviceApStatAutoPlacementInfo)(nil)).Elem()
}

func (i GetApStatsDeviceApStatAutoPlacementInfoArgs) ToGetApStatsDeviceApStatAutoPlacementInfoOutput() GetApStatsDeviceApStatAutoPlacementInfoOutput {
	return i.ToGetApStatsDeviceApStatAutoPlacementInfoOutputWithContext(context.Background())
}

func (i GetApStatsDeviceApStatAutoPlacementInfoArgs) ToGetApStatsDeviceApStatAutoPlacementInfoOutputWithContext(ctx context.Context) GetApStatsDeviceApStatAutoPlacementInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApStatsDeviceApStatAutoPlacementInfoOutput)
}

type GetApStatsDeviceApStatAutoPlacementInfoOutput struct{ *pulumi.OutputState }

func (GetApStatsDeviceApStatAutoPlacementInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApStatsDeviceApStatAutoPlacementInfo)(nil)).Elem()
}

func (o GetApStatsDeviceApStatAutoPlacementInfoOutput) ToGetApStatsDeviceApStatAutoPlacementInfoOutput() GetApStatsDeviceApStatAutoPlacementInfoOutput {
	return o
}

func (o GetApStatsDeviceApStatAutoPlacementInfoOutput) ToGetApStatsDeviceApStatAutoPlacementInfoOutputWithContext(ctx context.Context) GetApStatsDeviceApStatAutoPlacementInfoOutput {
	return o
}

// All APs sharing a given cluster number can be placed relative to each other
func (o GetApStatsDeviceApStatAutoPlacementInfoOutput) ClusterNumber() pulumi.IntOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatAutoPlacementInfo) int { return v.ClusterNumber }).(pulumi.IntOutput)
}

// The orientation of an AP
func (o GetApStatsDeviceApStatAutoPlacementInfoOutput) OrientationStats() pulumi.IntOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatAutoPlacementInfo) int { return v.OrientationStats }).(pulumi.IntOutput)
}

// Coordinates representing a circle where the AP is most likely exists in the event of an inaccurate placement result
func (o GetApStatsDeviceApStatAutoPlacementInfoOutput) ProbabilitySurface() GetApStatsDeviceApStatAutoPlacementInfoProbabilitySurfaceOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatAutoPlacementInfo) GetApStatsDeviceApStatAutoPlacementInfoProbabilitySurface {
		return v.ProbabilitySurface
	}).(GetApStatsDeviceApStatAutoPlacementInfoProbabilitySurfaceOutput)
}

type GetApStatsDeviceApStatAutoPlacementInfoProbabilitySurface struct {
	// The radius representing placement uncertainty, measured in pixels
	Radius float64 `pulumi:"radius"`
	// The radius representing placement uncertainty, measured in meters
	RadiusM float64 `pulumi:"radiusM"`
	// Y-coordinate of the potential placement’s center, measured in pixels
	X float64 `pulumi:"x"`
}

// GetApStatsDeviceApStatAutoPlacementInfoProbabilitySurfaceInput is an input type that accepts GetApStatsDeviceApStatAutoPlacementInfoProbabilitySurfaceArgs and GetApStatsDeviceApStatAutoPlacementInfoProbabilitySurfaceOutput values.
// You can construct a concrete instance of `GetApStatsDeviceApStatAutoPlacementInfoProbabilitySurfaceInput` via:
//
//	GetApStatsDeviceApStatAutoPlacementInfoProbabilitySurfaceArgs{...}
type GetApStatsDeviceApStatAutoPlacementInfoProbabilitySurfaceInput interface {
	pulumi.Input

	ToGetApStatsDeviceApStatAutoPlacementInfoProbabilitySurfaceOutput() GetApStatsDeviceApStatAutoPlacementInfoProbabilitySurfaceOutput
	ToGetApStatsDeviceApStatAutoPlacementInfoProbabilitySurfaceOutputWithContext(context.Context) GetApStatsDeviceApStatAutoPlacementInfoProbabilitySurfaceOutput
}

type GetApStatsDeviceApStatAutoPlacementInfoProbabilitySurfaceArgs struct {
	// The radius representing placement uncertainty, measured in pixels
	Radius pulumi.Float64Input `pulumi:"radius"`
	// The radius representing placement uncertainty, measured in meters
	RadiusM pulumi.Float64Input `pulumi:"radiusM"`
	// Y-coordinate of the potential placement’s center, measured in pixels
	X pulumi.Float64Input `pulumi:"x"`
}

func (GetApStatsDeviceApStatAutoPlacementInfoProbabilitySurfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApStatsDeviceApStatAutoPlacementInfoProbabilitySurface)(nil)).Elem()
}

func (i GetApStatsDeviceApStatAutoPlacementInfoProbabilitySurfaceArgs) ToGetApStatsDeviceApStatAutoPlacementInfoProbabilitySurfaceOutput() GetApStatsDeviceApStatAutoPlacementInfoProbabilitySurfaceOutput {
	return i.ToGetApStatsDeviceApStatAutoPlacementInfoProbabilitySurfaceOutputWithContext(context.Background())
}

func (i GetApStatsDeviceApStatAutoPlacementInfoProbabilitySurfaceArgs) ToGetApStatsDeviceApStatAutoPlacementInfoProbabilitySurfaceOutputWithContext(ctx context.Context) GetApStatsDeviceApStatAutoPlacementInfoProbabilitySurfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApStatsDeviceApStatAutoPlacementInfoProbabilitySurfaceOutput)
}

type GetApStatsDeviceApStatAutoPlacementInfoProbabilitySurfaceOutput struct{ *pulumi.OutputState }

func (GetApStatsDeviceApStatAutoPlacementInfoProbabilitySurfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApStatsDeviceApStatAutoPlacementInfoProbabilitySurface)(nil)).Elem()
}

func (o GetApStatsDeviceApStatAutoPlacementInfoProbabilitySurfaceOutput) ToGetApStatsDeviceApStatAutoPlacementInfoProbabilitySurfaceOutput() GetApStatsDeviceApStatAutoPlacementInfoProbabilitySurfaceOutput {
	return o
}

func (o GetApStatsDeviceApStatAutoPlacementInfoProbabilitySurfaceOutput) ToGetApStatsDeviceApStatAutoPlacementInfoProbabilitySurfaceOutputWithContext(ctx context.Context) GetApStatsDeviceApStatAutoPlacementInfoProbabilitySurfaceOutput {
	return o
}

// The radius representing placement uncertainty, measured in pixels
func (o GetApStatsDeviceApStatAutoPlacementInfoProbabilitySurfaceOutput) Radius() pulumi.Float64Output {
	return o.ApplyT(func(v GetApStatsDeviceApStatAutoPlacementInfoProbabilitySurface) float64 { return v.Radius }).(pulumi.Float64Output)
}

// The radius representing placement uncertainty, measured in meters
func (o GetApStatsDeviceApStatAutoPlacementInfoProbabilitySurfaceOutput) RadiusM() pulumi.Float64Output {
	return o.ApplyT(func(v GetApStatsDeviceApStatAutoPlacementInfoProbabilitySurface) float64 { return v.RadiusM }).(pulumi.Float64Output)
}

// Y-coordinate of the potential placement’s center, measured in pixels
func (o GetApStatsDeviceApStatAutoPlacementInfoProbabilitySurfaceOutput) X() pulumi.Float64Output {
	return o.ApplyT(func(v GetApStatsDeviceApStatAutoPlacementInfoProbabilitySurface) float64 { return v.X }).(pulumi.Float64Output)
}

type GetApStatsDeviceApStatAutoUpgradeStat struct {
	Lastcheck int `pulumi:"lastcheck"`
}

// GetApStatsDeviceApStatAutoUpgradeStatInput is an input type that accepts GetApStatsDeviceApStatAutoUpgradeStatArgs and GetApStatsDeviceApStatAutoUpgradeStatOutput values.
// You can construct a concrete instance of `GetApStatsDeviceApStatAutoUpgradeStatInput` via:
//
//	GetApStatsDeviceApStatAutoUpgradeStatArgs{...}
type GetApStatsDeviceApStatAutoUpgradeStatInput interface {
	pulumi.Input

	ToGetApStatsDeviceApStatAutoUpgradeStatOutput() GetApStatsDeviceApStatAutoUpgradeStatOutput
	ToGetApStatsDeviceApStatAutoUpgradeStatOutputWithContext(context.Context) GetApStatsDeviceApStatAutoUpgradeStatOutput
}

type GetApStatsDeviceApStatAutoUpgradeStatArgs struct {
	Lastcheck pulumi.IntInput `pulumi:"lastcheck"`
}

func (GetApStatsDeviceApStatAutoUpgradeStatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApStatsDeviceApStatAutoUpgradeStat)(nil)).Elem()
}

func (i GetApStatsDeviceApStatAutoUpgradeStatArgs) ToGetApStatsDeviceApStatAutoUpgradeStatOutput() GetApStatsDeviceApStatAutoUpgradeStatOutput {
	return i.ToGetApStatsDeviceApStatAutoUpgradeStatOutputWithContext(context.Background())
}

func (i GetApStatsDeviceApStatAutoUpgradeStatArgs) ToGetApStatsDeviceApStatAutoUpgradeStatOutputWithContext(ctx context.Context) GetApStatsDeviceApStatAutoUpgradeStatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApStatsDeviceApStatAutoUpgradeStatOutput)
}

type GetApStatsDeviceApStatAutoUpgradeStatOutput struct{ *pulumi.OutputState }

func (GetApStatsDeviceApStatAutoUpgradeStatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApStatsDeviceApStatAutoUpgradeStat)(nil)).Elem()
}

func (o GetApStatsDeviceApStatAutoUpgradeStatOutput) ToGetApStatsDeviceApStatAutoUpgradeStatOutput() GetApStatsDeviceApStatAutoUpgradeStatOutput {
	return o
}

func (o GetApStatsDeviceApStatAutoUpgradeStatOutput) ToGetApStatsDeviceApStatAutoUpgradeStatOutputWithContext(ctx context.Context) GetApStatsDeviceApStatAutoUpgradeStatOutput {
	return o
}

func (o GetApStatsDeviceApStatAutoUpgradeStatOutput) Lastcheck() pulumi.IntOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatAutoUpgradeStat) int { return v.Lastcheck }).(pulumi.IntOutput)
}

type GetApStatsDeviceApStatBleStat struct {
	BeaconEnabled         bool   `pulumi:"beaconEnabled"`
	BeaconRate            int    `pulumi:"beaconRate"`
	EddystoneUidEnabled   bool   `pulumi:"eddystoneUidEnabled"`
	EddystoneUidFreqMsec  int    `pulumi:"eddystoneUidFreqMsec"`
	EddystoneUidInstance  string `pulumi:"eddystoneUidInstance"`
	EddystoneUidNamespace string `pulumi:"eddystoneUidNamespace"`
	EddystoneUrlEnabled   bool   `pulumi:"eddystoneUrlEnabled"`
	// Frequency (msec) of data emmit by Eddystone-UID beacon
	EddystoneUrlFreqMsec int    `pulumi:"eddystoneUrlFreqMsec"`
	EddystoneUrlUrl      string `pulumi:"eddystoneUrlUrl"`
	IbeaconEnabled       bool   `pulumi:"ibeaconEnabled"`
	IbeaconFreqMsec      int    `pulumi:"ibeaconFreqMsec"`
	IbeaconMajor         int    `pulumi:"ibeaconMajor"`
	IbeaconMinor         int    `pulumi:"ibeaconMinor"`
	IbeaconUuid          string `pulumi:"ibeaconUuid"`
	Major                int    `pulumi:"major"`
	Minors               []int  `pulumi:"minors"`
	Power                int    `pulumi:"power"`
	// Amount of traffic received since connection
	RxBytes int `pulumi:"rxBytes"`
	// Amount of packets received since connection
	RxPkts int `pulumi:"rxPkts"`
	// Amount of traffic sent since connection
	TxBytes int `pulumi:"txBytes"`
	// Amount of packets sent since connection
	TxPkts int `pulumi:"txPkts"`
	// Resets due to tx hung
	TxResets int    `pulumi:"txResets"`
	Uuid     string `pulumi:"uuid"`
}

// GetApStatsDeviceApStatBleStatInput is an input type that accepts GetApStatsDeviceApStatBleStatArgs and GetApStatsDeviceApStatBleStatOutput values.
// You can construct a concrete instance of `GetApStatsDeviceApStatBleStatInput` via:
//
//	GetApStatsDeviceApStatBleStatArgs{...}
type GetApStatsDeviceApStatBleStatInput interface {
	pulumi.Input

	ToGetApStatsDeviceApStatBleStatOutput() GetApStatsDeviceApStatBleStatOutput
	ToGetApStatsDeviceApStatBleStatOutputWithContext(context.Context) GetApStatsDeviceApStatBleStatOutput
}

type GetApStatsDeviceApStatBleStatArgs struct {
	BeaconEnabled         pulumi.BoolInput   `pulumi:"beaconEnabled"`
	BeaconRate            pulumi.IntInput    `pulumi:"beaconRate"`
	EddystoneUidEnabled   pulumi.BoolInput   `pulumi:"eddystoneUidEnabled"`
	EddystoneUidFreqMsec  pulumi.IntInput    `pulumi:"eddystoneUidFreqMsec"`
	EddystoneUidInstance  pulumi.StringInput `pulumi:"eddystoneUidInstance"`
	EddystoneUidNamespace pulumi.StringInput `pulumi:"eddystoneUidNamespace"`
	EddystoneUrlEnabled   pulumi.BoolInput   `pulumi:"eddystoneUrlEnabled"`
	// Frequency (msec) of data emmit by Eddystone-UID beacon
	EddystoneUrlFreqMsec pulumi.IntInput      `pulumi:"eddystoneUrlFreqMsec"`
	EddystoneUrlUrl      pulumi.StringInput   `pulumi:"eddystoneUrlUrl"`
	IbeaconEnabled       pulumi.BoolInput     `pulumi:"ibeaconEnabled"`
	IbeaconFreqMsec      pulumi.IntInput      `pulumi:"ibeaconFreqMsec"`
	IbeaconMajor         pulumi.IntInput      `pulumi:"ibeaconMajor"`
	IbeaconMinor         pulumi.IntInput      `pulumi:"ibeaconMinor"`
	IbeaconUuid          pulumi.StringInput   `pulumi:"ibeaconUuid"`
	Major                pulumi.IntInput      `pulumi:"major"`
	Minors               pulumi.IntArrayInput `pulumi:"minors"`
	Power                pulumi.IntInput      `pulumi:"power"`
	// Amount of traffic received since connection
	RxBytes pulumi.IntInput `pulumi:"rxBytes"`
	// Amount of packets received since connection
	RxPkts pulumi.IntInput `pulumi:"rxPkts"`
	// Amount of traffic sent since connection
	TxBytes pulumi.IntInput `pulumi:"txBytes"`
	// Amount of packets sent since connection
	TxPkts pulumi.IntInput `pulumi:"txPkts"`
	// Resets due to tx hung
	TxResets pulumi.IntInput    `pulumi:"txResets"`
	Uuid     pulumi.StringInput `pulumi:"uuid"`
}

func (GetApStatsDeviceApStatBleStatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApStatsDeviceApStatBleStat)(nil)).Elem()
}

func (i GetApStatsDeviceApStatBleStatArgs) ToGetApStatsDeviceApStatBleStatOutput() GetApStatsDeviceApStatBleStatOutput {
	return i.ToGetApStatsDeviceApStatBleStatOutputWithContext(context.Background())
}

func (i GetApStatsDeviceApStatBleStatArgs) ToGetApStatsDeviceApStatBleStatOutputWithContext(ctx context.Context) GetApStatsDeviceApStatBleStatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApStatsDeviceApStatBleStatOutput)
}

type GetApStatsDeviceApStatBleStatOutput struct{ *pulumi.OutputState }

func (GetApStatsDeviceApStatBleStatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApStatsDeviceApStatBleStat)(nil)).Elem()
}

func (o GetApStatsDeviceApStatBleStatOutput) ToGetApStatsDeviceApStatBleStatOutput() GetApStatsDeviceApStatBleStatOutput {
	return o
}

func (o GetApStatsDeviceApStatBleStatOutput) ToGetApStatsDeviceApStatBleStatOutputWithContext(ctx context.Context) GetApStatsDeviceApStatBleStatOutput {
	return o
}

func (o GetApStatsDeviceApStatBleStatOutput) BeaconEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatBleStat) bool { return v.BeaconEnabled }).(pulumi.BoolOutput)
}

func (o GetApStatsDeviceApStatBleStatOutput) BeaconRate() pulumi.IntOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatBleStat) int { return v.BeaconRate }).(pulumi.IntOutput)
}

func (o GetApStatsDeviceApStatBleStatOutput) EddystoneUidEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatBleStat) bool { return v.EddystoneUidEnabled }).(pulumi.BoolOutput)
}

func (o GetApStatsDeviceApStatBleStatOutput) EddystoneUidFreqMsec() pulumi.IntOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatBleStat) int { return v.EddystoneUidFreqMsec }).(pulumi.IntOutput)
}

func (o GetApStatsDeviceApStatBleStatOutput) EddystoneUidInstance() pulumi.StringOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatBleStat) string { return v.EddystoneUidInstance }).(pulumi.StringOutput)
}

func (o GetApStatsDeviceApStatBleStatOutput) EddystoneUidNamespace() pulumi.StringOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatBleStat) string { return v.EddystoneUidNamespace }).(pulumi.StringOutput)
}

func (o GetApStatsDeviceApStatBleStatOutput) EddystoneUrlEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatBleStat) bool { return v.EddystoneUrlEnabled }).(pulumi.BoolOutput)
}

// Frequency (msec) of data emmit by Eddystone-UID beacon
func (o GetApStatsDeviceApStatBleStatOutput) EddystoneUrlFreqMsec() pulumi.IntOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatBleStat) int { return v.EddystoneUrlFreqMsec }).(pulumi.IntOutput)
}

func (o GetApStatsDeviceApStatBleStatOutput) EddystoneUrlUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatBleStat) string { return v.EddystoneUrlUrl }).(pulumi.StringOutput)
}

func (o GetApStatsDeviceApStatBleStatOutput) IbeaconEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatBleStat) bool { return v.IbeaconEnabled }).(pulumi.BoolOutput)
}

func (o GetApStatsDeviceApStatBleStatOutput) IbeaconFreqMsec() pulumi.IntOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatBleStat) int { return v.IbeaconFreqMsec }).(pulumi.IntOutput)
}

func (o GetApStatsDeviceApStatBleStatOutput) IbeaconMajor() pulumi.IntOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatBleStat) int { return v.IbeaconMajor }).(pulumi.IntOutput)
}

func (o GetApStatsDeviceApStatBleStatOutput) IbeaconMinor() pulumi.IntOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatBleStat) int { return v.IbeaconMinor }).(pulumi.IntOutput)
}

func (o GetApStatsDeviceApStatBleStatOutput) IbeaconUuid() pulumi.StringOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatBleStat) string { return v.IbeaconUuid }).(pulumi.StringOutput)
}

func (o GetApStatsDeviceApStatBleStatOutput) Major() pulumi.IntOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatBleStat) int { return v.Major }).(pulumi.IntOutput)
}

func (o GetApStatsDeviceApStatBleStatOutput) Minors() pulumi.IntArrayOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatBleStat) []int { return v.Minors }).(pulumi.IntArrayOutput)
}

func (o GetApStatsDeviceApStatBleStatOutput) Power() pulumi.IntOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatBleStat) int { return v.Power }).(pulumi.IntOutput)
}

// Amount of traffic received since connection
func (o GetApStatsDeviceApStatBleStatOutput) RxBytes() pulumi.IntOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatBleStat) int { return v.RxBytes }).(pulumi.IntOutput)
}

// Amount of packets received since connection
func (o GetApStatsDeviceApStatBleStatOutput) RxPkts() pulumi.IntOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatBleStat) int { return v.RxPkts }).(pulumi.IntOutput)
}

// Amount of traffic sent since connection
func (o GetApStatsDeviceApStatBleStatOutput) TxBytes() pulumi.IntOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatBleStat) int { return v.TxBytes }).(pulumi.IntOutput)
}

// Amount of packets sent since connection
func (o GetApStatsDeviceApStatBleStatOutput) TxPkts() pulumi.IntOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatBleStat) int { return v.TxPkts }).(pulumi.IntOutput)
}

// Resets due to tx hung
func (o GetApStatsDeviceApStatBleStatOutput) TxResets() pulumi.IntOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatBleStat) int { return v.TxResets }).(pulumi.IntOutput)
}

func (o GetApStatsDeviceApStatBleStatOutput) Uuid() pulumi.StringOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatBleStat) string { return v.Uuid }).(pulumi.StringOutput)
}

type GetApStatsDeviceApStatEnvStat struct {
	AccelX       float64 `pulumi:"accelX"`
	AccelY       float64 `pulumi:"accelY"`
	AccelZ       float64 `pulumi:"accelZ"`
	AmbientTemp  int     `pulumi:"ambientTemp"`
	Attitude     int     `pulumi:"attitude"`
	CpuTemp      int     `pulumi:"cpuTemp"`
	Humidity     int     `pulumi:"humidity"`
	MagneX       float64 `pulumi:"magneX"`
	MagneY       float64 `pulumi:"magneY"`
	MagneZ       float64 `pulumi:"magneZ"`
	Pressure     float64 `pulumi:"pressure"`
	VcoreVoltage int     `pulumi:"vcoreVoltage"`
}

// GetApStatsDeviceApStatEnvStatInput is an input type that accepts GetApStatsDeviceApStatEnvStatArgs and GetApStatsDeviceApStatEnvStatOutput values.
// You can construct a concrete instance of `GetApStatsDeviceApStatEnvStatInput` via:
//
//	GetApStatsDeviceApStatEnvStatArgs{...}
type GetApStatsDeviceApStatEnvStatInput interface {
	pulumi.Input

	ToGetApStatsDeviceApStatEnvStatOutput() GetApStatsDeviceApStatEnvStatOutput
	ToGetApStatsDeviceApStatEnvStatOutputWithContext(context.Context) GetApStatsDeviceApStatEnvStatOutput
}

type GetApStatsDeviceApStatEnvStatArgs struct {
	AccelX       pulumi.Float64Input `pulumi:"accelX"`
	AccelY       pulumi.Float64Input `pulumi:"accelY"`
	AccelZ       pulumi.Float64Input `pulumi:"accelZ"`
	AmbientTemp  pulumi.IntInput     `pulumi:"ambientTemp"`
	Attitude     pulumi.IntInput     `pulumi:"attitude"`
	CpuTemp      pulumi.IntInput     `pulumi:"cpuTemp"`
	Humidity     pulumi.IntInput     `pulumi:"humidity"`
	MagneX       pulumi.Float64Input `pulumi:"magneX"`
	MagneY       pulumi.Float64Input `pulumi:"magneY"`
	MagneZ       pulumi.Float64Input `pulumi:"magneZ"`
	Pressure     pulumi.Float64Input `pulumi:"pressure"`
	VcoreVoltage pulumi.IntInput     `pulumi:"vcoreVoltage"`
}

func (GetApStatsDeviceApStatEnvStatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApStatsDeviceApStatEnvStat)(nil)).Elem()
}

func (i GetApStatsDeviceApStatEnvStatArgs) ToGetApStatsDeviceApStatEnvStatOutput() GetApStatsDeviceApStatEnvStatOutput {
	return i.ToGetApStatsDeviceApStatEnvStatOutputWithContext(context.Background())
}

func (i GetApStatsDeviceApStatEnvStatArgs) ToGetApStatsDeviceApStatEnvStatOutputWithContext(ctx context.Context) GetApStatsDeviceApStatEnvStatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApStatsDeviceApStatEnvStatOutput)
}

type GetApStatsDeviceApStatEnvStatOutput struct{ *pulumi.OutputState }

func (GetApStatsDeviceApStatEnvStatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApStatsDeviceApStatEnvStat)(nil)).Elem()
}

func (o GetApStatsDeviceApStatEnvStatOutput) ToGetApStatsDeviceApStatEnvStatOutput() GetApStatsDeviceApStatEnvStatOutput {
	return o
}

func (o GetApStatsDeviceApStatEnvStatOutput) ToGetApStatsDeviceApStatEnvStatOutputWithContext(ctx context.Context) GetApStatsDeviceApStatEnvStatOutput {
	return o
}

func (o GetApStatsDeviceApStatEnvStatOutput) AccelX() pulumi.Float64Output {
	return o.ApplyT(func(v GetApStatsDeviceApStatEnvStat) float64 { return v.AccelX }).(pulumi.Float64Output)
}

func (o GetApStatsDeviceApStatEnvStatOutput) AccelY() pulumi.Float64Output {
	return o.ApplyT(func(v GetApStatsDeviceApStatEnvStat) float64 { return v.AccelY }).(pulumi.Float64Output)
}

func (o GetApStatsDeviceApStatEnvStatOutput) AccelZ() pulumi.Float64Output {
	return o.ApplyT(func(v GetApStatsDeviceApStatEnvStat) float64 { return v.AccelZ }).(pulumi.Float64Output)
}

func (o GetApStatsDeviceApStatEnvStatOutput) AmbientTemp() pulumi.IntOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatEnvStat) int { return v.AmbientTemp }).(pulumi.IntOutput)
}

func (o GetApStatsDeviceApStatEnvStatOutput) Attitude() pulumi.IntOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatEnvStat) int { return v.Attitude }).(pulumi.IntOutput)
}

func (o GetApStatsDeviceApStatEnvStatOutput) CpuTemp() pulumi.IntOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatEnvStat) int { return v.CpuTemp }).(pulumi.IntOutput)
}

func (o GetApStatsDeviceApStatEnvStatOutput) Humidity() pulumi.IntOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatEnvStat) int { return v.Humidity }).(pulumi.IntOutput)
}

func (o GetApStatsDeviceApStatEnvStatOutput) MagneX() pulumi.Float64Output {
	return o.ApplyT(func(v GetApStatsDeviceApStatEnvStat) float64 { return v.MagneX }).(pulumi.Float64Output)
}

func (o GetApStatsDeviceApStatEnvStatOutput) MagneY() pulumi.Float64Output {
	return o.ApplyT(func(v GetApStatsDeviceApStatEnvStat) float64 { return v.MagneY }).(pulumi.Float64Output)
}

func (o GetApStatsDeviceApStatEnvStatOutput) MagneZ() pulumi.Float64Output {
	return o.ApplyT(func(v GetApStatsDeviceApStatEnvStat) float64 { return v.MagneZ }).(pulumi.Float64Output)
}

func (o GetApStatsDeviceApStatEnvStatOutput) Pressure() pulumi.Float64Output {
	return o.ApplyT(func(v GetApStatsDeviceApStatEnvStat) float64 { return v.Pressure }).(pulumi.Float64Output)
}

func (o GetApStatsDeviceApStatEnvStatOutput) VcoreVoltage() pulumi.IntOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatEnvStat) int { return v.VcoreVoltage }).(pulumi.IntOutput)
}

type GetApStatsDeviceApStatEslStat struct {
	Channel   int    `pulumi:"channel"`
	Connected bool   `pulumi:"connected"`
	Type      string `pulumi:"type"`
	Up        bool   `pulumi:"up"`
}

// GetApStatsDeviceApStatEslStatInput is an input type that accepts GetApStatsDeviceApStatEslStatArgs and GetApStatsDeviceApStatEslStatOutput values.
// You can construct a concrete instance of `GetApStatsDeviceApStatEslStatInput` via:
//
//	GetApStatsDeviceApStatEslStatArgs{...}
type GetApStatsDeviceApStatEslStatInput interface {
	pulumi.Input

	ToGetApStatsDeviceApStatEslStatOutput() GetApStatsDeviceApStatEslStatOutput
	ToGetApStatsDeviceApStatEslStatOutputWithContext(context.Context) GetApStatsDeviceApStatEslStatOutput
}

type GetApStatsDeviceApStatEslStatArgs struct {
	Channel   pulumi.IntInput    `pulumi:"channel"`
	Connected pulumi.BoolInput   `pulumi:"connected"`
	Type      pulumi.StringInput `pulumi:"type"`
	Up        pulumi.BoolInput   `pulumi:"up"`
}

func (GetApStatsDeviceApStatEslStatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApStatsDeviceApStatEslStat)(nil)).Elem()
}

func (i GetApStatsDeviceApStatEslStatArgs) ToGetApStatsDeviceApStatEslStatOutput() GetApStatsDeviceApStatEslStatOutput {
	return i.ToGetApStatsDeviceApStatEslStatOutputWithContext(context.Background())
}

func (i GetApStatsDeviceApStatEslStatArgs) ToGetApStatsDeviceApStatEslStatOutputWithContext(ctx context.Context) GetApStatsDeviceApStatEslStatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApStatsDeviceApStatEslStatOutput)
}

type GetApStatsDeviceApStatEslStatOutput struct{ *pulumi.OutputState }

func (GetApStatsDeviceApStatEslStatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApStatsDeviceApStatEslStat)(nil)).Elem()
}

func (o GetApStatsDeviceApStatEslStatOutput) ToGetApStatsDeviceApStatEslStatOutput() GetApStatsDeviceApStatEslStatOutput {
	return o
}

func (o GetApStatsDeviceApStatEslStatOutput) ToGetApStatsDeviceApStatEslStatOutputWithContext(ctx context.Context) GetApStatsDeviceApStatEslStatOutput {
	return o
}

func (o GetApStatsDeviceApStatEslStatOutput) Channel() pulumi.IntOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatEslStat) int { return v.Channel }).(pulumi.IntOutput)
}

func (o GetApStatsDeviceApStatEslStatOutput) Connected() pulumi.BoolOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatEslStat) bool { return v.Connected }).(pulumi.BoolOutput)
}

func (o GetApStatsDeviceApStatEslStatOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatEslStat) string { return v.Type }).(pulumi.StringOutput)
}

func (o GetApStatsDeviceApStatEslStatOutput) Up() pulumi.BoolOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatEslStat) bool { return v.Up }).(pulumi.BoolOutput)
}

type GetApStatsDeviceApStatFwupdate struct {
	Progress int `pulumi:"progress"`
	// enum: `inprogress`, `failed`, `upgraded`
	Status   string `pulumi:"status"`
	StatusId int    `pulumi:"statusId"`
	// Epoch (seconds)
	Timestamp float64 `pulumi:"timestamp"`
	WillRetry bool    `pulumi:"willRetry"`
}

// GetApStatsDeviceApStatFwupdateInput is an input type that accepts GetApStatsDeviceApStatFwupdateArgs and GetApStatsDeviceApStatFwupdateOutput values.
// You can construct a concrete instance of `GetApStatsDeviceApStatFwupdateInput` via:
//
//	GetApStatsDeviceApStatFwupdateArgs{...}
type GetApStatsDeviceApStatFwupdateInput interface {
	pulumi.Input

	ToGetApStatsDeviceApStatFwupdateOutput() GetApStatsDeviceApStatFwupdateOutput
	ToGetApStatsDeviceApStatFwupdateOutputWithContext(context.Context) GetApStatsDeviceApStatFwupdateOutput
}

type GetApStatsDeviceApStatFwupdateArgs struct {
	Progress pulumi.IntInput `pulumi:"progress"`
	// enum: `inprogress`, `failed`, `upgraded`
	Status   pulumi.StringInput `pulumi:"status"`
	StatusId pulumi.IntInput    `pulumi:"statusId"`
	// Epoch (seconds)
	Timestamp pulumi.Float64Input `pulumi:"timestamp"`
	WillRetry pulumi.BoolInput    `pulumi:"willRetry"`
}

func (GetApStatsDeviceApStatFwupdateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApStatsDeviceApStatFwupdate)(nil)).Elem()
}

func (i GetApStatsDeviceApStatFwupdateArgs) ToGetApStatsDeviceApStatFwupdateOutput() GetApStatsDeviceApStatFwupdateOutput {
	return i.ToGetApStatsDeviceApStatFwupdateOutputWithContext(context.Background())
}

func (i GetApStatsDeviceApStatFwupdateArgs) ToGetApStatsDeviceApStatFwupdateOutputWithContext(ctx context.Context) GetApStatsDeviceApStatFwupdateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApStatsDeviceApStatFwupdateOutput)
}

type GetApStatsDeviceApStatFwupdateOutput struct{ *pulumi.OutputState }

func (GetApStatsDeviceApStatFwupdateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApStatsDeviceApStatFwupdate)(nil)).Elem()
}

func (o GetApStatsDeviceApStatFwupdateOutput) ToGetApStatsDeviceApStatFwupdateOutput() GetApStatsDeviceApStatFwupdateOutput {
	return o
}

func (o GetApStatsDeviceApStatFwupdateOutput) ToGetApStatsDeviceApStatFwupdateOutputWithContext(ctx context.Context) GetApStatsDeviceApStatFwupdateOutput {
	return o
}

func (o GetApStatsDeviceApStatFwupdateOutput) Progress() pulumi.IntOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatFwupdate) int { return v.Progress }).(pulumi.IntOutput)
}

// enum: `inprogress`, `failed`, `upgraded`
func (o GetApStatsDeviceApStatFwupdateOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatFwupdate) string { return v.Status }).(pulumi.StringOutput)
}

func (o GetApStatsDeviceApStatFwupdateOutput) StatusId() pulumi.IntOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatFwupdate) int { return v.StatusId }).(pulumi.IntOutput)
}

// Epoch (seconds)
func (o GetApStatsDeviceApStatFwupdateOutput) Timestamp() pulumi.Float64Output {
	return o.ApplyT(func(v GetApStatsDeviceApStatFwupdate) float64 { return v.Timestamp }).(pulumi.Float64Output)
}

func (o GetApStatsDeviceApStatFwupdateOutput) WillRetry() pulumi.BoolOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatFwupdate) bool { return v.WillRetry }).(pulumi.BoolOutput)
}

type GetApStatsDeviceApStatGps struct {
	// The estimated accuracy or accuracy of the GPS coordinates, measured in meters.
	Accuracy float64 `pulumi:"accuracy"`
	// The elevation of the AP above sea level, measured in meters.
	Altitude float64 `pulumi:"altitude"`
	// The geographic latitude of the AP, measured in degrees.
	Latitude float64 `pulumi:"latitude"`
	// The geographic longitude of the AP, measured in degrees.
	Longitude float64 `pulumi:"longitude"`
	// The origin of the GPS data. enum:
	//   * `gps`: from this device’s GPS estimates
	//   * `otherAp` from neighboring device GPS estimates
	Src string `pulumi:"src"`
	// Epoch (seconds)
	Timestamp float64 `pulumi:"timestamp"`
}

// GetApStatsDeviceApStatGpsInput is an input type that accepts GetApStatsDeviceApStatGpsArgs and GetApStatsDeviceApStatGpsOutput values.
// You can construct a concrete instance of `GetApStatsDeviceApStatGpsInput` via:
//
//	GetApStatsDeviceApStatGpsArgs{...}
type GetApStatsDeviceApStatGpsInput interface {
	pulumi.Input

	ToGetApStatsDeviceApStatGpsOutput() GetApStatsDeviceApStatGpsOutput
	ToGetApStatsDeviceApStatGpsOutputWithContext(context.Context) GetApStatsDeviceApStatGpsOutput
}

type GetApStatsDeviceApStatGpsArgs struct {
	// The estimated accuracy or accuracy of the GPS coordinates, measured in meters.
	Accuracy pulumi.Float64Input `pulumi:"accuracy"`
	// The elevation of the AP above sea level, measured in meters.
	Altitude pulumi.Float64Input `pulumi:"altitude"`
	// The geographic latitude of the AP, measured in degrees.
	Latitude pulumi.Float64Input `pulumi:"latitude"`
	// The geographic longitude of the AP, measured in degrees.
	Longitude pulumi.Float64Input `pulumi:"longitude"`
	// The origin of the GPS data. enum:
	//   * `gps`: from this device’s GPS estimates
	//   * `otherAp` from neighboring device GPS estimates
	Src pulumi.StringInput `pulumi:"src"`
	// Epoch (seconds)
	Timestamp pulumi.Float64Input `pulumi:"timestamp"`
}

func (GetApStatsDeviceApStatGpsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApStatsDeviceApStatGps)(nil)).Elem()
}

func (i GetApStatsDeviceApStatGpsArgs) ToGetApStatsDeviceApStatGpsOutput() GetApStatsDeviceApStatGpsOutput {
	return i.ToGetApStatsDeviceApStatGpsOutputWithContext(context.Background())
}

func (i GetApStatsDeviceApStatGpsArgs) ToGetApStatsDeviceApStatGpsOutputWithContext(ctx context.Context) GetApStatsDeviceApStatGpsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApStatsDeviceApStatGpsOutput)
}

type GetApStatsDeviceApStatGpsOutput struct{ *pulumi.OutputState }

func (GetApStatsDeviceApStatGpsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApStatsDeviceApStatGps)(nil)).Elem()
}

func (o GetApStatsDeviceApStatGpsOutput) ToGetApStatsDeviceApStatGpsOutput() GetApStatsDeviceApStatGpsOutput {
	return o
}

func (o GetApStatsDeviceApStatGpsOutput) ToGetApStatsDeviceApStatGpsOutputWithContext(ctx context.Context) GetApStatsDeviceApStatGpsOutput {
	return o
}

// The estimated accuracy or accuracy of the GPS coordinates, measured in meters.
func (o GetApStatsDeviceApStatGpsOutput) Accuracy() pulumi.Float64Output {
	return o.ApplyT(func(v GetApStatsDeviceApStatGps) float64 { return v.Accuracy }).(pulumi.Float64Output)
}

// The elevation of the AP above sea level, measured in meters.
func (o GetApStatsDeviceApStatGpsOutput) Altitude() pulumi.Float64Output {
	return o.ApplyT(func(v GetApStatsDeviceApStatGps) float64 { return v.Altitude }).(pulumi.Float64Output)
}

// The geographic latitude of the AP, measured in degrees.
func (o GetApStatsDeviceApStatGpsOutput) Latitude() pulumi.Float64Output {
	return o.ApplyT(func(v GetApStatsDeviceApStatGps) float64 { return v.Latitude }).(pulumi.Float64Output)
}

// The geographic longitude of the AP, measured in degrees.
func (o GetApStatsDeviceApStatGpsOutput) Longitude() pulumi.Float64Output {
	return o.ApplyT(func(v GetApStatsDeviceApStatGps) float64 { return v.Longitude }).(pulumi.Float64Output)
}

// The origin of the GPS data. enum:
//   - `gps`: from this device’s GPS estimates
//   - `otherAp` from neighboring device GPS estimates
func (o GetApStatsDeviceApStatGpsOutput) Src() pulumi.StringOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatGps) string { return v.Src }).(pulumi.StringOutput)
}

// Epoch (seconds)
func (o GetApStatsDeviceApStatGpsOutput) Timestamp() pulumi.Float64Output {
	return o.ApplyT(func(v GetApStatsDeviceApStatGps) float64 { return v.Timestamp }).(pulumi.Float64Output)
}

type GetApStatsDeviceApStatIotStat struct {
	Value int `pulumi:"value"`
}

// GetApStatsDeviceApStatIotStatInput is an input type that accepts GetApStatsDeviceApStatIotStatArgs and GetApStatsDeviceApStatIotStatOutput values.
// You can construct a concrete instance of `GetApStatsDeviceApStatIotStatInput` via:
//
//	GetApStatsDeviceApStatIotStatArgs{...}
type GetApStatsDeviceApStatIotStatInput interface {
	pulumi.Input

	ToGetApStatsDeviceApStatIotStatOutput() GetApStatsDeviceApStatIotStatOutput
	ToGetApStatsDeviceApStatIotStatOutputWithContext(context.Context) GetApStatsDeviceApStatIotStatOutput
}

type GetApStatsDeviceApStatIotStatArgs struct {
	Value pulumi.IntInput `pulumi:"value"`
}

func (GetApStatsDeviceApStatIotStatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApStatsDeviceApStatIotStat)(nil)).Elem()
}

func (i GetApStatsDeviceApStatIotStatArgs) ToGetApStatsDeviceApStatIotStatOutput() GetApStatsDeviceApStatIotStatOutput {
	return i.ToGetApStatsDeviceApStatIotStatOutputWithContext(context.Background())
}

func (i GetApStatsDeviceApStatIotStatArgs) ToGetApStatsDeviceApStatIotStatOutputWithContext(ctx context.Context) GetApStatsDeviceApStatIotStatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApStatsDeviceApStatIotStatOutput)
}

// GetApStatsDeviceApStatIotStatMapInput is an input type that accepts GetApStatsDeviceApStatIotStatMap and GetApStatsDeviceApStatIotStatMapOutput values.
// You can construct a concrete instance of `GetApStatsDeviceApStatIotStatMapInput` via:
//
//	GetApStatsDeviceApStatIotStatMap{ "key": GetApStatsDeviceApStatIotStatArgs{...} }
type GetApStatsDeviceApStatIotStatMapInput interface {
	pulumi.Input

	ToGetApStatsDeviceApStatIotStatMapOutput() GetApStatsDeviceApStatIotStatMapOutput
	ToGetApStatsDeviceApStatIotStatMapOutputWithContext(context.Context) GetApStatsDeviceApStatIotStatMapOutput
}

type GetApStatsDeviceApStatIotStatMap map[string]GetApStatsDeviceApStatIotStatInput

func (GetApStatsDeviceApStatIotStatMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]GetApStatsDeviceApStatIotStat)(nil)).Elem()
}

func (i GetApStatsDeviceApStatIotStatMap) ToGetApStatsDeviceApStatIotStatMapOutput() GetApStatsDeviceApStatIotStatMapOutput {
	return i.ToGetApStatsDeviceApStatIotStatMapOutputWithContext(context.Background())
}

func (i GetApStatsDeviceApStatIotStatMap) ToGetApStatsDeviceApStatIotStatMapOutputWithContext(ctx context.Context) GetApStatsDeviceApStatIotStatMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApStatsDeviceApStatIotStatMapOutput)
}

type GetApStatsDeviceApStatIotStatOutput struct{ *pulumi.OutputState }

func (GetApStatsDeviceApStatIotStatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApStatsDeviceApStatIotStat)(nil)).Elem()
}

func (o GetApStatsDeviceApStatIotStatOutput) ToGetApStatsDeviceApStatIotStatOutput() GetApStatsDeviceApStatIotStatOutput {
	return o
}

func (o GetApStatsDeviceApStatIotStatOutput) ToGetApStatsDeviceApStatIotStatOutputWithContext(ctx context.Context) GetApStatsDeviceApStatIotStatOutput {
	return o
}

func (o GetApStatsDeviceApStatIotStatOutput) Value() pulumi.IntOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatIotStat) int { return v.Value }).(pulumi.IntOutput)
}

type GetApStatsDeviceApStatIotStatMapOutput struct{ *pulumi.OutputState }

func (GetApStatsDeviceApStatIotStatMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]GetApStatsDeviceApStatIotStat)(nil)).Elem()
}

func (o GetApStatsDeviceApStatIotStatMapOutput) ToGetApStatsDeviceApStatIotStatMapOutput() GetApStatsDeviceApStatIotStatMapOutput {
	return o
}

func (o GetApStatsDeviceApStatIotStatMapOutput) ToGetApStatsDeviceApStatIotStatMapOutputWithContext(ctx context.Context) GetApStatsDeviceApStatIotStatMapOutput {
	return o
}

func (o GetApStatsDeviceApStatIotStatMapOutput) MapIndex(k pulumi.StringInput) GetApStatsDeviceApStatIotStatOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) GetApStatsDeviceApStatIotStat {
		return vs[0].(map[string]GetApStatsDeviceApStatIotStat)[vs[1].(string)]
	}).(GetApStatsDeviceApStatIotStatOutput)
}

type GetApStatsDeviceApStatIpConfig struct {
	// If `type`==`static`
	Dns []string `pulumi:"dns"`
	// Required if `type`==`static`
	DnsSuffixes []string `pulumi:"dnsSuffixes"`
	// Required if `type`==`static`
	Gateway  string `pulumi:"gateway"`
	Gateway6 string `pulumi:"gateway6"`
	// Required if `type`==`static`
	Ip  string `pulumi:"ip"`
	Ip6 string `pulumi:"ip6"`
	Mtu int    `pulumi:"mtu"`
	// Required if `type`==`static`
	Netmask  string `pulumi:"netmask"`
	Netmask6 string `pulumi:"netmask6"`
	// enum: `dhcp`, `static`
	Type string `pulumi:"type"`
	// enum: `autoconf`, `dhcp`, `disabled`, `static`
	Type6 string `pulumi:"type6"`
	// Management VLAN id, default is 1 (untagged)
	VlanId int `pulumi:"vlanId"`
}

// GetApStatsDeviceApStatIpConfigInput is an input type that accepts GetApStatsDeviceApStatIpConfigArgs and GetApStatsDeviceApStatIpConfigOutput values.
// You can construct a concrete instance of `GetApStatsDeviceApStatIpConfigInput` via:
//
//	GetApStatsDeviceApStatIpConfigArgs{...}
type GetApStatsDeviceApStatIpConfigInput interface {
	pulumi.Input

	ToGetApStatsDeviceApStatIpConfigOutput() GetApStatsDeviceApStatIpConfigOutput
	ToGetApStatsDeviceApStatIpConfigOutputWithContext(context.Context) GetApStatsDeviceApStatIpConfigOutput
}

type GetApStatsDeviceApStatIpConfigArgs struct {
	// If `type`==`static`
	Dns pulumi.StringArrayInput `pulumi:"dns"`
	// Required if `type`==`static`
	DnsSuffixes pulumi.StringArrayInput `pulumi:"dnsSuffixes"`
	// Required if `type`==`static`
	Gateway  pulumi.StringInput `pulumi:"gateway"`
	Gateway6 pulumi.StringInput `pulumi:"gateway6"`
	// Required if `type`==`static`
	Ip  pulumi.StringInput `pulumi:"ip"`
	Ip6 pulumi.StringInput `pulumi:"ip6"`
	Mtu pulumi.IntInput    `pulumi:"mtu"`
	// Required if `type`==`static`
	Netmask  pulumi.StringInput `pulumi:"netmask"`
	Netmask6 pulumi.StringInput `pulumi:"netmask6"`
	// enum: `dhcp`, `static`
	Type pulumi.StringInput `pulumi:"type"`
	// enum: `autoconf`, `dhcp`, `disabled`, `static`
	Type6 pulumi.StringInput `pulumi:"type6"`
	// Management VLAN id, default is 1 (untagged)
	VlanId pulumi.IntInput `pulumi:"vlanId"`
}

func (GetApStatsDeviceApStatIpConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApStatsDeviceApStatIpConfig)(nil)).Elem()
}

func (i GetApStatsDeviceApStatIpConfigArgs) ToGetApStatsDeviceApStatIpConfigOutput() GetApStatsDeviceApStatIpConfigOutput {
	return i.ToGetApStatsDeviceApStatIpConfigOutputWithContext(context.Background())
}

func (i GetApStatsDeviceApStatIpConfigArgs) ToGetApStatsDeviceApStatIpConfigOutputWithContext(ctx context.Context) GetApStatsDeviceApStatIpConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApStatsDeviceApStatIpConfigOutput)
}

type GetApStatsDeviceApStatIpConfigOutput struct{ *pulumi.OutputState }

func (GetApStatsDeviceApStatIpConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApStatsDeviceApStatIpConfig)(nil)).Elem()
}

func (o GetApStatsDeviceApStatIpConfigOutput) ToGetApStatsDeviceApStatIpConfigOutput() GetApStatsDeviceApStatIpConfigOutput {
	return o
}

func (o GetApStatsDeviceApStatIpConfigOutput) ToGetApStatsDeviceApStatIpConfigOutputWithContext(ctx context.Context) GetApStatsDeviceApStatIpConfigOutput {
	return o
}

// If `type`==`static`
func (o GetApStatsDeviceApStatIpConfigOutput) Dns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatIpConfig) []string { return v.Dns }).(pulumi.StringArrayOutput)
}

// Required if `type`==`static`
func (o GetApStatsDeviceApStatIpConfigOutput) DnsSuffixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatIpConfig) []string { return v.DnsSuffixes }).(pulumi.StringArrayOutput)
}

// Required if `type`==`static`
func (o GetApStatsDeviceApStatIpConfigOutput) Gateway() pulumi.StringOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatIpConfig) string { return v.Gateway }).(pulumi.StringOutput)
}

func (o GetApStatsDeviceApStatIpConfigOutput) Gateway6() pulumi.StringOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatIpConfig) string { return v.Gateway6 }).(pulumi.StringOutput)
}

// Required if `type`==`static`
func (o GetApStatsDeviceApStatIpConfigOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatIpConfig) string { return v.Ip }).(pulumi.StringOutput)
}

func (o GetApStatsDeviceApStatIpConfigOutput) Ip6() pulumi.StringOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatIpConfig) string { return v.Ip6 }).(pulumi.StringOutput)
}

func (o GetApStatsDeviceApStatIpConfigOutput) Mtu() pulumi.IntOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatIpConfig) int { return v.Mtu }).(pulumi.IntOutput)
}

// Required if `type`==`static`
func (o GetApStatsDeviceApStatIpConfigOutput) Netmask() pulumi.StringOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatIpConfig) string { return v.Netmask }).(pulumi.StringOutput)
}

func (o GetApStatsDeviceApStatIpConfigOutput) Netmask6() pulumi.StringOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatIpConfig) string { return v.Netmask6 }).(pulumi.StringOutput)
}

// enum: `dhcp`, `static`
func (o GetApStatsDeviceApStatIpConfigOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatIpConfig) string { return v.Type }).(pulumi.StringOutput)
}

// enum: `autoconf`, `dhcp`, `disabled`, `static`
func (o GetApStatsDeviceApStatIpConfigOutput) Type6() pulumi.StringOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatIpConfig) string { return v.Type6 }).(pulumi.StringOutput)
}

// Management VLAN id, default is 1 (untagged)
func (o GetApStatsDeviceApStatIpConfigOutput) VlanId() pulumi.IntOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatIpConfig) int { return v.VlanId }).(pulumi.IntOutput)
}

type GetApStatsDeviceApStatIpStat struct {
	DhcpServer  string            `pulumi:"dhcpServer"`
	Dns         []string          `pulumi:"dns"`
	DnsSuffixes []string          `pulumi:"dnsSuffixes"`
	Gateway     string            `pulumi:"gateway"`
	Gateway6    string            `pulumi:"gateway6"`
	Ip          string            `pulumi:"ip"`
	Ip6         string            `pulumi:"ip6"`
	Ips         map[string]string `pulumi:"ips"`
	Netmask     string            `pulumi:"netmask"`
	Netmask6    string            `pulumi:"netmask6"`
}

// GetApStatsDeviceApStatIpStatInput is an input type that accepts GetApStatsDeviceApStatIpStatArgs and GetApStatsDeviceApStatIpStatOutput values.
// You can construct a concrete instance of `GetApStatsDeviceApStatIpStatInput` via:
//
//	GetApStatsDeviceApStatIpStatArgs{...}
type GetApStatsDeviceApStatIpStatInput interface {
	pulumi.Input

	ToGetApStatsDeviceApStatIpStatOutput() GetApStatsDeviceApStatIpStatOutput
	ToGetApStatsDeviceApStatIpStatOutputWithContext(context.Context) GetApStatsDeviceApStatIpStatOutput
}

type GetApStatsDeviceApStatIpStatArgs struct {
	DhcpServer  pulumi.StringInput      `pulumi:"dhcpServer"`
	Dns         pulumi.StringArrayInput `pulumi:"dns"`
	DnsSuffixes pulumi.StringArrayInput `pulumi:"dnsSuffixes"`
	Gateway     pulumi.StringInput      `pulumi:"gateway"`
	Gateway6    pulumi.StringInput      `pulumi:"gateway6"`
	Ip          pulumi.StringInput      `pulumi:"ip"`
	Ip6         pulumi.StringInput      `pulumi:"ip6"`
	Ips         pulumi.StringMapInput   `pulumi:"ips"`
	Netmask     pulumi.StringInput      `pulumi:"netmask"`
	Netmask6    pulumi.StringInput      `pulumi:"netmask6"`
}

func (GetApStatsDeviceApStatIpStatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApStatsDeviceApStatIpStat)(nil)).Elem()
}

func (i GetApStatsDeviceApStatIpStatArgs) ToGetApStatsDeviceApStatIpStatOutput() GetApStatsDeviceApStatIpStatOutput {
	return i.ToGetApStatsDeviceApStatIpStatOutputWithContext(context.Background())
}

func (i GetApStatsDeviceApStatIpStatArgs) ToGetApStatsDeviceApStatIpStatOutputWithContext(ctx context.Context) GetApStatsDeviceApStatIpStatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApStatsDeviceApStatIpStatOutput)
}

type GetApStatsDeviceApStatIpStatOutput struct{ *pulumi.OutputState }

func (GetApStatsDeviceApStatIpStatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApStatsDeviceApStatIpStat)(nil)).Elem()
}

func (o GetApStatsDeviceApStatIpStatOutput) ToGetApStatsDeviceApStatIpStatOutput() GetApStatsDeviceApStatIpStatOutput {
	return o
}

func (o GetApStatsDeviceApStatIpStatOutput) ToGetApStatsDeviceApStatIpStatOutputWithContext(ctx context.Context) GetApStatsDeviceApStatIpStatOutput {
	return o
}

func (o GetApStatsDeviceApStatIpStatOutput) DhcpServer() pulumi.StringOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatIpStat) string { return v.DhcpServer }).(pulumi.StringOutput)
}

func (o GetApStatsDeviceApStatIpStatOutput) Dns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatIpStat) []string { return v.Dns }).(pulumi.StringArrayOutput)
}

func (o GetApStatsDeviceApStatIpStatOutput) DnsSuffixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatIpStat) []string { return v.DnsSuffixes }).(pulumi.StringArrayOutput)
}

func (o GetApStatsDeviceApStatIpStatOutput) Gateway() pulumi.StringOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatIpStat) string { return v.Gateway }).(pulumi.StringOutput)
}

func (o GetApStatsDeviceApStatIpStatOutput) Gateway6() pulumi.StringOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatIpStat) string { return v.Gateway6 }).(pulumi.StringOutput)
}

func (o GetApStatsDeviceApStatIpStatOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatIpStat) string { return v.Ip }).(pulumi.StringOutput)
}

func (o GetApStatsDeviceApStatIpStatOutput) Ip6() pulumi.StringOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatIpStat) string { return v.Ip6 }).(pulumi.StringOutput)
}

func (o GetApStatsDeviceApStatIpStatOutput) Ips() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatIpStat) map[string]string { return v.Ips }).(pulumi.StringMapOutput)
}

func (o GetApStatsDeviceApStatIpStatOutput) Netmask() pulumi.StringOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatIpStat) string { return v.Netmask }).(pulumi.StringOutput)
}

func (o GetApStatsDeviceApStatIpStatOutput) Netmask6() pulumi.StringOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatIpStat) string { return v.Netmask6 }).(pulumi.StringOutput)
}

type GetApStatsDeviceApStatL2tpStat struct {
	// List of sessions
	Sessions []GetApStatsDeviceApStatL2tpStatSession `pulumi:"sessions"`
	// enum: `established`, `establishedWithSession`, `idle`, `wait-ctrl-conn`, `wait-ctrl-reply`
	State string `pulumi:"state"`
	// Uptime
	Uptime int `pulumi:"uptime"`
	// WxlanTunnel ID
	WxtunnelId string `pulumi:"wxtunnelId"`
}

// GetApStatsDeviceApStatL2tpStatInput is an input type that accepts GetApStatsDeviceApStatL2tpStatArgs and GetApStatsDeviceApStatL2tpStatOutput values.
// You can construct a concrete instance of `GetApStatsDeviceApStatL2tpStatInput` via:
//
//	GetApStatsDeviceApStatL2tpStatArgs{...}
type GetApStatsDeviceApStatL2tpStatInput interface {
	pulumi.Input

	ToGetApStatsDeviceApStatL2tpStatOutput() GetApStatsDeviceApStatL2tpStatOutput
	ToGetApStatsDeviceApStatL2tpStatOutputWithContext(context.Context) GetApStatsDeviceApStatL2tpStatOutput
}

type GetApStatsDeviceApStatL2tpStatArgs struct {
	// List of sessions
	Sessions GetApStatsDeviceApStatL2tpStatSessionArrayInput `pulumi:"sessions"`
	// enum: `established`, `establishedWithSession`, `idle`, `wait-ctrl-conn`, `wait-ctrl-reply`
	State pulumi.StringInput `pulumi:"state"`
	// Uptime
	Uptime pulumi.IntInput `pulumi:"uptime"`
	// WxlanTunnel ID
	WxtunnelId pulumi.StringInput `pulumi:"wxtunnelId"`
}

func (GetApStatsDeviceApStatL2tpStatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApStatsDeviceApStatL2tpStat)(nil)).Elem()
}

func (i GetApStatsDeviceApStatL2tpStatArgs) ToGetApStatsDeviceApStatL2tpStatOutput() GetApStatsDeviceApStatL2tpStatOutput {
	return i.ToGetApStatsDeviceApStatL2tpStatOutputWithContext(context.Background())
}

func (i GetApStatsDeviceApStatL2tpStatArgs) ToGetApStatsDeviceApStatL2tpStatOutputWithContext(ctx context.Context) GetApStatsDeviceApStatL2tpStatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApStatsDeviceApStatL2tpStatOutput)
}

// GetApStatsDeviceApStatL2tpStatMapInput is an input type that accepts GetApStatsDeviceApStatL2tpStatMap and GetApStatsDeviceApStatL2tpStatMapOutput values.
// You can construct a concrete instance of `GetApStatsDeviceApStatL2tpStatMapInput` via:
//
//	GetApStatsDeviceApStatL2tpStatMap{ "key": GetApStatsDeviceApStatL2tpStatArgs{...} }
type GetApStatsDeviceApStatL2tpStatMapInput interface {
	pulumi.Input

	ToGetApStatsDeviceApStatL2tpStatMapOutput() GetApStatsDeviceApStatL2tpStatMapOutput
	ToGetApStatsDeviceApStatL2tpStatMapOutputWithContext(context.Context) GetApStatsDeviceApStatL2tpStatMapOutput
}

type GetApStatsDeviceApStatL2tpStatMap map[string]GetApStatsDeviceApStatL2tpStatInput

func (GetApStatsDeviceApStatL2tpStatMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]GetApStatsDeviceApStatL2tpStat)(nil)).Elem()
}

func (i GetApStatsDeviceApStatL2tpStatMap) ToGetApStatsDeviceApStatL2tpStatMapOutput() GetApStatsDeviceApStatL2tpStatMapOutput {
	return i.ToGetApStatsDeviceApStatL2tpStatMapOutputWithContext(context.Background())
}

func (i GetApStatsDeviceApStatL2tpStatMap) ToGetApStatsDeviceApStatL2tpStatMapOutputWithContext(ctx context.Context) GetApStatsDeviceApStatL2tpStatMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApStatsDeviceApStatL2tpStatMapOutput)
}

type GetApStatsDeviceApStatL2tpStatOutput struct{ *pulumi.OutputState }

func (GetApStatsDeviceApStatL2tpStatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApStatsDeviceApStatL2tpStat)(nil)).Elem()
}

func (o GetApStatsDeviceApStatL2tpStatOutput) ToGetApStatsDeviceApStatL2tpStatOutput() GetApStatsDeviceApStatL2tpStatOutput {
	return o
}

func (o GetApStatsDeviceApStatL2tpStatOutput) ToGetApStatsDeviceApStatL2tpStatOutputWithContext(ctx context.Context) GetApStatsDeviceApStatL2tpStatOutput {
	return o
}

// List of sessions
func (o GetApStatsDeviceApStatL2tpStatOutput) Sessions() GetApStatsDeviceApStatL2tpStatSessionArrayOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatL2tpStat) []GetApStatsDeviceApStatL2tpStatSession { return v.Sessions }).(GetApStatsDeviceApStatL2tpStatSessionArrayOutput)
}

// enum: `established`, `establishedWithSession`, `idle`, `wait-ctrl-conn`, `wait-ctrl-reply`
func (o GetApStatsDeviceApStatL2tpStatOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatL2tpStat) string { return v.State }).(pulumi.StringOutput)
}

// Uptime
func (o GetApStatsDeviceApStatL2tpStatOutput) Uptime() pulumi.IntOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatL2tpStat) int { return v.Uptime }).(pulumi.IntOutput)
}

// WxlanTunnel ID
func (o GetApStatsDeviceApStatL2tpStatOutput) WxtunnelId() pulumi.StringOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatL2tpStat) string { return v.WxtunnelId }).(pulumi.StringOutput)
}

type GetApStatsDeviceApStatL2tpStatMapOutput struct{ *pulumi.OutputState }

func (GetApStatsDeviceApStatL2tpStatMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]GetApStatsDeviceApStatL2tpStat)(nil)).Elem()
}

func (o GetApStatsDeviceApStatL2tpStatMapOutput) ToGetApStatsDeviceApStatL2tpStatMapOutput() GetApStatsDeviceApStatL2tpStatMapOutput {
	return o
}

func (o GetApStatsDeviceApStatL2tpStatMapOutput) ToGetApStatsDeviceApStatL2tpStatMapOutputWithContext(ctx context.Context) GetApStatsDeviceApStatL2tpStatMapOutput {
	return o
}

func (o GetApStatsDeviceApStatL2tpStatMapOutput) MapIndex(k pulumi.StringInput) GetApStatsDeviceApStatL2tpStatOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) GetApStatsDeviceApStatL2tpStat {
		return vs[0].(map[string]GetApStatsDeviceApStatL2tpStat)[vs[1].(string)]
	}).(GetApStatsDeviceApStatL2tpStatOutput)
}

type GetApStatsDeviceApStatL2tpStatSession struct {
	// Remote sessions id (dynamically unless Tunnel is said to be static)
	LocalSid int `pulumi:"localSid"`
	// WxlanTunnel Remote ID (user-configured)
	RemoteId string `pulumi:"remoteId"`
	// Remote sessions id (dynamically unless Tunnel is said to be static)
	RemoteSid int `pulumi:"remoteSid"`
	// enum: `established`, `establishedWithSession`, `idle`, `wait-ctrl-conn`, `wait-ctrl-reply`
	State string `pulumi:"state"`
}

// GetApStatsDeviceApStatL2tpStatSessionInput is an input type that accepts GetApStatsDeviceApStatL2tpStatSessionArgs and GetApStatsDeviceApStatL2tpStatSessionOutput values.
// You can construct a concrete instance of `GetApStatsDeviceApStatL2tpStatSessionInput` via:
//
//	GetApStatsDeviceApStatL2tpStatSessionArgs{...}
type GetApStatsDeviceApStatL2tpStatSessionInput interface {
	pulumi.Input

	ToGetApStatsDeviceApStatL2tpStatSessionOutput() GetApStatsDeviceApStatL2tpStatSessionOutput
	ToGetApStatsDeviceApStatL2tpStatSessionOutputWithContext(context.Context) GetApStatsDeviceApStatL2tpStatSessionOutput
}

type GetApStatsDeviceApStatL2tpStatSessionArgs struct {
	// Remote sessions id (dynamically unless Tunnel is said to be static)
	LocalSid pulumi.IntInput `pulumi:"localSid"`
	// WxlanTunnel Remote ID (user-configured)
	RemoteId pulumi.StringInput `pulumi:"remoteId"`
	// Remote sessions id (dynamically unless Tunnel is said to be static)
	RemoteSid pulumi.IntInput `pulumi:"remoteSid"`
	// enum: `established`, `establishedWithSession`, `idle`, `wait-ctrl-conn`, `wait-ctrl-reply`
	State pulumi.StringInput `pulumi:"state"`
}

func (GetApStatsDeviceApStatL2tpStatSessionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApStatsDeviceApStatL2tpStatSession)(nil)).Elem()
}

func (i GetApStatsDeviceApStatL2tpStatSessionArgs) ToGetApStatsDeviceApStatL2tpStatSessionOutput() GetApStatsDeviceApStatL2tpStatSessionOutput {
	return i.ToGetApStatsDeviceApStatL2tpStatSessionOutputWithContext(context.Background())
}

func (i GetApStatsDeviceApStatL2tpStatSessionArgs) ToGetApStatsDeviceApStatL2tpStatSessionOutputWithContext(ctx context.Context) GetApStatsDeviceApStatL2tpStatSessionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApStatsDeviceApStatL2tpStatSessionOutput)
}

// GetApStatsDeviceApStatL2tpStatSessionArrayInput is an input type that accepts GetApStatsDeviceApStatL2tpStatSessionArray and GetApStatsDeviceApStatL2tpStatSessionArrayOutput values.
// You can construct a concrete instance of `GetApStatsDeviceApStatL2tpStatSessionArrayInput` via:
//
//	GetApStatsDeviceApStatL2tpStatSessionArray{ GetApStatsDeviceApStatL2tpStatSessionArgs{...} }
type GetApStatsDeviceApStatL2tpStatSessionArrayInput interface {
	pulumi.Input

	ToGetApStatsDeviceApStatL2tpStatSessionArrayOutput() GetApStatsDeviceApStatL2tpStatSessionArrayOutput
	ToGetApStatsDeviceApStatL2tpStatSessionArrayOutputWithContext(context.Context) GetApStatsDeviceApStatL2tpStatSessionArrayOutput
}

type GetApStatsDeviceApStatL2tpStatSessionArray []GetApStatsDeviceApStatL2tpStatSessionInput

func (GetApStatsDeviceApStatL2tpStatSessionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApStatsDeviceApStatL2tpStatSession)(nil)).Elem()
}

func (i GetApStatsDeviceApStatL2tpStatSessionArray) ToGetApStatsDeviceApStatL2tpStatSessionArrayOutput() GetApStatsDeviceApStatL2tpStatSessionArrayOutput {
	return i.ToGetApStatsDeviceApStatL2tpStatSessionArrayOutputWithContext(context.Background())
}

func (i GetApStatsDeviceApStatL2tpStatSessionArray) ToGetApStatsDeviceApStatL2tpStatSessionArrayOutputWithContext(ctx context.Context) GetApStatsDeviceApStatL2tpStatSessionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApStatsDeviceApStatL2tpStatSessionArrayOutput)
}

type GetApStatsDeviceApStatL2tpStatSessionOutput struct{ *pulumi.OutputState }

func (GetApStatsDeviceApStatL2tpStatSessionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApStatsDeviceApStatL2tpStatSession)(nil)).Elem()
}

func (o GetApStatsDeviceApStatL2tpStatSessionOutput) ToGetApStatsDeviceApStatL2tpStatSessionOutput() GetApStatsDeviceApStatL2tpStatSessionOutput {
	return o
}

func (o GetApStatsDeviceApStatL2tpStatSessionOutput) ToGetApStatsDeviceApStatL2tpStatSessionOutputWithContext(ctx context.Context) GetApStatsDeviceApStatL2tpStatSessionOutput {
	return o
}

// Remote sessions id (dynamically unless Tunnel is said to be static)
func (o GetApStatsDeviceApStatL2tpStatSessionOutput) LocalSid() pulumi.IntOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatL2tpStatSession) int { return v.LocalSid }).(pulumi.IntOutput)
}

// WxlanTunnel Remote ID (user-configured)
func (o GetApStatsDeviceApStatL2tpStatSessionOutput) RemoteId() pulumi.StringOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatL2tpStatSession) string { return v.RemoteId }).(pulumi.StringOutput)
}

// Remote sessions id (dynamically unless Tunnel is said to be static)
func (o GetApStatsDeviceApStatL2tpStatSessionOutput) RemoteSid() pulumi.IntOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatL2tpStatSession) int { return v.RemoteSid }).(pulumi.IntOutput)
}

// enum: `established`, `establishedWithSession`, `idle`, `wait-ctrl-conn`, `wait-ctrl-reply`
func (o GetApStatsDeviceApStatL2tpStatSessionOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatL2tpStatSession) string { return v.State }).(pulumi.StringOutput)
}

type GetApStatsDeviceApStatL2tpStatSessionArrayOutput struct{ *pulumi.OutputState }

func (GetApStatsDeviceApStatL2tpStatSessionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApStatsDeviceApStatL2tpStatSession)(nil)).Elem()
}

func (o GetApStatsDeviceApStatL2tpStatSessionArrayOutput) ToGetApStatsDeviceApStatL2tpStatSessionArrayOutput() GetApStatsDeviceApStatL2tpStatSessionArrayOutput {
	return o
}

func (o GetApStatsDeviceApStatL2tpStatSessionArrayOutput) ToGetApStatsDeviceApStatL2tpStatSessionArrayOutputWithContext(ctx context.Context) GetApStatsDeviceApStatL2tpStatSessionArrayOutput {
	return o
}

func (o GetApStatsDeviceApStatL2tpStatSessionArrayOutput) Index(i pulumi.IntInput) GetApStatsDeviceApStatL2tpStatSessionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApStatsDeviceApStatL2tpStatSession {
		return vs[0].([]GetApStatsDeviceApStatL2tpStatSession)[vs[1].(int)]
	}).(GetApStatsDeviceApStatL2tpStatSessionOutput)
}

type GetApStatsDeviceApStatLastTrouble struct {
	// Code definitions list at List Ap Led Definition
	Code string `pulumi:"code"`
	// Epoch (seconds)
	Timestamp float64 `pulumi:"timestamp"`
}

// GetApStatsDeviceApStatLastTroubleInput is an input type that accepts GetApStatsDeviceApStatLastTroubleArgs and GetApStatsDeviceApStatLastTroubleOutput values.
// You can construct a concrete instance of `GetApStatsDeviceApStatLastTroubleInput` via:
//
//	GetApStatsDeviceApStatLastTroubleArgs{...}
type GetApStatsDeviceApStatLastTroubleInput interface {
	pulumi.Input

	ToGetApStatsDeviceApStatLastTroubleOutput() GetApStatsDeviceApStatLastTroubleOutput
	ToGetApStatsDeviceApStatLastTroubleOutputWithContext(context.Context) GetApStatsDeviceApStatLastTroubleOutput
}

type GetApStatsDeviceApStatLastTroubleArgs struct {
	// Code definitions list at List Ap Led Definition
	Code pulumi.StringInput `pulumi:"code"`
	// Epoch (seconds)
	Timestamp pulumi.Float64Input `pulumi:"timestamp"`
}

func (GetApStatsDeviceApStatLastTroubleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApStatsDeviceApStatLastTrouble)(nil)).Elem()
}

func (i GetApStatsDeviceApStatLastTroubleArgs) ToGetApStatsDeviceApStatLastTroubleOutput() GetApStatsDeviceApStatLastTroubleOutput {
	return i.ToGetApStatsDeviceApStatLastTroubleOutputWithContext(context.Background())
}

func (i GetApStatsDeviceApStatLastTroubleArgs) ToGetApStatsDeviceApStatLastTroubleOutputWithContext(ctx context.Context) GetApStatsDeviceApStatLastTroubleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApStatsDeviceApStatLastTroubleOutput)
}

type GetApStatsDeviceApStatLastTroubleOutput struct{ *pulumi.OutputState }

func (GetApStatsDeviceApStatLastTroubleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApStatsDeviceApStatLastTrouble)(nil)).Elem()
}

func (o GetApStatsDeviceApStatLastTroubleOutput) ToGetApStatsDeviceApStatLastTroubleOutput() GetApStatsDeviceApStatLastTroubleOutput {
	return o
}

func (o GetApStatsDeviceApStatLastTroubleOutput) ToGetApStatsDeviceApStatLastTroubleOutputWithContext(ctx context.Context) GetApStatsDeviceApStatLastTroubleOutput {
	return o
}

// Code definitions list at List Ap Led Definition
func (o GetApStatsDeviceApStatLastTroubleOutput) Code() pulumi.StringOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatLastTrouble) string { return v.Code }).(pulumi.StringOutput)
}

// Epoch (seconds)
func (o GetApStatsDeviceApStatLastTroubleOutput) Timestamp() pulumi.Float64Output {
	return o.ApplyT(func(v GetApStatsDeviceApStatLastTrouble) float64 { return v.Timestamp }).(pulumi.Float64Output)
}

type GetApStatsDeviceApStatLed struct {
	Brightness int  `pulumi:"brightness"`
	Enabled    bool `pulumi:"enabled"`
}

// GetApStatsDeviceApStatLedInput is an input type that accepts GetApStatsDeviceApStatLedArgs and GetApStatsDeviceApStatLedOutput values.
// You can construct a concrete instance of `GetApStatsDeviceApStatLedInput` via:
//
//	GetApStatsDeviceApStatLedArgs{...}
type GetApStatsDeviceApStatLedInput interface {
	pulumi.Input

	ToGetApStatsDeviceApStatLedOutput() GetApStatsDeviceApStatLedOutput
	ToGetApStatsDeviceApStatLedOutputWithContext(context.Context) GetApStatsDeviceApStatLedOutput
}

type GetApStatsDeviceApStatLedArgs struct {
	Brightness pulumi.IntInput  `pulumi:"brightness"`
	Enabled    pulumi.BoolInput `pulumi:"enabled"`
}

func (GetApStatsDeviceApStatLedArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApStatsDeviceApStatLed)(nil)).Elem()
}

func (i GetApStatsDeviceApStatLedArgs) ToGetApStatsDeviceApStatLedOutput() GetApStatsDeviceApStatLedOutput {
	return i.ToGetApStatsDeviceApStatLedOutputWithContext(context.Background())
}

func (i GetApStatsDeviceApStatLedArgs) ToGetApStatsDeviceApStatLedOutputWithContext(ctx context.Context) GetApStatsDeviceApStatLedOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApStatsDeviceApStatLedOutput)
}

type GetApStatsDeviceApStatLedOutput struct{ *pulumi.OutputState }

func (GetApStatsDeviceApStatLedOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApStatsDeviceApStatLed)(nil)).Elem()
}

func (o GetApStatsDeviceApStatLedOutput) ToGetApStatsDeviceApStatLedOutput() GetApStatsDeviceApStatLedOutput {
	return o
}

func (o GetApStatsDeviceApStatLedOutput) ToGetApStatsDeviceApStatLedOutputWithContext(ctx context.Context) GetApStatsDeviceApStatLedOutput {
	return o
}

func (o GetApStatsDeviceApStatLedOutput) Brightness() pulumi.IntOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatLed) int { return v.Brightness }).(pulumi.IntOutput)
}

func (o GetApStatsDeviceApStatLedOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatLed) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type GetApStatsDeviceApStatLldpStat struct {
	ChassisId string `pulumi:"chassisId"`
	// Whether it support LLDP-MED
	LldpMedSupported bool `pulumi:"lldpMedSupported"`
	// Switch’s management address (if advertised), can be IPv4, IPv6, or MAC
	MgmtAddr  string   `pulumi:"mgmtAddr"`
	MgmtAddrs []string `pulumi:"mgmtAddrs"`
	// ge-0/0/4
	PortDesc string `pulumi:"portDesc"`
	PortId   string `pulumi:"portId"`
	// In mW, provided/allocated by PSE
	PowerAllocated float64 `pulumi:"powerAllocated"`
	// In mW, total power needed by PD
	PowerDraw float64 `pulumi:"powerDraw"`
	// Number of negotiations, if it keeps increasing, we don’ t have a stable power
	PowerRequestCount int `pulumi:"powerRequestCount"`
	// In mW, the current power requested by PD
	PowerRequested float64 `pulumi:"powerRequested"`
	// Description provided by switch
	SystemDesc string `pulumi:"systemDesc"`
	// Name of the switch
	SystemName string `pulumi:"systemName"`
}

// GetApStatsDeviceApStatLldpStatInput is an input type that accepts GetApStatsDeviceApStatLldpStatArgs and GetApStatsDeviceApStatLldpStatOutput values.
// You can construct a concrete instance of `GetApStatsDeviceApStatLldpStatInput` via:
//
//	GetApStatsDeviceApStatLldpStatArgs{...}
type GetApStatsDeviceApStatLldpStatInput interface {
	pulumi.Input

	ToGetApStatsDeviceApStatLldpStatOutput() GetApStatsDeviceApStatLldpStatOutput
	ToGetApStatsDeviceApStatLldpStatOutputWithContext(context.Context) GetApStatsDeviceApStatLldpStatOutput
}

type GetApStatsDeviceApStatLldpStatArgs struct {
	ChassisId pulumi.StringInput `pulumi:"chassisId"`
	// Whether it support LLDP-MED
	LldpMedSupported pulumi.BoolInput `pulumi:"lldpMedSupported"`
	// Switch’s management address (if advertised), can be IPv4, IPv6, or MAC
	MgmtAddr  pulumi.StringInput      `pulumi:"mgmtAddr"`
	MgmtAddrs pulumi.StringArrayInput `pulumi:"mgmtAddrs"`
	// ge-0/0/4
	PortDesc pulumi.StringInput `pulumi:"portDesc"`
	PortId   pulumi.StringInput `pulumi:"portId"`
	// In mW, provided/allocated by PSE
	PowerAllocated pulumi.Float64Input `pulumi:"powerAllocated"`
	// In mW, total power needed by PD
	PowerDraw pulumi.Float64Input `pulumi:"powerDraw"`
	// Number of negotiations, if it keeps increasing, we don’ t have a stable power
	PowerRequestCount pulumi.IntInput `pulumi:"powerRequestCount"`
	// In mW, the current power requested by PD
	PowerRequested pulumi.Float64Input `pulumi:"powerRequested"`
	// Description provided by switch
	SystemDesc pulumi.StringInput `pulumi:"systemDesc"`
	// Name of the switch
	SystemName pulumi.StringInput `pulumi:"systemName"`
}

func (GetApStatsDeviceApStatLldpStatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApStatsDeviceApStatLldpStat)(nil)).Elem()
}

func (i GetApStatsDeviceApStatLldpStatArgs) ToGetApStatsDeviceApStatLldpStatOutput() GetApStatsDeviceApStatLldpStatOutput {
	return i.ToGetApStatsDeviceApStatLldpStatOutputWithContext(context.Background())
}

func (i GetApStatsDeviceApStatLldpStatArgs) ToGetApStatsDeviceApStatLldpStatOutputWithContext(ctx context.Context) GetApStatsDeviceApStatLldpStatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApStatsDeviceApStatLldpStatOutput)
}

type GetApStatsDeviceApStatLldpStatOutput struct{ *pulumi.OutputState }

func (GetApStatsDeviceApStatLldpStatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApStatsDeviceApStatLldpStat)(nil)).Elem()
}

func (o GetApStatsDeviceApStatLldpStatOutput) ToGetApStatsDeviceApStatLldpStatOutput() GetApStatsDeviceApStatLldpStatOutput {
	return o
}

func (o GetApStatsDeviceApStatLldpStatOutput) ToGetApStatsDeviceApStatLldpStatOutputWithContext(ctx context.Context) GetApStatsDeviceApStatLldpStatOutput {
	return o
}

func (o GetApStatsDeviceApStatLldpStatOutput) ChassisId() pulumi.StringOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatLldpStat) string { return v.ChassisId }).(pulumi.StringOutput)
}

// Whether it support LLDP-MED
func (o GetApStatsDeviceApStatLldpStatOutput) LldpMedSupported() pulumi.BoolOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatLldpStat) bool { return v.LldpMedSupported }).(pulumi.BoolOutput)
}

// Switch’s management address (if advertised), can be IPv4, IPv6, or MAC
func (o GetApStatsDeviceApStatLldpStatOutput) MgmtAddr() pulumi.StringOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatLldpStat) string { return v.MgmtAddr }).(pulumi.StringOutput)
}

func (o GetApStatsDeviceApStatLldpStatOutput) MgmtAddrs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatLldpStat) []string { return v.MgmtAddrs }).(pulumi.StringArrayOutput)
}

// ge-0/0/4
func (o GetApStatsDeviceApStatLldpStatOutput) PortDesc() pulumi.StringOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatLldpStat) string { return v.PortDesc }).(pulumi.StringOutput)
}

func (o GetApStatsDeviceApStatLldpStatOutput) PortId() pulumi.StringOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatLldpStat) string { return v.PortId }).(pulumi.StringOutput)
}

// In mW, provided/allocated by PSE
func (o GetApStatsDeviceApStatLldpStatOutput) PowerAllocated() pulumi.Float64Output {
	return o.ApplyT(func(v GetApStatsDeviceApStatLldpStat) float64 { return v.PowerAllocated }).(pulumi.Float64Output)
}

// In mW, total power needed by PD
func (o GetApStatsDeviceApStatLldpStatOutput) PowerDraw() pulumi.Float64Output {
	return o.ApplyT(func(v GetApStatsDeviceApStatLldpStat) float64 { return v.PowerDraw }).(pulumi.Float64Output)
}

// Number of negotiations, if it keeps increasing, we don’ t have a stable power
func (o GetApStatsDeviceApStatLldpStatOutput) PowerRequestCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatLldpStat) int { return v.PowerRequestCount }).(pulumi.IntOutput)
}

// In mW, the current power requested by PD
func (o GetApStatsDeviceApStatLldpStatOutput) PowerRequested() pulumi.Float64Output {
	return o.ApplyT(func(v GetApStatsDeviceApStatLldpStat) float64 { return v.PowerRequested }).(pulumi.Float64Output)
}

// Description provided by switch
func (o GetApStatsDeviceApStatLldpStatOutput) SystemDesc() pulumi.StringOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatLldpStat) string { return v.SystemDesc }).(pulumi.StringOutput)
}

// Name of the switch
func (o GetApStatsDeviceApStatLldpStatOutput) SystemName() pulumi.StringOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatLldpStat) string { return v.SystemName }).(pulumi.StringOutput)
}

type GetApStatsDeviceApStatMeshDownlinks struct {
	Band     string `pulumi:"band"`
	Channel  int    `pulumi:"channel"`
	IdleTime int    `pulumi:"idleTime"`
	// Last seen timestamp
	LastSeen float64 `pulumi:"lastSeen"`
	Proto    string  `pulumi:"proto"`
	Rssi     int     `pulumi:"rssi"`
	// Rate of receiving traffic, bits/seconds, last known
	RxBps int `pulumi:"rxBps"`
	// Amount of traffic received since connection
	RxBytes int `pulumi:"rxBytes"`
	// Amount of packets received since connection
	RxPackets int `pulumi:"rxPackets"`
	// RX Rate, Mbps
	RxRate float64 `pulumi:"rxRate"`
	// Amount of rx retries
	RxRetries int    `pulumi:"rxRetries"`
	SiteId    string `pulumi:"siteId"`
	Snr       int    `pulumi:"snr"`
	// Rate of transmitting traffic, bits/seconds, last known
	TxBps int `pulumi:"txBps"`
	// Amount of traffic sent since connection
	TxBytes int `pulumi:"txBytes"`
	// Amount of packets sent since connection
	TxPackets int `pulumi:"txPackets"`
	// TX Rate, Mbps
	TxRate float64 `pulumi:"txRate"`
	// Amount of tx retries
	TxRetries int `pulumi:"txRetries"`
}

// GetApStatsDeviceApStatMeshDownlinksInput is an input type that accepts GetApStatsDeviceApStatMeshDownlinksArgs and GetApStatsDeviceApStatMeshDownlinksOutput values.
// You can construct a concrete instance of `GetApStatsDeviceApStatMeshDownlinksInput` via:
//
//	GetApStatsDeviceApStatMeshDownlinksArgs{...}
type GetApStatsDeviceApStatMeshDownlinksInput interface {
	pulumi.Input

	ToGetApStatsDeviceApStatMeshDownlinksOutput() GetApStatsDeviceApStatMeshDownlinksOutput
	ToGetApStatsDeviceApStatMeshDownlinksOutputWithContext(context.Context) GetApStatsDeviceApStatMeshDownlinksOutput
}

type GetApStatsDeviceApStatMeshDownlinksArgs struct {
	Band     pulumi.StringInput `pulumi:"band"`
	Channel  pulumi.IntInput    `pulumi:"channel"`
	IdleTime pulumi.IntInput    `pulumi:"idleTime"`
	// Last seen timestamp
	LastSeen pulumi.Float64Input `pulumi:"lastSeen"`
	Proto    pulumi.StringInput  `pulumi:"proto"`
	Rssi     pulumi.IntInput     `pulumi:"rssi"`
	// Rate of receiving traffic, bits/seconds, last known
	RxBps pulumi.IntInput `pulumi:"rxBps"`
	// Amount of traffic received since connection
	RxBytes pulumi.IntInput `pulumi:"rxBytes"`
	// Amount of packets received since connection
	RxPackets pulumi.IntInput `pulumi:"rxPackets"`
	// RX Rate, Mbps
	RxRate pulumi.Float64Input `pulumi:"rxRate"`
	// Amount of rx retries
	RxRetries pulumi.IntInput    `pulumi:"rxRetries"`
	SiteId    pulumi.StringInput `pulumi:"siteId"`
	Snr       pulumi.IntInput    `pulumi:"snr"`
	// Rate of transmitting traffic, bits/seconds, last known
	TxBps pulumi.IntInput `pulumi:"txBps"`
	// Amount of traffic sent since connection
	TxBytes pulumi.IntInput `pulumi:"txBytes"`
	// Amount of packets sent since connection
	TxPackets pulumi.IntInput `pulumi:"txPackets"`
	// TX Rate, Mbps
	TxRate pulumi.Float64Input `pulumi:"txRate"`
	// Amount of tx retries
	TxRetries pulumi.IntInput `pulumi:"txRetries"`
}

func (GetApStatsDeviceApStatMeshDownlinksArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApStatsDeviceApStatMeshDownlinks)(nil)).Elem()
}

func (i GetApStatsDeviceApStatMeshDownlinksArgs) ToGetApStatsDeviceApStatMeshDownlinksOutput() GetApStatsDeviceApStatMeshDownlinksOutput {
	return i.ToGetApStatsDeviceApStatMeshDownlinksOutputWithContext(context.Background())
}

func (i GetApStatsDeviceApStatMeshDownlinksArgs) ToGetApStatsDeviceApStatMeshDownlinksOutputWithContext(ctx context.Context) GetApStatsDeviceApStatMeshDownlinksOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApStatsDeviceApStatMeshDownlinksOutput)
}

// GetApStatsDeviceApStatMeshDownlinksMapInput is an input type that accepts GetApStatsDeviceApStatMeshDownlinksMap and GetApStatsDeviceApStatMeshDownlinksMapOutput values.
// You can construct a concrete instance of `GetApStatsDeviceApStatMeshDownlinksMapInput` via:
//
//	GetApStatsDeviceApStatMeshDownlinksMap{ "key": GetApStatsDeviceApStatMeshDownlinksArgs{...} }
type GetApStatsDeviceApStatMeshDownlinksMapInput interface {
	pulumi.Input

	ToGetApStatsDeviceApStatMeshDownlinksMapOutput() GetApStatsDeviceApStatMeshDownlinksMapOutput
	ToGetApStatsDeviceApStatMeshDownlinksMapOutputWithContext(context.Context) GetApStatsDeviceApStatMeshDownlinksMapOutput
}

type GetApStatsDeviceApStatMeshDownlinksMap map[string]GetApStatsDeviceApStatMeshDownlinksInput

func (GetApStatsDeviceApStatMeshDownlinksMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]GetApStatsDeviceApStatMeshDownlinks)(nil)).Elem()
}

func (i GetApStatsDeviceApStatMeshDownlinksMap) ToGetApStatsDeviceApStatMeshDownlinksMapOutput() GetApStatsDeviceApStatMeshDownlinksMapOutput {
	return i.ToGetApStatsDeviceApStatMeshDownlinksMapOutputWithContext(context.Background())
}

func (i GetApStatsDeviceApStatMeshDownlinksMap) ToGetApStatsDeviceApStatMeshDownlinksMapOutputWithContext(ctx context.Context) GetApStatsDeviceApStatMeshDownlinksMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApStatsDeviceApStatMeshDownlinksMapOutput)
}

type GetApStatsDeviceApStatMeshDownlinksOutput struct{ *pulumi.OutputState }

func (GetApStatsDeviceApStatMeshDownlinksOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApStatsDeviceApStatMeshDownlinks)(nil)).Elem()
}

func (o GetApStatsDeviceApStatMeshDownlinksOutput) ToGetApStatsDeviceApStatMeshDownlinksOutput() GetApStatsDeviceApStatMeshDownlinksOutput {
	return o
}

func (o GetApStatsDeviceApStatMeshDownlinksOutput) ToGetApStatsDeviceApStatMeshDownlinksOutputWithContext(ctx context.Context) GetApStatsDeviceApStatMeshDownlinksOutput {
	return o
}

func (o GetApStatsDeviceApStatMeshDownlinksOutput) Band() pulumi.StringOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatMeshDownlinks) string { return v.Band }).(pulumi.StringOutput)
}

func (o GetApStatsDeviceApStatMeshDownlinksOutput) Channel() pulumi.IntOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatMeshDownlinks) int { return v.Channel }).(pulumi.IntOutput)
}

func (o GetApStatsDeviceApStatMeshDownlinksOutput) IdleTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatMeshDownlinks) int { return v.IdleTime }).(pulumi.IntOutput)
}

// Last seen timestamp
func (o GetApStatsDeviceApStatMeshDownlinksOutput) LastSeen() pulumi.Float64Output {
	return o.ApplyT(func(v GetApStatsDeviceApStatMeshDownlinks) float64 { return v.LastSeen }).(pulumi.Float64Output)
}

func (o GetApStatsDeviceApStatMeshDownlinksOutput) Proto() pulumi.StringOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatMeshDownlinks) string { return v.Proto }).(pulumi.StringOutput)
}

func (o GetApStatsDeviceApStatMeshDownlinksOutput) Rssi() pulumi.IntOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatMeshDownlinks) int { return v.Rssi }).(pulumi.IntOutput)
}

// Rate of receiving traffic, bits/seconds, last known
func (o GetApStatsDeviceApStatMeshDownlinksOutput) RxBps() pulumi.IntOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatMeshDownlinks) int { return v.RxBps }).(pulumi.IntOutput)
}

// Amount of traffic received since connection
func (o GetApStatsDeviceApStatMeshDownlinksOutput) RxBytes() pulumi.IntOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatMeshDownlinks) int { return v.RxBytes }).(pulumi.IntOutput)
}

// Amount of packets received since connection
func (o GetApStatsDeviceApStatMeshDownlinksOutput) RxPackets() pulumi.IntOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatMeshDownlinks) int { return v.RxPackets }).(pulumi.IntOutput)
}

// RX Rate, Mbps
func (o GetApStatsDeviceApStatMeshDownlinksOutput) RxRate() pulumi.Float64Output {
	return o.ApplyT(func(v GetApStatsDeviceApStatMeshDownlinks) float64 { return v.RxRate }).(pulumi.Float64Output)
}

// Amount of rx retries
func (o GetApStatsDeviceApStatMeshDownlinksOutput) RxRetries() pulumi.IntOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatMeshDownlinks) int { return v.RxRetries }).(pulumi.IntOutput)
}

func (o GetApStatsDeviceApStatMeshDownlinksOutput) SiteId() pulumi.StringOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatMeshDownlinks) string { return v.SiteId }).(pulumi.StringOutput)
}

func (o GetApStatsDeviceApStatMeshDownlinksOutput) Snr() pulumi.IntOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatMeshDownlinks) int { return v.Snr }).(pulumi.IntOutput)
}

// Rate of transmitting traffic, bits/seconds, last known
func (o GetApStatsDeviceApStatMeshDownlinksOutput) TxBps() pulumi.IntOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatMeshDownlinks) int { return v.TxBps }).(pulumi.IntOutput)
}

// Amount of traffic sent since connection
func (o GetApStatsDeviceApStatMeshDownlinksOutput) TxBytes() pulumi.IntOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatMeshDownlinks) int { return v.TxBytes }).(pulumi.IntOutput)
}

// Amount of packets sent since connection
func (o GetApStatsDeviceApStatMeshDownlinksOutput) TxPackets() pulumi.IntOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatMeshDownlinks) int { return v.TxPackets }).(pulumi.IntOutput)
}

// TX Rate, Mbps
func (o GetApStatsDeviceApStatMeshDownlinksOutput) TxRate() pulumi.Float64Output {
	return o.ApplyT(func(v GetApStatsDeviceApStatMeshDownlinks) float64 { return v.TxRate }).(pulumi.Float64Output)
}

// Amount of tx retries
func (o GetApStatsDeviceApStatMeshDownlinksOutput) TxRetries() pulumi.IntOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatMeshDownlinks) int { return v.TxRetries }).(pulumi.IntOutput)
}

type GetApStatsDeviceApStatMeshDownlinksMapOutput struct{ *pulumi.OutputState }

func (GetApStatsDeviceApStatMeshDownlinksMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]GetApStatsDeviceApStatMeshDownlinks)(nil)).Elem()
}

func (o GetApStatsDeviceApStatMeshDownlinksMapOutput) ToGetApStatsDeviceApStatMeshDownlinksMapOutput() GetApStatsDeviceApStatMeshDownlinksMapOutput {
	return o
}

func (o GetApStatsDeviceApStatMeshDownlinksMapOutput) ToGetApStatsDeviceApStatMeshDownlinksMapOutputWithContext(ctx context.Context) GetApStatsDeviceApStatMeshDownlinksMapOutput {
	return o
}

func (o GetApStatsDeviceApStatMeshDownlinksMapOutput) MapIndex(k pulumi.StringInput) GetApStatsDeviceApStatMeshDownlinksOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) GetApStatsDeviceApStatMeshDownlinks {
		return vs[0].(map[string]GetApStatsDeviceApStatMeshDownlinks)[vs[1].(string)]
	}).(GetApStatsDeviceApStatMeshDownlinksOutput)
}

type GetApStatsDeviceApStatMeshUplink struct {
	Band     string `pulumi:"band"`
	Channel  int    `pulumi:"channel"`
	IdleTime int    `pulumi:"idleTime"`
	// Last seen timestamp
	LastSeen float64 `pulumi:"lastSeen"`
	Proto    string  `pulumi:"proto"`
	Rssi     int     `pulumi:"rssi"`
	// Rate of receiving traffic, bits/seconds, last known
	RxBps int `pulumi:"rxBps"`
	// Amount of traffic received since connection
	RxBytes int `pulumi:"rxBytes"`
	// Amount of packets received since connection
	RxPackets int `pulumi:"rxPackets"`
	// RX Rate, Mbps
	RxRate float64 `pulumi:"rxRate"`
	// Amount of rx retries
	RxRetries int    `pulumi:"rxRetries"`
	SiteId    string `pulumi:"siteId"`
	Snr       int    `pulumi:"snr"`
	// Rate of transmitting traffic, bits/seconds, last known
	TxBps int `pulumi:"txBps"`
	// Amount of traffic sent since connection
	TxBytes int `pulumi:"txBytes"`
	// Amount of packets sent since connection
	TxPackets int `pulumi:"txPackets"`
	// TX Rate, Mbps
	TxRate float64 `pulumi:"txRate"`
	// Amount of tx retries
	TxRetries  int    `pulumi:"txRetries"`
	UplinkApId string `pulumi:"uplinkApId"`
}

// GetApStatsDeviceApStatMeshUplinkInput is an input type that accepts GetApStatsDeviceApStatMeshUplinkArgs and GetApStatsDeviceApStatMeshUplinkOutput values.
// You can construct a concrete instance of `GetApStatsDeviceApStatMeshUplinkInput` via:
//
//	GetApStatsDeviceApStatMeshUplinkArgs{...}
type GetApStatsDeviceApStatMeshUplinkInput interface {
	pulumi.Input

	ToGetApStatsDeviceApStatMeshUplinkOutput() GetApStatsDeviceApStatMeshUplinkOutput
	ToGetApStatsDeviceApStatMeshUplinkOutputWithContext(context.Context) GetApStatsDeviceApStatMeshUplinkOutput
}

type GetApStatsDeviceApStatMeshUplinkArgs struct {
	Band     pulumi.StringInput `pulumi:"band"`
	Channel  pulumi.IntInput    `pulumi:"channel"`
	IdleTime pulumi.IntInput    `pulumi:"idleTime"`
	// Last seen timestamp
	LastSeen pulumi.Float64Input `pulumi:"lastSeen"`
	Proto    pulumi.StringInput  `pulumi:"proto"`
	Rssi     pulumi.IntInput     `pulumi:"rssi"`
	// Rate of receiving traffic, bits/seconds, last known
	RxBps pulumi.IntInput `pulumi:"rxBps"`
	// Amount of traffic received since connection
	RxBytes pulumi.IntInput `pulumi:"rxBytes"`
	// Amount of packets received since connection
	RxPackets pulumi.IntInput `pulumi:"rxPackets"`
	// RX Rate, Mbps
	RxRate pulumi.Float64Input `pulumi:"rxRate"`
	// Amount of rx retries
	RxRetries pulumi.IntInput    `pulumi:"rxRetries"`
	SiteId    pulumi.StringInput `pulumi:"siteId"`
	Snr       pulumi.IntInput    `pulumi:"snr"`
	// Rate of transmitting traffic, bits/seconds, last known
	TxBps pulumi.IntInput `pulumi:"txBps"`
	// Amount of traffic sent since connection
	TxBytes pulumi.IntInput `pulumi:"txBytes"`
	// Amount of packets sent since connection
	TxPackets pulumi.IntInput `pulumi:"txPackets"`
	// TX Rate, Mbps
	TxRate pulumi.Float64Input `pulumi:"txRate"`
	// Amount of tx retries
	TxRetries  pulumi.IntInput    `pulumi:"txRetries"`
	UplinkApId pulumi.StringInput `pulumi:"uplinkApId"`
}

func (GetApStatsDeviceApStatMeshUplinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApStatsDeviceApStatMeshUplink)(nil)).Elem()
}

func (i GetApStatsDeviceApStatMeshUplinkArgs) ToGetApStatsDeviceApStatMeshUplinkOutput() GetApStatsDeviceApStatMeshUplinkOutput {
	return i.ToGetApStatsDeviceApStatMeshUplinkOutputWithContext(context.Background())
}

func (i GetApStatsDeviceApStatMeshUplinkArgs) ToGetApStatsDeviceApStatMeshUplinkOutputWithContext(ctx context.Context) GetApStatsDeviceApStatMeshUplinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApStatsDeviceApStatMeshUplinkOutput)
}

type GetApStatsDeviceApStatMeshUplinkOutput struct{ *pulumi.OutputState }

func (GetApStatsDeviceApStatMeshUplinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApStatsDeviceApStatMeshUplink)(nil)).Elem()
}

func (o GetApStatsDeviceApStatMeshUplinkOutput) ToGetApStatsDeviceApStatMeshUplinkOutput() GetApStatsDeviceApStatMeshUplinkOutput {
	return o
}

func (o GetApStatsDeviceApStatMeshUplinkOutput) ToGetApStatsDeviceApStatMeshUplinkOutputWithContext(ctx context.Context) GetApStatsDeviceApStatMeshUplinkOutput {
	return o
}

func (o GetApStatsDeviceApStatMeshUplinkOutput) Band() pulumi.StringOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatMeshUplink) string { return v.Band }).(pulumi.StringOutput)
}

func (o GetApStatsDeviceApStatMeshUplinkOutput) Channel() pulumi.IntOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatMeshUplink) int { return v.Channel }).(pulumi.IntOutput)
}

func (o GetApStatsDeviceApStatMeshUplinkOutput) IdleTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatMeshUplink) int { return v.IdleTime }).(pulumi.IntOutput)
}

// Last seen timestamp
func (o GetApStatsDeviceApStatMeshUplinkOutput) LastSeen() pulumi.Float64Output {
	return o.ApplyT(func(v GetApStatsDeviceApStatMeshUplink) float64 { return v.LastSeen }).(pulumi.Float64Output)
}

func (o GetApStatsDeviceApStatMeshUplinkOutput) Proto() pulumi.StringOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatMeshUplink) string { return v.Proto }).(pulumi.StringOutput)
}

func (o GetApStatsDeviceApStatMeshUplinkOutput) Rssi() pulumi.IntOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatMeshUplink) int { return v.Rssi }).(pulumi.IntOutput)
}

// Rate of receiving traffic, bits/seconds, last known
func (o GetApStatsDeviceApStatMeshUplinkOutput) RxBps() pulumi.IntOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatMeshUplink) int { return v.RxBps }).(pulumi.IntOutput)
}

// Amount of traffic received since connection
func (o GetApStatsDeviceApStatMeshUplinkOutput) RxBytes() pulumi.IntOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatMeshUplink) int { return v.RxBytes }).(pulumi.IntOutput)
}

// Amount of packets received since connection
func (o GetApStatsDeviceApStatMeshUplinkOutput) RxPackets() pulumi.IntOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatMeshUplink) int { return v.RxPackets }).(pulumi.IntOutput)
}

// RX Rate, Mbps
func (o GetApStatsDeviceApStatMeshUplinkOutput) RxRate() pulumi.Float64Output {
	return o.ApplyT(func(v GetApStatsDeviceApStatMeshUplink) float64 { return v.RxRate }).(pulumi.Float64Output)
}

// Amount of rx retries
func (o GetApStatsDeviceApStatMeshUplinkOutput) RxRetries() pulumi.IntOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatMeshUplink) int { return v.RxRetries }).(pulumi.IntOutput)
}

func (o GetApStatsDeviceApStatMeshUplinkOutput) SiteId() pulumi.StringOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatMeshUplink) string { return v.SiteId }).(pulumi.StringOutput)
}

func (o GetApStatsDeviceApStatMeshUplinkOutput) Snr() pulumi.IntOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatMeshUplink) int { return v.Snr }).(pulumi.IntOutput)
}

// Rate of transmitting traffic, bits/seconds, last known
func (o GetApStatsDeviceApStatMeshUplinkOutput) TxBps() pulumi.IntOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatMeshUplink) int { return v.TxBps }).(pulumi.IntOutput)
}

// Amount of traffic sent since connection
func (o GetApStatsDeviceApStatMeshUplinkOutput) TxBytes() pulumi.IntOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatMeshUplink) int { return v.TxBytes }).(pulumi.IntOutput)
}

// Amount of packets sent since connection
func (o GetApStatsDeviceApStatMeshUplinkOutput) TxPackets() pulumi.IntOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatMeshUplink) int { return v.TxPackets }).(pulumi.IntOutput)
}

// TX Rate, Mbps
func (o GetApStatsDeviceApStatMeshUplinkOutput) TxRate() pulumi.Float64Output {
	return o.ApplyT(func(v GetApStatsDeviceApStatMeshUplink) float64 { return v.TxRate }).(pulumi.Float64Output)
}

// Amount of tx retries
func (o GetApStatsDeviceApStatMeshUplinkOutput) TxRetries() pulumi.IntOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatMeshUplink) int { return v.TxRetries }).(pulumi.IntOutput)
}

func (o GetApStatsDeviceApStatMeshUplinkOutput) UplinkApId() pulumi.StringOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatMeshUplink) string { return v.UplinkApId }).(pulumi.StringOutput)
}

type GetApStatsDeviceApStatPortStat struct {
	FullDuplex bool `pulumi:"fullDuplex"`
	// Amount of traffic received since connection
	RxBytes   int `pulumi:"rxBytes"`
	RxErrors  int `pulumi:"rxErrors"`
	RxPeakBps int `pulumi:"rxPeakBps"`
	// Amount of packets received since connection
	RxPkts int `pulumi:"rxPkts"`
	Speed  int `pulumi:"speed"`
	// Amount of traffic sent since connection
	TxBytes   int `pulumi:"txBytes"`
	TxPeakBps int `pulumi:"txPeakBps"`
	// Amount of packets sent since connection
	TxPkts int  `pulumi:"txPkts"`
	Up     bool `pulumi:"up"`
}

// GetApStatsDeviceApStatPortStatInput is an input type that accepts GetApStatsDeviceApStatPortStatArgs and GetApStatsDeviceApStatPortStatOutput values.
// You can construct a concrete instance of `GetApStatsDeviceApStatPortStatInput` via:
//
//	GetApStatsDeviceApStatPortStatArgs{...}
type GetApStatsDeviceApStatPortStatInput interface {
	pulumi.Input

	ToGetApStatsDeviceApStatPortStatOutput() GetApStatsDeviceApStatPortStatOutput
	ToGetApStatsDeviceApStatPortStatOutputWithContext(context.Context) GetApStatsDeviceApStatPortStatOutput
}

type GetApStatsDeviceApStatPortStatArgs struct {
	FullDuplex pulumi.BoolInput `pulumi:"fullDuplex"`
	// Amount of traffic received since connection
	RxBytes   pulumi.IntInput `pulumi:"rxBytes"`
	RxErrors  pulumi.IntInput `pulumi:"rxErrors"`
	RxPeakBps pulumi.IntInput `pulumi:"rxPeakBps"`
	// Amount of packets received since connection
	RxPkts pulumi.IntInput `pulumi:"rxPkts"`
	Speed  pulumi.IntInput `pulumi:"speed"`
	// Amount of traffic sent since connection
	TxBytes   pulumi.IntInput `pulumi:"txBytes"`
	TxPeakBps pulumi.IntInput `pulumi:"txPeakBps"`
	// Amount of packets sent since connection
	TxPkts pulumi.IntInput  `pulumi:"txPkts"`
	Up     pulumi.BoolInput `pulumi:"up"`
}

func (GetApStatsDeviceApStatPortStatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApStatsDeviceApStatPortStat)(nil)).Elem()
}

func (i GetApStatsDeviceApStatPortStatArgs) ToGetApStatsDeviceApStatPortStatOutput() GetApStatsDeviceApStatPortStatOutput {
	return i.ToGetApStatsDeviceApStatPortStatOutputWithContext(context.Background())
}

func (i GetApStatsDeviceApStatPortStatArgs) ToGetApStatsDeviceApStatPortStatOutputWithContext(ctx context.Context) GetApStatsDeviceApStatPortStatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApStatsDeviceApStatPortStatOutput)
}

// GetApStatsDeviceApStatPortStatMapInput is an input type that accepts GetApStatsDeviceApStatPortStatMap and GetApStatsDeviceApStatPortStatMapOutput values.
// You can construct a concrete instance of `GetApStatsDeviceApStatPortStatMapInput` via:
//
//	GetApStatsDeviceApStatPortStatMap{ "key": GetApStatsDeviceApStatPortStatArgs{...} }
type GetApStatsDeviceApStatPortStatMapInput interface {
	pulumi.Input

	ToGetApStatsDeviceApStatPortStatMapOutput() GetApStatsDeviceApStatPortStatMapOutput
	ToGetApStatsDeviceApStatPortStatMapOutputWithContext(context.Context) GetApStatsDeviceApStatPortStatMapOutput
}

type GetApStatsDeviceApStatPortStatMap map[string]GetApStatsDeviceApStatPortStatInput

func (GetApStatsDeviceApStatPortStatMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]GetApStatsDeviceApStatPortStat)(nil)).Elem()
}

func (i GetApStatsDeviceApStatPortStatMap) ToGetApStatsDeviceApStatPortStatMapOutput() GetApStatsDeviceApStatPortStatMapOutput {
	return i.ToGetApStatsDeviceApStatPortStatMapOutputWithContext(context.Background())
}

func (i GetApStatsDeviceApStatPortStatMap) ToGetApStatsDeviceApStatPortStatMapOutputWithContext(ctx context.Context) GetApStatsDeviceApStatPortStatMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApStatsDeviceApStatPortStatMapOutput)
}

type GetApStatsDeviceApStatPortStatOutput struct{ *pulumi.OutputState }

func (GetApStatsDeviceApStatPortStatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApStatsDeviceApStatPortStat)(nil)).Elem()
}

func (o GetApStatsDeviceApStatPortStatOutput) ToGetApStatsDeviceApStatPortStatOutput() GetApStatsDeviceApStatPortStatOutput {
	return o
}

func (o GetApStatsDeviceApStatPortStatOutput) ToGetApStatsDeviceApStatPortStatOutputWithContext(ctx context.Context) GetApStatsDeviceApStatPortStatOutput {
	return o
}

func (o GetApStatsDeviceApStatPortStatOutput) FullDuplex() pulumi.BoolOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatPortStat) bool { return v.FullDuplex }).(pulumi.BoolOutput)
}

// Amount of traffic received since connection
func (o GetApStatsDeviceApStatPortStatOutput) RxBytes() pulumi.IntOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatPortStat) int { return v.RxBytes }).(pulumi.IntOutput)
}

func (o GetApStatsDeviceApStatPortStatOutput) RxErrors() pulumi.IntOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatPortStat) int { return v.RxErrors }).(pulumi.IntOutput)
}

func (o GetApStatsDeviceApStatPortStatOutput) RxPeakBps() pulumi.IntOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatPortStat) int { return v.RxPeakBps }).(pulumi.IntOutput)
}

// Amount of packets received since connection
func (o GetApStatsDeviceApStatPortStatOutput) RxPkts() pulumi.IntOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatPortStat) int { return v.RxPkts }).(pulumi.IntOutput)
}

func (o GetApStatsDeviceApStatPortStatOutput) Speed() pulumi.IntOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatPortStat) int { return v.Speed }).(pulumi.IntOutput)
}

// Amount of traffic sent since connection
func (o GetApStatsDeviceApStatPortStatOutput) TxBytes() pulumi.IntOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatPortStat) int { return v.TxBytes }).(pulumi.IntOutput)
}

func (o GetApStatsDeviceApStatPortStatOutput) TxPeakBps() pulumi.IntOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatPortStat) int { return v.TxPeakBps }).(pulumi.IntOutput)
}

// Amount of packets sent since connection
func (o GetApStatsDeviceApStatPortStatOutput) TxPkts() pulumi.IntOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatPortStat) int { return v.TxPkts }).(pulumi.IntOutput)
}

func (o GetApStatsDeviceApStatPortStatOutput) Up() pulumi.BoolOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatPortStat) bool { return v.Up }).(pulumi.BoolOutput)
}

type GetApStatsDeviceApStatPortStatMapOutput struct{ *pulumi.OutputState }

func (GetApStatsDeviceApStatPortStatMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]GetApStatsDeviceApStatPortStat)(nil)).Elem()
}

func (o GetApStatsDeviceApStatPortStatMapOutput) ToGetApStatsDeviceApStatPortStatMapOutput() GetApStatsDeviceApStatPortStatMapOutput {
	return o
}

func (o GetApStatsDeviceApStatPortStatMapOutput) ToGetApStatsDeviceApStatPortStatMapOutputWithContext(ctx context.Context) GetApStatsDeviceApStatPortStatMapOutput {
	return o
}

func (o GetApStatsDeviceApStatPortStatMapOutput) MapIndex(k pulumi.StringInput) GetApStatsDeviceApStatPortStatOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) GetApStatsDeviceApStatPortStat {
		return vs[0].(map[string]GetApStatsDeviceApStatPortStat)[vs[1].(string)]
	}).(GetApStatsDeviceApStatPortStatOutput)
}

type GetApStatsDeviceApStatRadioStat struct {
	// Radio stat
	Band24 GetApStatsDeviceApStatRadioStatBand24 `pulumi:"band24"`
	// Radio stat
	Band5 GetApStatsDeviceApStatRadioStatBand5 `pulumi:"band5"`
	// Radio stat
	Band6 GetApStatsDeviceApStatRadioStatBand6 `pulumi:"band6"`
}

// GetApStatsDeviceApStatRadioStatInput is an input type that accepts GetApStatsDeviceApStatRadioStatArgs and GetApStatsDeviceApStatRadioStatOutput values.
// You can construct a concrete instance of `GetApStatsDeviceApStatRadioStatInput` via:
//
//	GetApStatsDeviceApStatRadioStatArgs{...}
type GetApStatsDeviceApStatRadioStatInput interface {
	pulumi.Input

	ToGetApStatsDeviceApStatRadioStatOutput() GetApStatsDeviceApStatRadioStatOutput
	ToGetApStatsDeviceApStatRadioStatOutputWithContext(context.Context) GetApStatsDeviceApStatRadioStatOutput
}

type GetApStatsDeviceApStatRadioStatArgs struct {
	// Radio stat
	Band24 GetApStatsDeviceApStatRadioStatBand24Input `pulumi:"band24"`
	// Radio stat
	Band5 GetApStatsDeviceApStatRadioStatBand5Input `pulumi:"band5"`
	// Radio stat
	Band6 GetApStatsDeviceApStatRadioStatBand6Input `pulumi:"band6"`
}

func (GetApStatsDeviceApStatRadioStatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApStatsDeviceApStatRadioStat)(nil)).Elem()
}

func (i GetApStatsDeviceApStatRadioStatArgs) ToGetApStatsDeviceApStatRadioStatOutput() GetApStatsDeviceApStatRadioStatOutput {
	return i.ToGetApStatsDeviceApStatRadioStatOutputWithContext(context.Background())
}

func (i GetApStatsDeviceApStatRadioStatArgs) ToGetApStatsDeviceApStatRadioStatOutputWithContext(ctx context.Context) GetApStatsDeviceApStatRadioStatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApStatsDeviceApStatRadioStatOutput)
}

type GetApStatsDeviceApStatRadioStatOutput struct{ *pulumi.OutputState }

func (GetApStatsDeviceApStatRadioStatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApStatsDeviceApStatRadioStat)(nil)).Elem()
}

func (o GetApStatsDeviceApStatRadioStatOutput) ToGetApStatsDeviceApStatRadioStatOutput() GetApStatsDeviceApStatRadioStatOutput {
	return o
}

func (o GetApStatsDeviceApStatRadioStatOutput) ToGetApStatsDeviceApStatRadioStatOutputWithContext(ctx context.Context) GetApStatsDeviceApStatRadioStatOutput {
	return o
}

// Radio stat
func (o GetApStatsDeviceApStatRadioStatOutput) Band24() GetApStatsDeviceApStatRadioStatBand24Output {
	return o.ApplyT(func(v GetApStatsDeviceApStatRadioStat) GetApStatsDeviceApStatRadioStatBand24 { return v.Band24 }).(GetApStatsDeviceApStatRadioStatBand24Output)
}

// Radio stat
func (o GetApStatsDeviceApStatRadioStatOutput) Band5() GetApStatsDeviceApStatRadioStatBand5Output {
	return o.ApplyT(func(v GetApStatsDeviceApStatRadioStat) GetApStatsDeviceApStatRadioStatBand5 { return v.Band5 }).(GetApStatsDeviceApStatRadioStatBand5Output)
}

// Radio stat
func (o GetApStatsDeviceApStatRadioStatOutput) Band6() GetApStatsDeviceApStatRadioStatBand6Output {
	return o.ApplyT(func(v GetApStatsDeviceApStatRadioStat) GetApStatsDeviceApStatRadioStatBand6 { return v.Band6 }).(GetApStatsDeviceApStatRadioStatBand6Output)
}

type GetApStatsDeviceApStatRadioStatBand24 struct {
	// channel width for the band.enum: `20`, `40`, `80` (only applicable for band5 and band_6), `160` (only for band_6)
	Bandwidth int `pulumi:"bandwidth"`
	// Current channel the radio is running on
	Channel int `pulumi:"channel"`
	// Use dynamic chaining for downlink
	DynamicChainingEnabled bool `pulumi:"dynamicChainingEnabled"`
	// Radio (base) mac, it can have 16 bssids (e.g. 5c5b350001a0-5c5b350001af)
	Mac        string `pulumi:"mac"`
	NoiseFloor int    `pulumi:"noiseFloor"`
	NumClients int    `pulumi:"numClients"`
	// How many WLANs are applied to the radio
	NumWlans int `pulumi:"numWlans"`
	// Transmit power (in dBm)
	Power int `pulumi:"power"`
	// Amount of traffic received since connection
	RxBytes int `pulumi:"rxBytes"`
	// Amount of packets received since connection
	RxPkts int `pulumi:"rxPkts"`
	// Amount of traffic sent since connection
	TxBytes int `pulumi:"txBytes"`
	// Amount of packets sent since connection
	TxPkts int    `pulumi:"txPkts"`
	Usage  string `pulumi:"usage"`
	// All utilization in percentage
	UtilAll int `pulumi:"utilAll"`
	// Reception of "No Packets" utilization in percentage, received frames with invalid PLCPs and CRS glitches as noise
	UtilNonWifi int `pulumi:"utilNonWifi"`
	// Reception of "In BSS" utilization in percentage, only frames that are received from AP/STAs within the BSS
	UtilRxInBss int `pulumi:"utilRxInBss"`
	// Reception of "Other BSS" utilization in percentage, all frames received from AP/STAs that are outside the BSS
	UtilRxOtherBss int `pulumi:"utilRxOtherBss"`
	// Transmission utilization in percentage
	UtilTx int `pulumi:"utilTx"`
	// Reception of "UnDecodable Wifi" utilization in percentage, only Preamble, PLCP header is decoded, Rest is undecodable in this radio
	UtilUndecodableWifi int `pulumi:"utilUndecodableWifi"`
	// Reception of "No Category" utilization in percentage, all 802.11 frames that are corrupted at the receiver
	UtilUnknownWifi int `pulumi:"utilUnknownWifi"`
}

// GetApStatsDeviceApStatRadioStatBand24Input is an input type that accepts GetApStatsDeviceApStatRadioStatBand24Args and GetApStatsDeviceApStatRadioStatBand24Output values.
// You can construct a concrete instance of `GetApStatsDeviceApStatRadioStatBand24Input` via:
//
//	GetApStatsDeviceApStatRadioStatBand24Args{...}
type GetApStatsDeviceApStatRadioStatBand24Input interface {
	pulumi.Input

	ToGetApStatsDeviceApStatRadioStatBand24Output() GetApStatsDeviceApStatRadioStatBand24Output
	ToGetApStatsDeviceApStatRadioStatBand24OutputWithContext(context.Context) GetApStatsDeviceApStatRadioStatBand24Output
}

type GetApStatsDeviceApStatRadioStatBand24Args struct {
	// channel width for the band.enum: `20`, `40`, `80` (only applicable for band5 and band_6), `160` (only for band_6)
	Bandwidth pulumi.IntInput `pulumi:"bandwidth"`
	// Current channel the radio is running on
	Channel pulumi.IntInput `pulumi:"channel"`
	// Use dynamic chaining for downlink
	DynamicChainingEnabled pulumi.BoolInput `pulumi:"dynamicChainingEnabled"`
	// Radio (base) mac, it can have 16 bssids (e.g. 5c5b350001a0-5c5b350001af)
	Mac        pulumi.StringInput `pulumi:"mac"`
	NoiseFloor pulumi.IntInput    `pulumi:"noiseFloor"`
	NumClients pulumi.IntInput    `pulumi:"numClients"`
	// How many WLANs are applied to the radio
	NumWlans pulumi.IntInput `pulumi:"numWlans"`
	// Transmit power (in dBm)
	Power pulumi.IntInput `pulumi:"power"`
	// Amount of traffic received since connection
	RxBytes pulumi.IntInput `pulumi:"rxBytes"`
	// Amount of packets received since connection
	RxPkts pulumi.IntInput `pulumi:"rxPkts"`
	// Amount of traffic sent since connection
	TxBytes pulumi.IntInput `pulumi:"txBytes"`
	// Amount of packets sent since connection
	TxPkts pulumi.IntInput    `pulumi:"txPkts"`
	Usage  pulumi.StringInput `pulumi:"usage"`
	// All utilization in percentage
	UtilAll pulumi.IntInput `pulumi:"utilAll"`
	// Reception of "No Packets" utilization in percentage, received frames with invalid PLCPs and CRS glitches as noise
	UtilNonWifi pulumi.IntInput `pulumi:"utilNonWifi"`
	// Reception of "In BSS" utilization in percentage, only frames that are received from AP/STAs within the BSS
	UtilRxInBss pulumi.IntInput `pulumi:"utilRxInBss"`
	// Reception of "Other BSS" utilization in percentage, all frames received from AP/STAs that are outside the BSS
	UtilRxOtherBss pulumi.IntInput `pulumi:"utilRxOtherBss"`
	// Transmission utilization in percentage
	UtilTx pulumi.IntInput `pulumi:"utilTx"`
	// Reception of "UnDecodable Wifi" utilization in percentage, only Preamble, PLCP header is decoded, Rest is undecodable in this radio
	UtilUndecodableWifi pulumi.IntInput `pulumi:"utilUndecodableWifi"`
	// Reception of "No Category" utilization in percentage, all 802.11 frames that are corrupted at the receiver
	UtilUnknownWifi pulumi.IntInput `pulumi:"utilUnknownWifi"`
}

func (GetApStatsDeviceApStatRadioStatBand24Args) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApStatsDeviceApStatRadioStatBand24)(nil)).Elem()
}

func (i GetApStatsDeviceApStatRadioStatBand24Args) ToGetApStatsDeviceApStatRadioStatBand24Output() GetApStatsDeviceApStatRadioStatBand24Output {
	return i.ToGetApStatsDeviceApStatRadioStatBand24OutputWithContext(context.Background())
}

func (i GetApStatsDeviceApStatRadioStatBand24Args) ToGetApStatsDeviceApStatRadioStatBand24OutputWithContext(ctx context.Context) GetApStatsDeviceApStatRadioStatBand24Output {
	return pulumi.ToOutputWithContext(ctx, i).(GetApStatsDeviceApStatRadioStatBand24Output)
}

type GetApStatsDeviceApStatRadioStatBand24Output struct{ *pulumi.OutputState }

func (GetApStatsDeviceApStatRadioStatBand24Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApStatsDeviceApStatRadioStatBand24)(nil)).Elem()
}

func (o GetApStatsDeviceApStatRadioStatBand24Output) ToGetApStatsDeviceApStatRadioStatBand24Output() GetApStatsDeviceApStatRadioStatBand24Output {
	return o
}

func (o GetApStatsDeviceApStatRadioStatBand24Output) ToGetApStatsDeviceApStatRadioStatBand24OutputWithContext(ctx context.Context) GetApStatsDeviceApStatRadioStatBand24Output {
	return o
}

// channel width for the band.enum: `20`, `40`, `80` (only applicable for band5 and band_6), `160` (only for band_6)
func (o GetApStatsDeviceApStatRadioStatBand24Output) Bandwidth() pulumi.IntOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatRadioStatBand24) int { return v.Bandwidth }).(pulumi.IntOutput)
}

// Current channel the radio is running on
func (o GetApStatsDeviceApStatRadioStatBand24Output) Channel() pulumi.IntOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatRadioStatBand24) int { return v.Channel }).(pulumi.IntOutput)
}

// Use dynamic chaining for downlink
func (o GetApStatsDeviceApStatRadioStatBand24Output) DynamicChainingEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatRadioStatBand24) bool { return v.DynamicChainingEnabled }).(pulumi.BoolOutput)
}

// Radio (base) mac, it can have 16 bssids (e.g. 5c5b350001a0-5c5b350001af)
func (o GetApStatsDeviceApStatRadioStatBand24Output) Mac() pulumi.StringOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatRadioStatBand24) string { return v.Mac }).(pulumi.StringOutput)
}

func (o GetApStatsDeviceApStatRadioStatBand24Output) NoiseFloor() pulumi.IntOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatRadioStatBand24) int { return v.NoiseFloor }).(pulumi.IntOutput)
}

func (o GetApStatsDeviceApStatRadioStatBand24Output) NumClients() pulumi.IntOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatRadioStatBand24) int { return v.NumClients }).(pulumi.IntOutput)
}

// How many WLANs are applied to the radio
func (o GetApStatsDeviceApStatRadioStatBand24Output) NumWlans() pulumi.IntOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatRadioStatBand24) int { return v.NumWlans }).(pulumi.IntOutput)
}

// Transmit power (in dBm)
func (o GetApStatsDeviceApStatRadioStatBand24Output) Power() pulumi.IntOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatRadioStatBand24) int { return v.Power }).(pulumi.IntOutput)
}

// Amount of traffic received since connection
func (o GetApStatsDeviceApStatRadioStatBand24Output) RxBytes() pulumi.IntOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatRadioStatBand24) int { return v.RxBytes }).(pulumi.IntOutput)
}

// Amount of packets received since connection
func (o GetApStatsDeviceApStatRadioStatBand24Output) RxPkts() pulumi.IntOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatRadioStatBand24) int { return v.RxPkts }).(pulumi.IntOutput)
}

// Amount of traffic sent since connection
func (o GetApStatsDeviceApStatRadioStatBand24Output) TxBytes() pulumi.IntOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatRadioStatBand24) int { return v.TxBytes }).(pulumi.IntOutput)
}

// Amount of packets sent since connection
func (o GetApStatsDeviceApStatRadioStatBand24Output) TxPkts() pulumi.IntOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatRadioStatBand24) int { return v.TxPkts }).(pulumi.IntOutput)
}

func (o GetApStatsDeviceApStatRadioStatBand24Output) Usage() pulumi.StringOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatRadioStatBand24) string { return v.Usage }).(pulumi.StringOutput)
}

// All utilization in percentage
func (o GetApStatsDeviceApStatRadioStatBand24Output) UtilAll() pulumi.IntOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatRadioStatBand24) int { return v.UtilAll }).(pulumi.IntOutput)
}

// Reception of "No Packets" utilization in percentage, received frames with invalid PLCPs and CRS glitches as noise
func (o GetApStatsDeviceApStatRadioStatBand24Output) UtilNonWifi() pulumi.IntOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatRadioStatBand24) int { return v.UtilNonWifi }).(pulumi.IntOutput)
}

// Reception of "In BSS" utilization in percentage, only frames that are received from AP/STAs within the BSS
func (o GetApStatsDeviceApStatRadioStatBand24Output) UtilRxInBss() pulumi.IntOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatRadioStatBand24) int { return v.UtilRxInBss }).(pulumi.IntOutput)
}

// Reception of "Other BSS" utilization in percentage, all frames received from AP/STAs that are outside the BSS
func (o GetApStatsDeviceApStatRadioStatBand24Output) UtilRxOtherBss() pulumi.IntOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatRadioStatBand24) int { return v.UtilRxOtherBss }).(pulumi.IntOutput)
}

// Transmission utilization in percentage
func (o GetApStatsDeviceApStatRadioStatBand24Output) UtilTx() pulumi.IntOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatRadioStatBand24) int { return v.UtilTx }).(pulumi.IntOutput)
}

// Reception of "UnDecodable Wifi" utilization in percentage, only Preamble, PLCP header is decoded, Rest is undecodable in this radio
func (o GetApStatsDeviceApStatRadioStatBand24Output) UtilUndecodableWifi() pulumi.IntOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatRadioStatBand24) int { return v.UtilUndecodableWifi }).(pulumi.IntOutput)
}

// Reception of "No Category" utilization in percentage, all 802.11 frames that are corrupted at the receiver
func (o GetApStatsDeviceApStatRadioStatBand24Output) UtilUnknownWifi() pulumi.IntOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatRadioStatBand24) int { return v.UtilUnknownWifi }).(pulumi.IntOutput)
}

type GetApStatsDeviceApStatRadioStatBand5 struct {
	// channel width for the band.enum: `20`, `40`, `80` (only applicable for band5 and band_6), `160` (only for band_6)
	Bandwidth int `pulumi:"bandwidth"`
	// Current channel the radio is running on
	Channel int `pulumi:"channel"`
	// Use dynamic chaining for downlink
	DynamicChainingEnabled bool `pulumi:"dynamicChainingEnabled"`
	// Radio (base) mac, it can have 16 bssids (e.g. 5c5b350001a0-5c5b350001af)
	Mac        string `pulumi:"mac"`
	NoiseFloor int    `pulumi:"noiseFloor"`
	NumClients int    `pulumi:"numClients"`
	// How many WLANs are applied to the radio
	NumWlans int `pulumi:"numWlans"`
	// Transmit power (in dBm)
	Power int `pulumi:"power"`
	// Amount of traffic received since connection
	RxBytes int `pulumi:"rxBytes"`
	// Amount of packets received since connection
	RxPkts int `pulumi:"rxPkts"`
	// Amount of traffic sent since connection
	TxBytes int `pulumi:"txBytes"`
	// Amount of packets sent since connection
	TxPkts int    `pulumi:"txPkts"`
	Usage  string `pulumi:"usage"`
	// All utilization in percentage
	UtilAll int `pulumi:"utilAll"`
	// Reception of "No Packets" utilization in percentage, received frames with invalid PLCPs and CRS glitches as noise
	UtilNonWifi int `pulumi:"utilNonWifi"`
	// Reception of "In BSS" utilization in percentage, only frames that are received from AP/STAs within the BSS
	UtilRxInBss int `pulumi:"utilRxInBss"`
	// Reception of "Other BSS" utilization in percentage, all frames received from AP/STAs that are outside the BSS
	UtilRxOtherBss int `pulumi:"utilRxOtherBss"`
	// Transmission utilization in percentage
	UtilTx int `pulumi:"utilTx"`
	// Reception of "UnDecodable Wifi" utilization in percentage, only Preamble, PLCP header is decoded, Rest is undecodable in this radio
	UtilUndecodableWifi int `pulumi:"utilUndecodableWifi"`
	// Reception of "No Category" utilization in percentage, all 802.11 frames that are corrupted at the receiver
	UtilUnknownWifi int `pulumi:"utilUnknownWifi"`
}

// GetApStatsDeviceApStatRadioStatBand5Input is an input type that accepts GetApStatsDeviceApStatRadioStatBand5Args and GetApStatsDeviceApStatRadioStatBand5Output values.
// You can construct a concrete instance of `GetApStatsDeviceApStatRadioStatBand5Input` via:
//
//	GetApStatsDeviceApStatRadioStatBand5Args{...}
type GetApStatsDeviceApStatRadioStatBand5Input interface {
	pulumi.Input

	ToGetApStatsDeviceApStatRadioStatBand5Output() GetApStatsDeviceApStatRadioStatBand5Output
	ToGetApStatsDeviceApStatRadioStatBand5OutputWithContext(context.Context) GetApStatsDeviceApStatRadioStatBand5Output
}

type GetApStatsDeviceApStatRadioStatBand5Args struct {
	// channel width for the band.enum: `20`, `40`, `80` (only applicable for band5 and band_6), `160` (only for band_6)
	Bandwidth pulumi.IntInput `pulumi:"bandwidth"`
	// Current channel the radio is running on
	Channel pulumi.IntInput `pulumi:"channel"`
	// Use dynamic chaining for downlink
	DynamicChainingEnabled pulumi.BoolInput `pulumi:"dynamicChainingEnabled"`
	// Radio (base) mac, it can have 16 bssids (e.g. 5c5b350001a0-5c5b350001af)
	Mac        pulumi.StringInput `pulumi:"mac"`
	NoiseFloor pulumi.IntInput    `pulumi:"noiseFloor"`
	NumClients pulumi.IntInput    `pulumi:"numClients"`
	// How many WLANs are applied to the radio
	NumWlans pulumi.IntInput `pulumi:"numWlans"`
	// Transmit power (in dBm)
	Power pulumi.IntInput `pulumi:"power"`
	// Amount of traffic received since connection
	RxBytes pulumi.IntInput `pulumi:"rxBytes"`
	// Amount of packets received since connection
	RxPkts pulumi.IntInput `pulumi:"rxPkts"`
	// Amount of traffic sent since connection
	TxBytes pulumi.IntInput `pulumi:"txBytes"`
	// Amount of packets sent since connection
	TxPkts pulumi.IntInput    `pulumi:"txPkts"`
	Usage  pulumi.StringInput `pulumi:"usage"`
	// All utilization in percentage
	UtilAll pulumi.IntInput `pulumi:"utilAll"`
	// Reception of "No Packets" utilization in percentage, received frames with invalid PLCPs and CRS glitches as noise
	UtilNonWifi pulumi.IntInput `pulumi:"utilNonWifi"`
	// Reception of "In BSS" utilization in percentage, only frames that are received from AP/STAs within the BSS
	UtilRxInBss pulumi.IntInput `pulumi:"utilRxInBss"`
	// Reception of "Other BSS" utilization in percentage, all frames received from AP/STAs that are outside the BSS
	UtilRxOtherBss pulumi.IntInput `pulumi:"utilRxOtherBss"`
	// Transmission utilization in percentage
	UtilTx pulumi.IntInput `pulumi:"utilTx"`
	// Reception of "UnDecodable Wifi" utilization in percentage, only Preamble, PLCP header is decoded, Rest is undecodable in this radio
	UtilUndecodableWifi pulumi.IntInput `pulumi:"utilUndecodableWifi"`
	// Reception of "No Category" utilization in percentage, all 802.11 frames that are corrupted at the receiver
	UtilUnknownWifi pulumi.IntInput `pulumi:"utilUnknownWifi"`
}

func (GetApStatsDeviceApStatRadioStatBand5Args) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApStatsDeviceApStatRadioStatBand5)(nil)).Elem()
}

func (i GetApStatsDeviceApStatRadioStatBand5Args) ToGetApStatsDeviceApStatRadioStatBand5Output() GetApStatsDeviceApStatRadioStatBand5Output {
	return i.ToGetApStatsDeviceApStatRadioStatBand5OutputWithContext(context.Background())
}

func (i GetApStatsDeviceApStatRadioStatBand5Args) ToGetApStatsDeviceApStatRadioStatBand5OutputWithContext(ctx context.Context) GetApStatsDeviceApStatRadioStatBand5Output {
	return pulumi.ToOutputWithContext(ctx, i).(GetApStatsDeviceApStatRadioStatBand5Output)
}

type GetApStatsDeviceApStatRadioStatBand5Output struct{ *pulumi.OutputState }

func (GetApStatsDeviceApStatRadioStatBand5Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApStatsDeviceApStatRadioStatBand5)(nil)).Elem()
}

func (o GetApStatsDeviceApStatRadioStatBand5Output) ToGetApStatsDeviceApStatRadioStatBand5Output() GetApStatsDeviceApStatRadioStatBand5Output {
	return o
}

func (o GetApStatsDeviceApStatRadioStatBand5Output) ToGetApStatsDeviceApStatRadioStatBand5OutputWithContext(ctx context.Context) GetApStatsDeviceApStatRadioStatBand5Output {
	return o
}

// channel width for the band.enum: `20`, `40`, `80` (only applicable for band5 and band_6), `160` (only for band_6)
func (o GetApStatsDeviceApStatRadioStatBand5Output) Bandwidth() pulumi.IntOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatRadioStatBand5) int { return v.Bandwidth }).(pulumi.IntOutput)
}

// Current channel the radio is running on
func (o GetApStatsDeviceApStatRadioStatBand5Output) Channel() pulumi.IntOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatRadioStatBand5) int { return v.Channel }).(pulumi.IntOutput)
}

// Use dynamic chaining for downlink
func (o GetApStatsDeviceApStatRadioStatBand5Output) DynamicChainingEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatRadioStatBand5) bool { return v.DynamicChainingEnabled }).(pulumi.BoolOutput)
}

// Radio (base) mac, it can have 16 bssids (e.g. 5c5b350001a0-5c5b350001af)
func (o GetApStatsDeviceApStatRadioStatBand5Output) Mac() pulumi.StringOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatRadioStatBand5) string { return v.Mac }).(pulumi.StringOutput)
}

func (o GetApStatsDeviceApStatRadioStatBand5Output) NoiseFloor() pulumi.IntOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatRadioStatBand5) int { return v.NoiseFloor }).(pulumi.IntOutput)
}

func (o GetApStatsDeviceApStatRadioStatBand5Output) NumClients() pulumi.IntOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatRadioStatBand5) int { return v.NumClients }).(pulumi.IntOutput)
}

// How many WLANs are applied to the radio
func (o GetApStatsDeviceApStatRadioStatBand5Output) NumWlans() pulumi.IntOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatRadioStatBand5) int { return v.NumWlans }).(pulumi.IntOutput)
}

// Transmit power (in dBm)
func (o GetApStatsDeviceApStatRadioStatBand5Output) Power() pulumi.IntOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatRadioStatBand5) int { return v.Power }).(pulumi.IntOutput)
}

// Amount of traffic received since connection
func (o GetApStatsDeviceApStatRadioStatBand5Output) RxBytes() pulumi.IntOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatRadioStatBand5) int { return v.RxBytes }).(pulumi.IntOutput)
}

// Amount of packets received since connection
func (o GetApStatsDeviceApStatRadioStatBand5Output) RxPkts() pulumi.IntOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatRadioStatBand5) int { return v.RxPkts }).(pulumi.IntOutput)
}

// Amount of traffic sent since connection
func (o GetApStatsDeviceApStatRadioStatBand5Output) TxBytes() pulumi.IntOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatRadioStatBand5) int { return v.TxBytes }).(pulumi.IntOutput)
}

// Amount of packets sent since connection
func (o GetApStatsDeviceApStatRadioStatBand5Output) TxPkts() pulumi.IntOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatRadioStatBand5) int { return v.TxPkts }).(pulumi.IntOutput)
}

func (o GetApStatsDeviceApStatRadioStatBand5Output) Usage() pulumi.StringOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatRadioStatBand5) string { return v.Usage }).(pulumi.StringOutput)
}

// All utilization in percentage
func (o GetApStatsDeviceApStatRadioStatBand5Output) UtilAll() pulumi.IntOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatRadioStatBand5) int { return v.UtilAll }).(pulumi.IntOutput)
}

// Reception of "No Packets" utilization in percentage, received frames with invalid PLCPs and CRS glitches as noise
func (o GetApStatsDeviceApStatRadioStatBand5Output) UtilNonWifi() pulumi.IntOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatRadioStatBand5) int { return v.UtilNonWifi }).(pulumi.IntOutput)
}

// Reception of "In BSS" utilization in percentage, only frames that are received from AP/STAs within the BSS
func (o GetApStatsDeviceApStatRadioStatBand5Output) UtilRxInBss() pulumi.IntOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatRadioStatBand5) int { return v.UtilRxInBss }).(pulumi.IntOutput)
}

// Reception of "Other BSS" utilization in percentage, all frames received from AP/STAs that are outside the BSS
func (o GetApStatsDeviceApStatRadioStatBand5Output) UtilRxOtherBss() pulumi.IntOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatRadioStatBand5) int { return v.UtilRxOtherBss }).(pulumi.IntOutput)
}

// Transmission utilization in percentage
func (o GetApStatsDeviceApStatRadioStatBand5Output) UtilTx() pulumi.IntOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatRadioStatBand5) int { return v.UtilTx }).(pulumi.IntOutput)
}

// Reception of "UnDecodable Wifi" utilization in percentage, only Preamble, PLCP header is decoded, Rest is undecodable in this radio
func (o GetApStatsDeviceApStatRadioStatBand5Output) UtilUndecodableWifi() pulumi.IntOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatRadioStatBand5) int { return v.UtilUndecodableWifi }).(pulumi.IntOutput)
}

// Reception of "No Category" utilization in percentage, all 802.11 frames that are corrupted at the receiver
func (o GetApStatsDeviceApStatRadioStatBand5Output) UtilUnknownWifi() pulumi.IntOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatRadioStatBand5) int { return v.UtilUnknownWifi }).(pulumi.IntOutput)
}

type GetApStatsDeviceApStatRadioStatBand6 struct {
	// channel width for the band.enum: `20`, `40`, `80` (only applicable for band5 and band_6), `160` (only for band_6)
	Bandwidth int `pulumi:"bandwidth"`
	// Current channel the radio is running on
	Channel int `pulumi:"channel"`
	// Use dynamic chaining for downlink
	DynamicChainingEnabled bool `pulumi:"dynamicChainingEnabled"`
	// Radio (base) mac, it can have 16 bssids (e.g. 5c5b350001a0-5c5b350001af)
	Mac        string `pulumi:"mac"`
	NoiseFloor int    `pulumi:"noiseFloor"`
	NumClients int    `pulumi:"numClients"`
	// How many WLANs are applied to the radio
	NumWlans int `pulumi:"numWlans"`
	// Transmit power (in dBm)
	Power int `pulumi:"power"`
	// Amount of traffic received since connection
	RxBytes int `pulumi:"rxBytes"`
	// Amount of packets received since connection
	RxPkts int `pulumi:"rxPkts"`
	// Amount of traffic sent since connection
	TxBytes int `pulumi:"txBytes"`
	// Amount of packets sent since connection
	TxPkts int    `pulumi:"txPkts"`
	Usage  string `pulumi:"usage"`
	// All utilization in percentage
	UtilAll int `pulumi:"utilAll"`
	// Reception of "No Packets" utilization in percentage, received frames with invalid PLCPs and CRS glitches as noise
	UtilNonWifi int `pulumi:"utilNonWifi"`
	// Reception of "In BSS" utilization in percentage, only frames that are received from AP/STAs within the BSS
	UtilRxInBss int `pulumi:"utilRxInBss"`
	// Reception of "Other BSS" utilization in percentage, all frames received from AP/STAs that are outside the BSS
	UtilRxOtherBss int `pulumi:"utilRxOtherBss"`
	// Transmission utilization in percentage
	UtilTx int `pulumi:"utilTx"`
	// Reception of "UnDecodable Wifi" utilization in percentage, only Preamble, PLCP header is decoded, Rest is undecodable in this radio
	UtilUndecodableWifi int `pulumi:"utilUndecodableWifi"`
	// Reception of "No Category" utilization in percentage, all 802.11 frames that are corrupted at the receiver
	UtilUnknownWifi int `pulumi:"utilUnknownWifi"`
}

// GetApStatsDeviceApStatRadioStatBand6Input is an input type that accepts GetApStatsDeviceApStatRadioStatBand6Args and GetApStatsDeviceApStatRadioStatBand6Output values.
// You can construct a concrete instance of `GetApStatsDeviceApStatRadioStatBand6Input` via:
//
//	GetApStatsDeviceApStatRadioStatBand6Args{...}
type GetApStatsDeviceApStatRadioStatBand6Input interface {
	pulumi.Input

	ToGetApStatsDeviceApStatRadioStatBand6Output() GetApStatsDeviceApStatRadioStatBand6Output
	ToGetApStatsDeviceApStatRadioStatBand6OutputWithContext(context.Context) GetApStatsDeviceApStatRadioStatBand6Output
}

type GetApStatsDeviceApStatRadioStatBand6Args struct {
	// channel width for the band.enum: `20`, `40`, `80` (only applicable for band5 and band_6), `160` (only for band_6)
	Bandwidth pulumi.IntInput `pulumi:"bandwidth"`
	// Current channel the radio is running on
	Channel pulumi.IntInput `pulumi:"channel"`
	// Use dynamic chaining for downlink
	DynamicChainingEnabled pulumi.BoolInput `pulumi:"dynamicChainingEnabled"`
	// Radio (base) mac, it can have 16 bssids (e.g. 5c5b350001a0-5c5b350001af)
	Mac        pulumi.StringInput `pulumi:"mac"`
	NoiseFloor pulumi.IntInput    `pulumi:"noiseFloor"`
	NumClients pulumi.IntInput    `pulumi:"numClients"`
	// How many WLANs are applied to the radio
	NumWlans pulumi.IntInput `pulumi:"numWlans"`
	// Transmit power (in dBm)
	Power pulumi.IntInput `pulumi:"power"`
	// Amount of traffic received since connection
	RxBytes pulumi.IntInput `pulumi:"rxBytes"`
	// Amount of packets received since connection
	RxPkts pulumi.IntInput `pulumi:"rxPkts"`
	// Amount of traffic sent since connection
	TxBytes pulumi.IntInput `pulumi:"txBytes"`
	// Amount of packets sent since connection
	TxPkts pulumi.IntInput    `pulumi:"txPkts"`
	Usage  pulumi.StringInput `pulumi:"usage"`
	// All utilization in percentage
	UtilAll pulumi.IntInput `pulumi:"utilAll"`
	// Reception of "No Packets" utilization in percentage, received frames with invalid PLCPs and CRS glitches as noise
	UtilNonWifi pulumi.IntInput `pulumi:"utilNonWifi"`
	// Reception of "In BSS" utilization in percentage, only frames that are received from AP/STAs within the BSS
	UtilRxInBss pulumi.IntInput `pulumi:"utilRxInBss"`
	// Reception of "Other BSS" utilization in percentage, all frames received from AP/STAs that are outside the BSS
	UtilRxOtherBss pulumi.IntInput `pulumi:"utilRxOtherBss"`
	// Transmission utilization in percentage
	UtilTx pulumi.IntInput `pulumi:"utilTx"`
	// Reception of "UnDecodable Wifi" utilization in percentage, only Preamble, PLCP header is decoded, Rest is undecodable in this radio
	UtilUndecodableWifi pulumi.IntInput `pulumi:"utilUndecodableWifi"`
	// Reception of "No Category" utilization in percentage, all 802.11 frames that are corrupted at the receiver
	UtilUnknownWifi pulumi.IntInput `pulumi:"utilUnknownWifi"`
}

func (GetApStatsDeviceApStatRadioStatBand6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApStatsDeviceApStatRadioStatBand6)(nil)).Elem()
}

func (i GetApStatsDeviceApStatRadioStatBand6Args) ToGetApStatsDeviceApStatRadioStatBand6Output() GetApStatsDeviceApStatRadioStatBand6Output {
	return i.ToGetApStatsDeviceApStatRadioStatBand6OutputWithContext(context.Background())
}

func (i GetApStatsDeviceApStatRadioStatBand6Args) ToGetApStatsDeviceApStatRadioStatBand6OutputWithContext(ctx context.Context) GetApStatsDeviceApStatRadioStatBand6Output {
	return pulumi.ToOutputWithContext(ctx, i).(GetApStatsDeviceApStatRadioStatBand6Output)
}

type GetApStatsDeviceApStatRadioStatBand6Output struct{ *pulumi.OutputState }

func (GetApStatsDeviceApStatRadioStatBand6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApStatsDeviceApStatRadioStatBand6)(nil)).Elem()
}

func (o GetApStatsDeviceApStatRadioStatBand6Output) ToGetApStatsDeviceApStatRadioStatBand6Output() GetApStatsDeviceApStatRadioStatBand6Output {
	return o
}

func (o GetApStatsDeviceApStatRadioStatBand6Output) ToGetApStatsDeviceApStatRadioStatBand6OutputWithContext(ctx context.Context) GetApStatsDeviceApStatRadioStatBand6Output {
	return o
}

// channel width for the band.enum: `20`, `40`, `80` (only applicable for band5 and band_6), `160` (only for band_6)
func (o GetApStatsDeviceApStatRadioStatBand6Output) Bandwidth() pulumi.IntOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatRadioStatBand6) int { return v.Bandwidth }).(pulumi.IntOutput)
}

// Current channel the radio is running on
func (o GetApStatsDeviceApStatRadioStatBand6Output) Channel() pulumi.IntOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatRadioStatBand6) int { return v.Channel }).(pulumi.IntOutput)
}

// Use dynamic chaining for downlink
func (o GetApStatsDeviceApStatRadioStatBand6Output) DynamicChainingEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatRadioStatBand6) bool { return v.DynamicChainingEnabled }).(pulumi.BoolOutput)
}

// Radio (base) mac, it can have 16 bssids (e.g. 5c5b350001a0-5c5b350001af)
func (o GetApStatsDeviceApStatRadioStatBand6Output) Mac() pulumi.StringOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatRadioStatBand6) string { return v.Mac }).(pulumi.StringOutput)
}

func (o GetApStatsDeviceApStatRadioStatBand6Output) NoiseFloor() pulumi.IntOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatRadioStatBand6) int { return v.NoiseFloor }).(pulumi.IntOutput)
}

func (o GetApStatsDeviceApStatRadioStatBand6Output) NumClients() pulumi.IntOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatRadioStatBand6) int { return v.NumClients }).(pulumi.IntOutput)
}

// How many WLANs are applied to the radio
func (o GetApStatsDeviceApStatRadioStatBand6Output) NumWlans() pulumi.IntOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatRadioStatBand6) int { return v.NumWlans }).(pulumi.IntOutput)
}

// Transmit power (in dBm)
func (o GetApStatsDeviceApStatRadioStatBand6Output) Power() pulumi.IntOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatRadioStatBand6) int { return v.Power }).(pulumi.IntOutput)
}

// Amount of traffic received since connection
func (o GetApStatsDeviceApStatRadioStatBand6Output) RxBytes() pulumi.IntOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatRadioStatBand6) int { return v.RxBytes }).(pulumi.IntOutput)
}

// Amount of packets received since connection
func (o GetApStatsDeviceApStatRadioStatBand6Output) RxPkts() pulumi.IntOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatRadioStatBand6) int { return v.RxPkts }).(pulumi.IntOutput)
}

// Amount of traffic sent since connection
func (o GetApStatsDeviceApStatRadioStatBand6Output) TxBytes() pulumi.IntOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatRadioStatBand6) int { return v.TxBytes }).(pulumi.IntOutput)
}

// Amount of packets sent since connection
func (o GetApStatsDeviceApStatRadioStatBand6Output) TxPkts() pulumi.IntOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatRadioStatBand6) int { return v.TxPkts }).(pulumi.IntOutput)
}

func (o GetApStatsDeviceApStatRadioStatBand6Output) Usage() pulumi.StringOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatRadioStatBand6) string { return v.Usage }).(pulumi.StringOutput)
}

// All utilization in percentage
func (o GetApStatsDeviceApStatRadioStatBand6Output) UtilAll() pulumi.IntOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatRadioStatBand6) int { return v.UtilAll }).(pulumi.IntOutput)
}

// Reception of "No Packets" utilization in percentage, received frames with invalid PLCPs and CRS glitches as noise
func (o GetApStatsDeviceApStatRadioStatBand6Output) UtilNonWifi() pulumi.IntOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatRadioStatBand6) int { return v.UtilNonWifi }).(pulumi.IntOutput)
}

// Reception of "In BSS" utilization in percentage, only frames that are received from AP/STAs within the BSS
func (o GetApStatsDeviceApStatRadioStatBand6Output) UtilRxInBss() pulumi.IntOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatRadioStatBand6) int { return v.UtilRxInBss }).(pulumi.IntOutput)
}

// Reception of "Other BSS" utilization in percentage, all frames received from AP/STAs that are outside the BSS
func (o GetApStatsDeviceApStatRadioStatBand6Output) UtilRxOtherBss() pulumi.IntOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatRadioStatBand6) int { return v.UtilRxOtherBss }).(pulumi.IntOutput)
}

// Transmission utilization in percentage
func (o GetApStatsDeviceApStatRadioStatBand6Output) UtilTx() pulumi.IntOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatRadioStatBand6) int { return v.UtilTx }).(pulumi.IntOutput)
}

// Reception of "UnDecodable Wifi" utilization in percentage, only Preamble, PLCP header is decoded, Rest is undecodable in this radio
func (o GetApStatsDeviceApStatRadioStatBand6Output) UtilUndecodableWifi() pulumi.IntOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatRadioStatBand6) int { return v.UtilUndecodableWifi }).(pulumi.IntOutput)
}

// Reception of "No Category" utilization in percentage, all 802.11 frames that are corrupted at the receiver
func (o GetApStatsDeviceApStatRadioStatBand6Output) UtilUnknownWifi() pulumi.IntOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatRadioStatBand6) int { return v.UtilUnknownWifi }).(pulumi.IntOutput)
}

type GetApStatsDeviceApStatSwitchRedundancy struct {
	NumRedundantAps int `pulumi:"numRedundantAps"`
}

// GetApStatsDeviceApStatSwitchRedundancyInput is an input type that accepts GetApStatsDeviceApStatSwitchRedundancyArgs and GetApStatsDeviceApStatSwitchRedundancyOutput values.
// You can construct a concrete instance of `GetApStatsDeviceApStatSwitchRedundancyInput` via:
//
//	GetApStatsDeviceApStatSwitchRedundancyArgs{...}
type GetApStatsDeviceApStatSwitchRedundancyInput interface {
	pulumi.Input

	ToGetApStatsDeviceApStatSwitchRedundancyOutput() GetApStatsDeviceApStatSwitchRedundancyOutput
	ToGetApStatsDeviceApStatSwitchRedundancyOutputWithContext(context.Context) GetApStatsDeviceApStatSwitchRedundancyOutput
}

type GetApStatsDeviceApStatSwitchRedundancyArgs struct {
	NumRedundantAps pulumi.IntInput `pulumi:"numRedundantAps"`
}

func (GetApStatsDeviceApStatSwitchRedundancyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApStatsDeviceApStatSwitchRedundancy)(nil)).Elem()
}

func (i GetApStatsDeviceApStatSwitchRedundancyArgs) ToGetApStatsDeviceApStatSwitchRedundancyOutput() GetApStatsDeviceApStatSwitchRedundancyOutput {
	return i.ToGetApStatsDeviceApStatSwitchRedundancyOutputWithContext(context.Background())
}

func (i GetApStatsDeviceApStatSwitchRedundancyArgs) ToGetApStatsDeviceApStatSwitchRedundancyOutputWithContext(ctx context.Context) GetApStatsDeviceApStatSwitchRedundancyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApStatsDeviceApStatSwitchRedundancyOutput)
}

type GetApStatsDeviceApStatSwitchRedundancyOutput struct{ *pulumi.OutputState }

func (GetApStatsDeviceApStatSwitchRedundancyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApStatsDeviceApStatSwitchRedundancy)(nil)).Elem()
}

func (o GetApStatsDeviceApStatSwitchRedundancyOutput) ToGetApStatsDeviceApStatSwitchRedundancyOutput() GetApStatsDeviceApStatSwitchRedundancyOutput {
	return o
}

func (o GetApStatsDeviceApStatSwitchRedundancyOutput) ToGetApStatsDeviceApStatSwitchRedundancyOutputWithContext(ctx context.Context) GetApStatsDeviceApStatSwitchRedundancyOutput {
	return o
}

func (o GetApStatsDeviceApStatSwitchRedundancyOutput) NumRedundantAps() pulumi.IntOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatSwitchRedundancy) int { return v.NumRedundantAps }).(pulumi.IntOutput)
}

type GetApStatsDeviceApStatUsbStat struct {
	Channel      int    `pulumi:"channel"`
	Connected    bool   `pulumi:"connected"`
	LastActivity int    `pulumi:"lastActivity"`
	Type         string `pulumi:"type"`
	Up           bool   `pulumi:"up"`
}

// GetApStatsDeviceApStatUsbStatInput is an input type that accepts GetApStatsDeviceApStatUsbStatArgs and GetApStatsDeviceApStatUsbStatOutput values.
// You can construct a concrete instance of `GetApStatsDeviceApStatUsbStatInput` via:
//
//	GetApStatsDeviceApStatUsbStatArgs{...}
type GetApStatsDeviceApStatUsbStatInput interface {
	pulumi.Input

	ToGetApStatsDeviceApStatUsbStatOutput() GetApStatsDeviceApStatUsbStatOutput
	ToGetApStatsDeviceApStatUsbStatOutputWithContext(context.Context) GetApStatsDeviceApStatUsbStatOutput
}

type GetApStatsDeviceApStatUsbStatArgs struct {
	Channel      pulumi.IntInput    `pulumi:"channel"`
	Connected    pulumi.BoolInput   `pulumi:"connected"`
	LastActivity pulumi.IntInput    `pulumi:"lastActivity"`
	Type         pulumi.StringInput `pulumi:"type"`
	Up           pulumi.BoolInput   `pulumi:"up"`
}

func (GetApStatsDeviceApStatUsbStatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApStatsDeviceApStatUsbStat)(nil)).Elem()
}

func (i GetApStatsDeviceApStatUsbStatArgs) ToGetApStatsDeviceApStatUsbStatOutput() GetApStatsDeviceApStatUsbStatOutput {
	return i.ToGetApStatsDeviceApStatUsbStatOutputWithContext(context.Background())
}

func (i GetApStatsDeviceApStatUsbStatArgs) ToGetApStatsDeviceApStatUsbStatOutputWithContext(ctx context.Context) GetApStatsDeviceApStatUsbStatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApStatsDeviceApStatUsbStatOutput)
}

type GetApStatsDeviceApStatUsbStatOutput struct{ *pulumi.OutputState }

func (GetApStatsDeviceApStatUsbStatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApStatsDeviceApStatUsbStat)(nil)).Elem()
}

func (o GetApStatsDeviceApStatUsbStatOutput) ToGetApStatsDeviceApStatUsbStatOutput() GetApStatsDeviceApStatUsbStatOutput {
	return o
}

func (o GetApStatsDeviceApStatUsbStatOutput) ToGetApStatsDeviceApStatUsbStatOutputWithContext(ctx context.Context) GetApStatsDeviceApStatUsbStatOutput {
	return o
}

func (o GetApStatsDeviceApStatUsbStatOutput) Channel() pulumi.IntOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatUsbStat) int { return v.Channel }).(pulumi.IntOutput)
}

func (o GetApStatsDeviceApStatUsbStatOutput) Connected() pulumi.BoolOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatUsbStat) bool { return v.Connected }).(pulumi.BoolOutput)
}

func (o GetApStatsDeviceApStatUsbStatOutput) LastActivity() pulumi.IntOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatUsbStat) int { return v.LastActivity }).(pulumi.IntOutput)
}

func (o GetApStatsDeviceApStatUsbStatOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatUsbStat) string { return v.Type }).(pulumi.StringOutput)
}

func (o GetApStatsDeviceApStatUsbStatOutput) Up() pulumi.BoolOutput {
	return o.ApplyT(func(v GetApStatsDeviceApStatUsbStat) bool { return v.Up }).(pulumi.BoolOutput)
}

type GetGatewayStatsDeviceGatewayStat struct {
	ApRedundancy  GetGatewayStatsDeviceGatewayStatApRedundancy  `pulumi:"apRedundancy"`
	ArpTableStats GetGatewayStatsDeviceGatewayStatArpTableStats `pulumi:"arpTableStats"`
	// Only present when `bgpPeers` in `fields` query parameter. Each port object is same as `GET /api/v1/sites/{site_id}/stats/bgp_peers/search` result object, except that org*id, site*id, mac, model are removed
	BgpPeers      []GetGatewayStatsDeviceGatewayStatBgpPeer     `pulumi:"bgpPeers"`
	CertExpiry    int                                           `pulumi:"certExpiry"`
	ClusterConfig GetGatewayStatsDeviceGatewayStatClusterConfig `pulumi:"clusterConfig"`
	ClusterStat   GetGatewayStatsDeviceGatewayStatClusterStat   `pulumi:"clusterStat"`
	ConductorName string                                        `pulumi:"conductorName"`
	ConfigStatus  string                                        `pulumi:"configStatus"`
	Cpu2Stat      GetGatewayStatsDeviceGatewayStatCpu2Stat      `pulumi:"cpu2Stat"`
	CpuStat       GetGatewayStatsDeviceGatewayStatCpuStat       `pulumi:"cpuStat"`
	// When the object has been created, in epoch
	CreatedTime     float64 `pulumi:"createdTime"`
	DeviceprofileId string  `pulumi:"deviceprofileId"`
	// Property key is the network name
	Dhcpd2Stat map[string]GetGatewayStatsDeviceGatewayStatDhcpd2Stat `pulumi:"dhcpd2Stat"`
	// Property key is the network name
	DhcpdStat map[string]GetGatewayStatsDeviceGatewayStatDhcpdStat `pulumi:"dhcpdStat"`
	// IP address
	ExtIp    string                                   `pulumi:"extIp"`
	Fwupdate GetGatewayStatsDeviceGatewayStatFwupdate `pulumi:"fwupdate"`
	HasPcap  bool                                     `pulumi:"hasPcap"`
	// Hostname reported by the device
	Hostname string `pulumi:"hostname"`
	// Unique ID of the object instance in the Mist Organization
	Id string `pulumi:"id"`
	// Property key is the interface name
	If2Stat map[string]GetGatewayStatsDeviceGatewayStatIf2Stat `pulumi:"if2Stat"`
	// Property key is the interface name
	IfStat map[string]GetGatewayStatsDeviceGatewayStatIfStat `pulumi:"ifStat"`
	// IP address
	Ip      string                                  `pulumi:"ip"`
	Ip2Stat GetGatewayStatsDeviceGatewayStatIp2Stat `pulumi:"ip2Stat"`
	IpStat  GetGatewayStatsDeviceGatewayStatIpStat  `pulumi:"ipStat"`
	IsHa    bool                                    `pulumi:"isHa"`
	// Last seen timestamp
	LastSeen float64 `pulumi:"lastSeen"`
	// Device mac
	Mac string `pulumi:"mac"`
	// Serial Number
	MapId string `pulumi:"mapId"`
	// Memory usage stat (for virtual chassis, memory usage of master RE)
	Memory2Stat GetGatewayStatsDeviceGatewayStatMemory2Stat `pulumi:"memory2Stat"`
	// Memory usage stat (for virtual chassis, memory usage of master RE)
	MemoryStat GetGatewayStatsDeviceGatewayStatMemoryStat `pulumi:"memoryStat"`
	// Device model
	Model string `pulumi:"model"`
	// When the object has been modified for the last time, in epoch
	ModifiedTime float64                                       `pulumi:"modifiedTime"`
	Module2Stats []GetGatewayStatsDeviceGatewayStatModule2Stat `pulumi:"module2Stats"`
	ModuleStats  []GetGatewayStatsDeviceGatewayStatModuleStat  `pulumi:"moduleStats"`
	// Device name if configured
	Name     string `pulumi:"name"`
	NodeName string `pulumi:"nodeName"`
	OrgId    string `pulumi:"orgId"`
	// Only present when `ports` in `fields` query parameter. Each port object is same as `GET /api/v1/sites/{site_id}/stats/ports/search` result object, except that org*id, site*id, mac, model are removed
	Ports             []GetGatewayStatsDeviceGatewayStatPort            `pulumi:"ports"`
	RouteSummaryStats GetGatewayStatsDeviceGatewayStatRouteSummaryStats `pulumi:"routeSummaryStats"`
	// Device name if configured
	RouterName string `pulumi:"routerName"`
	// Serial Number
	Serial        string                                                  `pulumi:"serial"`
	Service2Stat  map[string]GetGatewayStatsDeviceGatewayStatService2Stat `pulumi:"service2Stat"`
	ServiceStat   map[string]GetGatewayStatsDeviceGatewayStatServiceStat  `pulumi:"serviceStat"`
	ServiceStatus GetGatewayStatsDeviceGatewayStatServiceStatus           `pulumi:"serviceStatus"`
	SiteId        string                                                  `pulumi:"siteId"`
	Spu2Stats     []GetGatewayStatsDeviceGatewayStatSpu2Stat              `pulumi:"spu2Stats"`
	SpuStats      []GetGatewayStatsDeviceGatewayStatSpuStat               `pulumi:"spuStats"`
	Status        string                                                  `pulumi:"status"`
	// Only present when `tunnels` in `fields` query parameter. Each port object is same as `GET /api/v1/sites/{site_id}/stats/tunnels/search` result object, except that org*id, site*id, mac, model are removed
	Tunnels []GetGatewayStatsDeviceGatewayStatTunnel `pulumi:"tunnels"`
	Uptime  float64                                  `pulumi:"uptime"`
	Version string                                   `pulumi:"version"`
	// Only present when `vpnPeers` in `fields` query parameter. Each port object is same as `GET /api/v1/sites/{site_id}/stats/vpn_peers/search` result object, except that org*id, site*id, mac, model are removed
	VpnPeers []GetGatewayStatsDeviceGatewayStatVpnPeer `pulumi:"vpnPeers"`
}

// GetGatewayStatsDeviceGatewayStatInput is an input type that accepts GetGatewayStatsDeviceGatewayStatArgs and GetGatewayStatsDeviceGatewayStatOutput values.
// You can construct a concrete instance of `GetGatewayStatsDeviceGatewayStatInput` via:
//
//	GetGatewayStatsDeviceGatewayStatArgs{...}
type GetGatewayStatsDeviceGatewayStatInput interface {
	pulumi.Input

	ToGetGatewayStatsDeviceGatewayStatOutput() GetGatewayStatsDeviceGatewayStatOutput
	ToGetGatewayStatsDeviceGatewayStatOutputWithContext(context.Context) GetGatewayStatsDeviceGatewayStatOutput
}

type GetGatewayStatsDeviceGatewayStatArgs struct {
	ApRedundancy  GetGatewayStatsDeviceGatewayStatApRedundancyInput  `pulumi:"apRedundancy"`
	ArpTableStats GetGatewayStatsDeviceGatewayStatArpTableStatsInput `pulumi:"arpTableStats"`
	// Only present when `bgpPeers` in `fields` query parameter. Each port object is same as `GET /api/v1/sites/{site_id}/stats/bgp_peers/search` result object, except that org*id, site*id, mac, model are removed
	BgpPeers      GetGatewayStatsDeviceGatewayStatBgpPeerArrayInput  `pulumi:"bgpPeers"`
	CertExpiry    pulumi.IntInput                                    `pulumi:"certExpiry"`
	ClusterConfig GetGatewayStatsDeviceGatewayStatClusterConfigInput `pulumi:"clusterConfig"`
	ClusterStat   GetGatewayStatsDeviceGatewayStatClusterStatInput   `pulumi:"clusterStat"`
	ConductorName pulumi.StringInput                                 `pulumi:"conductorName"`
	ConfigStatus  pulumi.StringInput                                 `pulumi:"configStatus"`
	Cpu2Stat      GetGatewayStatsDeviceGatewayStatCpu2StatInput      `pulumi:"cpu2Stat"`
	CpuStat       GetGatewayStatsDeviceGatewayStatCpuStatInput       `pulumi:"cpuStat"`
	// When the object has been created, in epoch
	CreatedTime     pulumi.Float64Input `pulumi:"createdTime"`
	DeviceprofileId pulumi.StringInput  `pulumi:"deviceprofileId"`
	// Property key is the network name
	Dhcpd2Stat GetGatewayStatsDeviceGatewayStatDhcpd2StatMapInput `pulumi:"dhcpd2Stat"`
	// Property key is the network name
	DhcpdStat GetGatewayStatsDeviceGatewayStatDhcpdStatMapInput `pulumi:"dhcpdStat"`
	// IP address
	ExtIp    pulumi.StringInput                            `pulumi:"extIp"`
	Fwupdate GetGatewayStatsDeviceGatewayStatFwupdateInput `pulumi:"fwupdate"`
	HasPcap  pulumi.BoolInput                              `pulumi:"hasPcap"`
	// Hostname reported by the device
	Hostname pulumi.StringInput `pulumi:"hostname"`
	// Unique ID of the object instance in the Mist Organization
	Id pulumi.StringInput `pulumi:"id"`
	// Property key is the interface name
	If2Stat GetGatewayStatsDeviceGatewayStatIf2StatMapInput `pulumi:"if2Stat"`
	// Property key is the interface name
	IfStat GetGatewayStatsDeviceGatewayStatIfStatMapInput `pulumi:"ifStat"`
	// IP address
	Ip      pulumi.StringInput                           `pulumi:"ip"`
	Ip2Stat GetGatewayStatsDeviceGatewayStatIp2StatInput `pulumi:"ip2Stat"`
	IpStat  GetGatewayStatsDeviceGatewayStatIpStatInput  `pulumi:"ipStat"`
	IsHa    pulumi.BoolInput                             `pulumi:"isHa"`
	// Last seen timestamp
	LastSeen pulumi.Float64Input `pulumi:"lastSeen"`
	// Device mac
	Mac pulumi.StringInput `pulumi:"mac"`
	// Serial Number
	MapId pulumi.StringInput `pulumi:"mapId"`
	// Memory usage stat (for virtual chassis, memory usage of master RE)
	Memory2Stat GetGatewayStatsDeviceGatewayStatMemory2StatInput `pulumi:"memory2Stat"`
	// Memory usage stat (for virtual chassis, memory usage of master RE)
	MemoryStat GetGatewayStatsDeviceGatewayStatMemoryStatInput `pulumi:"memoryStat"`
	// Device model
	Model pulumi.StringInput `pulumi:"model"`
	// When the object has been modified for the last time, in epoch
	ModifiedTime pulumi.Float64Input                                   `pulumi:"modifiedTime"`
	Module2Stats GetGatewayStatsDeviceGatewayStatModule2StatArrayInput `pulumi:"module2Stats"`
	ModuleStats  GetGatewayStatsDeviceGatewayStatModuleStatArrayInput  `pulumi:"moduleStats"`
	// Device name if configured
	Name     pulumi.StringInput `pulumi:"name"`
	NodeName pulumi.StringInput `pulumi:"nodeName"`
	OrgId    pulumi.StringInput `pulumi:"orgId"`
	// Only present when `ports` in `fields` query parameter. Each port object is same as `GET /api/v1/sites/{site_id}/stats/ports/search` result object, except that org*id, site*id, mac, model are removed
	Ports             GetGatewayStatsDeviceGatewayStatPortArrayInput         `pulumi:"ports"`
	RouteSummaryStats GetGatewayStatsDeviceGatewayStatRouteSummaryStatsInput `pulumi:"routeSummaryStats"`
	// Device name if configured
	RouterName pulumi.StringInput `pulumi:"routerName"`
	// Serial Number
	Serial        pulumi.StringInput                                   `pulumi:"serial"`
	Service2Stat  GetGatewayStatsDeviceGatewayStatService2StatMapInput `pulumi:"service2Stat"`
	ServiceStat   GetGatewayStatsDeviceGatewayStatServiceStatMapInput  `pulumi:"serviceStat"`
	ServiceStatus GetGatewayStatsDeviceGatewayStatServiceStatusInput   `pulumi:"serviceStatus"`
	SiteId        pulumi.StringInput                                   `pulumi:"siteId"`
	Spu2Stats     GetGatewayStatsDeviceGatewayStatSpu2StatArrayInput   `pulumi:"spu2Stats"`
	SpuStats      GetGatewayStatsDeviceGatewayStatSpuStatArrayInput    `pulumi:"spuStats"`
	Status        pulumi.StringInput                                   `pulumi:"status"`
	// Only present when `tunnels` in `fields` query parameter. Each port object is same as `GET /api/v1/sites/{site_id}/stats/tunnels/search` result object, except that org*id, site*id, mac, model are removed
	Tunnels GetGatewayStatsDeviceGatewayStatTunnelArrayInput `pulumi:"tunnels"`
	Uptime  pulumi.Float64Input                              `pulumi:"uptime"`
	Version pulumi.StringInput                               `pulumi:"version"`
	// Only present when `vpnPeers` in `fields` query parameter. Each port object is same as `GET /api/v1/sites/{site_id}/stats/vpn_peers/search` result object, except that org*id, site*id, mac, model are removed
	VpnPeers GetGatewayStatsDeviceGatewayStatVpnPeerArrayInput `pulumi:"vpnPeers"`
}

func (GetGatewayStatsDeviceGatewayStatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayStatsDeviceGatewayStat)(nil)).Elem()
}

func (i GetGatewayStatsDeviceGatewayStatArgs) ToGetGatewayStatsDeviceGatewayStatOutput() GetGatewayStatsDeviceGatewayStatOutput {
	return i.ToGetGatewayStatsDeviceGatewayStatOutputWithContext(context.Background())
}

func (i GetGatewayStatsDeviceGatewayStatArgs) ToGetGatewayStatsDeviceGatewayStatOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayStatsDeviceGatewayStatOutput)
}

// GetGatewayStatsDeviceGatewayStatArrayInput is an input type that accepts GetGatewayStatsDeviceGatewayStatArray and GetGatewayStatsDeviceGatewayStatArrayOutput values.
// You can construct a concrete instance of `GetGatewayStatsDeviceGatewayStatArrayInput` via:
//
//	GetGatewayStatsDeviceGatewayStatArray{ GetGatewayStatsDeviceGatewayStatArgs{...} }
type GetGatewayStatsDeviceGatewayStatArrayInput interface {
	pulumi.Input

	ToGetGatewayStatsDeviceGatewayStatArrayOutput() GetGatewayStatsDeviceGatewayStatArrayOutput
	ToGetGatewayStatsDeviceGatewayStatArrayOutputWithContext(context.Context) GetGatewayStatsDeviceGatewayStatArrayOutput
}

type GetGatewayStatsDeviceGatewayStatArray []GetGatewayStatsDeviceGatewayStatInput

func (GetGatewayStatsDeviceGatewayStatArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayStatsDeviceGatewayStat)(nil)).Elem()
}

func (i GetGatewayStatsDeviceGatewayStatArray) ToGetGatewayStatsDeviceGatewayStatArrayOutput() GetGatewayStatsDeviceGatewayStatArrayOutput {
	return i.ToGetGatewayStatsDeviceGatewayStatArrayOutputWithContext(context.Background())
}

func (i GetGatewayStatsDeviceGatewayStatArray) ToGetGatewayStatsDeviceGatewayStatArrayOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayStatsDeviceGatewayStatArrayOutput)
}

type GetGatewayStatsDeviceGatewayStatOutput struct{ *pulumi.OutputState }

func (GetGatewayStatsDeviceGatewayStatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayStatsDeviceGatewayStat)(nil)).Elem()
}

func (o GetGatewayStatsDeviceGatewayStatOutput) ToGetGatewayStatsDeviceGatewayStatOutput() GetGatewayStatsDeviceGatewayStatOutput {
	return o
}

func (o GetGatewayStatsDeviceGatewayStatOutput) ToGetGatewayStatsDeviceGatewayStatOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatOutput {
	return o
}

func (o GetGatewayStatsDeviceGatewayStatOutput) ApRedundancy() GetGatewayStatsDeviceGatewayStatApRedundancyOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStat) GetGatewayStatsDeviceGatewayStatApRedundancy {
		return v.ApRedundancy
	}).(GetGatewayStatsDeviceGatewayStatApRedundancyOutput)
}

func (o GetGatewayStatsDeviceGatewayStatOutput) ArpTableStats() GetGatewayStatsDeviceGatewayStatArpTableStatsOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStat) GetGatewayStatsDeviceGatewayStatArpTableStats {
		return v.ArpTableStats
	}).(GetGatewayStatsDeviceGatewayStatArpTableStatsOutput)
}

// Only present when `bgpPeers` in `fields` query parameter. Each port object is same as `GET /api/v1/sites/{site_id}/stats/bgp_peers/search` result object, except that org*id, site*id, mac, model are removed
func (o GetGatewayStatsDeviceGatewayStatOutput) BgpPeers() GetGatewayStatsDeviceGatewayStatBgpPeerArrayOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStat) []GetGatewayStatsDeviceGatewayStatBgpPeer { return v.BgpPeers }).(GetGatewayStatsDeviceGatewayStatBgpPeerArrayOutput)
}

func (o GetGatewayStatsDeviceGatewayStatOutput) CertExpiry() pulumi.IntOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStat) int { return v.CertExpiry }).(pulumi.IntOutput)
}

func (o GetGatewayStatsDeviceGatewayStatOutput) ClusterConfig() GetGatewayStatsDeviceGatewayStatClusterConfigOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStat) GetGatewayStatsDeviceGatewayStatClusterConfig {
		return v.ClusterConfig
	}).(GetGatewayStatsDeviceGatewayStatClusterConfigOutput)
}

func (o GetGatewayStatsDeviceGatewayStatOutput) ClusterStat() GetGatewayStatsDeviceGatewayStatClusterStatOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStat) GetGatewayStatsDeviceGatewayStatClusterStat {
		return v.ClusterStat
	}).(GetGatewayStatsDeviceGatewayStatClusterStatOutput)
}

func (o GetGatewayStatsDeviceGatewayStatOutput) ConductorName() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStat) string { return v.ConductorName }).(pulumi.StringOutput)
}

func (o GetGatewayStatsDeviceGatewayStatOutput) ConfigStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStat) string { return v.ConfigStatus }).(pulumi.StringOutput)
}

func (o GetGatewayStatsDeviceGatewayStatOutput) Cpu2Stat() GetGatewayStatsDeviceGatewayStatCpu2StatOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStat) GetGatewayStatsDeviceGatewayStatCpu2Stat { return v.Cpu2Stat }).(GetGatewayStatsDeviceGatewayStatCpu2StatOutput)
}

func (o GetGatewayStatsDeviceGatewayStatOutput) CpuStat() GetGatewayStatsDeviceGatewayStatCpuStatOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStat) GetGatewayStatsDeviceGatewayStatCpuStat { return v.CpuStat }).(GetGatewayStatsDeviceGatewayStatCpuStatOutput)
}

// When the object has been created, in epoch
func (o GetGatewayStatsDeviceGatewayStatOutput) CreatedTime() pulumi.Float64Output {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStat) float64 { return v.CreatedTime }).(pulumi.Float64Output)
}

func (o GetGatewayStatsDeviceGatewayStatOutput) DeviceprofileId() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStat) string { return v.DeviceprofileId }).(pulumi.StringOutput)
}

// Property key is the network name
func (o GetGatewayStatsDeviceGatewayStatOutput) Dhcpd2Stat() GetGatewayStatsDeviceGatewayStatDhcpd2StatMapOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStat) map[string]GetGatewayStatsDeviceGatewayStatDhcpd2Stat {
		return v.Dhcpd2Stat
	}).(GetGatewayStatsDeviceGatewayStatDhcpd2StatMapOutput)
}

// Property key is the network name
func (o GetGatewayStatsDeviceGatewayStatOutput) DhcpdStat() GetGatewayStatsDeviceGatewayStatDhcpdStatMapOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStat) map[string]GetGatewayStatsDeviceGatewayStatDhcpdStat {
		return v.DhcpdStat
	}).(GetGatewayStatsDeviceGatewayStatDhcpdStatMapOutput)
}

// IP address
func (o GetGatewayStatsDeviceGatewayStatOutput) ExtIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStat) string { return v.ExtIp }).(pulumi.StringOutput)
}

func (o GetGatewayStatsDeviceGatewayStatOutput) Fwupdate() GetGatewayStatsDeviceGatewayStatFwupdateOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStat) GetGatewayStatsDeviceGatewayStatFwupdate { return v.Fwupdate }).(GetGatewayStatsDeviceGatewayStatFwupdateOutput)
}

func (o GetGatewayStatsDeviceGatewayStatOutput) HasPcap() pulumi.BoolOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStat) bool { return v.HasPcap }).(pulumi.BoolOutput)
}

// Hostname reported by the device
func (o GetGatewayStatsDeviceGatewayStatOutput) Hostname() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStat) string { return v.Hostname }).(pulumi.StringOutput)
}

// Unique ID of the object instance in the Mist Organization
func (o GetGatewayStatsDeviceGatewayStatOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStat) string { return v.Id }).(pulumi.StringOutput)
}

// Property key is the interface name
func (o GetGatewayStatsDeviceGatewayStatOutput) If2Stat() GetGatewayStatsDeviceGatewayStatIf2StatMapOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStat) map[string]GetGatewayStatsDeviceGatewayStatIf2Stat {
		return v.If2Stat
	}).(GetGatewayStatsDeviceGatewayStatIf2StatMapOutput)
}

// Property key is the interface name
func (o GetGatewayStatsDeviceGatewayStatOutput) IfStat() GetGatewayStatsDeviceGatewayStatIfStatMapOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStat) map[string]GetGatewayStatsDeviceGatewayStatIfStat {
		return v.IfStat
	}).(GetGatewayStatsDeviceGatewayStatIfStatMapOutput)
}

// IP address
func (o GetGatewayStatsDeviceGatewayStatOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStat) string { return v.Ip }).(pulumi.StringOutput)
}

func (o GetGatewayStatsDeviceGatewayStatOutput) Ip2Stat() GetGatewayStatsDeviceGatewayStatIp2StatOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStat) GetGatewayStatsDeviceGatewayStatIp2Stat { return v.Ip2Stat }).(GetGatewayStatsDeviceGatewayStatIp2StatOutput)
}

func (o GetGatewayStatsDeviceGatewayStatOutput) IpStat() GetGatewayStatsDeviceGatewayStatIpStatOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStat) GetGatewayStatsDeviceGatewayStatIpStat { return v.IpStat }).(GetGatewayStatsDeviceGatewayStatIpStatOutput)
}

func (o GetGatewayStatsDeviceGatewayStatOutput) IsHa() pulumi.BoolOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStat) bool { return v.IsHa }).(pulumi.BoolOutput)
}

// Last seen timestamp
func (o GetGatewayStatsDeviceGatewayStatOutput) LastSeen() pulumi.Float64Output {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStat) float64 { return v.LastSeen }).(pulumi.Float64Output)
}

// Device mac
func (o GetGatewayStatsDeviceGatewayStatOutput) Mac() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStat) string { return v.Mac }).(pulumi.StringOutput)
}

// Serial Number
func (o GetGatewayStatsDeviceGatewayStatOutput) MapId() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStat) string { return v.MapId }).(pulumi.StringOutput)
}

// Memory usage stat (for virtual chassis, memory usage of master RE)
func (o GetGatewayStatsDeviceGatewayStatOutput) Memory2Stat() GetGatewayStatsDeviceGatewayStatMemory2StatOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStat) GetGatewayStatsDeviceGatewayStatMemory2Stat {
		return v.Memory2Stat
	}).(GetGatewayStatsDeviceGatewayStatMemory2StatOutput)
}

// Memory usage stat (for virtual chassis, memory usage of master RE)
func (o GetGatewayStatsDeviceGatewayStatOutput) MemoryStat() GetGatewayStatsDeviceGatewayStatMemoryStatOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStat) GetGatewayStatsDeviceGatewayStatMemoryStat {
		return v.MemoryStat
	}).(GetGatewayStatsDeviceGatewayStatMemoryStatOutput)
}

// Device model
func (o GetGatewayStatsDeviceGatewayStatOutput) Model() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStat) string { return v.Model }).(pulumi.StringOutput)
}

// When the object has been modified for the last time, in epoch
func (o GetGatewayStatsDeviceGatewayStatOutput) ModifiedTime() pulumi.Float64Output {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStat) float64 { return v.ModifiedTime }).(pulumi.Float64Output)
}

func (o GetGatewayStatsDeviceGatewayStatOutput) Module2Stats() GetGatewayStatsDeviceGatewayStatModule2StatArrayOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStat) []GetGatewayStatsDeviceGatewayStatModule2Stat {
		return v.Module2Stats
	}).(GetGatewayStatsDeviceGatewayStatModule2StatArrayOutput)
}

func (o GetGatewayStatsDeviceGatewayStatOutput) ModuleStats() GetGatewayStatsDeviceGatewayStatModuleStatArrayOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStat) []GetGatewayStatsDeviceGatewayStatModuleStat {
		return v.ModuleStats
	}).(GetGatewayStatsDeviceGatewayStatModuleStatArrayOutput)
}

// Device name if configured
func (o GetGatewayStatsDeviceGatewayStatOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStat) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetGatewayStatsDeviceGatewayStatOutput) NodeName() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStat) string { return v.NodeName }).(pulumi.StringOutput)
}

func (o GetGatewayStatsDeviceGatewayStatOutput) OrgId() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStat) string { return v.OrgId }).(pulumi.StringOutput)
}

// Only present when `ports` in `fields` query parameter. Each port object is same as `GET /api/v1/sites/{site_id}/stats/ports/search` result object, except that org*id, site*id, mac, model are removed
func (o GetGatewayStatsDeviceGatewayStatOutput) Ports() GetGatewayStatsDeviceGatewayStatPortArrayOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStat) []GetGatewayStatsDeviceGatewayStatPort { return v.Ports }).(GetGatewayStatsDeviceGatewayStatPortArrayOutput)
}

func (o GetGatewayStatsDeviceGatewayStatOutput) RouteSummaryStats() GetGatewayStatsDeviceGatewayStatRouteSummaryStatsOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStat) GetGatewayStatsDeviceGatewayStatRouteSummaryStats {
		return v.RouteSummaryStats
	}).(GetGatewayStatsDeviceGatewayStatRouteSummaryStatsOutput)
}

// Device name if configured
func (o GetGatewayStatsDeviceGatewayStatOutput) RouterName() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStat) string { return v.RouterName }).(pulumi.StringOutput)
}

// Serial Number
func (o GetGatewayStatsDeviceGatewayStatOutput) Serial() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStat) string { return v.Serial }).(pulumi.StringOutput)
}

func (o GetGatewayStatsDeviceGatewayStatOutput) Service2Stat() GetGatewayStatsDeviceGatewayStatService2StatMapOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStat) map[string]GetGatewayStatsDeviceGatewayStatService2Stat {
		return v.Service2Stat
	}).(GetGatewayStatsDeviceGatewayStatService2StatMapOutput)
}

func (o GetGatewayStatsDeviceGatewayStatOutput) ServiceStat() GetGatewayStatsDeviceGatewayStatServiceStatMapOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStat) map[string]GetGatewayStatsDeviceGatewayStatServiceStat {
		return v.ServiceStat
	}).(GetGatewayStatsDeviceGatewayStatServiceStatMapOutput)
}

func (o GetGatewayStatsDeviceGatewayStatOutput) ServiceStatus() GetGatewayStatsDeviceGatewayStatServiceStatusOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStat) GetGatewayStatsDeviceGatewayStatServiceStatus {
		return v.ServiceStatus
	}).(GetGatewayStatsDeviceGatewayStatServiceStatusOutput)
}

func (o GetGatewayStatsDeviceGatewayStatOutput) SiteId() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStat) string { return v.SiteId }).(pulumi.StringOutput)
}

func (o GetGatewayStatsDeviceGatewayStatOutput) Spu2Stats() GetGatewayStatsDeviceGatewayStatSpu2StatArrayOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStat) []GetGatewayStatsDeviceGatewayStatSpu2Stat {
		return v.Spu2Stats
	}).(GetGatewayStatsDeviceGatewayStatSpu2StatArrayOutput)
}

func (o GetGatewayStatsDeviceGatewayStatOutput) SpuStats() GetGatewayStatsDeviceGatewayStatSpuStatArrayOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStat) []GetGatewayStatsDeviceGatewayStatSpuStat { return v.SpuStats }).(GetGatewayStatsDeviceGatewayStatSpuStatArrayOutput)
}

func (o GetGatewayStatsDeviceGatewayStatOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStat) string { return v.Status }).(pulumi.StringOutput)
}

// Only present when `tunnels` in `fields` query parameter. Each port object is same as `GET /api/v1/sites/{site_id}/stats/tunnels/search` result object, except that org*id, site*id, mac, model are removed
func (o GetGatewayStatsDeviceGatewayStatOutput) Tunnels() GetGatewayStatsDeviceGatewayStatTunnelArrayOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStat) []GetGatewayStatsDeviceGatewayStatTunnel { return v.Tunnels }).(GetGatewayStatsDeviceGatewayStatTunnelArrayOutput)
}

func (o GetGatewayStatsDeviceGatewayStatOutput) Uptime() pulumi.Float64Output {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStat) float64 { return v.Uptime }).(pulumi.Float64Output)
}

func (o GetGatewayStatsDeviceGatewayStatOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStat) string { return v.Version }).(pulumi.StringOutput)
}

// Only present when `vpnPeers` in `fields` query parameter. Each port object is same as `GET /api/v1/sites/{site_id}/stats/vpn_peers/search` result object, except that org*id, site*id, mac, model are removed
func (o GetGatewayStatsDeviceGatewayStatOutput) VpnPeers() GetGatewayStatsDeviceGatewayStatVpnPeerArrayOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStat) []GetGatewayStatsDeviceGatewayStatVpnPeer { return v.VpnPeers }).(GetGatewayStatsDeviceGatewayStatVpnPeerArrayOutput)
}

type GetGatewayStatsDeviceGatewayStatArrayOutput struct{ *pulumi.OutputState }

func (GetGatewayStatsDeviceGatewayStatArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayStatsDeviceGatewayStat)(nil)).Elem()
}

func (o GetGatewayStatsDeviceGatewayStatArrayOutput) ToGetGatewayStatsDeviceGatewayStatArrayOutput() GetGatewayStatsDeviceGatewayStatArrayOutput {
	return o
}

func (o GetGatewayStatsDeviceGatewayStatArrayOutput) ToGetGatewayStatsDeviceGatewayStatArrayOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatArrayOutput {
	return o
}

func (o GetGatewayStatsDeviceGatewayStatArrayOutput) Index(i pulumi.IntInput) GetGatewayStatsDeviceGatewayStatOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGatewayStatsDeviceGatewayStat {
		return vs[0].([]GetGatewayStatsDeviceGatewayStat)[vs[1].(int)]
	}).(GetGatewayStatsDeviceGatewayStatOutput)
}

type GetGatewayStatsDeviceGatewayStatApRedundancy struct {
	// Property key is the node id
	Modules                    map[string]GetGatewayStatsDeviceGatewayStatApRedundancyModules `pulumi:"modules"`
	NumAps                     int                                                            `pulumi:"numAps"`
	NumApsWithSwitchRedundancy int                                                            `pulumi:"numApsWithSwitchRedundancy"`
}

// GetGatewayStatsDeviceGatewayStatApRedundancyInput is an input type that accepts GetGatewayStatsDeviceGatewayStatApRedundancyArgs and GetGatewayStatsDeviceGatewayStatApRedundancyOutput values.
// You can construct a concrete instance of `GetGatewayStatsDeviceGatewayStatApRedundancyInput` via:
//
//	GetGatewayStatsDeviceGatewayStatApRedundancyArgs{...}
type GetGatewayStatsDeviceGatewayStatApRedundancyInput interface {
	pulumi.Input

	ToGetGatewayStatsDeviceGatewayStatApRedundancyOutput() GetGatewayStatsDeviceGatewayStatApRedundancyOutput
	ToGetGatewayStatsDeviceGatewayStatApRedundancyOutputWithContext(context.Context) GetGatewayStatsDeviceGatewayStatApRedundancyOutput
}

type GetGatewayStatsDeviceGatewayStatApRedundancyArgs struct {
	// Property key is the node id
	Modules                    GetGatewayStatsDeviceGatewayStatApRedundancyModulesMapInput `pulumi:"modules"`
	NumAps                     pulumi.IntInput                                             `pulumi:"numAps"`
	NumApsWithSwitchRedundancy pulumi.IntInput                                             `pulumi:"numApsWithSwitchRedundancy"`
}

func (GetGatewayStatsDeviceGatewayStatApRedundancyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatApRedundancy)(nil)).Elem()
}

func (i GetGatewayStatsDeviceGatewayStatApRedundancyArgs) ToGetGatewayStatsDeviceGatewayStatApRedundancyOutput() GetGatewayStatsDeviceGatewayStatApRedundancyOutput {
	return i.ToGetGatewayStatsDeviceGatewayStatApRedundancyOutputWithContext(context.Background())
}

func (i GetGatewayStatsDeviceGatewayStatApRedundancyArgs) ToGetGatewayStatsDeviceGatewayStatApRedundancyOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatApRedundancyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayStatsDeviceGatewayStatApRedundancyOutput)
}

type GetGatewayStatsDeviceGatewayStatApRedundancyOutput struct{ *pulumi.OutputState }

func (GetGatewayStatsDeviceGatewayStatApRedundancyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatApRedundancy)(nil)).Elem()
}

func (o GetGatewayStatsDeviceGatewayStatApRedundancyOutput) ToGetGatewayStatsDeviceGatewayStatApRedundancyOutput() GetGatewayStatsDeviceGatewayStatApRedundancyOutput {
	return o
}

func (o GetGatewayStatsDeviceGatewayStatApRedundancyOutput) ToGetGatewayStatsDeviceGatewayStatApRedundancyOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatApRedundancyOutput {
	return o
}

// Property key is the node id
func (o GetGatewayStatsDeviceGatewayStatApRedundancyOutput) Modules() GetGatewayStatsDeviceGatewayStatApRedundancyModulesMapOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatApRedundancy) map[string]GetGatewayStatsDeviceGatewayStatApRedundancyModules {
		return v.Modules
	}).(GetGatewayStatsDeviceGatewayStatApRedundancyModulesMapOutput)
}

func (o GetGatewayStatsDeviceGatewayStatApRedundancyOutput) NumAps() pulumi.IntOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatApRedundancy) int { return v.NumAps }).(pulumi.IntOutput)
}

func (o GetGatewayStatsDeviceGatewayStatApRedundancyOutput) NumApsWithSwitchRedundancy() pulumi.IntOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatApRedundancy) int { return v.NumApsWithSwitchRedundancy }).(pulumi.IntOutput)
}

type GetGatewayStatsDeviceGatewayStatApRedundancyModules struct {
	NumAps                     int `pulumi:"numAps"`
	NumApsWithSwitchRedundancy int `pulumi:"numApsWithSwitchRedundancy"`
}

// GetGatewayStatsDeviceGatewayStatApRedundancyModulesInput is an input type that accepts GetGatewayStatsDeviceGatewayStatApRedundancyModulesArgs and GetGatewayStatsDeviceGatewayStatApRedundancyModulesOutput values.
// You can construct a concrete instance of `GetGatewayStatsDeviceGatewayStatApRedundancyModulesInput` via:
//
//	GetGatewayStatsDeviceGatewayStatApRedundancyModulesArgs{...}
type GetGatewayStatsDeviceGatewayStatApRedundancyModulesInput interface {
	pulumi.Input

	ToGetGatewayStatsDeviceGatewayStatApRedundancyModulesOutput() GetGatewayStatsDeviceGatewayStatApRedundancyModulesOutput
	ToGetGatewayStatsDeviceGatewayStatApRedundancyModulesOutputWithContext(context.Context) GetGatewayStatsDeviceGatewayStatApRedundancyModulesOutput
}

type GetGatewayStatsDeviceGatewayStatApRedundancyModulesArgs struct {
	NumAps                     pulumi.IntInput `pulumi:"numAps"`
	NumApsWithSwitchRedundancy pulumi.IntInput `pulumi:"numApsWithSwitchRedundancy"`
}

func (GetGatewayStatsDeviceGatewayStatApRedundancyModulesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatApRedundancyModules)(nil)).Elem()
}

func (i GetGatewayStatsDeviceGatewayStatApRedundancyModulesArgs) ToGetGatewayStatsDeviceGatewayStatApRedundancyModulesOutput() GetGatewayStatsDeviceGatewayStatApRedundancyModulesOutput {
	return i.ToGetGatewayStatsDeviceGatewayStatApRedundancyModulesOutputWithContext(context.Background())
}

func (i GetGatewayStatsDeviceGatewayStatApRedundancyModulesArgs) ToGetGatewayStatsDeviceGatewayStatApRedundancyModulesOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatApRedundancyModulesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayStatsDeviceGatewayStatApRedundancyModulesOutput)
}

// GetGatewayStatsDeviceGatewayStatApRedundancyModulesMapInput is an input type that accepts GetGatewayStatsDeviceGatewayStatApRedundancyModulesMap and GetGatewayStatsDeviceGatewayStatApRedundancyModulesMapOutput values.
// You can construct a concrete instance of `GetGatewayStatsDeviceGatewayStatApRedundancyModulesMapInput` via:
//
//	GetGatewayStatsDeviceGatewayStatApRedundancyModulesMap{ "key": GetGatewayStatsDeviceGatewayStatApRedundancyModulesArgs{...} }
type GetGatewayStatsDeviceGatewayStatApRedundancyModulesMapInput interface {
	pulumi.Input

	ToGetGatewayStatsDeviceGatewayStatApRedundancyModulesMapOutput() GetGatewayStatsDeviceGatewayStatApRedundancyModulesMapOutput
	ToGetGatewayStatsDeviceGatewayStatApRedundancyModulesMapOutputWithContext(context.Context) GetGatewayStatsDeviceGatewayStatApRedundancyModulesMapOutput
}

type GetGatewayStatsDeviceGatewayStatApRedundancyModulesMap map[string]GetGatewayStatsDeviceGatewayStatApRedundancyModulesInput

func (GetGatewayStatsDeviceGatewayStatApRedundancyModulesMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]GetGatewayStatsDeviceGatewayStatApRedundancyModules)(nil)).Elem()
}

func (i GetGatewayStatsDeviceGatewayStatApRedundancyModulesMap) ToGetGatewayStatsDeviceGatewayStatApRedundancyModulesMapOutput() GetGatewayStatsDeviceGatewayStatApRedundancyModulesMapOutput {
	return i.ToGetGatewayStatsDeviceGatewayStatApRedundancyModulesMapOutputWithContext(context.Background())
}

func (i GetGatewayStatsDeviceGatewayStatApRedundancyModulesMap) ToGetGatewayStatsDeviceGatewayStatApRedundancyModulesMapOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatApRedundancyModulesMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayStatsDeviceGatewayStatApRedundancyModulesMapOutput)
}

type GetGatewayStatsDeviceGatewayStatApRedundancyModulesOutput struct{ *pulumi.OutputState }

func (GetGatewayStatsDeviceGatewayStatApRedundancyModulesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatApRedundancyModules)(nil)).Elem()
}

func (o GetGatewayStatsDeviceGatewayStatApRedundancyModulesOutput) ToGetGatewayStatsDeviceGatewayStatApRedundancyModulesOutput() GetGatewayStatsDeviceGatewayStatApRedundancyModulesOutput {
	return o
}

func (o GetGatewayStatsDeviceGatewayStatApRedundancyModulesOutput) ToGetGatewayStatsDeviceGatewayStatApRedundancyModulesOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatApRedundancyModulesOutput {
	return o
}

func (o GetGatewayStatsDeviceGatewayStatApRedundancyModulesOutput) NumAps() pulumi.IntOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatApRedundancyModules) int { return v.NumAps }).(pulumi.IntOutput)
}

func (o GetGatewayStatsDeviceGatewayStatApRedundancyModulesOutput) NumApsWithSwitchRedundancy() pulumi.IntOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatApRedundancyModules) int { return v.NumApsWithSwitchRedundancy }).(pulumi.IntOutput)
}

type GetGatewayStatsDeviceGatewayStatApRedundancyModulesMapOutput struct{ *pulumi.OutputState }

func (GetGatewayStatsDeviceGatewayStatApRedundancyModulesMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]GetGatewayStatsDeviceGatewayStatApRedundancyModules)(nil)).Elem()
}

func (o GetGatewayStatsDeviceGatewayStatApRedundancyModulesMapOutput) ToGetGatewayStatsDeviceGatewayStatApRedundancyModulesMapOutput() GetGatewayStatsDeviceGatewayStatApRedundancyModulesMapOutput {
	return o
}

func (o GetGatewayStatsDeviceGatewayStatApRedundancyModulesMapOutput) ToGetGatewayStatsDeviceGatewayStatApRedundancyModulesMapOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatApRedundancyModulesMapOutput {
	return o
}

func (o GetGatewayStatsDeviceGatewayStatApRedundancyModulesMapOutput) MapIndex(k pulumi.StringInput) GetGatewayStatsDeviceGatewayStatApRedundancyModulesOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) GetGatewayStatsDeviceGatewayStatApRedundancyModules {
		return vs[0].(map[string]GetGatewayStatsDeviceGatewayStatApRedundancyModules)[vs[1].(string)]
	}).(GetGatewayStatsDeviceGatewayStatApRedundancyModulesOutput)
}

type GetGatewayStatsDeviceGatewayStatArpTableStats struct {
	ArpTableCount       int `pulumi:"arpTableCount"`
	MaxEntriesSupported int `pulumi:"maxEntriesSupported"`
}

// GetGatewayStatsDeviceGatewayStatArpTableStatsInput is an input type that accepts GetGatewayStatsDeviceGatewayStatArpTableStatsArgs and GetGatewayStatsDeviceGatewayStatArpTableStatsOutput values.
// You can construct a concrete instance of `GetGatewayStatsDeviceGatewayStatArpTableStatsInput` via:
//
//	GetGatewayStatsDeviceGatewayStatArpTableStatsArgs{...}
type GetGatewayStatsDeviceGatewayStatArpTableStatsInput interface {
	pulumi.Input

	ToGetGatewayStatsDeviceGatewayStatArpTableStatsOutput() GetGatewayStatsDeviceGatewayStatArpTableStatsOutput
	ToGetGatewayStatsDeviceGatewayStatArpTableStatsOutputWithContext(context.Context) GetGatewayStatsDeviceGatewayStatArpTableStatsOutput
}

type GetGatewayStatsDeviceGatewayStatArpTableStatsArgs struct {
	ArpTableCount       pulumi.IntInput `pulumi:"arpTableCount"`
	MaxEntriesSupported pulumi.IntInput `pulumi:"maxEntriesSupported"`
}

func (GetGatewayStatsDeviceGatewayStatArpTableStatsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatArpTableStats)(nil)).Elem()
}

func (i GetGatewayStatsDeviceGatewayStatArpTableStatsArgs) ToGetGatewayStatsDeviceGatewayStatArpTableStatsOutput() GetGatewayStatsDeviceGatewayStatArpTableStatsOutput {
	return i.ToGetGatewayStatsDeviceGatewayStatArpTableStatsOutputWithContext(context.Background())
}

func (i GetGatewayStatsDeviceGatewayStatArpTableStatsArgs) ToGetGatewayStatsDeviceGatewayStatArpTableStatsOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatArpTableStatsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayStatsDeviceGatewayStatArpTableStatsOutput)
}

type GetGatewayStatsDeviceGatewayStatArpTableStatsOutput struct{ *pulumi.OutputState }

func (GetGatewayStatsDeviceGatewayStatArpTableStatsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatArpTableStats)(nil)).Elem()
}

func (o GetGatewayStatsDeviceGatewayStatArpTableStatsOutput) ToGetGatewayStatsDeviceGatewayStatArpTableStatsOutput() GetGatewayStatsDeviceGatewayStatArpTableStatsOutput {
	return o
}

func (o GetGatewayStatsDeviceGatewayStatArpTableStatsOutput) ToGetGatewayStatsDeviceGatewayStatArpTableStatsOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatArpTableStatsOutput {
	return o
}

func (o GetGatewayStatsDeviceGatewayStatArpTableStatsOutput) ArpTableCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatArpTableStats) int { return v.ArpTableCount }).(pulumi.IntOutput)
}

func (o GetGatewayStatsDeviceGatewayStatArpTableStatsOutput) MaxEntriesSupported() pulumi.IntOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatArpTableStats) int { return v.MaxEntriesSupported }).(pulumi.IntOutput)
}

type GetGatewayStatsDeviceGatewayStatBgpPeer struct {
	// If this is created for evpn overlay
	EvpnOverlay bool `pulumi:"evpnOverlay"`
	// If this is created for overlay
	ForOverlay bool   `pulumi:"forOverlay"`
	LocalAs    string `pulumi:"localAs"`
	Neighbor   string `pulumi:"neighbor"`
	NeighborAs string `pulumi:"neighborAs"`
	// If it's another device in the same org
	NeighborMac string `pulumi:"neighborMac"`
	// Node0/node1
	Node string `pulumi:"node"`
	// Amount of packets received since connection
	RxPkts int `pulumi:"rxPkts"`
	// Number of received routes
	RxRoutes int `pulumi:"rxRoutes"`
	// enum: `active`, `connect`, `established`, `idle`, `openConfig`, `openSent`
	State string `pulumi:"state"`
	// Epoch (seconds)
	Timestamp float64 `pulumi:"timestamp"`
	// Amount of packets sent since connection
	TxPkts   int    `pulumi:"txPkts"`
	TxRoutes int    `pulumi:"txRoutes"`
	Up       bool   `pulumi:"up"`
	Uptime   int    `pulumi:"uptime"`
	VrfName  string `pulumi:"vrfName"`
}

// GetGatewayStatsDeviceGatewayStatBgpPeerInput is an input type that accepts GetGatewayStatsDeviceGatewayStatBgpPeerArgs and GetGatewayStatsDeviceGatewayStatBgpPeerOutput values.
// You can construct a concrete instance of `GetGatewayStatsDeviceGatewayStatBgpPeerInput` via:
//
//	GetGatewayStatsDeviceGatewayStatBgpPeerArgs{...}
type GetGatewayStatsDeviceGatewayStatBgpPeerInput interface {
	pulumi.Input

	ToGetGatewayStatsDeviceGatewayStatBgpPeerOutput() GetGatewayStatsDeviceGatewayStatBgpPeerOutput
	ToGetGatewayStatsDeviceGatewayStatBgpPeerOutputWithContext(context.Context) GetGatewayStatsDeviceGatewayStatBgpPeerOutput
}

type GetGatewayStatsDeviceGatewayStatBgpPeerArgs struct {
	// If this is created for evpn overlay
	EvpnOverlay pulumi.BoolInput `pulumi:"evpnOverlay"`
	// If this is created for overlay
	ForOverlay pulumi.BoolInput   `pulumi:"forOverlay"`
	LocalAs    pulumi.StringInput `pulumi:"localAs"`
	Neighbor   pulumi.StringInput `pulumi:"neighbor"`
	NeighborAs pulumi.StringInput `pulumi:"neighborAs"`
	// If it's another device in the same org
	NeighborMac pulumi.StringInput `pulumi:"neighborMac"`
	// Node0/node1
	Node pulumi.StringInput `pulumi:"node"`
	// Amount of packets received since connection
	RxPkts pulumi.IntInput `pulumi:"rxPkts"`
	// Number of received routes
	RxRoutes pulumi.IntInput `pulumi:"rxRoutes"`
	// enum: `active`, `connect`, `established`, `idle`, `openConfig`, `openSent`
	State pulumi.StringInput `pulumi:"state"`
	// Epoch (seconds)
	Timestamp pulumi.Float64Input `pulumi:"timestamp"`
	// Amount of packets sent since connection
	TxPkts   pulumi.IntInput    `pulumi:"txPkts"`
	TxRoutes pulumi.IntInput    `pulumi:"txRoutes"`
	Up       pulumi.BoolInput   `pulumi:"up"`
	Uptime   pulumi.IntInput    `pulumi:"uptime"`
	VrfName  pulumi.StringInput `pulumi:"vrfName"`
}

func (GetGatewayStatsDeviceGatewayStatBgpPeerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatBgpPeer)(nil)).Elem()
}

func (i GetGatewayStatsDeviceGatewayStatBgpPeerArgs) ToGetGatewayStatsDeviceGatewayStatBgpPeerOutput() GetGatewayStatsDeviceGatewayStatBgpPeerOutput {
	return i.ToGetGatewayStatsDeviceGatewayStatBgpPeerOutputWithContext(context.Background())
}

func (i GetGatewayStatsDeviceGatewayStatBgpPeerArgs) ToGetGatewayStatsDeviceGatewayStatBgpPeerOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatBgpPeerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayStatsDeviceGatewayStatBgpPeerOutput)
}

// GetGatewayStatsDeviceGatewayStatBgpPeerArrayInput is an input type that accepts GetGatewayStatsDeviceGatewayStatBgpPeerArray and GetGatewayStatsDeviceGatewayStatBgpPeerArrayOutput values.
// You can construct a concrete instance of `GetGatewayStatsDeviceGatewayStatBgpPeerArrayInput` via:
//
//	GetGatewayStatsDeviceGatewayStatBgpPeerArray{ GetGatewayStatsDeviceGatewayStatBgpPeerArgs{...} }
type GetGatewayStatsDeviceGatewayStatBgpPeerArrayInput interface {
	pulumi.Input

	ToGetGatewayStatsDeviceGatewayStatBgpPeerArrayOutput() GetGatewayStatsDeviceGatewayStatBgpPeerArrayOutput
	ToGetGatewayStatsDeviceGatewayStatBgpPeerArrayOutputWithContext(context.Context) GetGatewayStatsDeviceGatewayStatBgpPeerArrayOutput
}

type GetGatewayStatsDeviceGatewayStatBgpPeerArray []GetGatewayStatsDeviceGatewayStatBgpPeerInput

func (GetGatewayStatsDeviceGatewayStatBgpPeerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayStatsDeviceGatewayStatBgpPeer)(nil)).Elem()
}

func (i GetGatewayStatsDeviceGatewayStatBgpPeerArray) ToGetGatewayStatsDeviceGatewayStatBgpPeerArrayOutput() GetGatewayStatsDeviceGatewayStatBgpPeerArrayOutput {
	return i.ToGetGatewayStatsDeviceGatewayStatBgpPeerArrayOutputWithContext(context.Background())
}

func (i GetGatewayStatsDeviceGatewayStatBgpPeerArray) ToGetGatewayStatsDeviceGatewayStatBgpPeerArrayOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatBgpPeerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayStatsDeviceGatewayStatBgpPeerArrayOutput)
}

type GetGatewayStatsDeviceGatewayStatBgpPeerOutput struct{ *pulumi.OutputState }

func (GetGatewayStatsDeviceGatewayStatBgpPeerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatBgpPeer)(nil)).Elem()
}

func (o GetGatewayStatsDeviceGatewayStatBgpPeerOutput) ToGetGatewayStatsDeviceGatewayStatBgpPeerOutput() GetGatewayStatsDeviceGatewayStatBgpPeerOutput {
	return o
}

func (o GetGatewayStatsDeviceGatewayStatBgpPeerOutput) ToGetGatewayStatsDeviceGatewayStatBgpPeerOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatBgpPeerOutput {
	return o
}

// If this is created for evpn overlay
func (o GetGatewayStatsDeviceGatewayStatBgpPeerOutput) EvpnOverlay() pulumi.BoolOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatBgpPeer) bool { return v.EvpnOverlay }).(pulumi.BoolOutput)
}

// If this is created for overlay
func (o GetGatewayStatsDeviceGatewayStatBgpPeerOutput) ForOverlay() pulumi.BoolOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatBgpPeer) bool { return v.ForOverlay }).(pulumi.BoolOutput)
}

func (o GetGatewayStatsDeviceGatewayStatBgpPeerOutput) LocalAs() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatBgpPeer) string { return v.LocalAs }).(pulumi.StringOutput)
}

func (o GetGatewayStatsDeviceGatewayStatBgpPeerOutput) Neighbor() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatBgpPeer) string { return v.Neighbor }).(pulumi.StringOutput)
}

func (o GetGatewayStatsDeviceGatewayStatBgpPeerOutput) NeighborAs() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatBgpPeer) string { return v.NeighborAs }).(pulumi.StringOutput)
}

// If it's another device in the same org
func (o GetGatewayStatsDeviceGatewayStatBgpPeerOutput) NeighborMac() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatBgpPeer) string { return v.NeighborMac }).(pulumi.StringOutput)
}

// Node0/node1
func (o GetGatewayStatsDeviceGatewayStatBgpPeerOutput) Node() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatBgpPeer) string { return v.Node }).(pulumi.StringOutput)
}

// Amount of packets received since connection
func (o GetGatewayStatsDeviceGatewayStatBgpPeerOutput) RxPkts() pulumi.IntOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatBgpPeer) int { return v.RxPkts }).(pulumi.IntOutput)
}

// Number of received routes
func (o GetGatewayStatsDeviceGatewayStatBgpPeerOutput) RxRoutes() pulumi.IntOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatBgpPeer) int { return v.RxRoutes }).(pulumi.IntOutput)
}

// enum: `active`, `connect`, `established`, `idle`, `openConfig`, `openSent`
func (o GetGatewayStatsDeviceGatewayStatBgpPeerOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatBgpPeer) string { return v.State }).(pulumi.StringOutput)
}

// Epoch (seconds)
func (o GetGatewayStatsDeviceGatewayStatBgpPeerOutput) Timestamp() pulumi.Float64Output {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatBgpPeer) float64 { return v.Timestamp }).(pulumi.Float64Output)
}

// Amount of packets sent since connection
func (o GetGatewayStatsDeviceGatewayStatBgpPeerOutput) TxPkts() pulumi.IntOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatBgpPeer) int { return v.TxPkts }).(pulumi.IntOutput)
}

func (o GetGatewayStatsDeviceGatewayStatBgpPeerOutput) TxRoutes() pulumi.IntOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatBgpPeer) int { return v.TxRoutes }).(pulumi.IntOutput)
}

func (o GetGatewayStatsDeviceGatewayStatBgpPeerOutput) Up() pulumi.BoolOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatBgpPeer) bool { return v.Up }).(pulumi.BoolOutput)
}

func (o GetGatewayStatsDeviceGatewayStatBgpPeerOutput) Uptime() pulumi.IntOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatBgpPeer) int { return v.Uptime }).(pulumi.IntOutput)
}

func (o GetGatewayStatsDeviceGatewayStatBgpPeerOutput) VrfName() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatBgpPeer) string { return v.VrfName }).(pulumi.StringOutput)
}

type GetGatewayStatsDeviceGatewayStatBgpPeerArrayOutput struct{ *pulumi.OutputState }

func (GetGatewayStatsDeviceGatewayStatBgpPeerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayStatsDeviceGatewayStatBgpPeer)(nil)).Elem()
}

func (o GetGatewayStatsDeviceGatewayStatBgpPeerArrayOutput) ToGetGatewayStatsDeviceGatewayStatBgpPeerArrayOutput() GetGatewayStatsDeviceGatewayStatBgpPeerArrayOutput {
	return o
}

func (o GetGatewayStatsDeviceGatewayStatBgpPeerArrayOutput) ToGetGatewayStatsDeviceGatewayStatBgpPeerArrayOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatBgpPeerArrayOutput {
	return o
}

func (o GetGatewayStatsDeviceGatewayStatBgpPeerArrayOutput) Index(i pulumi.IntInput) GetGatewayStatsDeviceGatewayStatBgpPeerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGatewayStatsDeviceGatewayStatBgpPeer {
		return vs[0].([]GetGatewayStatsDeviceGatewayStatBgpPeer)[vs[1].(int)]
	}).(GetGatewayStatsDeviceGatewayStatBgpPeerOutput)
}

type GetGatewayStatsDeviceGatewayStatClusterConfig struct {
	Configuration               string                                                                    `pulumi:"configuration"`
	ControlLinkInfo             GetGatewayStatsDeviceGatewayStatClusterConfigControlLinkInfo              `pulumi:"controlLinkInfo"`
	EthernetConnections         []GetGatewayStatsDeviceGatewayStatClusterConfigEthernetConnection         `pulumi:"ethernetConnections"`
	FabricLinkInfo              GetGatewayStatsDeviceGatewayStatClusterConfigFabricLinkInfo               `pulumi:"fabricLinkInfo"`
	LastStatusChangeReason      string                                                                    `pulumi:"lastStatusChangeReason"`
	Operational                 string                                                                    `pulumi:"operational"`
	PrimaryNodeHealth           string                                                                    `pulumi:"primaryNodeHealth"`
	RedundancyGroupInformations []GetGatewayStatsDeviceGatewayStatClusterConfigRedundancyGroupInformation `pulumi:"redundancyGroupInformations"`
	SecondaryNodeHealth         string                                                                    `pulumi:"secondaryNodeHealth"`
	Status                      string                                                                    `pulumi:"status"`
}

// GetGatewayStatsDeviceGatewayStatClusterConfigInput is an input type that accepts GetGatewayStatsDeviceGatewayStatClusterConfigArgs and GetGatewayStatsDeviceGatewayStatClusterConfigOutput values.
// You can construct a concrete instance of `GetGatewayStatsDeviceGatewayStatClusterConfigInput` via:
//
//	GetGatewayStatsDeviceGatewayStatClusterConfigArgs{...}
type GetGatewayStatsDeviceGatewayStatClusterConfigInput interface {
	pulumi.Input

	ToGetGatewayStatsDeviceGatewayStatClusterConfigOutput() GetGatewayStatsDeviceGatewayStatClusterConfigOutput
	ToGetGatewayStatsDeviceGatewayStatClusterConfigOutputWithContext(context.Context) GetGatewayStatsDeviceGatewayStatClusterConfigOutput
}

type GetGatewayStatsDeviceGatewayStatClusterConfigArgs struct {
	Configuration               pulumi.StringInput                                                                `pulumi:"configuration"`
	ControlLinkInfo             GetGatewayStatsDeviceGatewayStatClusterConfigControlLinkInfoInput                 `pulumi:"controlLinkInfo"`
	EthernetConnections         GetGatewayStatsDeviceGatewayStatClusterConfigEthernetConnectionArrayInput         `pulumi:"ethernetConnections"`
	FabricLinkInfo              GetGatewayStatsDeviceGatewayStatClusterConfigFabricLinkInfoInput                  `pulumi:"fabricLinkInfo"`
	LastStatusChangeReason      pulumi.StringInput                                                                `pulumi:"lastStatusChangeReason"`
	Operational                 pulumi.StringInput                                                                `pulumi:"operational"`
	PrimaryNodeHealth           pulumi.StringInput                                                                `pulumi:"primaryNodeHealth"`
	RedundancyGroupInformations GetGatewayStatsDeviceGatewayStatClusterConfigRedundancyGroupInformationArrayInput `pulumi:"redundancyGroupInformations"`
	SecondaryNodeHealth         pulumi.StringInput                                                                `pulumi:"secondaryNodeHealth"`
	Status                      pulumi.StringInput                                                                `pulumi:"status"`
}

func (GetGatewayStatsDeviceGatewayStatClusterConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatClusterConfig)(nil)).Elem()
}

func (i GetGatewayStatsDeviceGatewayStatClusterConfigArgs) ToGetGatewayStatsDeviceGatewayStatClusterConfigOutput() GetGatewayStatsDeviceGatewayStatClusterConfigOutput {
	return i.ToGetGatewayStatsDeviceGatewayStatClusterConfigOutputWithContext(context.Background())
}

func (i GetGatewayStatsDeviceGatewayStatClusterConfigArgs) ToGetGatewayStatsDeviceGatewayStatClusterConfigOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatClusterConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayStatsDeviceGatewayStatClusterConfigOutput)
}

type GetGatewayStatsDeviceGatewayStatClusterConfigOutput struct{ *pulumi.OutputState }

func (GetGatewayStatsDeviceGatewayStatClusterConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatClusterConfig)(nil)).Elem()
}

func (o GetGatewayStatsDeviceGatewayStatClusterConfigOutput) ToGetGatewayStatsDeviceGatewayStatClusterConfigOutput() GetGatewayStatsDeviceGatewayStatClusterConfigOutput {
	return o
}

func (o GetGatewayStatsDeviceGatewayStatClusterConfigOutput) ToGetGatewayStatsDeviceGatewayStatClusterConfigOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatClusterConfigOutput {
	return o
}

func (o GetGatewayStatsDeviceGatewayStatClusterConfigOutput) Configuration() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatClusterConfig) string { return v.Configuration }).(pulumi.StringOutput)
}

func (o GetGatewayStatsDeviceGatewayStatClusterConfigOutput) ControlLinkInfo() GetGatewayStatsDeviceGatewayStatClusterConfigControlLinkInfoOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatClusterConfig) GetGatewayStatsDeviceGatewayStatClusterConfigControlLinkInfo {
		return v.ControlLinkInfo
	}).(GetGatewayStatsDeviceGatewayStatClusterConfigControlLinkInfoOutput)
}

func (o GetGatewayStatsDeviceGatewayStatClusterConfigOutput) EthernetConnections() GetGatewayStatsDeviceGatewayStatClusterConfigEthernetConnectionArrayOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatClusterConfig) []GetGatewayStatsDeviceGatewayStatClusterConfigEthernetConnection {
		return v.EthernetConnections
	}).(GetGatewayStatsDeviceGatewayStatClusterConfigEthernetConnectionArrayOutput)
}

func (o GetGatewayStatsDeviceGatewayStatClusterConfigOutput) FabricLinkInfo() GetGatewayStatsDeviceGatewayStatClusterConfigFabricLinkInfoOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatClusterConfig) GetGatewayStatsDeviceGatewayStatClusterConfigFabricLinkInfo {
		return v.FabricLinkInfo
	}).(GetGatewayStatsDeviceGatewayStatClusterConfigFabricLinkInfoOutput)
}

func (o GetGatewayStatsDeviceGatewayStatClusterConfigOutput) LastStatusChangeReason() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatClusterConfig) string { return v.LastStatusChangeReason }).(pulumi.StringOutput)
}

func (o GetGatewayStatsDeviceGatewayStatClusterConfigOutput) Operational() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatClusterConfig) string { return v.Operational }).(pulumi.StringOutput)
}

func (o GetGatewayStatsDeviceGatewayStatClusterConfigOutput) PrimaryNodeHealth() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatClusterConfig) string { return v.PrimaryNodeHealth }).(pulumi.StringOutput)
}

func (o GetGatewayStatsDeviceGatewayStatClusterConfigOutput) RedundancyGroupInformations() GetGatewayStatsDeviceGatewayStatClusterConfigRedundancyGroupInformationArrayOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatClusterConfig) []GetGatewayStatsDeviceGatewayStatClusterConfigRedundancyGroupInformation {
		return v.RedundancyGroupInformations
	}).(GetGatewayStatsDeviceGatewayStatClusterConfigRedundancyGroupInformationArrayOutput)
}

func (o GetGatewayStatsDeviceGatewayStatClusterConfigOutput) SecondaryNodeHealth() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatClusterConfig) string { return v.SecondaryNodeHealth }).(pulumi.StringOutput)
}

func (o GetGatewayStatsDeviceGatewayStatClusterConfigOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatClusterConfig) string { return v.Status }).(pulumi.StringOutput)
}

type GetGatewayStatsDeviceGatewayStatClusterConfigControlLinkInfo struct {
	Name   string `pulumi:"name"`
	Status string `pulumi:"status"`
}

// GetGatewayStatsDeviceGatewayStatClusterConfigControlLinkInfoInput is an input type that accepts GetGatewayStatsDeviceGatewayStatClusterConfigControlLinkInfoArgs and GetGatewayStatsDeviceGatewayStatClusterConfigControlLinkInfoOutput values.
// You can construct a concrete instance of `GetGatewayStatsDeviceGatewayStatClusterConfigControlLinkInfoInput` via:
//
//	GetGatewayStatsDeviceGatewayStatClusterConfigControlLinkInfoArgs{...}
type GetGatewayStatsDeviceGatewayStatClusterConfigControlLinkInfoInput interface {
	pulumi.Input

	ToGetGatewayStatsDeviceGatewayStatClusterConfigControlLinkInfoOutput() GetGatewayStatsDeviceGatewayStatClusterConfigControlLinkInfoOutput
	ToGetGatewayStatsDeviceGatewayStatClusterConfigControlLinkInfoOutputWithContext(context.Context) GetGatewayStatsDeviceGatewayStatClusterConfigControlLinkInfoOutput
}

type GetGatewayStatsDeviceGatewayStatClusterConfigControlLinkInfoArgs struct {
	Name   pulumi.StringInput `pulumi:"name"`
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetGatewayStatsDeviceGatewayStatClusterConfigControlLinkInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatClusterConfigControlLinkInfo)(nil)).Elem()
}

func (i GetGatewayStatsDeviceGatewayStatClusterConfigControlLinkInfoArgs) ToGetGatewayStatsDeviceGatewayStatClusterConfigControlLinkInfoOutput() GetGatewayStatsDeviceGatewayStatClusterConfigControlLinkInfoOutput {
	return i.ToGetGatewayStatsDeviceGatewayStatClusterConfigControlLinkInfoOutputWithContext(context.Background())
}

func (i GetGatewayStatsDeviceGatewayStatClusterConfigControlLinkInfoArgs) ToGetGatewayStatsDeviceGatewayStatClusterConfigControlLinkInfoOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatClusterConfigControlLinkInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayStatsDeviceGatewayStatClusterConfigControlLinkInfoOutput)
}

type GetGatewayStatsDeviceGatewayStatClusterConfigControlLinkInfoOutput struct{ *pulumi.OutputState }

func (GetGatewayStatsDeviceGatewayStatClusterConfigControlLinkInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatClusterConfigControlLinkInfo)(nil)).Elem()
}

func (o GetGatewayStatsDeviceGatewayStatClusterConfigControlLinkInfoOutput) ToGetGatewayStatsDeviceGatewayStatClusterConfigControlLinkInfoOutput() GetGatewayStatsDeviceGatewayStatClusterConfigControlLinkInfoOutput {
	return o
}

func (o GetGatewayStatsDeviceGatewayStatClusterConfigControlLinkInfoOutput) ToGetGatewayStatsDeviceGatewayStatClusterConfigControlLinkInfoOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatClusterConfigControlLinkInfoOutput {
	return o
}

func (o GetGatewayStatsDeviceGatewayStatClusterConfigControlLinkInfoOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatClusterConfigControlLinkInfo) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetGatewayStatsDeviceGatewayStatClusterConfigControlLinkInfoOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatClusterConfigControlLinkInfo) string { return v.Status }).(pulumi.StringOutput)
}

type GetGatewayStatsDeviceGatewayStatClusterConfigEthernetConnection struct {
	Name   string `pulumi:"name"`
	Status string `pulumi:"status"`
}

// GetGatewayStatsDeviceGatewayStatClusterConfigEthernetConnectionInput is an input type that accepts GetGatewayStatsDeviceGatewayStatClusterConfigEthernetConnectionArgs and GetGatewayStatsDeviceGatewayStatClusterConfigEthernetConnectionOutput values.
// You can construct a concrete instance of `GetGatewayStatsDeviceGatewayStatClusterConfigEthernetConnectionInput` via:
//
//	GetGatewayStatsDeviceGatewayStatClusterConfigEthernetConnectionArgs{...}
type GetGatewayStatsDeviceGatewayStatClusterConfigEthernetConnectionInput interface {
	pulumi.Input

	ToGetGatewayStatsDeviceGatewayStatClusterConfigEthernetConnectionOutput() GetGatewayStatsDeviceGatewayStatClusterConfigEthernetConnectionOutput
	ToGetGatewayStatsDeviceGatewayStatClusterConfigEthernetConnectionOutputWithContext(context.Context) GetGatewayStatsDeviceGatewayStatClusterConfigEthernetConnectionOutput
}

type GetGatewayStatsDeviceGatewayStatClusterConfigEthernetConnectionArgs struct {
	Name   pulumi.StringInput `pulumi:"name"`
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetGatewayStatsDeviceGatewayStatClusterConfigEthernetConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatClusterConfigEthernetConnection)(nil)).Elem()
}

func (i GetGatewayStatsDeviceGatewayStatClusterConfigEthernetConnectionArgs) ToGetGatewayStatsDeviceGatewayStatClusterConfigEthernetConnectionOutput() GetGatewayStatsDeviceGatewayStatClusterConfigEthernetConnectionOutput {
	return i.ToGetGatewayStatsDeviceGatewayStatClusterConfigEthernetConnectionOutputWithContext(context.Background())
}

func (i GetGatewayStatsDeviceGatewayStatClusterConfigEthernetConnectionArgs) ToGetGatewayStatsDeviceGatewayStatClusterConfigEthernetConnectionOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatClusterConfigEthernetConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayStatsDeviceGatewayStatClusterConfigEthernetConnectionOutput)
}

// GetGatewayStatsDeviceGatewayStatClusterConfigEthernetConnectionArrayInput is an input type that accepts GetGatewayStatsDeviceGatewayStatClusterConfigEthernetConnectionArray and GetGatewayStatsDeviceGatewayStatClusterConfigEthernetConnectionArrayOutput values.
// You can construct a concrete instance of `GetGatewayStatsDeviceGatewayStatClusterConfigEthernetConnectionArrayInput` via:
//
//	GetGatewayStatsDeviceGatewayStatClusterConfigEthernetConnectionArray{ GetGatewayStatsDeviceGatewayStatClusterConfigEthernetConnectionArgs{...} }
type GetGatewayStatsDeviceGatewayStatClusterConfigEthernetConnectionArrayInput interface {
	pulumi.Input

	ToGetGatewayStatsDeviceGatewayStatClusterConfigEthernetConnectionArrayOutput() GetGatewayStatsDeviceGatewayStatClusterConfigEthernetConnectionArrayOutput
	ToGetGatewayStatsDeviceGatewayStatClusterConfigEthernetConnectionArrayOutputWithContext(context.Context) GetGatewayStatsDeviceGatewayStatClusterConfigEthernetConnectionArrayOutput
}

type GetGatewayStatsDeviceGatewayStatClusterConfigEthernetConnectionArray []GetGatewayStatsDeviceGatewayStatClusterConfigEthernetConnectionInput

func (GetGatewayStatsDeviceGatewayStatClusterConfigEthernetConnectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayStatsDeviceGatewayStatClusterConfigEthernetConnection)(nil)).Elem()
}

func (i GetGatewayStatsDeviceGatewayStatClusterConfigEthernetConnectionArray) ToGetGatewayStatsDeviceGatewayStatClusterConfigEthernetConnectionArrayOutput() GetGatewayStatsDeviceGatewayStatClusterConfigEthernetConnectionArrayOutput {
	return i.ToGetGatewayStatsDeviceGatewayStatClusterConfigEthernetConnectionArrayOutputWithContext(context.Background())
}

func (i GetGatewayStatsDeviceGatewayStatClusterConfigEthernetConnectionArray) ToGetGatewayStatsDeviceGatewayStatClusterConfigEthernetConnectionArrayOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatClusterConfigEthernetConnectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayStatsDeviceGatewayStatClusterConfigEthernetConnectionArrayOutput)
}

type GetGatewayStatsDeviceGatewayStatClusterConfigEthernetConnectionOutput struct{ *pulumi.OutputState }

func (GetGatewayStatsDeviceGatewayStatClusterConfigEthernetConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatClusterConfigEthernetConnection)(nil)).Elem()
}

func (o GetGatewayStatsDeviceGatewayStatClusterConfigEthernetConnectionOutput) ToGetGatewayStatsDeviceGatewayStatClusterConfigEthernetConnectionOutput() GetGatewayStatsDeviceGatewayStatClusterConfigEthernetConnectionOutput {
	return o
}

func (o GetGatewayStatsDeviceGatewayStatClusterConfigEthernetConnectionOutput) ToGetGatewayStatsDeviceGatewayStatClusterConfigEthernetConnectionOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatClusterConfigEthernetConnectionOutput {
	return o
}

func (o GetGatewayStatsDeviceGatewayStatClusterConfigEthernetConnectionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatClusterConfigEthernetConnection) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetGatewayStatsDeviceGatewayStatClusterConfigEthernetConnectionOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatClusterConfigEthernetConnection) string { return v.Status }).(pulumi.StringOutput)
}

type GetGatewayStatsDeviceGatewayStatClusterConfigEthernetConnectionArrayOutput struct{ *pulumi.OutputState }

func (GetGatewayStatsDeviceGatewayStatClusterConfigEthernetConnectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayStatsDeviceGatewayStatClusterConfigEthernetConnection)(nil)).Elem()
}

func (o GetGatewayStatsDeviceGatewayStatClusterConfigEthernetConnectionArrayOutput) ToGetGatewayStatsDeviceGatewayStatClusterConfigEthernetConnectionArrayOutput() GetGatewayStatsDeviceGatewayStatClusterConfigEthernetConnectionArrayOutput {
	return o
}

func (o GetGatewayStatsDeviceGatewayStatClusterConfigEthernetConnectionArrayOutput) ToGetGatewayStatsDeviceGatewayStatClusterConfigEthernetConnectionArrayOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatClusterConfigEthernetConnectionArrayOutput {
	return o
}

func (o GetGatewayStatsDeviceGatewayStatClusterConfigEthernetConnectionArrayOutput) Index(i pulumi.IntInput) GetGatewayStatsDeviceGatewayStatClusterConfigEthernetConnectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGatewayStatsDeviceGatewayStatClusterConfigEthernetConnection {
		return vs[0].([]GetGatewayStatsDeviceGatewayStatClusterConfigEthernetConnection)[vs[1].(int)]
	}).(GetGatewayStatsDeviceGatewayStatClusterConfigEthernetConnectionOutput)
}

type GetGatewayStatsDeviceGatewayStatClusterConfigFabricLinkInfo struct {
	DataPlaneNotifiedStatus string   `pulumi:"dataPlaneNotifiedStatus"`
	Interfaces              []string `pulumi:"interfaces"`
	InternalStatus          string   `pulumi:"internalStatus"`
	State                   string   `pulumi:"state"`
	Status                  string   `pulumi:"status"`
}

// GetGatewayStatsDeviceGatewayStatClusterConfigFabricLinkInfoInput is an input type that accepts GetGatewayStatsDeviceGatewayStatClusterConfigFabricLinkInfoArgs and GetGatewayStatsDeviceGatewayStatClusterConfigFabricLinkInfoOutput values.
// You can construct a concrete instance of `GetGatewayStatsDeviceGatewayStatClusterConfigFabricLinkInfoInput` via:
//
//	GetGatewayStatsDeviceGatewayStatClusterConfigFabricLinkInfoArgs{...}
type GetGatewayStatsDeviceGatewayStatClusterConfigFabricLinkInfoInput interface {
	pulumi.Input

	ToGetGatewayStatsDeviceGatewayStatClusterConfigFabricLinkInfoOutput() GetGatewayStatsDeviceGatewayStatClusterConfigFabricLinkInfoOutput
	ToGetGatewayStatsDeviceGatewayStatClusterConfigFabricLinkInfoOutputWithContext(context.Context) GetGatewayStatsDeviceGatewayStatClusterConfigFabricLinkInfoOutput
}

type GetGatewayStatsDeviceGatewayStatClusterConfigFabricLinkInfoArgs struct {
	DataPlaneNotifiedStatus pulumi.StringInput      `pulumi:"dataPlaneNotifiedStatus"`
	Interfaces              pulumi.StringArrayInput `pulumi:"interfaces"`
	InternalStatus          pulumi.StringInput      `pulumi:"internalStatus"`
	State                   pulumi.StringInput      `pulumi:"state"`
	Status                  pulumi.StringInput      `pulumi:"status"`
}

func (GetGatewayStatsDeviceGatewayStatClusterConfigFabricLinkInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatClusterConfigFabricLinkInfo)(nil)).Elem()
}

func (i GetGatewayStatsDeviceGatewayStatClusterConfigFabricLinkInfoArgs) ToGetGatewayStatsDeviceGatewayStatClusterConfigFabricLinkInfoOutput() GetGatewayStatsDeviceGatewayStatClusterConfigFabricLinkInfoOutput {
	return i.ToGetGatewayStatsDeviceGatewayStatClusterConfigFabricLinkInfoOutputWithContext(context.Background())
}

func (i GetGatewayStatsDeviceGatewayStatClusterConfigFabricLinkInfoArgs) ToGetGatewayStatsDeviceGatewayStatClusterConfigFabricLinkInfoOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatClusterConfigFabricLinkInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayStatsDeviceGatewayStatClusterConfigFabricLinkInfoOutput)
}

type GetGatewayStatsDeviceGatewayStatClusterConfigFabricLinkInfoOutput struct{ *pulumi.OutputState }

func (GetGatewayStatsDeviceGatewayStatClusterConfigFabricLinkInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatClusterConfigFabricLinkInfo)(nil)).Elem()
}

func (o GetGatewayStatsDeviceGatewayStatClusterConfigFabricLinkInfoOutput) ToGetGatewayStatsDeviceGatewayStatClusterConfigFabricLinkInfoOutput() GetGatewayStatsDeviceGatewayStatClusterConfigFabricLinkInfoOutput {
	return o
}

func (o GetGatewayStatsDeviceGatewayStatClusterConfigFabricLinkInfoOutput) ToGetGatewayStatsDeviceGatewayStatClusterConfigFabricLinkInfoOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatClusterConfigFabricLinkInfoOutput {
	return o
}

func (o GetGatewayStatsDeviceGatewayStatClusterConfigFabricLinkInfoOutput) DataPlaneNotifiedStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatClusterConfigFabricLinkInfo) string {
		return v.DataPlaneNotifiedStatus
	}).(pulumi.StringOutput)
}

func (o GetGatewayStatsDeviceGatewayStatClusterConfigFabricLinkInfoOutput) Interfaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatClusterConfigFabricLinkInfo) []string { return v.Interfaces }).(pulumi.StringArrayOutput)
}

func (o GetGatewayStatsDeviceGatewayStatClusterConfigFabricLinkInfoOutput) InternalStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatClusterConfigFabricLinkInfo) string { return v.InternalStatus }).(pulumi.StringOutput)
}

func (o GetGatewayStatsDeviceGatewayStatClusterConfigFabricLinkInfoOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatClusterConfigFabricLinkInfo) string { return v.State }).(pulumi.StringOutput)
}

func (o GetGatewayStatsDeviceGatewayStatClusterConfigFabricLinkInfoOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatClusterConfigFabricLinkInfo) string { return v.Status }).(pulumi.StringOutput)
}

type GetGatewayStatsDeviceGatewayStatClusterConfigRedundancyGroupInformation struct {
	Id                int    `pulumi:"id"`
	MonitoringFailure string `pulumi:"monitoringFailure"`
	Threshold         int    `pulumi:"threshold"`
}

// GetGatewayStatsDeviceGatewayStatClusterConfigRedundancyGroupInformationInput is an input type that accepts GetGatewayStatsDeviceGatewayStatClusterConfigRedundancyGroupInformationArgs and GetGatewayStatsDeviceGatewayStatClusterConfigRedundancyGroupInformationOutput values.
// You can construct a concrete instance of `GetGatewayStatsDeviceGatewayStatClusterConfigRedundancyGroupInformationInput` via:
//
//	GetGatewayStatsDeviceGatewayStatClusterConfigRedundancyGroupInformationArgs{...}
type GetGatewayStatsDeviceGatewayStatClusterConfigRedundancyGroupInformationInput interface {
	pulumi.Input

	ToGetGatewayStatsDeviceGatewayStatClusterConfigRedundancyGroupInformationOutput() GetGatewayStatsDeviceGatewayStatClusterConfigRedundancyGroupInformationOutput
	ToGetGatewayStatsDeviceGatewayStatClusterConfigRedundancyGroupInformationOutputWithContext(context.Context) GetGatewayStatsDeviceGatewayStatClusterConfigRedundancyGroupInformationOutput
}

type GetGatewayStatsDeviceGatewayStatClusterConfigRedundancyGroupInformationArgs struct {
	Id                pulumi.IntInput    `pulumi:"id"`
	MonitoringFailure pulumi.StringInput `pulumi:"monitoringFailure"`
	Threshold         pulumi.IntInput    `pulumi:"threshold"`
}

func (GetGatewayStatsDeviceGatewayStatClusterConfigRedundancyGroupInformationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatClusterConfigRedundancyGroupInformation)(nil)).Elem()
}

func (i GetGatewayStatsDeviceGatewayStatClusterConfigRedundancyGroupInformationArgs) ToGetGatewayStatsDeviceGatewayStatClusterConfigRedundancyGroupInformationOutput() GetGatewayStatsDeviceGatewayStatClusterConfigRedundancyGroupInformationOutput {
	return i.ToGetGatewayStatsDeviceGatewayStatClusterConfigRedundancyGroupInformationOutputWithContext(context.Background())
}

func (i GetGatewayStatsDeviceGatewayStatClusterConfigRedundancyGroupInformationArgs) ToGetGatewayStatsDeviceGatewayStatClusterConfigRedundancyGroupInformationOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatClusterConfigRedundancyGroupInformationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayStatsDeviceGatewayStatClusterConfigRedundancyGroupInformationOutput)
}

// GetGatewayStatsDeviceGatewayStatClusterConfigRedundancyGroupInformationArrayInput is an input type that accepts GetGatewayStatsDeviceGatewayStatClusterConfigRedundancyGroupInformationArray and GetGatewayStatsDeviceGatewayStatClusterConfigRedundancyGroupInformationArrayOutput values.
// You can construct a concrete instance of `GetGatewayStatsDeviceGatewayStatClusterConfigRedundancyGroupInformationArrayInput` via:
//
//	GetGatewayStatsDeviceGatewayStatClusterConfigRedundancyGroupInformationArray{ GetGatewayStatsDeviceGatewayStatClusterConfigRedundancyGroupInformationArgs{...} }
type GetGatewayStatsDeviceGatewayStatClusterConfigRedundancyGroupInformationArrayInput interface {
	pulumi.Input

	ToGetGatewayStatsDeviceGatewayStatClusterConfigRedundancyGroupInformationArrayOutput() GetGatewayStatsDeviceGatewayStatClusterConfigRedundancyGroupInformationArrayOutput
	ToGetGatewayStatsDeviceGatewayStatClusterConfigRedundancyGroupInformationArrayOutputWithContext(context.Context) GetGatewayStatsDeviceGatewayStatClusterConfigRedundancyGroupInformationArrayOutput
}

type GetGatewayStatsDeviceGatewayStatClusterConfigRedundancyGroupInformationArray []GetGatewayStatsDeviceGatewayStatClusterConfigRedundancyGroupInformationInput

func (GetGatewayStatsDeviceGatewayStatClusterConfigRedundancyGroupInformationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayStatsDeviceGatewayStatClusterConfigRedundancyGroupInformation)(nil)).Elem()
}

func (i GetGatewayStatsDeviceGatewayStatClusterConfigRedundancyGroupInformationArray) ToGetGatewayStatsDeviceGatewayStatClusterConfigRedundancyGroupInformationArrayOutput() GetGatewayStatsDeviceGatewayStatClusterConfigRedundancyGroupInformationArrayOutput {
	return i.ToGetGatewayStatsDeviceGatewayStatClusterConfigRedundancyGroupInformationArrayOutputWithContext(context.Background())
}

func (i GetGatewayStatsDeviceGatewayStatClusterConfigRedundancyGroupInformationArray) ToGetGatewayStatsDeviceGatewayStatClusterConfigRedundancyGroupInformationArrayOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatClusterConfigRedundancyGroupInformationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayStatsDeviceGatewayStatClusterConfigRedundancyGroupInformationArrayOutput)
}

type GetGatewayStatsDeviceGatewayStatClusterConfigRedundancyGroupInformationOutput struct{ *pulumi.OutputState }

func (GetGatewayStatsDeviceGatewayStatClusterConfigRedundancyGroupInformationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatClusterConfigRedundancyGroupInformation)(nil)).Elem()
}

func (o GetGatewayStatsDeviceGatewayStatClusterConfigRedundancyGroupInformationOutput) ToGetGatewayStatsDeviceGatewayStatClusterConfigRedundancyGroupInformationOutput() GetGatewayStatsDeviceGatewayStatClusterConfigRedundancyGroupInformationOutput {
	return o
}

func (o GetGatewayStatsDeviceGatewayStatClusterConfigRedundancyGroupInformationOutput) ToGetGatewayStatsDeviceGatewayStatClusterConfigRedundancyGroupInformationOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatClusterConfigRedundancyGroupInformationOutput {
	return o
}

func (o GetGatewayStatsDeviceGatewayStatClusterConfigRedundancyGroupInformationOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatClusterConfigRedundancyGroupInformation) int { return v.Id }).(pulumi.IntOutput)
}

func (o GetGatewayStatsDeviceGatewayStatClusterConfigRedundancyGroupInformationOutput) MonitoringFailure() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatClusterConfigRedundancyGroupInformation) string {
		return v.MonitoringFailure
	}).(pulumi.StringOutput)
}

func (o GetGatewayStatsDeviceGatewayStatClusterConfigRedundancyGroupInformationOutput) Threshold() pulumi.IntOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatClusterConfigRedundancyGroupInformation) int {
		return v.Threshold
	}).(pulumi.IntOutput)
}

type GetGatewayStatsDeviceGatewayStatClusterConfigRedundancyGroupInformationArrayOutput struct{ *pulumi.OutputState }

func (GetGatewayStatsDeviceGatewayStatClusterConfigRedundancyGroupInformationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayStatsDeviceGatewayStatClusterConfigRedundancyGroupInformation)(nil)).Elem()
}

func (o GetGatewayStatsDeviceGatewayStatClusterConfigRedundancyGroupInformationArrayOutput) ToGetGatewayStatsDeviceGatewayStatClusterConfigRedundancyGroupInformationArrayOutput() GetGatewayStatsDeviceGatewayStatClusterConfigRedundancyGroupInformationArrayOutput {
	return o
}

func (o GetGatewayStatsDeviceGatewayStatClusterConfigRedundancyGroupInformationArrayOutput) ToGetGatewayStatsDeviceGatewayStatClusterConfigRedundancyGroupInformationArrayOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatClusterConfigRedundancyGroupInformationArrayOutput {
	return o
}

func (o GetGatewayStatsDeviceGatewayStatClusterConfigRedundancyGroupInformationArrayOutput) Index(i pulumi.IntInput) GetGatewayStatsDeviceGatewayStatClusterConfigRedundancyGroupInformationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGatewayStatsDeviceGatewayStatClusterConfigRedundancyGroupInformation {
		return vs[0].([]GetGatewayStatsDeviceGatewayStatClusterConfigRedundancyGroupInformation)[vs[1].(int)]
	}).(GetGatewayStatsDeviceGatewayStatClusterConfigRedundancyGroupInformationOutput)
}

type GetGatewayStatsDeviceGatewayStatClusterStat struct {
	State string `pulumi:"state"`
}

// GetGatewayStatsDeviceGatewayStatClusterStatInput is an input type that accepts GetGatewayStatsDeviceGatewayStatClusterStatArgs and GetGatewayStatsDeviceGatewayStatClusterStatOutput values.
// You can construct a concrete instance of `GetGatewayStatsDeviceGatewayStatClusterStatInput` via:
//
//	GetGatewayStatsDeviceGatewayStatClusterStatArgs{...}
type GetGatewayStatsDeviceGatewayStatClusterStatInput interface {
	pulumi.Input

	ToGetGatewayStatsDeviceGatewayStatClusterStatOutput() GetGatewayStatsDeviceGatewayStatClusterStatOutput
	ToGetGatewayStatsDeviceGatewayStatClusterStatOutputWithContext(context.Context) GetGatewayStatsDeviceGatewayStatClusterStatOutput
}

type GetGatewayStatsDeviceGatewayStatClusterStatArgs struct {
	State pulumi.StringInput `pulumi:"state"`
}

func (GetGatewayStatsDeviceGatewayStatClusterStatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatClusterStat)(nil)).Elem()
}

func (i GetGatewayStatsDeviceGatewayStatClusterStatArgs) ToGetGatewayStatsDeviceGatewayStatClusterStatOutput() GetGatewayStatsDeviceGatewayStatClusterStatOutput {
	return i.ToGetGatewayStatsDeviceGatewayStatClusterStatOutputWithContext(context.Background())
}

func (i GetGatewayStatsDeviceGatewayStatClusterStatArgs) ToGetGatewayStatsDeviceGatewayStatClusterStatOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatClusterStatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayStatsDeviceGatewayStatClusterStatOutput)
}

type GetGatewayStatsDeviceGatewayStatClusterStatOutput struct{ *pulumi.OutputState }

func (GetGatewayStatsDeviceGatewayStatClusterStatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatClusterStat)(nil)).Elem()
}

func (o GetGatewayStatsDeviceGatewayStatClusterStatOutput) ToGetGatewayStatsDeviceGatewayStatClusterStatOutput() GetGatewayStatsDeviceGatewayStatClusterStatOutput {
	return o
}

func (o GetGatewayStatsDeviceGatewayStatClusterStatOutput) ToGetGatewayStatsDeviceGatewayStatClusterStatOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatClusterStatOutput {
	return o
}

func (o GetGatewayStatsDeviceGatewayStatClusterStatOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatClusterStat) string { return v.State }).(pulumi.StringOutput)
}

type GetGatewayStatsDeviceGatewayStatCpu2Stat struct {
	// Percentage of CPU time that is idle
	Idle float64 `pulumi:"idle"`
	// Percentage of CPU time being used by interrupts
	Interrupt float64 `pulumi:"interrupt"`
	// Load averages for the last 1, 5, and 15 minutes
	LoadAvgs []float64 `pulumi:"loadAvgs"`
	// Percentage of CPU time being used by system processes
	System float64 `pulumi:"system"`
	// Percentage of CPU time being used by user processes
	User float64 `pulumi:"user"`
}

// GetGatewayStatsDeviceGatewayStatCpu2StatInput is an input type that accepts GetGatewayStatsDeviceGatewayStatCpu2StatArgs and GetGatewayStatsDeviceGatewayStatCpu2StatOutput values.
// You can construct a concrete instance of `GetGatewayStatsDeviceGatewayStatCpu2StatInput` via:
//
//	GetGatewayStatsDeviceGatewayStatCpu2StatArgs{...}
type GetGatewayStatsDeviceGatewayStatCpu2StatInput interface {
	pulumi.Input

	ToGetGatewayStatsDeviceGatewayStatCpu2StatOutput() GetGatewayStatsDeviceGatewayStatCpu2StatOutput
	ToGetGatewayStatsDeviceGatewayStatCpu2StatOutputWithContext(context.Context) GetGatewayStatsDeviceGatewayStatCpu2StatOutput
}

type GetGatewayStatsDeviceGatewayStatCpu2StatArgs struct {
	// Percentage of CPU time that is idle
	Idle pulumi.Float64Input `pulumi:"idle"`
	// Percentage of CPU time being used by interrupts
	Interrupt pulumi.Float64Input `pulumi:"interrupt"`
	// Load averages for the last 1, 5, and 15 minutes
	LoadAvgs pulumi.Float64ArrayInput `pulumi:"loadAvgs"`
	// Percentage of CPU time being used by system processes
	System pulumi.Float64Input `pulumi:"system"`
	// Percentage of CPU time being used by user processes
	User pulumi.Float64Input `pulumi:"user"`
}

func (GetGatewayStatsDeviceGatewayStatCpu2StatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatCpu2Stat)(nil)).Elem()
}

func (i GetGatewayStatsDeviceGatewayStatCpu2StatArgs) ToGetGatewayStatsDeviceGatewayStatCpu2StatOutput() GetGatewayStatsDeviceGatewayStatCpu2StatOutput {
	return i.ToGetGatewayStatsDeviceGatewayStatCpu2StatOutputWithContext(context.Background())
}

func (i GetGatewayStatsDeviceGatewayStatCpu2StatArgs) ToGetGatewayStatsDeviceGatewayStatCpu2StatOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatCpu2StatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayStatsDeviceGatewayStatCpu2StatOutput)
}

type GetGatewayStatsDeviceGatewayStatCpu2StatOutput struct{ *pulumi.OutputState }

func (GetGatewayStatsDeviceGatewayStatCpu2StatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatCpu2Stat)(nil)).Elem()
}

func (o GetGatewayStatsDeviceGatewayStatCpu2StatOutput) ToGetGatewayStatsDeviceGatewayStatCpu2StatOutput() GetGatewayStatsDeviceGatewayStatCpu2StatOutput {
	return o
}

func (o GetGatewayStatsDeviceGatewayStatCpu2StatOutput) ToGetGatewayStatsDeviceGatewayStatCpu2StatOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatCpu2StatOutput {
	return o
}

// Percentage of CPU time that is idle
func (o GetGatewayStatsDeviceGatewayStatCpu2StatOutput) Idle() pulumi.Float64Output {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatCpu2Stat) float64 { return v.Idle }).(pulumi.Float64Output)
}

// Percentage of CPU time being used by interrupts
func (o GetGatewayStatsDeviceGatewayStatCpu2StatOutput) Interrupt() pulumi.Float64Output {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatCpu2Stat) float64 { return v.Interrupt }).(pulumi.Float64Output)
}

// Load averages for the last 1, 5, and 15 minutes
func (o GetGatewayStatsDeviceGatewayStatCpu2StatOutput) LoadAvgs() pulumi.Float64ArrayOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatCpu2Stat) []float64 { return v.LoadAvgs }).(pulumi.Float64ArrayOutput)
}

// Percentage of CPU time being used by system processes
func (o GetGatewayStatsDeviceGatewayStatCpu2StatOutput) System() pulumi.Float64Output {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatCpu2Stat) float64 { return v.System }).(pulumi.Float64Output)
}

// Percentage of CPU time being used by user processes
func (o GetGatewayStatsDeviceGatewayStatCpu2StatOutput) User() pulumi.Float64Output {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatCpu2Stat) float64 { return v.User }).(pulumi.Float64Output)
}

type GetGatewayStatsDeviceGatewayStatCpuStat struct {
	// Percentage of CPU time that is idle
	Idle float64 `pulumi:"idle"`
	// Percentage of CPU time being used by interrupts
	Interrupt float64 `pulumi:"interrupt"`
	// Load averages for the last 1, 5, and 15 minutes
	LoadAvgs []float64 `pulumi:"loadAvgs"`
	// Percentage of CPU time being used by system processes
	System float64 `pulumi:"system"`
	// Percentage of CPU time being used by user processes
	User float64 `pulumi:"user"`
}

// GetGatewayStatsDeviceGatewayStatCpuStatInput is an input type that accepts GetGatewayStatsDeviceGatewayStatCpuStatArgs and GetGatewayStatsDeviceGatewayStatCpuStatOutput values.
// You can construct a concrete instance of `GetGatewayStatsDeviceGatewayStatCpuStatInput` via:
//
//	GetGatewayStatsDeviceGatewayStatCpuStatArgs{...}
type GetGatewayStatsDeviceGatewayStatCpuStatInput interface {
	pulumi.Input

	ToGetGatewayStatsDeviceGatewayStatCpuStatOutput() GetGatewayStatsDeviceGatewayStatCpuStatOutput
	ToGetGatewayStatsDeviceGatewayStatCpuStatOutputWithContext(context.Context) GetGatewayStatsDeviceGatewayStatCpuStatOutput
}

type GetGatewayStatsDeviceGatewayStatCpuStatArgs struct {
	// Percentage of CPU time that is idle
	Idle pulumi.Float64Input `pulumi:"idle"`
	// Percentage of CPU time being used by interrupts
	Interrupt pulumi.Float64Input `pulumi:"interrupt"`
	// Load averages for the last 1, 5, and 15 minutes
	LoadAvgs pulumi.Float64ArrayInput `pulumi:"loadAvgs"`
	// Percentage of CPU time being used by system processes
	System pulumi.Float64Input `pulumi:"system"`
	// Percentage of CPU time being used by user processes
	User pulumi.Float64Input `pulumi:"user"`
}

func (GetGatewayStatsDeviceGatewayStatCpuStatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatCpuStat)(nil)).Elem()
}

func (i GetGatewayStatsDeviceGatewayStatCpuStatArgs) ToGetGatewayStatsDeviceGatewayStatCpuStatOutput() GetGatewayStatsDeviceGatewayStatCpuStatOutput {
	return i.ToGetGatewayStatsDeviceGatewayStatCpuStatOutputWithContext(context.Background())
}

func (i GetGatewayStatsDeviceGatewayStatCpuStatArgs) ToGetGatewayStatsDeviceGatewayStatCpuStatOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatCpuStatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayStatsDeviceGatewayStatCpuStatOutput)
}

type GetGatewayStatsDeviceGatewayStatCpuStatOutput struct{ *pulumi.OutputState }

func (GetGatewayStatsDeviceGatewayStatCpuStatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatCpuStat)(nil)).Elem()
}

func (o GetGatewayStatsDeviceGatewayStatCpuStatOutput) ToGetGatewayStatsDeviceGatewayStatCpuStatOutput() GetGatewayStatsDeviceGatewayStatCpuStatOutput {
	return o
}

func (o GetGatewayStatsDeviceGatewayStatCpuStatOutput) ToGetGatewayStatsDeviceGatewayStatCpuStatOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatCpuStatOutput {
	return o
}

// Percentage of CPU time that is idle
func (o GetGatewayStatsDeviceGatewayStatCpuStatOutput) Idle() pulumi.Float64Output {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatCpuStat) float64 { return v.Idle }).(pulumi.Float64Output)
}

// Percentage of CPU time being used by interrupts
func (o GetGatewayStatsDeviceGatewayStatCpuStatOutput) Interrupt() pulumi.Float64Output {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatCpuStat) float64 { return v.Interrupt }).(pulumi.Float64Output)
}

// Load averages for the last 1, 5, and 15 minutes
func (o GetGatewayStatsDeviceGatewayStatCpuStatOutput) LoadAvgs() pulumi.Float64ArrayOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatCpuStat) []float64 { return v.LoadAvgs }).(pulumi.Float64ArrayOutput)
}

// Percentage of CPU time being used by system processes
func (o GetGatewayStatsDeviceGatewayStatCpuStatOutput) System() pulumi.Float64Output {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatCpuStat) float64 { return v.System }).(pulumi.Float64Output)
}

// Percentage of CPU time being used by user processes
func (o GetGatewayStatsDeviceGatewayStatCpuStatOutput) User() pulumi.Float64Output {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatCpuStat) float64 { return v.User }).(pulumi.Float64Output)
}

type GetGatewayStatsDeviceGatewayStatDhcpd2Stat struct {
	NumIps    int `pulumi:"numIps"`
	NumLeased int `pulumi:"numLeased"`
}

// GetGatewayStatsDeviceGatewayStatDhcpd2StatInput is an input type that accepts GetGatewayStatsDeviceGatewayStatDhcpd2StatArgs and GetGatewayStatsDeviceGatewayStatDhcpd2StatOutput values.
// You can construct a concrete instance of `GetGatewayStatsDeviceGatewayStatDhcpd2StatInput` via:
//
//	GetGatewayStatsDeviceGatewayStatDhcpd2StatArgs{...}
type GetGatewayStatsDeviceGatewayStatDhcpd2StatInput interface {
	pulumi.Input

	ToGetGatewayStatsDeviceGatewayStatDhcpd2StatOutput() GetGatewayStatsDeviceGatewayStatDhcpd2StatOutput
	ToGetGatewayStatsDeviceGatewayStatDhcpd2StatOutputWithContext(context.Context) GetGatewayStatsDeviceGatewayStatDhcpd2StatOutput
}

type GetGatewayStatsDeviceGatewayStatDhcpd2StatArgs struct {
	NumIps    pulumi.IntInput `pulumi:"numIps"`
	NumLeased pulumi.IntInput `pulumi:"numLeased"`
}

func (GetGatewayStatsDeviceGatewayStatDhcpd2StatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatDhcpd2Stat)(nil)).Elem()
}

func (i GetGatewayStatsDeviceGatewayStatDhcpd2StatArgs) ToGetGatewayStatsDeviceGatewayStatDhcpd2StatOutput() GetGatewayStatsDeviceGatewayStatDhcpd2StatOutput {
	return i.ToGetGatewayStatsDeviceGatewayStatDhcpd2StatOutputWithContext(context.Background())
}

func (i GetGatewayStatsDeviceGatewayStatDhcpd2StatArgs) ToGetGatewayStatsDeviceGatewayStatDhcpd2StatOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatDhcpd2StatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayStatsDeviceGatewayStatDhcpd2StatOutput)
}

// GetGatewayStatsDeviceGatewayStatDhcpd2StatMapInput is an input type that accepts GetGatewayStatsDeviceGatewayStatDhcpd2StatMap and GetGatewayStatsDeviceGatewayStatDhcpd2StatMapOutput values.
// You can construct a concrete instance of `GetGatewayStatsDeviceGatewayStatDhcpd2StatMapInput` via:
//
//	GetGatewayStatsDeviceGatewayStatDhcpd2StatMap{ "key": GetGatewayStatsDeviceGatewayStatDhcpd2StatArgs{...} }
type GetGatewayStatsDeviceGatewayStatDhcpd2StatMapInput interface {
	pulumi.Input

	ToGetGatewayStatsDeviceGatewayStatDhcpd2StatMapOutput() GetGatewayStatsDeviceGatewayStatDhcpd2StatMapOutput
	ToGetGatewayStatsDeviceGatewayStatDhcpd2StatMapOutputWithContext(context.Context) GetGatewayStatsDeviceGatewayStatDhcpd2StatMapOutput
}

type GetGatewayStatsDeviceGatewayStatDhcpd2StatMap map[string]GetGatewayStatsDeviceGatewayStatDhcpd2StatInput

func (GetGatewayStatsDeviceGatewayStatDhcpd2StatMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]GetGatewayStatsDeviceGatewayStatDhcpd2Stat)(nil)).Elem()
}

func (i GetGatewayStatsDeviceGatewayStatDhcpd2StatMap) ToGetGatewayStatsDeviceGatewayStatDhcpd2StatMapOutput() GetGatewayStatsDeviceGatewayStatDhcpd2StatMapOutput {
	return i.ToGetGatewayStatsDeviceGatewayStatDhcpd2StatMapOutputWithContext(context.Background())
}

func (i GetGatewayStatsDeviceGatewayStatDhcpd2StatMap) ToGetGatewayStatsDeviceGatewayStatDhcpd2StatMapOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatDhcpd2StatMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayStatsDeviceGatewayStatDhcpd2StatMapOutput)
}

type GetGatewayStatsDeviceGatewayStatDhcpd2StatOutput struct{ *pulumi.OutputState }

func (GetGatewayStatsDeviceGatewayStatDhcpd2StatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatDhcpd2Stat)(nil)).Elem()
}

func (o GetGatewayStatsDeviceGatewayStatDhcpd2StatOutput) ToGetGatewayStatsDeviceGatewayStatDhcpd2StatOutput() GetGatewayStatsDeviceGatewayStatDhcpd2StatOutput {
	return o
}

func (o GetGatewayStatsDeviceGatewayStatDhcpd2StatOutput) ToGetGatewayStatsDeviceGatewayStatDhcpd2StatOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatDhcpd2StatOutput {
	return o
}

func (o GetGatewayStatsDeviceGatewayStatDhcpd2StatOutput) NumIps() pulumi.IntOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatDhcpd2Stat) int { return v.NumIps }).(pulumi.IntOutput)
}

func (o GetGatewayStatsDeviceGatewayStatDhcpd2StatOutput) NumLeased() pulumi.IntOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatDhcpd2Stat) int { return v.NumLeased }).(pulumi.IntOutput)
}

type GetGatewayStatsDeviceGatewayStatDhcpd2StatMapOutput struct{ *pulumi.OutputState }

func (GetGatewayStatsDeviceGatewayStatDhcpd2StatMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]GetGatewayStatsDeviceGatewayStatDhcpd2Stat)(nil)).Elem()
}

func (o GetGatewayStatsDeviceGatewayStatDhcpd2StatMapOutput) ToGetGatewayStatsDeviceGatewayStatDhcpd2StatMapOutput() GetGatewayStatsDeviceGatewayStatDhcpd2StatMapOutput {
	return o
}

func (o GetGatewayStatsDeviceGatewayStatDhcpd2StatMapOutput) ToGetGatewayStatsDeviceGatewayStatDhcpd2StatMapOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatDhcpd2StatMapOutput {
	return o
}

func (o GetGatewayStatsDeviceGatewayStatDhcpd2StatMapOutput) MapIndex(k pulumi.StringInput) GetGatewayStatsDeviceGatewayStatDhcpd2StatOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) GetGatewayStatsDeviceGatewayStatDhcpd2Stat {
		return vs[0].(map[string]GetGatewayStatsDeviceGatewayStatDhcpd2Stat)[vs[1].(string)]
	}).(GetGatewayStatsDeviceGatewayStatDhcpd2StatOutput)
}

type GetGatewayStatsDeviceGatewayStatDhcpdStat struct {
	NumIps    int `pulumi:"numIps"`
	NumLeased int `pulumi:"numLeased"`
}

// GetGatewayStatsDeviceGatewayStatDhcpdStatInput is an input type that accepts GetGatewayStatsDeviceGatewayStatDhcpdStatArgs and GetGatewayStatsDeviceGatewayStatDhcpdStatOutput values.
// You can construct a concrete instance of `GetGatewayStatsDeviceGatewayStatDhcpdStatInput` via:
//
//	GetGatewayStatsDeviceGatewayStatDhcpdStatArgs{...}
type GetGatewayStatsDeviceGatewayStatDhcpdStatInput interface {
	pulumi.Input

	ToGetGatewayStatsDeviceGatewayStatDhcpdStatOutput() GetGatewayStatsDeviceGatewayStatDhcpdStatOutput
	ToGetGatewayStatsDeviceGatewayStatDhcpdStatOutputWithContext(context.Context) GetGatewayStatsDeviceGatewayStatDhcpdStatOutput
}

type GetGatewayStatsDeviceGatewayStatDhcpdStatArgs struct {
	NumIps    pulumi.IntInput `pulumi:"numIps"`
	NumLeased pulumi.IntInput `pulumi:"numLeased"`
}

func (GetGatewayStatsDeviceGatewayStatDhcpdStatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatDhcpdStat)(nil)).Elem()
}

func (i GetGatewayStatsDeviceGatewayStatDhcpdStatArgs) ToGetGatewayStatsDeviceGatewayStatDhcpdStatOutput() GetGatewayStatsDeviceGatewayStatDhcpdStatOutput {
	return i.ToGetGatewayStatsDeviceGatewayStatDhcpdStatOutputWithContext(context.Background())
}

func (i GetGatewayStatsDeviceGatewayStatDhcpdStatArgs) ToGetGatewayStatsDeviceGatewayStatDhcpdStatOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatDhcpdStatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayStatsDeviceGatewayStatDhcpdStatOutput)
}

// GetGatewayStatsDeviceGatewayStatDhcpdStatMapInput is an input type that accepts GetGatewayStatsDeviceGatewayStatDhcpdStatMap and GetGatewayStatsDeviceGatewayStatDhcpdStatMapOutput values.
// You can construct a concrete instance of `GetGatewayStatsDeviceGatewayStatDhcpdStatMapInput` via:
//
//	GetGatewayStatsDeviceGatewayStatDhcpdStatMap{ "key": GetGatewayStatsDeviceGatewayStatDhcpdStatArgs{...} }
type GetGatewayStatsDeviceGatewayStatDhcpdStatMapInput interface {
	pulumi.Input

	ToGetGatewayStatsDeviceGatewayStatDhcpdStatMapOutput() GetGatewayStatsDeviceGatewayStatDhcpdStatMapOutput
	ToGetGatewayStatsDeviceGatewayStatDhcpdStatMapOutputWithContext(context.Context) GetGatewayStatsDeviceGatewayStatDhcpdStatMapOutput
}

type GetGatewayStatsDeviceGatewayStatDhcpdStatMap map[string]GetGatewayStatsDeviceGatewayStatDhcpdStatInput

func (GetGatewayStatsDeviceGatewayStatDhcpdStatMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]GetGatewayStatsDeviceGatewayStatDhcpdStat)(nil)).Elem()
}

func (i GetGatewayStatsDeviceGatewayStatDhcpdStatMap) ToGetGatewayStatsDeviceGatewayStatDhcpdStatMapOutput() GetGatewayStatsDeviceGatewayStatDhcpdStatMapOutput {
	return i.ToGetGatewayStatsDeviceGatewayStatDhcpdStatMapOutputWithContext(context.Background())
}

func (i GetGatewayStatsDeviceGatewayStatDhcpdStatMap) ToGetGatewayStatsDeviceGatewayStatDhcpdStatMapOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatDhcpdStatMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayStatsDeviceGatewayStatDhcpdStatMapOutput)
}

type GetGatewayStatsDeviceGatewayStatDhcpdStatOutput struct{ *pulumi.OutputState }

func (GetGatewayStatsDeviceGatewayStatDhcpdStatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatDhcpdStat)(nil)).Elem()
}

func (o GetGatewayStatsDeviceGatewayStatDhcpdStatOutput) ToGetGatewayStatsDeviceGatewayStatDhcpdStatOutput() GetGatewayStatsDeviceGatewayStatDhcpdStatOutput {
	return o
}

func (o GetGatewayStatsDeviceGatewayStatDhcpdStatOutput) ToGetGatewayStatsDeviceGatewayStatDhcpdStatOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatDhcpdStatOutput {
	return o
}

func (o GetGatewayStatsDeviceGatewayStatDhcpdStatOutput) NumIps() pulumi.IntOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatDhcpdStat) int { return v.NumIps }).(pulumi.IntOutput)
}

func (o GetGatewayStatsDeviceGatewayStatDhcpdStatOutput) NumLeased() pulumi.IntOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatDhcpdStat) int { return v.NumLeased }).(pulumi.IntOutput)
}

type GetGatewayStatsDeviceGatewayStatDhcpdStatMapOutput struct{ *pulumi.OutputState }

func (GetGatewayStatsDeviceGatewayStatDhcpdStatMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]GetGatewayStatsDeviceGatewayStatDhcpdStat)(nil)).Elem()
}

func (o GetGatewayStatsDeviceGatewayStatDhcpdStatMapOutput) ToGetGatewayStatsDeviceGatewayStatDhcpdStatMapOutput() GetGatewayStatsDeviceGatewayStatDhcpdStatMapOutput {
	return o
}

func (o GetGatewayStatsDeviceGatewayStatDhcpdStatMapOutput) ToGetGatewayStatsDeviceGatewayStatDhcpdStatMapOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatDhcpdStatMapOutput {
	return o
}

func (o GetGatewayStatsDeviceGatewayStatDhcpdStatMapOutput) MapIndex(k pulumi.StringInput) GetGatewayStatsDeviceGatewayStatDhcpdStatOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) GetGatewayStatsDeviceGatewayStatDhcpdStat {
		return vs[0].(map[string]GetGatewayStatsDeviceGatewayStatDhcpdStat)[vs[1].(string)]
	}).(GetGatewayStatsDeviceGatewayStatDhcpdStatOutput)
}

type GetGatewayStatsDeviceGatewayStatFwupdate struct {
	Progress int `pulumi:"progress"`
	// enum: `inprogress`, `failed`, `upgraded`
	Status   string `pulumi:"status"`
	StatusId int    `pulumi:"statusId"`
	// Epoch (seconds)
	Timestamp float64 `pulumi:"timestamp"`
	WillRetry bool    `pulumi:"willRetry"`
}

// GetGatewayStatsDeviceGatewayStatFwupdateInput is an input type that accepts GetGatewayStatsDeviceGatewayStatFwupdateArgs and GetGatewayStatsDeviceGatewayStatFwupdateOutput values.
// You can construct a concrete instance of `GetGatewayStatsDeviceGatewayStatFwupdateInput` via:
//
//	GetGatewayStatsDeviceGatewayStatFwupdateArgs{...}
type GetGatewayStatsDeviceGatewayStatFwupdateInput interface {
	pulumi.Input

	ToGetGatewayStatsDeviceGatewayStatFwupdateOutput() GetGatewayStatsDeviceGatewayStatFwupdateOutput
	ToGetGatewayStatsDeviceGatewayStatFwupdateOutputWithContext(context.Context) GetGatewayStatsDeviceGatewayStatFwupdateOutput
}

type GetGatewayStatsDeviceGatewayStatFwupdateArgs struct {
	Progress pulumi.IntInput `pulumi:"progress"`
	// enum: `inprogress`, `failed`, `upgraded`
	Status   pulumi.StringInput `pulumi:"status"`
	StatusId pulumi.IntInput    `pulumi:"statusId"`
	// Epoch (seconds)
	Timestamp pulumi.Float64Input `pulumi:"timestamp"`
	WillRetry pulumi.BoolInput    `pulumi:"willRetry"`
}

func (GetGatewayStatsDeviceGatewayStatFwupdateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatFwupdate)(nil)).Elem()
}

func (i GetGatewayStatsDeviceGatewayStatFwupdateArgs) ToGetGatewayStatsDeviceGatewayStatFwupdateOutput() GetGatewayStatsDeviceGatewayStatFwupdateOutput {
	return i.ToGetGatewayStatsDeviceGatewayStatFwupdateOutputWithContext(context.Background())
}

func (i GetGatewayStatsDeviceGatewayStatFwupdateArgs) ToGetGatewayStatsDeviceGatewayStatFwupdateOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatFwupdateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayStatsDeviceGatewayStatFwupdateOutput)
}

type GetGatewayStatsDeviceGatewayStatFwupdateOutput struct{ *pulumi.OutputState }

func (GetGatewayStatsDeviceGatewayStatFwupdateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatFwupdate)(nil)).Elem()
}

func (o GetGatewayStatsDeviceGatewayStatFwupdateOutput) ToGetGatewayStatsDeviceGatewayStatFwupdateOutput() GetGatewayStatsDeviceGatewayStatFwupdateOutput {
	return o
}

func (o GetGatewayStatsDeviceGatewayStatFwupdateOutput) ToGetGatewayStatsDeviceGatewayStatFwupdateOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatFwupdateOutput {
	return o
}

func (o GetGatewayStatsDeviceGatewayStatFwupdateOutput) Progress() pulumi.IntOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatFwupdate) int { return v.Progress }).(pulumi.IntOutput)
}

// enum: `inprogress`, `failed`, `upgraded`
func (o GetGatewayStatsDeviceGatewayStatFwupdateOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatFwupdate) string { return v.Status }).(pulumi.StringOutput)
}

func (o GetGatewayStatsDeviceGatewayStatFwupdateOutput) StatusId() pulumi.IntOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatFwupdate) int { return v.StatusId }).(pulumi.IntOutput)
}

// Epoch (seconds)
func (o GetGatewayStatsDeviceGatewayStatFwupdateOutput) Timestamp() pulumi.Float64Output {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatFwupdate) float64 { return v.Timestamp }).(pulumi.Float64Output)
}

func (o GetGatewayStatsDeviceGatewayStatFwupdateOutput) WillRetry() pulumi.BoolOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatFwupdate) bool { return v.WillRetry }).(pulumi.BoolOutput)
}

type GetGatewayStatsDeviceGatewayStatIf2Stat struct {
	AddressMode     string   `pulumi:"addressMode"`
	Ips             []string `pulumi:"ips"`
	NatAddresses    []string `pulumi:"natAddresses"`
	NetworkName     string   `pulumi:"networkName"`
	PortId          string   `pulumi:"portId"`
	PortUsage       string   `pulumi:"portUsage"`
	RedundancyState string   `pulumi:"redundancyState"`
	// Amount of traffic received since connection
	RxBytes int `pulumi:"rxBytes"`
	// Amount of packets received since connection
	RxPkts    int                                              `pulumi:"rxPkts"`
	ServpInfo GetGatewayStatsDeviceGatewayStatIf2StatServpInfo `pulumi:"servpInfo"`
	// Amount of traffic sent since connection
	TxBytes int `pulumi:"txBytes"`
	// Amount of packets sent since connection
	TxPkts  int    `pulumi:"txPkts"`
	Up      bool   `pulumi:"up"`
	Vlan    int    `pulumi:"vlan"`
	WanName string `pulumi:"wanName"`
	WanType string `pulumi:"wanType"`
}

// GetGatewayStatsDeviceGatewayStatIf2StatInput is an input type that accepts GetGatewayStatsDeviceGatewayStatIf2StatArgs and GetGatewayStatsDeviceGatewayStatIf2StatOutput values.
// You can construct a concrete instance of `GetGatewayStatsDeviceGatewayStatIf2StatInput` via:
//
//	GetGatewayStatsDeviceGatewayStatIf2StatArgs{...}
type GetGatewayStatsDeviceGatewayStatIf2StatInput interface {
	pulumi.Input

	ToGetGatewayStatsDeviceGatewayStatIf2StatOutput() GetGatewayStatsDeviceGatewayStatIf2StatOutput
	ToGetGatewayStatsDeviceGatewayStatIf2StatOutputWithContext(context.Context) GetGatewayStatsDeviceGatewayStatIf2StatOutput
}

type GetGatewayStatsDeviceGatewayStatIf2StatArgs struct {
	AddressMode     pulumi.StringInput      `pulumi:"addressMode"`
	Ips             pulumi.StringArrayInput `pulumi:"ips"`
	NatAddresses    pulumi.StringArrayInput `pulumi:"natAddresses"`
	NetworkName     pulumi.StringInput      `pulumi:"networkName"`
	PortId          pulumi.StringInput      `pulumi:"portId"`
	PortUsage       pulumi.StringInput      `pulumi:"portUsage"`
	RedundancyState pulumi.StringInput      `pulumi:"redundancyState"`
	// Amount of traffic received since connection
	RxBytes pulumi.IntInput `pulumi:"rxBytes"`
	// Amount of packets received since connection
	RxPkts    pulumi.IntInput                                       `pulumi:"rxPkts"`
	ServpInfo GetGatewayStatsDeviceGatewayStatIf2StatServpInfoInput `pulumi:"servpInfo"`
	// Amount of traffic sent since connection
	TxBytes pulumi.IntInput `pulumi:"txBytes"`
	// Amount of packets sent since connection
	TxPkts  pulumi.IntInput    `pulumi:"txPkts"`
	Up      pulumi.BoolInput   `pulumi:"up"`
	Vlan    pulumi.IntInput    `pulumi:"vlan"`
	WanName pulumi.StringInput `pulumi:"wanName"`
	WanType pulumi.StringInput `pulumi:"wanType"`
}

func (GetGatewayStatsDeviceGatewayStatIf2StatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatIf2Stat)(nil)).Elem()
}

func (i GetGatewayStatsDeviceGatewayStatIf2StatArgs) ToGetGatewayStatsDeviceGatewayStatIf2StatOutput() GetGatewayStatsDeviceGatewayStatIf2StatOutput {
	return i.ToGetGatewayStatsDeviceGatewayStatIf2StatOutputWithContext(context.Background())
}

func (i GetGatewayStatsDeviceGatewayStatIf2StatArgs) ToGetGatewayStatsDeviceGatewayStatIf2StatOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatIf2StatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayStatsDeviceGatewayStatIf2StatOutput)
}

// GetGatewayStatsDeviceGatewayStatIf2StatMapInput is an input type that accepts GetGatewayStatsDeviceGatewayStatIf2StatMap and GetGatewayStatsDeviceGatewayStatIf2StatMapOutput values.
// You can construct a concrete instance of `GetGatewayStatsDeviceGatewayStatIf2StatMapInput` via:
//
//	GetGatewayStatsDeviceGatewayStatIf2StatMap{ "key": GetGatewayStatsDeviceGatewayStatIf2StatArgs{...} }
type GetGatewayStatsDeviceGatewayStatIf2StatMapInput interface {
	pulumi.Input

	ToGetGatewayStatsDeviceGatewayStatIf2StatMapOutput() GetGatewayStatsDeviceGatewayStatIf2StatMapOutput
	ToGetGatewayStatsDeviceGatewayStatIf2StatMapOutputWithContext(context.Context) GetGatewayStatsDeviceGatewayStatIf2StatMapOutput
}

type GetGatewayStatsDeviceGatewayStatIf2StatMap map[string]GetGatewayStatsDeviceGatewayStatIf2StatInput

func (GetGatewayStatsDeviceGatewayStatIf2StatMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]GetGatewayStatsDeviceGatewayStatIf2Stat)(nil)).Elem()
}

func (i GetGatewayStatsDeviceGatewayStatIf2StatMap) ToGetGatewayStatsDeviceGatewayStatIf2StatMapOutput() GetGatewayStatsDeviceGatewayStatIf2StatMapOutput {
	return i.ToGetGatewayStatsDeviceGatewayStatIf2StatMapOutputWithContext(context.Background())
}

func (i GetGatewayStatsDeviceGatewayStatIf2StatMap) ToGetGatewayStatsDeviceGatewayStatIf2StatMapOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatIf2StatMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayStatsDeviceGatewayStatIf2StatMapOutput)
}

type GetGatewayStatsDeviceGatewayStatIf2StatOutput struct{ *pulumi.OutputState }

func (GetGatewayStatsDeviceGatewayStatIf2StatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatIf2Stat)(nil)).Elem()
}

func (o GetGatewayStatsDeviceGatewayStatIf2StatOutput) ToGetGatewayStatsDeviceGatewayStatIf2StatOutput() GetGatewayStatsDeviceGatewayStatIf2StatOutput {
	return o
}

func (o GetGatewayStatsDeviceGatewayStatIf2StatOutput) ToGetGatewayStatsDeviceGatewayStatIf2StatOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatIf2StatOutput {
	return o
}

func (o GetGatewayStatsDeviceGatewayStatIf2StatOutput) AddressMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatIf2Stat) string { return v.AddressMode }).(pulumi.StringOutput)
}

func (o GetGatewayStatsDeviceGatewayStatIf2StatOutput) Ips() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatIf2Stat) []string { return v.Ips }).(pulumi.StringArrayOutput)
}

func (o GetGatewayStatsDeviceGatewayStatIf2StatOutput) NatAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatIf2Stat) []string { return v.NatAddresses }).(pulumi.StringArrayOutput)
}

func (o GetGatewayStatsDeviceGatewayStatIf2StatOutput) NetworkName() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatIf2Stat) string { return v.NetworkName }).(pulumi.StringOutput)
}

func (o GetGatewayStatsDeviceGatewayStatIf2StatOutput) PortId() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatIf2Stat) string { return v.PortId }).(pulumi.StringOutput)
}

func (o GetGatewayStatsDeviceGatewayStatIf2StatOutput) PortUsage() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatIf2Stat) string { return v.PortUsage }).(pulumi.StringOutput)
}

func (o GetGatewayStatsDeviceGatewayStatIf2StatOutput) RedundancyState() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatIf2Stat) string { return v.RedundancyState }).(pulumi.StringOutput)
}

// Amount of traffic received since connection
func (o GetGatewayStatsDeviceGatewayStatIf2StatOutput) RxBytes() pulumi.IntOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatIf2Stat) int { return v.RxBytes }).(pulumi.IntOutput)
}

// Amount of packets received since connection
func (o GetGatewayStatsDeviceGatewayStatIf2StatOutput) RxPkts() pulumi.IntOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatIf2Stat) int { return v.RxPkts }).(pulumi.IntOutput)
}

func (o GetGatewayStatsDeviceGatewayStatIf2StatOutput) ServpInfo() GetGatewayStatsDeviceGatewayStatIf2StatServpInfoOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatIf2Stat) GetGatewayStatsDeviceGatewayStatIf2StatServpInfo {
		return v.ServpInfo
	}).(GetGatewayStatsDeviceGatewayStatIf2StatServpInfoOutput)
}

// Amount of traffic sent since connection
func (o GetGatewayStatsDeviceGatewayStatIf2StatOutput) TxBytes() pulumi.IntOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatIf2Stat) int { return v.TxBytes }).(pulumi.IntOutput)
}

// Amount of packets sent since connection
func (o GetGatewayStatsDeviceGatewayStatIf2StatOutput) TxPkts() pulumi.IntOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatIf2Stat) int { return v.TxPkts }).(pulumi.IntOutput)
}

func (o GetGatewayStatsDeviceGatewayStatIf2StatOutput) Up() pulumi.BoolOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatIf2Stat) bool { return v.Up }).(pulumi.BoolOutput)
}

func (o GetGatewayStatsDeviceGatewayStatIf2StatOutput) Vlan() pulumi.IntOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatIf2Stat) int { return v.Vlan }).(pulumi.IntOutput)
}

func (o GetGatewayStatsDeviceGatewayStatIf2StatOutput) WanName() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatIf2Stat) string { return v.WanName }).(pulumi.StringOutput)
}

func (o GetGatewayStatsDeviceGatewayStatIf2StatOutput) WanType() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatIf2Stat) string { return v.WanType }).(pulumi.StringOutput)
}

type GetGatewayStatsDeviceGatewayStatIf2StatMapOutput struct{ *pulumi.OutputState }

func (GetGatewayStatsDeviceGatewayStatIf2StatMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]GetGatewayStatsDeviceGatewayStatIf2Stat)(nil)).Elem()
}

func (o GetGatewayStatsDeviceGatewayStatIf2StatMapOutput) ToGetGatewayStatsDeviceGatewayStatIf2StatMapOutput() GetGatewayStatsDeviceGatewayStatIf2StatMapOutput {
	return o
}

func (o GetGatewayStatsDeviceGatewayStatIf2StatMapOutput) ToGetGatewayStatsDeviceGatewayStatIf2StatMapOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatIf2StatMapOutput {
	return o
}

func (o GetGatewayStatsDeviceGatewayStatIf2StatMapOutput) MapIndex(k pulumi.StringInput) GetGatewayStatsDeviceGatewayStatIf2StatOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) GetGatewayStatsDeviceGatewayStatIf2Stat {
		return vs[0].(map[string]GetGatewayStatsDeviceGatewayStatIf2Stat)[vs[1].(string)]
	}).(GetGatewayStatsDeviceGatewayStatIf2StatOutput)
}

type GetGatewayStatsDeviceGatewayStatIf2StatServpInfo struct {
	Asn         string  `pulumi:"asn"`
	City        string  `pulumi:"city"`
	CountryCode string  `pulumi:"countryCode"`
	Latitude    float64 `pulumi:"latitude"`
	Longitude   float64 `pulumi:"longitude"`
	Org         string  `pulumi:"org"`
	RegionCode  string  `pulumi:"regionCode"`
}

// GetGatewayStatsDeviceGatewayStatIf2StatServpInfoInput is an input type that accepts GetGatewayStatsDeviceGatewayStatIf2StatServpInfoArgs and GetGatewayStatsDeviceGatewayStatIf2StatServpInfoOutput values.
// You can construct a concrete instance of `GetGatewayStatsDeviceGatewayStatIf2StatServpInfoInput` via:
//
//	GetGatewayStatsDeviceGatewayStatIf2StatServpInfoArgs{...}
type GetGatewayStatsDeviceGatewayStatIf2StatServpInfoInput interface {
	pulumi.Input

	ToGetGatewayStatsDeviceGatewayStatIf2StatServpInfoOutput() GetGatewayStatsDeviceGatewayStatIf2StatServpInfoOutput
	ToGetGatewayStatsDeviceGatewayStatIf2StatServpInfoOutputWithContext(context.Context) GetGatewayStatsDeviceGatewayStatIf2StatServpInfoOutput
}

type GetGatewayStatsDeviceGatewayStatIf2StatServpInfoArgs struct {
	Asn         pulumi.StringInput  `pulumi:"asn"`
	City        pulumi.StringInput  `pulumi:"city"`
	CountryCode pulumi.StringInput  `pulumi:"countryCode"`
	Latitude    pulumi.Float64Input `pulumi:"latitude"`
	Longitude   pulumi.Float64Input `pulumi:"longitude"`
	Org         pulumi.StringInput  `pulumi:"org"`
	RegionCode  pulumi.StringInput  `pulumi:"regionCode"`
}

func (GetGatewayStatsDeviceGatewayStatIf2StatServpInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatIf2StatServpInfo)(nil)).Elem()
}

func (i GetGatewayStatsDeviceGatewayStatIf2StatServpInfoArgs) ToGetGatewayStatsDeviceGatewayStatIf2StatServpInfoOutput() GetGatewayStatsDeviceGatewayStatIf2StatServpInfoOutput {
	return i.ToGetGatewayStatsDeviceGatewayStatIf2StatServpInfoOutputWithContext(context.Background())
}

func (i GetGatewayStatsDeviceGatewayStatIf2StatServpInfoArgs) ToGetGatewayStatsDeviceGatewayStatIf2StatServpInfoOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatIf2StatServpInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayStatsDeviceGatewayStatIf2StatServpInfoOutput)
}

type GetGatewayStatsDeviceGatewayStatIf2StatServpInfoOutput struct{ *pulumi.OutputState }

func (GetGatewayStatsDeviceGatewayStatIf2StatServpInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatIf2StatServpInfo)(nil)).Elem()
}

func (o GetGatewayStatsDeviceGatewayStatIf2StatServpInfoOutput) ToGetGatewayStatsDeviceGatewayStatIf2StatServpInfoOutput() GetGatewayStatsDeviceGatewayStatIf2StatServpInfoOutput {
	return o
}

func (o GetGatewayStatsDeviceGatewayStatIf2StatServpInfoOutput) ToGetGatewayStatsDeviceGatewayStatIf2StatServpInfoOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatIf2StatServpInfoOutput {
	return o
}

func (o GetGatewayStatsDeviceGatewayStatIf2StatServpInfoOutput) Asn() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatIf2StatServpInfo) string { return v.Asn }).(pulumi.StringOutput)
}

func (o GetGatewayStatsDeviceGatewayStatIf2StatServpInfoOutput) City() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatIf2StatServpInfo) string { return v.City }).(pulumi.StringOutput)
}

func (o GetGatewayStatsDeviceGatewayStatIf2StatServpInfoOutput) CountryCode() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatIf2StatServpInfo) string { return v.CountryCode }).(pulumi.StringOutput)
}

func (o GetGatewayStatsDeviceGatewayStatIf2StatServpInfoOutput) Latitude() pulumi.Float64Output {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatIf2StatServpInfo) float64 { return v.Latitude }).(pulumi.Float64Output)
}

func (o GetGatewayStatsDeviceGatewayStatIf2StatServpInfoOutput) Longitude() pulumi.Float64Output {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatIf2StatServpInfo) float64 { return v.Longitude }).(pulumi.Float64Output)
}

func (o GetGatewayStatsDeviceGatewayStatIf2StatServpInfoOutput) Org() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatIf2StatServpInfo) string { return v.Org }).(pulumi.StringOutput)
}

func (o GetGatewayStatsDeviceGatewayStatIf2StatServpInfoOutput) RegionCode() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatIf2StatServpInfo) string { return v.RegionCode }).(pulumi.StringOutput)
}

type GetGatewayStatsDeviceGatewayStatIfStat struct {
	AddressMode     string   `pulumi:"addressMode"`
	Ips             []string `pulumi:"ips"`
	NatAddresses    []string `pulumi:"natAddresses"`
	NetworkName     string   `pulumi:"networkName"`
	PortId          string   `pulumi:"portId"`
	PortUsage       string   `pulumi:"portUsage"`
	RedundancyState string   `pulumi:"redundancyState"`
	// Amount of traffic received since connection
	RxBytes int `pulumi:"rxBytes"`
	// Amount of packets received since connection
	RxPkts    int                                             `pulumi:"rxPkts"`
	ServpInfo GetGatewayStatsDeviceGatewayStatIfStatServpInfo `pulumi:"servpInfo"`
	// Amount of traffic sent since connection
	TxBytes int `pulumi:"txBytes"`
	// Amount of packets sent since connection
	TxPkts  int    `pulumi:"txPkts"`
	Up      bool   `pulumi:"up"`
	Vlan    int    `pulumi:"vlan"`
	WanName string `pulumi:"wanName"`
	WanType string `pulumi:"wanType"`
}

// GetGatewayStatsDeviceGatewayStatIfStatInput is an input type that accepts GetGatewayStatsDeviceGatewayStatIfStatArgs and GetGatewayStatsDeviceGatewayStatIfStatOutput values.
// You can construct a concrete instance of `GetGatewayStatsDeviceGatewayStatIfStatInput` via:
//
//	GetGatewayStatsDeviceGatewayStatIfStatArgs{...}
type GetGatewayStatsDeviceGatewayStatIfStatInput interface {
	pulumi.Input

	ToGetGatewayStatsDeviceGatewayStatIfStatOutput() GetGatewayStatsDeviceGatewayStatIfStatOutput
	ToGetGatewayStatsDeviceGatewayStatIfStatOutputWithContext(context.Context) GetGatewayStatsDeviceGatewayStatIfStatOutput
}

type GetGatewayStatsDeviceGatewayStatIfStatArgs struct {
	AddressMode     pulumi.StringInput      `pulumi:"addressMode"`
	Ips             pulumi.StringArrayInput `pulumi:"ips"`
	NatAddresses    pulumi.StringArrayInput `pulumi:"natAddresses"`
	NetworkName     pulumi.StringInput      `pulumi:"networkName"`
	PortId          pulumi.StringInput      `pulumi:"portId"`
	PortUsage       pulumi.StringInput      `pulumi:"portUsage"`
	RedundancyState pulumi.StringInput      `pulumi:"redundancyState"`
	// Amount of traffic received since connection
	RxBytes pulumi.IntInput `pulumi:"rxBytes"`
	// Amount of packets received since connection
	RxPkts    pulumi.IntInput                                      `pulumi:"rxPkts"`
	ServpInfo GetGatewayStatsDeviceGatewayStatIfStatServpInfoInput `pulumi:"servpInfo"`
	// Amount of traffic sent since connection
	TxBytes pulumi.IntInput `pulumi:"txBytes"`
	// Amount of packets sent since connection
	TxPkts  pulumi.IntInput    `pulumi:"txPkts"`
	Up      pulumi.BoolInput   `pulumi:"up"`
	Vlan    pulumi.IntInput    `pulumi:"vlan"`
	WanName pulumi.StringInput `pulumi:"wanName"`
	WanType pulumi.StringInput `pulumi:"wanType"`
}

func (GetGatewayStatsDeviceGatewayStatIfStatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatIfStat)(nil)).Elem()
}

func (i GetGatewayStatsDeviceGatewayStatIfStatArgs) ToGetGatewayStatsDeviceGatewayStatIfStatOutput() GetGatewayStatsDeviceGatewayStatIfStatOutput {
	return i.ToGetGatewayStatsDeviceGatewayStatIfStatOutputWithContext(context.Background())
}

func (i GetGatewayStatsDeviceGatewayStatIfStatArgs) ToGetGatewayStatsDeviceGatewayStatIfStatOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatIfStatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayStatsDeviceGatewayStatIfStatOutput)
}

// GetGatewayStatsDeviceGatewayStatIfStatMapInput is an input type that accepts GetGatewayStatsDeviceGatewayStatIfStatMap and GetGatewayStatsDeviceGatewayStatIfStatMapOutput values.
// You can construct a concrete instance of `GetGatewayStatsDeviceGatewayStatIfStatMapInput` via:
//
//	GetGatewayStatsDeviceGatewayStatIfStatMap{ "key": GetGatewayStatsDeviceGatewayStatIfStatArgs{...} }
type GetGatewayStatsDeviceGatewayStatIfStatMapInput interface {
	pulumi.Input

	ToGetGatewayStatsDeviceGatewayStatIfStatMapOutput() GetGatewayStatsDeviceGatewayStatIfStatMapOutput
	ToGetGatewayStatsDeviceGatewayStatIfStatMapOutputWithContext(context.Context) GetGatewayStatsDeviceGatewayStatIfStatMapOutput
}

type GetGatewayStatsDeviceGatewayStatIfStatMap map[string]GetGatewayStatsDeviceGatewayStatIfStatInput

func (GetGatewayStatsDeviceGatewayStatIfStatMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]GetGatewayStatsDeviceGatewayStatIfStat)(nil)).Elem()
}

func (i GetGatewayStatsDeviceGatewayStatIfStatMap) ToGetGatewayStatsDeviceGatewayStatIfStatMapOutput() GetGatewayStatsDeviceGatewayStatIfStatMapOutput {
	return i.ToGetGatewayStatsDeviceGatewayStatIfStatMapOutputWithContext(context.Background())
}

func (i GetGatewayStatsDeviceGatewayStatIfStatMap) ToGetGatewayStatsDeviceGatewayStatIfStatMapOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatIfStatMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayStatsDeviceGatewayStatIfStatMapOutput)
}

type GetGatewayStatsDeviceGatewayStatIfStatOutput struct{ *pulumi.OutputState }

func (GetGatewayStatsDeviceGatewayStatIfStatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatIfStat)(nil)).Elem()
}

func (o GetGatewayStatsDeviceGatewayStatIfStatOutput) ToGetGatewayStatsDeviceGatewayStatIfStatOutput() GetGatewayStatsDeviceGatewayStatIfStatOutput {
	return o
}

func (o GetGatewayStatsDeviceGatewayStatIfStatOutput) ToGetGatewayStatsDeviceGatewayStatIfStatOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatIfStatOutput {
	return o
}

func (o GetGatewayStatsDeviceGatewayStatIfStatOutput) AddressMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatIfStat) string { return v.AddressMode }).(pulumi.StringOutput)
}

func (o GetGatewayStatsDeviceGatewayStatIfStatOutput) Ips() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatIfStat) []string { return v.Ips }).(pulumi.StringArrayOutput)
}

func (o GetGatewayStatsDeviceGatewayStatIfStatOutput) NatAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatIfStat) []string { return v.NatAddresses }).(pulumi.StringArrayOutput)
}

func (o GetGatewayStatsDeviceGatewayStatIfStatOutput) NetworkName() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatIfStat) string { return v.NetworkName }).(pulumi.StringOutput)
}

func (o GetGatewayStatsDeviceGatewayStatIfStatOutput) PortId() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatIfStat) string { return v.PortId }).(pulumi.StringOutput)
}

func (o GetGatewayStatsDeviceGatewayStatIfStatOutput) PortUsage() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatIfStat) string { return v.PortUsage }).(pulumi.StringOutput)
}

func (o GetGatewayStatsDeviceGatewayStatIfStatOutput) RedundancyState() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatIfStat) string { return v.RedundancyState }).(pulumi.StringOutput)
}

// Amount of traffic received since connection
func (o GetGatewayStatsDeviceGatewayStatIfStatOutput) RxBytes() pulumi.IntOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatIfStat) int { return v.RxBytes }).(pulumi.IntOutput)
}

// Amount of packets received since connection
func (o GetGatewayStatsDeviceGatewayStatIfStatOutput) RxPkts() pulumi.IntOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatIfStat) int { return v.RxPkts }).(pulumi.IntOutput)
}

func (o GetGatewayStatsDeviceGatewayStatIfStatOutput) ServpInfo() GetGatewayStatsDeviceGatewayStatIfStatServpInfoOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatIfStat) GetGatewayStatsDeviceGatewayStatIfStatServpInfo {
		return v.ServpInfo
	}).(GetGatewayStatsDeviceGatewayStatIfStatServpInfoOutput)
}

// Amount of traffic sent since connection
func (o GetGatewayStatsDeviceGatewayStatIfStatOutput) TxBytes() pulumi.IntOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatIfStat) int { return v.TxBytes }).(pulumi.IntOutput)
}

// Amount of packets sent since connection
func (o GetGatewayStatsDeviceGatewayStatIfStatOutput) TxPkts() pulumi.IntOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatIfStat) int { return v.TxPkts }).(pulumi.IntOutput)
}

func (o GetGatewayStatsDeviceGatewayStatIfStatOutput) Up() pulumi.BoolOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatIfStat) bool { return v.Up }).(pulumi.BoolOutput)
}

func (o GetGatewayStatsDeviceGatewayStatIfStatOutput) Vlan() pulumi.IntOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatIfStat) int { return v.Vlan }).(pulumi.IntOutput)
}

func (o GetGatewayStatsDeviceGatewayStatIfStatOutput) WanName() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatIfStat) string { return v.WanName }).(pulumi.StringOutput)
}

func (o GetGatewayStatsDeviceGatewayStatIfStatOutput) WanType() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatIfStat) string { return v.WanType }).(pulumi.StringOutput)
}

type GetGatewayStatsDeviceGatewayStatIfStatMapOutput struct{ *pulumi.OutputState }

func (GetGatewayStatsDeviceGatewayStatIfStatMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]GetGatewayStatsDeviceGatewayStatIfStat)(nil)).Elem()
}

func (o GetGatewayStatsDeviceGatewayStatIfStatMapOutput) ToGetGatewayStatsDeviceGatewayStatIfStatMapOutput() GetGatewayStatsDeviceGatewayStatIfStatMapOutput {
	return o
}

func (o GetGatewayStatsDeviceGatewayStatIfStatMapOutput) ToGetGatewayStatsDeviceGatewayStatIfStatMapOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatIfStatMapOutput {
	return o
}

func (o GetGatewayStatsDeviceGatewayStatIfStatMapOutput) MapIndex(k pulumi.StringInput) GetGatewayStatsDeviceGatewayStatIfStatOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) GetGatewayStatsDeviceGatewayStatIfStat {
		return vs[0].(map[string]GetGatewayStatsDeviceGatewayStatIfStat)[vs[1].(string)]
	}).(GetGatewayStatsDeviceGatewayStatIfStatOutput)
}

type GetGatewayStatsDeviceGatewayStatIfStatServpInfo struct {
	Asn         string  `pulumi:"asn"`
	City        string  `pulumi:"city"`
	CountryCode string  `pulumi:"countryCode"`
	Latitude    float64 `pulumi:"latitude"`
	Longitude   float64 `pulumi:"longitude"`
	Org         string  `pulumi:"org"`
	RegionCode  string  `pulumi:"regionCode"`
}

// GetGatewayStatsDeviceGatewayStatIfStatServpInfoInput is an input type that accepts GetGatewayStatsDeviceGatewayStatIfStatServpInfoArgs and GetGatewayStatsDeviceGatewayStatIfStatServpInfoOutput values.
// You can construct a concrete instance of `GetGatewayStatsDeviceGatewayStatIfStatServpInfoInput` via:
//
//	GetGatewayStatsDeviceGatewayStatIfStatServpInfoArgs{...}
type GetGatewayStatsDeviceGatewayStatIfStatServpInfoInput interface {
	pulumi.Input

	ToGetGatewayStatsDeviceGatewayStatIfStatServpInfoOutput() GetGatewayStatsDeviceGatewayStatIfStatServpInfoOutput
	ToGetGatewayStatsDeviceGatewayStatIfStatServpInfoOutputWithContext(context.Context) GetGatewayStatsDeviceGatewayStatIfStatServpInfoOutput
}

type GetGatewayStatsDeviceGatewayStatIfStatServpInfoArgs struct {
	Asn         pulumi.StringInput  `pulumi:"asn"`
	City        pulumi.StringInput  `pulumi:"city"`
	CountryCode pulumi.StringInput  `pulumi:"countryCode"`
	Latitude    pulumi.Float64Input `pulumi:"latitude"`
	Longitude   pulumi.Float64Input `pulumi:"longitude"`
	Org         pulumi.StringInput  `pulumi:"org"`
	RegionCode  pulumi.StringInput  `pulumi:"regionCode"`
}

func (GetGatewayStatsDeviceGatewayStatIfStatServpInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatIfStatServpInfo)(nil)).Elem()
}

func (i GetGatewayStatsDeviceGatewayStatIfStatServpInfoArgs) ToGetGatewayStatsDeviceGatewayStatIfStatServpInfoOutput() GetGatewayStatsDeviceGatewayStatIfStatServpInfoOutput {
	return i.ToGetGatewayStatsDeviceGatewayStatIfStatServpInfoOutputWithContext(context.Background())
}

func (i GetGatewayStatsDeviceGatewayStatIfStatServpInfoArgs) ToGetGatewayStatsDeviceGatewayStatIfStatServpInfoOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatIfStatServpInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayStatsDeviceGatewayStatIfStatServpInfoOutput)
}

type GetGatewayStatsDeviceGatewayStatIfStatServpInfoOutput struct{ *pulumi.OutputState }

func (GetGatewayStatsDeviceGatewayStatIfStatServpInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatIfStatServpInfo)(nil)).Elem()
}

func (o GetGatewayStatsDeviceGatewayStatIfStatServpInfoOutput) ToGetGatewayStatsDeviceGatewayStatIfStatServpInfoOutput() GetGatewayStatsDeviceGatewayStatIfStatServpInfoOutput {
	return o
}

func (o GetGatewayStatsDeviceGatewayStatIfStatServpInfoOutput) ToGetGatewayStatsDeviceGatewayStatIfStatServpInfoOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatIfStatServpInfoOutput {
	return o
}

func (o GetGatewayStatsDeviceGatewayStatIfStatServpInfoOutput) Asn() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatIfStatServpInfo) string { return v.Asn }).(pulumi.StringOutput)
}

func (o GetGatewayStatsDeviceGatewayStatIfStatServpInfoOutput) City() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatIfStatServpInfo) string { return v.City }).(pulumi.StringOutput)
}

func (o GetGatewayStatsDeviceGatewayStatIfStatServpInfoOutput) CountryCode() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatIfStatServpInfo) string { return v.CountryCode }).(pulumi.StringOutput)
}

func (o GetGatewayStatsDeviceGatewayStatIfStatServpInfoOutput) Latitude() pulumi.Float64Output {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatIfStatServpInfo) float64 { return v.Latitude }).(pulumi.Float64Output)
}

func (o GetGatewayStatsDeviceGatewayStatIfStatServpInfoOutput) Longitude() pulumi.Float64Output {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatIfStatServpInfo) float64 { return v.Longitude }).(pulumi.Float64Output)
}

func (o GetGatewayStatsDeviceGatewayStatIfStatServpInfoOutput) Org() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatIfStatServpInfo) string { return v.Org }).(pulumi.StringOutput)
}

func (o GetGatewayStatsDeviceGatewayStatIfStatServpInfoOutput) RegionCode() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatIfStatServpInfo) string { return v.RegionCode }).(pulumi.StringOutput)
}

type GetGatewayStatsDeviceGatewayStatIp2Stat struct {
	DhcpServer  string            `pulumi:"dhcpServer"`
	Dns         []string          `pulumi:"dns"`
	DnsSuffixes []string          `pulumi:"dnsSuffixes"`
	Gateway     string            `pulumi:"gateway"`
	Gateway6    string            `pulumi:"gateway6"`
	Ip          string            `pulumi:"ip"`
	Ip6         string            `pulumi:"ip6"`
	Ips         map[string]string `pulumi:"ips"`
	Netmask     string            `pulumi:"netmask"`
	Netmask6    string            `pulumi:"netmask6"`
}

// GetGatewayStatsDeviceGatewayStatIp2StatInput is an input type that accepts GetGatewayStatsDeviceGatewayStatIp2StatArgs and GetGatewayStatsDeviceGatewayStatIp2StatOutput values.
// You can construct a concrete instance of `GetGatewayStatsDeviceGatewayStatIp2StatInput` via:
//
//	GetGatewayStatsDeviceGatewayStatIp2StatArgs{...}
type GetGatewayStatsDeviceGatewayStatIp2StatInput interface {
	pulumi.Input

	ToGetGatewayStatsDeviceGatewayStatIp2StatOutput() GetGatewayStatsDeviceGatewayStatIp2StatOutput
	ToGetGatewayStatsDeviceGatewayStatIp2StatOutputWithContext(context.Context) GetGatewayStatsDeviceGatewayStatIp2StatOutput
}

type GetGatewayStatsDeviceGatewayStatIp2StatArgs struct {
	DhcpServer  pulumi.StringInput      `pulumi:"dhcpServer"`
	Dns         pulumi.StringArrayInput `pulumi:"dns"`
	DnsSuffixes pulumi.StringArrayInput `pulumi:"dnsSuffixes"`
	Gateway     pulumi.StringInput      `pulumi:"gateway"`
	Gateway6    pulumi.StringInput      `pulumi:"gateway6"`
	Ip          pulumi.StringInput      `pulumi:"ip"`
	Ip6         pulumi.StringInput      `pulumi:"ip6"`
	Ips         pulumi.StringMapInput   `pulumi:"ips"`
	Netmask     pulumi.StringInput      `pulumi:"netmask"`
	Netmask6    pulumi.StringInput      `pulumi:"netmask6"`
}

func (GetGatewayStatsDeviceGatewayStatIp2StatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatIp2Stat)(nil)).Elem()
}

func (i GetGatewayStatsDeviceGatewayStatIp2StatArgs) ToGetGatewayStatsDeviceGatewayStatIp2StatOutput() GetGatewayStatsDeviceGatewayStatIp2StatOutput {
	return i.ToGetGatewayStatsDeviceGatewayStatIp2StatOutputWithContext(context.Background())
}

func (i GetGatewayStatsDeviceGatewayStatIp2StatArgs) ToGetGatewayStatsDeviceGatewayStatIp2StatOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatIp2StatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayStatsDeviceGatewayStatIp2StatOutput)
}

type GetGatewayStatsDeviceGatewayStatIp2StatOutput struct{ *pulumi.OutputState }

func (GetGatewayStatsDeviceGatewayStatIp2StatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatIp2Stat)(nil)).Elem()
}

func (o GetGatewayStatsDeviceGatewayStatIp2StatOutput) ToGetGatewayStatsDeviceGatewayStatIp2StatOutput() GetGatewayStatsDeviceGatewayStatIp2StatOutput {
	return o
}

func (o GetGatewayStatsDeviceGatewayStatIp2StatOutput) ToGetGatewayStatsDeviceGatewayStatIp2StatOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatIp2StatOutput {
	return o
}

func (o GetGatewayStatsDeviceGatewayStatIp2StatOutput) DhcpServer() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatIp2Stat) string { return v.DhcpServer }).(pulumi.StringOutput)
}

func (o GetGatewayStatsDeviceGatewayStatIp2StatOutput) Dns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatIp2Stat) []string { return v.Dns }).(pulumi.StringArrayOutput)
}

func (o GetGatewayStatsDeviceGatewayStatIp2StatOutput) DnsSuffixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatIp2Stat) []string { return v.DnsSuffixes }).(pulumi.StringArrayOutput)
}

func (o GetGatewayStatsDeviceGatewayStatIp2StatOutput) Gateway() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatIp2Stat) string { return v.Gateway }).(pulumi.StringOutput)
}

func (o GetGatewayStatsDeviceGatewayStatIp2StatOutput) Gateway6() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatIp2Stat) string { return v.Gateway6 }).(pulumi.StringOutput)
}

func (o GetGatewayStatsDeviceGatewayStatIp2StatOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatIp2Stat) string { return v.Ip }).(pulumi.StringOutput)
}

func (o GetGatewayStatsDeviceGatewayStatIp2StatOutput) Ip6() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatIp2Stat) string { return v.Ip6 }).(pulumi.StringOutput)
}

func (o GetGatewayStatsDeviceGatewayStatIp2StatOutput) Ips() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatIp2Stat) map[string]string { return v.Ips }).(pulumi.StringMapOutput)
}

func (o GetGatewayStatsDeviceGatewayStatIp2StatOutput) Netmask() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatIp2Stat) string { return v.Netmask }).(pulumi.StringOutput)
}

func (o GetGatewayStatsDeviceGatewayStatIp2StatOutput) Netmask6() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatIp2Stat) string { return v.Netmask6 }).(pulumi.StringOutput)
}

type GetGatewayStatsDeviceGatewayStatIpStat struct {
	DhcpServer  string            `pulumi:"dhcpServer"`
	Dns         []string          `pulumi:"dns"`
	DnsSuffixes []string          `pulumi:"dnsSuffixes"`
	Gateway     string            `pulumi:"gateway"`
	Gateway6    string            `pulumi:"gateway6"`
	Ip          string            `pulumi:"ip"`
	Ip6         string            `pulumi:"ip6"`
	Ips         map[string]string `pulumi:"ips"`
	Netmask     string            `pulumi:"netmask"`
	Netmask6    string            `pulumi:"netmask6"`
}

// GetGatewayStatsDeviceGatewayStatIpStatInput is an input type that accepts GetGatewayStatsDeviceGatewayStatIpStatArgs and GetGatewayStatsDeviceGatewayStatIpStatOutput values.
// You can construct a concrete instance of `GetGatewayStatsDeviceGatewayStatIpStatInput` via:
//
//	GetGatewayStatsDeviceGatewayStatIpStatArgs{...}
type GetGatewayStatsDeviceGatewayStatIpStatInput interface {
	pulumi.Input

	ToGetGatewayStatsDeviceGatewayStatIpStatOutput() GetGatewayStatsDeviceGatewayStatIpStatOutput
	ToGetGatewayStatsDeviceGatewayStatIpStatOutputWithContext(context.Context) GetGatewayStatsDeviceGatewayStatIpStatOutput
}

type GetGatewayStatsDeviceGatewayStatIpStatArgs struct {
	DhcpServer  pulumi.StringInput      `pulumi:"dhcpServer"`
	Dns         pulumi.StringArrayInput `pulumi:"dns"`
	DnsSuffixes pulumi.StringArrayInput `pulumi:"dnsSuffixes"`
	Gateway     pulumi.StringInput      `pulumi:"gateway"`
	Gateway6    pulumi.StringInput      `pulumi:"gateway6"`
	Ip          pulumi.StringInput      `pulumi:"ip"`
	Ip6         pulumi.StringInput      `pulumi:"ip6"`
	Ips         pulumi.StringMapInput   `pulumi:"ips"`
	Netmask     pulumi.StringInput      `pulumi:"netmask"`
	Netmask6    pulumi.StringInput      `pulumi:"netmask6"`
}

func (GetGatewayStatsDeviceGatewayStatIpStatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatIpStat)(nil)).Elem()
}

func (i GetGatewayStatsDeviceGatewayStatIpStatArgs) ToGetGatewayStatsDeviceGatewayStatIpStatOutput() GetGatewayStatsDeviceGatewayStatIpStatOutput {
	return i.ToGetGatewayStatsDeviceGatewayStatIpStatOutputWithContext(context.Background())
}

func (i GetGatewayStatsDeviceGatewayStatIpStatArgs) ToGetGatewayStatsDeviceGatewayStatIpStatOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatIpStatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayStatsDeviceGatewayStatIpStatOutput)
}

type GetGatewayStatsDeviceGatewayStatIpStatOutput struct{ *pulumi.OutputState }

func (GetGatewayStatsDeviceGatewayStatIpStatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatIpStat)(nil)).Elem()
}

func (o GetGatewayStatsDeviceGatewayStatIpStatOutput) ToGetGatewayStatsDeviceGatewayStatIpStatOutput() GetGatewayStatsDeviceGatewayStatIpStatOutput {
	return o
}

func (o GetGatewayStatsDeviceGatewayStatIpStatOutput) ToGetGatewayStatsDeviceGatewayStatIpStatOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatIpStatOutput {
	return o
}

func (o GetGatewayStatsDeviceGatewayStatIpStatOutput) DhcpServer() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatIpStat) string { return v.DhcpServer }).(pulumi.StringOutput)
}

func (o GetGatewayStatsDeviceGatewayStatIpStatOutput) Dns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatIpStat) []string { return v.Dns }).(pulumi.StringArrayOutput)
}

func (o GetGatewayStatsDeviceGatewayStatIpStatOutput) DnsSuffixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatIpStat) []string { return v.DnsSuffixes }).(pulumi.StringArrayOutput)
}

func (o GetGatewayStatsDeviceGatewayStatIpStatOutput) Gateway() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatIpStat) string { return v.Gateway }).(pulumi.StringOutput)
}

func (o GetGatewayStatsDeviceGatewayStatIpStatOutput) Gateway6() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatIpStat) string { return v.Gateway6 }).(pulumi.StringOutput)
}

func (o GetGatewayStatsDeviceGatewayStatIpStatOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatIpStat) string { return v.Ip }).(pulumi.StringOutput)
}

func (o GetGatewayStatsDeviceGatewayStatIpStatOutput) Ip6() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatIpStat) string { return v.Ip6 }).(pulumi.StringOutput)
}

func (o GetGatewayStatsDeviceGatewayStatIpStatOutput) Ips() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatIpStat) map[string]string { return v.Ips }).(pulumi.StringMapOutput)
}

func (o GetGatewayStatsDeviceGatewayStatIpStatOutput) Netmask() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatIpStat) string { return v.Netmask }).(pulumi.StringOutput)
}

func (o GetGatewayStatsDeviceGatewayStatIpStatOutput) Netmask6() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatIpStat) string { return v.Netmask6 }).(pulumi.StringOutput)
}

type GetGatewayStatsDeviceGatewayStatMemory2Stat struct {
	Usage float64 `pulumi:"usage"`
}

// GetGatewayStatsDeviceGatewayStatMemory2StatInput is an input type that accepts GetGatewayStatsDeviceGatewayStatMemory2StatArgs and GetGatewayStatsDeviceGatewayStatMemory2StatOutput values.
// You can construct a concrete instance of `GetGatewayStatsDeviceGatewayStatMemory2StatInput` via:
//
//	GetGatewayStatsDeviceGatewayStatMemory2StatArgs{...}
type GetGatewayStatsDeviceGatewayStatMemory2StatInput interface {
	pulumi.Input

	ToGetGatewayStatsDeviceGatewayStatMemory2StatOutput() GetGatewayStatsDeviceGatewayStatMemory2StatOutput
	ToGetGatewayStatsDeviceGatewayStatMemory2StatOutputWithContext(context.Context) GetGatewayStatsDeviceGatewayStatMemory2StatOutput
}

type GetGatewayStatsDeviceGatewayStatMemory2StatArgs struct {
	Usage pulumi.Float64Input `pulumi:"usage"`
}

func (GetGatewayStatsDeviceGatewayStatMemory2StatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatMemory2Stat)(nil)).Elem()
}

func (i GetGatewayStatsDeviceGatewayStatMemory2StatArgs) ToGetGatewayStatsDeviceGatewayStatMemory2StatOutput() GetGatewayStatsDeviceGatewayStatMemory2StatOutput {
	return i.ToGetGatewayStatsDeviceGatewayStatMemory2StatOutputWithContext(context.Background())
}

func (i GetGatewayStatsDeviceGatewayStatMemory2StatArgs) ToGetGatewayStatsDeviceGatewayStatMemory2StatOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatMemory2StatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayStatsDeviceGatewayStatMemory2StatOutput)
}

type GetGatewayStatsDeviceGatewayStatMemory2StatOutput struct{ *pulumi.OutputState }

func (GetGatewayStatsDeviceGatewayStatMemory2StatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatMemory2Stat)(nil)).Elem()
}

func (o GetGatewayStatsDeviceGatewayStatMemory2StatOutput) ToGetGatewayStatsDeviceGatewayStatMemory2StatOutput() GetGatewayStatsDeviceGatewayStatMemory2StatOutput {
	return o
}

func (o GetGatewayStatsDeviceGatewayStatMemory2StatOutput) ToGetGatewayStatsDeviceGatewayStatMemory2StatOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatMemory2StatOutput {
	return o
}

func (o GetGatewayStatsDeviceGatewayStatMemory2StatOutput) Usage() pulumi.Float64Output {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatMemory2Stat) float64 { return v.Usage }).(pulumi.Float64Output)
}

type GetGatewayStatsDeviceGatewayStatMemoryStat struct {
	Usage float64 `pulumi:"usage"`
}

// GetGatewayStatsDeviceGatewayStatMemoryStatInput is an input type that accepts GetGatewayStatsDeviceGatewayStatMemoryStatArgs and GetGatewayStatsDeviceGatewayStatMemoryStatOutput values.
// You can construct a concrete instance of `GetGatewayStatsDeviceGatewayStatMemoryStatInput` via:
//
//	GetGatewayStatsDeviceGatewayStatMemoryStatArgs{...}
type GetGatewayStatsDeviceGatewayStatMemoryStatInput interface {
	pulumi.Input

	ToGetGatewayStatsDeviceGatewayStatMemoryStatOutput() GetGatewayStatsDeviceGatewayStatMemoryStatOutput
	ToGetGatewayStatsDeviceGatewayStatMemoryStatOutputWithContext(context.Context) GetGatewayStatsDeviceGatewayStatMemoryStatOutput
}

type GetGatewayStatsDeviceGatewayStatMemoryStatArgs struct {
	Usage pulumi.Float64Input `pulumi:"usage"`
}

func (GetGatewayStatsDeviceGatewayStatMemoryStatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatMemoryStat)(nil)).Elem()
}

func (i GetGatewayStatsDeviceGatewayStatMemoryStatArgs) ToGetGatewayStatsDeviceGatewayStatMemoryStatOutput() GetGatewayStatsDeviceGatewayStatMemoryStatOutput {
	return i.ToGetGatewayStatsDeviceGatewayStatMemoryStatOutputWithContext(context.Background())
}

func (i GetGatewayStatsDeviceGatewayStatMemoryStatArgs) ToGetGatewayStatsDeviceGatewayStatMemoryStatOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatMemoryStatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayStatsDeviceGatewayStatMemoryStatOutput)
}

type GetGatewayStatsDeviceGatewayStatMemoryStatOutput struct{ *pulumi.OutputState }

func (GetGatewayStatsDeviceGatewayStatMemoryStatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatMemoryStat)(nil)).Elem()
}

func (o GetGatewayStatsDeviceGatewayStatMemoryStatOutput) ToGetGatewayStatsDeviceGatewayStatMemoryStatOutput() GetGatewayStatsDeviceGatewayStatMemoryStatOutput {
	return o
}

func (o GetGatewayStatsDeviceGatewayStatMemoryStatOutput) ToGetGatewayStatsDeviceGatewayStatMemoryStatOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatMemoryStatOutput {
	return o
}

func (o GetGatewayStatsDeviceGatewayStatMemoryStatOutput) Usage() pulumi.Float64Output {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatMemoryStat) float64 { return v.Usage }).(pulumi.Float64Output)
}

type GetGatewayStatsDeviceGatewayStatModule2Stat struct {
	BackupVersion string                                           `pulumi:"backupVersion"`
	BiosVersion   string                                           `pulumi:"biosVersion"`
	CpldVersion   string                                           `pulumi:"cpldVersion"`
	Fans          []GetGatewayStatsDeviceGatewayStatModule2StatFan `pulumi:"fans"`
	FpgaVersion   string                                           `pulumi:"fpgaVersion"`
	// Last seen timestamp
	LastSeen          float64                                                  `pulumi:"lastSeen"`
	Locating          bool                                                     `pulumi:"locating"`
	Mac               string                                                   `pulumi:"mac"`
	Model             string                                                   `pulumi:"model"`
	OpticsCpldVersion string                                                   `pulumi:"opticsCpldVersion"`
	PendingVersion    string                                                   `pulumi:"pendingVersion"`
	Poe               GetGatewayStatsDeviceGatewayStatModule2StatPoe           `pulumi:"poe"`
	PoeVersion        string                                                   `pulumi:"poeVersion"`
	PowerCpldVersion  string                                                   `pulumi:"powerCpldVersion"`
	Psuses            []GetGatewayStatsDeviceGatewayStatModule2StatPsus        `pulumi:"psuses"`
	ReFpgaVersion     string                                                   `pulumi:"reFpgaVersion"`
	RecoveryVersion   string                                                   `pulumi:"recoveryVersion"`
	Serial            string                                                   `pulumi:"serial"`
	Status            string                                                   `pulumi:"status"`
	Temperatures      []GetGatewayStatsDeviceGatewayStatModule2StatTemperature `pulumi:"temperatures"`
	TmcFpgaVersion    string                                                   `pulumi:"tmcFpgaVersion"`
	UbootVersion      string                                                   `pulumi:"ubootVersion"`
	Uptime            int                                                      `pulumi:"uptime"`
	VcLinks           []GetGatewayStatsDeviceGatewayStatModule2StatVcLink      `pulumi:"vcLinks"`
	VcMode            string                                                   `pulumi:"vcMode"`
	// enum: `master`, `backup`, `linecard`
	VcRole  string `pulumi:"vcRole"`
	VcState string `pulumi:"vcState"`
	Version string `pulumi:"version"`
}

// GetGatewayStatsDeviceGatewayStatModule2StatInput is an input type that accepts GetGatewayStatsDeviceGatewayStatModule2StatArgs and GetGatewayStatsDeviceGatewayStatModule2StatOutput values.
// You can construct a concrete instance of `GetGatewayStatsDeviceGatewayStatModule2StatInput` via:
//
//	GetGatewayStatsDeviceGatewayStatModule2StatArgs{...}
type GetGatewayStatsDeviceGatewayStatModule2StatInput interface {
	pulumi.Input

	ToGetGatewayStatsDeviceGatewayStatModule2StatOutput() GetGatewayStatsDeviceGatewayStatModule2StatOutput
	ToGetGatewayStatsDeviceGatewayStatModule2StatOutputWithContext(context.Context) GetGatewayStatsDeviceGatewayStatModule2StatOutput
}

type GetGatewayStatsDeviceGatewayStatModule2StatArgs struct {
	BackupVersion pulumi.StringInput                                       `pulumi:"backupVersion"`
	BiosVersion   pulumi.StringInput                                       `pulumi:"biosVersion"`
	CpldVersion   pulumi.StringInput                                       `pulumi:"cpldVersion"`
	Fans          GetGatewayStatsDeviceGatewayStatModule2StatFanArrayInput `pulumi:"fans"`
	FpgaVersion   pulumi.StringInput                                       `pulumi:"fpgaVersion"`
	// Last seen timestamp
	LastSeen          pulumi.Float64Input                                              `pulumi:"lastSeen"`
	Locating          pulumi.BoolInput                                                 `pulumi:"locating"`
	Mac               pulumi.StringInput                                               `pulumi:"mac"`
	Model             pulumi.StringInput                                               `pulumi:"model"`
	OpticsCpldVersion pulumi.StringInput                                               `pulumi:"opticsCpldVersion"`
	PendingVersion    pulumi.StringInput                                               `pulumi:"pendingVersion"`
	Poe               GetGatewayStatsDeviceGatewayStatModule2StatPoeInput              `pulumi:"poe"`
	PoeVersion        pulumi.StringInput                                               `pulumi:"poeVersion"`
	PowerCpldVersion  pulumi.StringInput                                               `pulumi:"powerCpldVersion"`
	Psuses            GetGatewayStatsDeviceGatewayStatModule2StatPsusArrayInput        `pulumi:"psuses"`
	ReFpgaVersion     pulumi.StringInput                                               `pulumi:"reFpgaVersion"`
	RecoveryVersion   pulumi.StringInput                                               `pulumi:"recoveryVersion"`
	Serial            pulumi.StringInput                                               `pulumi:"serial"`
	Status            pulumi.StringInput                                               `pulumi:"status"`
	Temperatures      GetGatewayStatsDeviceGatewayStatModule2StatTemperatureArrayInput `pulumi:"temperatures"`
	TmcFpgaVersion    pulumi.StringInput                                               `pulumi:"tmcFpgaVersion"`
	UbootVersion      pulumi.StringInput                                               `pulumi:"ubootVersion"`
	Uptime            pulumi.IntInput                                                  `pulumi:"uptime"`
	VcLinks           GetGatewayStatsDeviceGatewayStatModule2StatVcLinkArrayInput      `pulumi:"vcLinks"`
	VcMode            pulumi.StringInput                                               `pulumi:"vcMode"`
	// enum: `master`, `backup`, `linecard`
	VcRole  pulumi.StringInput `pulumi:"vcRole"`
	VcState pulumi.StringInput `pulumi:"vcState"`
	Version pulumi.StringInput `pulumi:"version"`
}

func (GetGatewayStatsDeviceGatewayStatModule2StatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatModule2Stat)(nil)).Elem()
}

func (i GetGatewayStatsDeviceGatewayStatModule2StatArgs) ToGetGatewayStatsDeviceGatewayStatModule2StatOutput() GetGatewayStatsDeviceGatewayStatModule2StatOutput {
	return i.ToGetGatewayStatsDeviceGatewayStatModule2StatOutputWithContext(context.Background())
}

func (i GetGatewayStatsDeviceGatewayStatModule2StatArgs) ToGetGatewayStatsDeviceGatewayStatModule2StatOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatModule2StatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayStatsDeviceGatewayStatModule2StatOutput)
}

// GetGatewayStatsDeviceGatewayStatModule2StatArrayInput is an input type that accepts GetGatewayStatsDeviceGatewayStatModule2StatArray and GetGatewayStatsDeviceGatewayStatModule2StatArrayOutput values.
// You can construct a concrete instance of `GetGatewayStatsDeviceGatewayStatModule2StatArrayInput` via:
//
//	GetGatewayStatsDeviceGatewayStatModule2StatArray{ GetGatewayStatsDeviceGatewayStatModule2StatArgs{...} }
type GetGatewayStatsDeviceGatewayStatModule2StatArrayInput interface {
	pulumi.Input

	ToGetGatewayStatsDeviceGatewayStatModule2StatArrayOutput() GetGatewayStatsDeviceGatewayStatModule2StatArrayOutput
	ToGetGatewayStatsDeviceGatewayStatModule2StatArrayOutputWithContext(context.Context) GetGatewayStatsDeviceGatewayStatModule2StatArrayOutput
}

type GetGatewayStatsDeviceGatewayStatModule2StatArray []GetGatewayStatsDeviceGatewayStatModule2StatInput

func (GetGatewayStatsDeviceGatewayStatModule2StatArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayStatsDeviceGatewayStatModule2Stat)(nil)).Elem()
}

func (i GetGatewayStatsDeviceGatewayStatModule2StatArray) ToGetGatewayStatsDeviceGatewayStatModule2StatArrayOutput() GetGatewayStatsDeviceGatewayStatModule2StatArrayOutput {
	return i.ToGetGatewayStatsDeviceGatewayStatModule2StatArrayOutputWithContext(context.Background())
}

func (i GetGatewayStatsDeviceGatewayStatModule2StatArray) ToGetGatewayStatsDeviceGatewayStatModule2StatArrayOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatModule2StatArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayStatsDeviceGatewayStatModule2StatArrayOutput)
}

type GetGatewayStatsDeviceGatewayStatModule2StatOutput struct{ *pulumi.OutputState }

func (GetGatewayStatsDeviceGatewayStatModule2StatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatModule2Stat)(nil)).Elem()
}

func (o GetGatewayStatsDeviceGatewayStatModule2StatOutput) ToGetGatewayStatsDeviceGatewayStatModule2StatOutput() GetGatewayStatsDeviceGatewayStatModule2StatOutput {
	return o
}

func (o GetGatewayStatsDeviceGatewayStatModule2StatOutput) ToGetGatewayStatsDeviceGatewayStatModule2StatOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatModule2StatOutput {
	return o
}

func (o GetGatewayStatsDeviceGatewayStatModule2StatOutput) BackupVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatModule2Stat) string { return v.BackupVersion }).(pulumi.StringOutput)
}

func (o GetGatewayStatsDeviceGatewayStatModule2StatOutput) BiosVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatModule2Stat) string { return v.BiosVersion }).(pulumi.StringOutput)
}

func (o GetGatewayStatsDeviceGatewayStatModule2StatOutput) CpldVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatModule2Stat) string { return v.CpldVersion }).(pulumi.StringOutput)
}

func (o GetGatewayStatsDeviceGatewayStatModule2StatOutput) Fans() GetGatewayStatsDeviceGatewayStatModule2StatFanArrayOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatModule2Stat) []GetGatewayStatsDeviceGatewayStatModule2StatFan {
		return v.Fans
	}).(GetGatewayStatsDeviceGatewayStatModule2StatFanArrayOutput)
}

func (o GetGatewayStatsDeviceGatewayStatModule2StatOutput) FpgaVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatModule2Stat) string { return v.FpgaVersion }).(pulumi.StringOutput)
}

// Last seen timestamp
func (o GetGatewayStatsDeviceGatewayStatModule2StatOutput) LastSeen() pulumi.Float64Output {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatModule2Stat) float64 { return v.LastSeen }).(pulumi.Float64Output)
}

func (o GetGatewayStatsDeviceGatewayStatModule2StatOutput) Locating() pulumi.BoolOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatModule2Stat) bool { return v.Locating }).(pulumi.BoolOutput)
}

func (o GetGatewayStatsDeviceGatewayStatModule2StatOutput) Mac() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatModule2Stat) string { return v.Mac }).(pulumi.StringOutput)
}

func (o GetGatewayStatsDeviceGatewayStatModule2StatOutput) Model() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatModule2Stat) string { return v.Model }).(pulumi.StringOutput)
}

func (o GetGatewayStatsDeviceGatewayStatModule2StatOutput) OpticsCpldVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatModule2Stat) string { return v.OpticsCpldVersion }).(pulumi.StringOutput)
}

func (o GetGatewayStatsDeviceGatewayStatModule2StatOutput) PendingVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatModule2Stat) string { return v.PendingVersion }).(pulumi.StringOutput)
}

func (o GetGatewayStatsDeviceGatewayStatModule2StatOutput) Poe() GetGatewayStatsDeviceGatewayStatModule2StatPoeOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatModule2Stat) GetGatewayStatsDeviceGatewayStatModule2StatPoe {
		return v.Poe
	}).(GetGatewayStatsDeviceGatewayStatModule2StatPoeOutput)
}

func (o GetGatewayStatsDeviceGatewayStatModule2StatOutput) PoeVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatModule2Stat) string { return v.PoeVersion }).(pulumi.StringOutput)
}

func (o GetGatewayStatsDeviceGatewayStatModule2StatOutput) PowerCpldVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatModule2Stat) string { return v.PowerCpldVersion }).(pulumi.StringOutput)
}

func (o GetGatewayStatsDeviceGatewayStatModule2StatOutput) Psuses() GetGatewayStatsDeviceGatewayStatModule2StatPsusArrayOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatModule2Stat) []GetGatewayStatsDeviceGatewayStatModule2StatPsus {
		return v.Psuses
	}).(GetGatewayStatsDeviceGatewayStatModule2StatPsusArrayOutput)
}

func (o GetGatewayStatsDeviceGatewayStatModule2StatOutput) ReFpgaVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatModule2Stat) string { return v.ReFpgaVersion }).(pulumi.StringOutput)
}

func (o GetGatewayStatsDeviceGatewayStatModule2StatOutput) RecoveryVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatModule2Stat) string { return v.RecoveryVersion }).(pulumi.StringOutput)
}

func (o GetGatewayStatsDeviceGatewayStatModule2StatOutput) Serial() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatModule2Stat) string { return v.Serial }).(pulumi.StringOutput)
}

func (o GetGatewayStatsDeviceGatewayStatModule2StatOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatModule2Stat) string { return v.Status }).(pulumi.StringOutput)
}

func (o GetGatewayStatsDeviceGatewayStatModule2StatOutput) Temperatures() GetGatewayStatsDeviceGatewayStatModule2StatTemperatureArrayOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatModule2Stat) []GetGatewayStatsDeviceGatewayStatModule2StatTemperature {
		return v.Temperatures
	}).(GetGatewayStatsDeviceGatewayStatModule2StatTemperatureArrayOutput)
}

func (o GetGatewayStatsDeviceGatewayStatModule2StatOutput) TmcFpgaVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatModule2Stat) string { return v.TmcFpgaVersion }).(pulumi.StringOutput)
}

func (o GetGatewayStatsDeviceGatewayStatModule2StatOutput) UbootVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatModule2Stat) string { return v.UbootVersion }).(pulumi.StringOutput)
}

func (o GetGatewayStatsDeviceGatewayStatModule2StatOutput) Uptime() pulumi.IntOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatModule2Stat) int { return v.Uptime }).(pulumi.IntOutput)
}

func (o GetGatewayStatsDeviceGatewayStatModule2StatOutput) VcLinks() GetGatewayStatsDeviceGatewayStatModule2StatVcLinkArrayOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatModule2Stat) []GetGatewayStatsDeviceGatewayStatModule2StatVcLink {
		return v.VcLinks
	}).(GetGatewayStatsDeviceGatewayStatModule2StatVcLinkArrayOutput)
}

func (o GetGatewayStatsDeviceGatewayStatModule2StatOutput) VcMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatModule2Stat) string { return v.VcMode }).(pulumi.StringOutput)
}

// enum: `master`, `backup`, `linecard`
func (o GetGatewayStatsDeviceGatewayStatModule2StatOutput) VcRole() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatModule2Stat) string { return v.VcRole }).(pulumi.StringOutput)
}

func (o GetGatewayStatsDeviceGatewayStatModule2StatOutput) VcState() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatModule2Stat) string { return v.VcState }).(pulumi.StringOutput)
}

func (o GetGatewayStatsDeviceGatewayStatModule2StatOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatModule2Stat) string { return v.Version }).(pulumi.StringOutput)
}

type GetGatewayStatsDeviceGatewayStatModule2StatArrayOutput struct{ *pulumi.OutputState }

func (GetGatewayStatsDeviceGatewayStatModule2StatArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayStatsDeviceGatewayStatModule2Stat)(nil)).Elem()
}

func (o GetGatewayStatsDeviceGatewayStatModule2StatArrayOutput) ToGetGatewayStatsDeviceGatewayStatModule2StatArrayOutput() GetGatewayStatsDeviceGatewayStatModule2StatArrayOutput {
	return o
}

func (o GetGatewayStatsDeviceGatewayStatModule2StatArrayOutput) ToGetGatewayStatsDeviceGatewayStatModule2StatArrayOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatModule2StatArrayOutput {
	return o
}

func (o GetGatewayStatsDeviceGatewayStatModule2StatArrayOutput) Index(i pulumi.IntInput) GetGatewayStatsDeviceGatewayStatModule2StatOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGatewayStatsDeviceGatewayStatModule2Stat {
		return vs[0].([]GetGatewayStatsDeviceGatewayStatModule2Stat)[vs[1].(int)]
	}).(GetGatewayStatsDeviceGatewayStatModule2StatOutput)
}

type GetGatewayStatsDeviceGatewayStatModule2StatFan struct {
	Airflow string `pulumi:"airflow"`
	Name    string `pulumi:"name"`
	Status  string `pulumi:"status"`
}

// GetGatewayStatsDeviceGatewayStatModule2StatFanInput is an input type that accepts GetGatewayStatsDeviceGatewayStatModule2StatFanArgs and GetGatewayStatsDeviceGatewayStatModule2StatFanOutput values.
// You can construct a concrete instance of `GetGatewayStatsDeviceGatewayStatModule2StatFanInput` via:
//
//	GetGatewayStatsDeviceGatewayStatModule2StatFanArgs{...}
type GetGatewayStatsDeviceGatewayStatModule2StatFanInput interface {
	pulumi.Input

	ToGetGatewayStatsDeviceGatewayStatModule2StatFanOutput() GetGatewayStatsDeviceGatewayStatModule2StatFanOutput
	ToGetGatewayStatsDeviceGatewayStatModule2StatFanOutputWithContext(context.Context) GetGatewayStatsDeviceGatewayStatModule2StatFanOutput
}

type GetGatewayStatsDeviceGatewayStatModule2StatFanArgs struct {
	Airflow pulumi.StringInput `pulumi:"airflow"`
	Name    pulumi.StringInput `pulumi:"name"`
	Status  pulumi.StringInput `pulumi:"status"`
}

func (GetGatewayStatsDeviceGatewayStatModule2StatFanArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatModule2StatFan)(nil)).Elem()
}

func (i GetGatewayStatsDeviceGatewayStatModule2StatFanArgs) ToGetGatewayStatsDeviceGatewayStatModule2StatFanOutput() GetGatewayStatsDeviceGatewayStatModule2StatFanOutput {
	return i.ToGetGatewayStatsDeviceGatewayStatModule2StatFanOutputWithContext(context.Background())
}

func (i GetGatewayStatsDeviceGatewayStatModule2StatFanArgs) ToGetGatewayStatsDeviceGatewayStatModule2StatFanOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatModule2StatFanOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayStatsDeviceGatewayStatModule2StatFanOutput)
}

// GetGatewayStatsDeviceGatewayStatModule2StatFanArrayInput is an input type that accepts GetGatewayStatsDeviceGatewayStatModule2StatFanArray and GetGatewayStatsDeviceGatewayStatModule2StatFanArrayOutput values.
// You can construct a concrete instance of `GetGatewayStatsDeviceGatewayStatModule2StatFanArrayInput` via:
//
//	GetGatewayStatsDeviceGatewayStatModule2StatFanArray{ GetGatewayStatsDeviceGatewayStatModule2StatFanArgs{...} }
type GetGatewayStatsDeviceGatewayStatModule2StatFanArrayInput interface {
	pulumi.Input

	ToGetGatewayStatsDeviceGatewayStatModule2StatFanArrayOutput() GetGatewayStatsDeviceGatewayStatModule2StatFanArrayOutput
	ToGetGatewayStatsDeviceGatewayStatModule2StatFanArrayOutputWithContext(context.Context) GetGatewayStatsDeviceGatewayStatModule2StatFanArrayOutput
}

type GetGatewayStatsDeviceGatewayStatModule2StatFanArray []GetGatewayStatsDeviceGatewayStatModule2StatFanInput

func (GetGatewayStatsDeviceGatewayStatModule2StatFanArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayStatsDeviceGatewayStatModule2StatFan)(nil)).Elem()
}

func (i GetGatewayStatsDeviceGatewayStatModule2StatFanArray) ToGetGatewayStatsDeviceGatewayStatModule2StatFanArrayOutput() GetGatewayStatsDeviceGatewayStatModule2StatFanArrayOutput {
	return i.ToGetGatewayStatsDeviceGatewayStatModule2StatFanArrayOutputWithContext(context.Background())
}

func (i GetGatewayStatsDeviceGatewayStatModule2StatFanArray) ToGetGatewayStatsDeviceGatewayStatModule2StatFanArrayOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatModule2StatFanArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayStatsDeviceGatewayStatModule2StatFanArrayOutput)
}

type GetGatewayStatsDeviceGatewayStatModule2StatFanOutput struct{ *pulumi.OutputState }

func (GetGatewayStatsDeviceGatewayStatModule2StatFanOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatModule2StatFan)(nil)).Elem()
}

func (o GetGatewayStatsDeviceGatewayStatModule2StatFanOutput) ToGetGatewayStatsDeviceGatewayStatModule2StatFanOutput() GetGatewayStatsDeviceGatewayStatModule2StatFanOutput {
	return o
}

func (o GetGatewayStatsDeviceGatewayStatModule2StatFanOutput) ToGetGatewayStatsDeviceGatewayStatModule2StatFanOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatModule2StatFanOutput {
	return o
}

func (o GetGatewayStatsDeviceGatewayStatModule2StatFanOutput) Airflow() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatModule2StatFan) string { return v.Airflow }).(pulumi.StringOutput)
}

func (o GetGatewayStatsDeviceGatewayStatModule2StatFanOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatModule2StatFan) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetGatewayStatsDeviceGatewayStatModule2StatFanOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatModule2StatFan) string { return v.Status }).(pulumi.StringOutput)
}

type GetGatewayStatsDeviceGatewayStatModule2StatFanArrayOutput struct{ *pulumi.OutputState }

func (GetGatewayStatsDeviceGatewayStatModule2StatFanArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayStatsDeviceGatewayStatModule2StatFan)(nil)).Elem()
}

func (o GetGatewayStatsDeviceGatewayStatModule2StatFanArrayOutput) ToGetGatewayStatsDeviceGatewayStatModule2StatFanArrayOutput() GetGatewayStatsDeviceGatewayStatModule2StatFanArrayOutput {
	return o
}

func (o GetGatewayStatsDeviceGatewayStatModule2StatFanArrayOutput) ToGetGatewayStatsDeviceGatewayStatModule2StatFanArrayOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatModule2StatFanArrayOutput {
	return o
}

func (o GetGatewayStatsDeviceGatewayStatModule2StatFanArrayOutput) Index(i pulumi.IntInput) GetGatewayStatsDeviceGatewayStatModule2StatFanOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGatewayStatsDeviceGatewayStatModule2StatFan {
		return vs[0].([]GetGatewayStatsDeviceGatewayStatModule2StatFan)[vs[1].(int)]
	}).(GetGatewayStatsDeviceGatewayStatModule2StatFanOutput)
}

type GetGatewayStatsDeviceGatewayStatModule2StatPoe struct {
	MaxPower  float64 `pulumi:"maxPower"`
	PowerDraw float64 `pulumi:"powerDraw"`
}

// GetGatewayStatsDeviceGatewayStatModule2StatPoeInput is an input type that accepts GetGatewayStatsDeviceGatewayStatModule2StatPoeArgs and GetGatewayStatsDeviceGatewayStatModule2StatPoeOutput values.
// You can construct a concrete instance of `GetGatewayStatsDeviceGatewayStatModule2StatPoeInput` via:
//
//	GetGatewayStatsDeviceGatewayStatModule2StatPoeArgs{...}
type GetGatewayStatsDeviceGatewayStatModule2StatPoeInput interface {
	pulumi.Input

	ToGetGatewayStatsDeviceGatewayStatModule2StatPoeOutput() GetGatewayStatsDeviceGatewayStatModule2StatPoeOutput
	ToGetGatewayStatsDeviceGatewayStatModule2StatPoeOutputWithContext(context.Context) GetGatewayStatsDeviceGatewayStatModule2StatPoeOutput
}

type GetGatewayStatsDeviceGatewayStatModule2StatPoeArgs struct {
	MaxPower  pulumi.Float64Input `pulumi:"maxPower"`
	PowerDraw pulumi.Float64Input `pulumi:"powerDraw"`
}

func (GetGatewayStatsDeviceGatewayStatModule2StatPoeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatModule2StatPoe)(nil)).Elem()
}

func (i GetGatewayStatsDeviceGatewayStatModule2StatPoeArgs) ToGetGatewayStatsDeviceGatewayStatModule2StatPoeOutput() GetGatewayStatsDeviceGatewayStatModule2StatPoeOutput {
	return i.ToGetGatewayStatsDeviceGatewayStatModule2StatPoeOutputWithContext(context.Background())
}

func (i GetGatewayStatsDeviceGatewayStatModule2StatPoeArgs) ToGetGatewayStatsDeviceGatewayStatModule2StatPoeOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatModule2StatPoeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayStatsDeviceGatewayStatModule2StatPoeOutput)
}

type GetGatewayStatsDeviceGatewayStatModule2StatPoeOutput struct{ *pulumi.OutputState }

func (GetGatewayStatsDeviceGatewayStatModule2StatPoeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatModule2StatPoe)(nil)).Elem()
}

func (o GetGatewayStatsDeviceGatewayStatModule2StatPoeOutput) ToGetGatewayStatsDeviceGatewayStatModule2StatPoeOutput() GetGatewayStatsDeviceGatewayStatModule2StatPoeOutput {
	return o
}

func (o GetGatewayStatsDeviceGatewayStatModule2StatPoeOutput) ToGetGatewayStatsDeviceGatewayStatModule2StatPoeOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatModule2StatPoeOutput {
	return o
}

func (o GetGatewayStatsDeviceGatewayStatModule2StatPoeOutput) MaxPower() pulumi.Float64Output {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatModule2StatPoe) float64 { return v.MaxPower }).(pulumi.Float64Output)
}

func (o GetGatewayStatsDeviceGatewayStatModule2StatPoeOutput) PowerDraw() pulumi.Float64Output {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatModule2StatPoe) float64 { return v.PowerDraw }).(pulumi.Float64Output)
}

type GetGatewayStatsDeviceGatewayStatModule2StatPsus struct {
	Name   string `pulumi:"name"`
	Status string `pulumi:"status"`
}

// GetGatewayStatsDeviceGatewayStatModule2StatPsusInput is an input type that accepts GetGatewayStatsDeviceGatewayStatModule2StatPsusArgs and GetGatewayStatsDeviceGatewayStatModule2StatPsusOutput values.
// You can construct a concrete instance of `GetGatewayStatsDeviceGatewayStatModule2StatPsusInput` via:
//
//	GetGatewayStatsDeviceGatewayStatModule2StatPsusArgs{...}
type GetGatewayStatsDeviceGatewayStatModule2StatPsusInput interface {
	pulumi.Input

	ToGetGatewayStatsDeviceGatewayStatModule2StatPsusOutput() GetGatewayStatsDeviceGatewayStatModule2StatPsusOutput
	ToGetGatewayStatsDeviceGatewayStatModule2StatPsusOutputWithContext(context.Context) GetGatewayStatsDeviceGatewayStatModule2StatPsusOutput
}

type GetGatewayStatsDeviceGatewayStatModule2StatPsusArgs struct {
	Name   pulumi.StringInput `pulumi:"name"`
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetGatewayStatsDeviceGatewayStatModule2StatPsusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatModule2StatPsus)(nil)).Elem()
}

func (i GetGatewayStatsDeviceGatewayStatModule2StatPsusArgs) ToGetGatewayStatsDeviceGatewayStatModule2StatPsusOutput() GetGatewayStatsDeviceGatewayStatModule2StatPsusOutput {
	return i.ToGetGatewayStatsDeviceGatewayStatModule2StatPsusOutputWithContext(context.Background())
}

func (i GetGatewayStatsDeviceGatewayStatModule2StatPsusArgs) ToGetGatewayStatsDeviceGatewayStatModule2StatPsusOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatModule2StatPsusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayStatsDeviceGatewayStatModule2StatPsusOutput)
}

// GetGatewayStatsDeviceGatewayStatModule2StatPsusArrayInput is an input type that accepts GetGatewayStatsDeviceGatewayStatModule2StatPsusArray and GetGatewayStatsDeviceGatewayStatModule2StatPsusArrayOutput values.
// You can construct a concrete instance of `GetGatewayStatsDeviceGatewayStatModule2StatPsusArrayInput` via:
//
//	GetGatewayStatsDeviceGatewayStatModule2StatPsusArray{ GetGatewayStatsDeviceGatewayStatModule2StatPsusArgs{...} }
type GetGatewayStatsDeviceGatewayStatModule2StatPsusArrayInput interface {
	pulumi.Input

	ToGetGatewayStatsDeviceGatewayStatModule2StatPsusArrayOutput() GetGatewayStatsDeviceGatewayStatModule2StatPsusArrayOutput
	ToGetGatewayStatsDeviceGatewayStatModule2StatPsusArrayOutputWithContext(context.Context) GetGatewayStatsDeviceGatewayStatModule2StatPsusArrayOutput
}

type GetGatewayStatsDeviceGatewayStatModule2StatPsusArray []GetGatewayStatsDeviceGatewayStatModule2StatPsusInput

func (GetGatewayStatsDeviceGatewayStatModule2StatPsusArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayStatsDeviceGatewayStatModule2StatPsus)(nil)).Elem()
}

func (i GetGatewayStatsDeviceGatewayStatModule2StatPsusArray) ToGetGatewayStatsDeviceGatewayStatModule2StatPsusArrayOutput() GetGatewayStatsDeviceGatewayStatModule2StatPsusArrayOutput {
	return i.ToGetGatewayStatsDeviceGatewayStatModule2StatPsusArrayOutputWithContext(context.Background())
}

func (i GetGatewayStatsDeviceGatewayStatModule2StatPsusArray) ToGetGatewayStatsDeviceGatewayStatModule2StatPsusArrayOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatModule2StatPsusArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayStatsDeviceGatewayStatModule2StatPsusArrayOutput)
}

type GetGatewayStatsDeviceGatewayStatModule2StatPsusOutput struct{ *pulumi.OutputState }

func (GetGatewayStatsDeviceGatewayStatModule2StatPsusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatModule2StatPsus)(nil)).Elem()
}

func (o GetGatewayStatsDeviceGatewayStatModule2StatPsusOutput) ToGetGatewayStatsDeviceGatewayStatModule2StatPsusOutput() GetGatewayStatsDeviceGatewayStatModule2StatPsusOutput {
	return o
}

func (o GetGatewayStatsDeviceGatewayStatModule2StatPsusOutput) ToGetGatewayStatsDeviceGatewayStatModule2StatPsusOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatModule2StatPsusOutput {
	return o
}

func (o GetGatewayStatsDeviceGatewayStatModule2StatPsusOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatModule2StatPsus) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetGatewayStatsDeviceGatewayStatModule2StatPsusOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatModule2StatPsus) string { return v.Status }).(pulumi.StringOutput)
}

type GetGatewayStatsDeviceGatewayStatModule2StatPsusArrayOutput struct{ *pulumi.OutputState }

func (GetGatewayStatsDeviceGatewayStatModule2StatPsusArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayStatsDeviceGatewayStatModule2StatPsus)(nil)).Elem()
}

func (o GetGatewayStatsDeviceGatewayStatModule2StatPsusArrayOutput) ToGetGatewayStatsDeviceGatewayStatModule2StatPsusArrayOutput() GetGatewayStatsDeviceGatewayStatModule2StatPsusArrayOutput {
	return o
}

func (o GetGatewayStatsDeviceGatewayStatModule2StatPsusArrayOutput) ToGetGatewayStatsDeviceGatewayStatModule2StatPsusArrayOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatModule2StatPsusArrayOutput {
	return o
}

func (o GetGatewayStatsDeviceGatewayStatModule2StatPsusArrayOutput) Index(i pulumi.IntInput) GetGatewayStatsDeviceGatewayStatModule2StatPsusOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGatewayStatsDeviceGatewayStatModule2StatPsus {
		return vs[0].([]GetGatewayStatsDeviceGatewayStatModule2StatPsus)[vs[1].(int)]
	}).(GetGatewayStatsDeviceGatewayStatModule2StatPsusOutput)
}

type GetGatewayStatsDeviceGatewayStatModule2StatTemperature struct {
	Celsius float64 `pulumi:"celsius"`
	Name    string  `pulumi:"name"`
	Status  string  `pulumi:"status"`
}

// GetGatewayStatsDeviceGatewayStatModule2StatTemperatureInput is an input type that accepts GetGatewayStatsDeviceGatewayStatModule2StatTemperatureArgs and GetGatewayStatsDeviceGatewayStatModule2StatTemperatureOutput values.
// You can construct a concrete instance of `GetGatewayStatsDeviceGatewayStatModule2StatTemperatureInput` via:
//
//	GetGatewayStatsDeviceGatewayStatModule2StatTemperatureArgs{...}
type GetGatewayStatsDeviceGatewayStatModule2StatTemperatureInput interface {
	pulumi.Input

	ToGetGatewayStatsDeviceGatewayStatModule2StatTemperatureOutput() GetGatewayStatsDeviceGatewayStatModule2StatTemperatureOutput
	ToGetGatewayStatsDeviceGatewayStatModule2StatTemperatureOutputWithContext(context.Context) GetGatewayStatsDeviceGatewayStatModule2StatTemperatureOutput
}

type GetGatewayStatsDeviceGatewayStatModule2StatTemperatureArgs struct {
	Celsius pulumi.Float64Input `pulumi:"celsius"`
	Name    pulumi.StringInput  `pulumi:"name"`
	Status  pulumi.StringInput  `pulumi:"status"`
}

func (GetGatewayStatsDeviceGatewayStatModule2StatTemperatureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatModule2StatTemperature)(nil)).Elem()
}

func (i GetGatewayStatsDeviceGatewayStatModule2StatTemperatureArgs) ToGetGatewayStatsDeviceGatewayStatModule2StatTemperatureOutput() GetGatewayStatsDeviceGatewayStatModule2StatTemperatureOutput {
	return i.ToGetGatewayStatsDeviceGatewayStatModule2StatTemperatureOutputWithContext(context.Background())
}

func (i GetGatewayStatsDeviceGatewayStatModule2StatTemperatureArgs) ToGetGatewayStatsDeviceGatewayStatModule2StatTemperatureOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatModule2StatTemperatureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayStatsDeviceGatewayStatModule2StatTemperatureOutput)
}

// GetGatewayStatsDeviceGatewayStatModule2StatTemperatureArrayInput is an input type that accepts GetGatewayStatsDeviceGatewayStatModule2StatTemperatureArray and GetGatewayStatsDeviceGatewayStatModule2StatTemperatureArrayOutput values.
// You can construct a concrete instance of `GetGatewayStatsDeviceGatewayStatModule2StatTemperatureArrayInput` via:
//
//	GetGatewayStatsDeviceGatewayStatModule2StatTemperatureArray{ GetGatewayStatsDeviceGatewayStatModule2StatTemperatureArgs{...} }
type GetGatewayStatsDeviceGatewayStatModule2StatTemperatureArrayInput interface {
	pulumi.Input

	ToGetGatewayStatsDeviceGatewayStatModule2StatTemperatureArrayOutput() GetGatewayStatsDeviceGatewayStatModule2StatTemperatureArrayOutput
	ToGetGatewayStatsDeviceGatewayStatModule2StatTemperatureArrayOutputWithContext(context.Context) GetGatewayStatsDeviceGatewayStatModule2StatTemperatureArrayOutput
}

type GetGatewayStatsDeviceGatewayStatModule2StatTemperatureArray []GetGatewayStatsDeviceGatewayStatModule2StatTemperatureInput

func (GetGatewayStatsDeviceGatewayStatModule2StatTemperatureArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayStatsDeviceGatewayStatModule2StatTemperature)(nil)).Elem()
}

func (i GetGatewayStatsDeviceGatewayStatModule2StatTemperatureArray) ToGetGatewayStatsDeviceGatewayStatModule2StatTemperatureArrayOutput() GetGatewayStatsDeviceGatewayStatModule2StatTemperatureArrayOutput {
	return i.ToGetGatewayStatsDeviceGatewayStatModule2StatTemperatureArrayOutputWithContext(context.Background())
}

func (i GetGatewayStatsDeviceGatewayStatModule2StatTemperatureArray) ToGetGatewayStatsDeviceGatewayStatModule2StatTemperatureArrayOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatModule2StatTemperatureArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayStatsDeviceGatewayStatModule2StatTemperatureArrayOutput)
}

type GetGatewayStatsDeviceGatewayStatModule2StatTemperatureOutput struct{ *pulumi.OutputState }

func (GetGatewayStatsDeviceGatewayStatModule2StatTemperatureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatModule2StatTemperature)(nil)).Elem()
}

func (o GetGatewayStatsDeviceGatewayStatModule2StatTemperatureOutput) ToGetGatewayStatsDeviceGatewayStatModule2StatTemperatureOutput() GetGatewayStatsDeviceGatewayStatModule2StatTemperatureOutput {
	return o
}

func (o GetGatewayStatsDeviceGatewayStatModule2StatTemperatureOutput) ToGetGatewayStatsDeviceGatewayStatModule2StatTemperatureOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatModule2StatTemperatureOutput {
	return o
}

func (o GetGatewayStatsDeviceGatewayStatModule2StatTemperatureOutput) Celsius() pulumi.Float64Output {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatModule2StatTemperature) float64 { return v.Celsius }).(pulumi.Float64Output)
}

func (o GetGatewayStatsDeviceGatewayStatModule2StatTemperatureOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatModule2StatTemperature) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetGatewayStatsDeviceGatewayStatModule2StatTemperatureOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatModule2StatTemperature) string { return v.Status }).(pulumi.StringOutput)
}

type GetGatewayStatsDeviceGatewayStatModule2StatTemperatureArrayOutput struct{ *pulumi.OutputState }

func (GetGatewayStatsDeviceGatewayStatModule2StatTemperatureArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayStatsDeviceGatewayStatModule2StatTemperature)(nil)).Elem()
}

func (o GetGatewayStatsDeviceGatewayStatModule2StatTemperatureArrayOutput) ToGetGatewayStatsDeviceGatewayStatModule2StatTemperatureArrayOutput() GetGatewayStatsDeviceGatewayStatModule2StatTemperatureArrayOutput {
	return o
}

func (o GetGatewayStatsDeviceGatewayStatModule2StatTemperatureArrayOutput) ToGetGatewayStatsDeviceGatewayStatModule2StatTemperatureArrayOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatModule2StatTemperatureArrayOutput {
	return o
}

func (o GetGatewayStatsDeviceGatewayStatModule2StatTemperatureArrayOutput) Index(i pulumi.IntInput) GetGatewayStatsDeviceGatewayStatModule2StatTemperatureOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGatewayStatsDeviceGatewayStatModule2StatTemperature {
		return vs[0].([]GetGatewayStatsDeviceGatewayStatModule2StatTemperature)[vs[1].(int)]
	}).(GetGatewayStatsDeviceGatewayStatModule2StatTemperatureOutput)
}

type GetGatewayStatsDeviceGatewayStatModule2StatVcLink struct {
	NeighborModuleIdx int    `pulumi:"neighborModuleIdx"`
	NeighborPortId    string `pulumi:"neighborPortId"`
	PortId            string `pulumi:"portId"`
}

// GetGatewayStatsDeviceGatewayStatModule2StatVcLinkInput is an input type that accepts GetGatewayStatsDeviceGatewayStatModule2StatVcLinkArgs and GetGatewayStatsDeviceGatewayStatModule2StatVcLinkOutput values.
// You can construct a concrete instance of `GetGatewayStatsDeviceGatewayStatModule2StatVcLinkInput` via:
//
//	GetGatewayStatsDeviceGatewayStatModule2StatVcLinkArgs{...}
type GetGatewayStatsDeviceGatewayStatModule2StatVcLinkInput interface {
	pulumi.Input

	ToGetGatewayStatsDeviceGatewayStatModule2StatVcLinkOutput() GetGatewayStatsDeviceGatewayStatModule2StatVcLinkOutput
	ToGetGatewayStatsDeviceGatewayStatModule2StatVcLinkOutputWithContext(context.Context) GetGatewayStatsDeviceGatewayStatModule2StatVcLinkOutput
}

type GetGatewayStatsDeviceGatewayStatModule2StatVcLinkArgs struct {
	NeighborModuleIdx pulumi.IntInput    `pulumi:"neighborModuleIdx"`
	NeighborPortId    pulumi.StringInput `pulumi:"neighborPortId"`
	PortId            pulumi.StringInput `pulumi:"portId"`
}

func (GetGatewayStatsDeviceGatewayStatModule2StatVcLinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatModule2StatVcLink)(nil)).Elem()
}

func (i GetGatewayStatsDeviceGatewayStatModule2StatVcLinkArgs) ToGetGatewayStatsDeviceGatewayStatModule2StatVcLinkOutput() GetGatewayStatsDeviceGatewayStatModule2StatVcLinkOutput {
	return i.ToGetGatewayStatsDeviceGatewayStatModule2StatVcLinkOutputWithContext(context.Background())
}

func (i GetGatewayStatsDeviceGatewayStatModule2StatVcLinkArgs) ToGetGatewayStatsDeviceGatewayStatModule2StatVcLinkOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatModule2StatVcLinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayStatsDeviceGatewayStatModule2StatVcLinkOutput)
}

// GetGatewayStatsDeviceGatewayStatModule2StatVcLinkArrayInput is an input type that accepts GetGatewayStatsDeviceGatewayStatModule2StatVcLinkArray and GetGatewayStatsDeviceGatewayStatModule2StatVcLinkArrayOutput values.
// You can construct a concrete instance of `GetGatewayStatsDeviceGatewayStatModule2StatVcLinkArrayInput` via:
//
//	GetGatewayStatsDeviceGatewayStatModule2StatVcLinkArray{ GetGatewayStatsDeviceGatewayStatModule2StatVcLinkArgs{...} }
type GetGatewayStatsDeviceGatewayStatModule2StatVcLinkArrayInput interface {
	pulumi.Input

	ToGetGatewayStatsDeviceGatewayStatModule2StatVcLinkArrayOutput() GetGatewayStatsDeviceGatewayStatModule2StatVcLinkArrayOutput
	ToGetGatewayStatsDeviceGatewayStatModule2StatVcLinkArrayOutputWithContext(context.Context) GetGatewayStatsDeviceGatewayStatModule2StatVcLinkArrayOutput
}

type GetGatewayStatsDeviceGatewayStatModule2StatVcLinkArray []GetGatewayStatsDeviceGatewayStatModule2StatVcLinkInput

func (GetGatewayStatsDeviceGatewayStatModule2StatVcLinkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayStatsDeviceGatewayStatModule2StatVcLink)(nil)).Elem()
}

func (i GetGatewayStatsDeviceGatewayStatModule2StatVcLinkArray) ToGetGatewayStatsDeviceGatewayStatModule2StatVcLinkArrayOutput() GetGatewayStatsDeviceGatewayStatModule2StatVcLinkArrayOutput {
	return i.ToGetGatewayStatsDeviceGatewayStatModule2StatVcLinkArrayOutputWithContext(context.Background())
}

func (i GetGatewayStatsDeviceGatewayStatModule2StatVcLinkArray) ToGetGatewayStatsDeviceGatewayStatModule2StatVcLinkArrayOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatModule2StatVcLinkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayStatsDeviceGatewayStatModule2StatVcLinkArrayOutput)
}

type GetGatewayStatsDeviceGatewayStatModule2StatVcLinkOutput struct{ *pulumi.OutputState }

func (GetGatewayStatsDeviceGatewayStatModule2StatVcLinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatModule2StatVcLink)(nil)).Elem()
}

func (o GetGatewayStatsDeviceGatewayStatModule2StatVcLinkOutput) ToGetGatewayStatsDeviceGatewayStatModule2StatVcLinkOutput() GetGatewayStatsDeviceGatewayStatModule2StatVcLinkOutput {
	return o
}

func (o GetGatewayStatsDeviceGatewayStatModule2StatVcLinkOutput) ToGetGatewayStatsDeviceGatewayStatModule2StatVcLinkOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatModule2StatVcLinkOutput {
	return o
}

func (o GetGatewayStatsDeviceGatewayStatModule2StatVcLinkOutput) NeighborModuleIdx() pulumi.IntOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatModule2StatVcLink) int { return v.NeighborModuleIdx }).(pulumi.IntOutput)
}

func (o GetGatewayStatsDeviceGatewayStatModule2StatVcLinkOutput) NeighborPortId() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatModule2StatVcLink) string { return v.NeighborPortId }).(pulumi.StringOutput)
}

func (o GetGatewayStatsDeviceGatewayStatModule2StatVcLinkOutput) PortId() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatModule2StatVcLink) string { return v.PortId }).(pulumi.StringOutput)
}

type GetGatewayStatsDeviceGatewayStatModule2StatVcLinkArrayOutput struct{ *pulumi.OutputState }

func (GetGatewayStatsDeviceGatewayStatModule2StatVcLinkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayStatsDeviceGatewayStatModule2StatVcLink)(nil)).Elem()
}

func (o GetGatewayStatsDeviceGatewayStatModule2StatVcLinkArrayOutput) ToGetGatewayStatsDeviceGatewayStatModule2StatVcLinkArrayOutput() GetGatewayStatsDeviceGatewayStatModule2StatVcLinkArrayOutput {
	return o
}

func (o GetGatewayStatsDeviceGatewayStatModule2StatVcLinkArrayOutput) ToGetGatewayStatsDeviceGatewayStatModule2StatVcLinkArrayOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatModule2StatVcLinkArrayOutput {
	return o
}

func (o GetGatewayStatsDeviceGatewayStatModule2StatVcLinkArrayOutput) Index(i pulumi.IntInput) GetGatewayStatsDeviceGatewayStatModule2StatVcLinkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGatewayStatsDeviceGatewayStatModule2StatVcLink {
		return vs[0].([]GetGatewayStatsDeviceGatewayStatModule2StatVcLink)[vs[1].(int)]
	}).(GetGatewayStatsDeviceGatewayStatModule2StatVcLinkOutput)
}

type GetGatewayStatsDeviceGatewayStatModuleStat struct {
	BackupVersion string                                          `pulumi:"backupVersion"`
	BiosVersion   string                                          `pulumi:"biosVersion"`
	CpldVersion   string                                          `pulumi:"cpldVersion"`
	Fans          []GetGatewayStatsDeviceGatewayStatModuleStatFan `pulumi:"fans"`
	FpgaVersion   string                                          `pulumi:"fpgaVersion"`
	// Last seen timestamp
	LastSeen          float64                                                 `pulumi:"lastSeen"`
	Locating          bool                                                    `pulumi:"locating"`
	Mac               string                                                  `pulumi:"mac"`
	Model             string                                                  `pulumi:"model"`
	OpticsCpldVersion string                                                  `pulumi:"opticsCpldVersion"`
	PendingVersion    string                                                  `pulumi:"pendingVersion"`
	Poe               GetGatewayStatsDeviceGatewayStatModuleStatPoe           `pulumi:"poe"`
	PoeVersion        string                                                  `pulumi:"poeVersion"`
	PowerCpldVersion  string                                                  `pulumi:"powerCpldVersion"`
	Psuses            []GetGatewayStatsDeviceGatewayStatModuleStatPsus        `pulumi:"psuses"`
	ReFpgaVersion     string                                                  `pulumi:"reFpgaVersion"`
	RecoveryVersion   string                                                  `pulumi:"recoveryVersion"`
	Serial            string                                                  `pulumi:"serial"`
	Status            string                                                  `pulumi:"status"`
	Temperatures      []GetGatewayStatsDeviceGatewayStatModuleStatTemperature `pulumi:"temperatures"`
	TmcFpgaVersion    string                                                  `pulumi:"tmcFpgaVersion"`
	UbootVersion      string                                                  `pulumi:"ubootVersion"`
	Uptime            int                                                     `pulumi:"uptime"`
	VcLinks           []GetGatewayStatsDeviceGatewayStatModuleStatVcLink      `pulumi:"vcLinks"`
	VcMode            string                                                  `pulumi:"vcMode"`
	// enum: `master`, `backup`, `linecard`
	VcRole  string `pulumi:"vcRole"`
	VcState string `pulumi:"vcState"`
	Version string `pulumi:"version"`
}

// GetGatewayStatsDeviceGatewayStatModuleStatInput is an input type that accepts GetGatewayStatsDeviceGatewayStatModuleStatArgs and GetGatewayStatsDeviceGatewayStatModuleStatOutput values.
// You can construct a concrete instance of `GetGatewayStatsDeviceGatewayStatModuleStatInput` via:
//
//	GetGatewayStatsDeviceGatewayStatModuleStatArgs{...}
type GetGatewayStatsDeviceGatewayStatModuleStatInput interface {
	pulumi.Input

	ToGetGatewayStatsDeviceGatewayStatModuleStatOutput() GetGatewayStatsDeviceGatewayStatModuleStatOutput
	ToGetGatewayStatsDeviceGatewayStatModuleStatOutputWithContext(context.Context) GetGatewayStatsDeviceGatewayStatModuleStatOutput
}

type GetGatewayStatsDeviceGatewayStatModuleStatArgs struct {
	BackupVersion pulumi.StringInput                                      `pulumi:"backupVersion"`
	BiosVersion   pulumi.StringInput                                      `pulumi:"biosVersion"`
	CpldVersion   pulumi.StringInput                                      `pulumi:"cpldVersion"`
	Fans          GetGatewayStatsDeviceGatewayStatModuleStatFanArrayInput `pulumi:"fans"`
	FpgaVersion   pulumi.StringInput                                      `pulumi:"fpgaVersion"`
	// Last seen timestamp
	LastSeen          pulumi.Float64Input                                             `pulumi:"lastSeen"`
	Locating          pulumi.BoolInput                                                `pulumi:"locating"`
	Mac               pulumi.StringInput                                              `pulumi:"mac"`
	Model             pulumi.StringInput                                              `pulumi:"model"`
	OpticsCpldVersion pulumi.StringInput                                              `pulumi:"opticsCpldVersion"`
	PendingVersion    pulumi.StringInput                                              `pulumi:"pendingVersion"`
	Poe               GetGatewayStatsDeviceGatewayStatModuleStatPoeInput              `pulumi:"poe"`
	PoeVersion        pulumi.StringInput                                              `pulumi:"poeVersion"`
	PowerCpldVersion  pulumi.StringInput                                              `pulumi:"powerCpldVersion"`
	Psuses            GetGatewayStatsDeviceGatewayStatModuleStatPsusArrayInput        `pulumi:"psuses"`
	ReFpgaVersion     pulumi.StringInput                                              `pulumi:"reFpgaVersion"`
	RecoveryVersion   pulumi.StringInput                                              `pulumi:"recoveryVersion"`
	Serial            pulumi.StringInput                                              `pulumi:"serial"`
	Status            pulumi.StringInput                                              `pulumi:"status"`
	Temperatures      GetGatewayStatsDeviceGatewayStatModuleStatTemperatureArrayInput `pulumi:"temperatures"`
	TmcFpgaVersion    pulumi.StringInput                                              `pulumi:"tmcFpgaVersion"`
	UbootVersion      pulumi.StringInput                                              `pulumi:"ubootVersion"`
	Uptime            pulumi.IntInput                                                 `pulumi:"uptime"`
	VcLinks           GetGatewayStatsDeviceGatewayStatModuleStatVcLinkArrayInput      `pulumi:"vcLinks"`
	VcMode            pulumi.StringInput                                              `pulumi:"vcMode"`
	// enum: `master`, `backup`, `linecard`
	VcRole  pulumi.StringInput `pulumi:"vcRole"`
	VcState pulumi.StringInput `pulumi:"vcState"`
	Version pulumi.StringInput `pulumi:"version"`
}

func (GetGatewayStatsDeviceGatewayStatModuleStatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatModuleStat)(nil)).Elem()
}

func (i GetGatewayStatsDeviceGatewayStatModuleStatArgs) ToGetGatewayStatsDeviceGatewayStatModuleStatOutput() GetGatewayStatsDeviceGatewayStatModuleStatOutput {
	return i.ToGetGatewayStatsDeviceGatewayStatModuleStatOutputWithContext(context.Background())
}

func (i GetGatewayStatsDeviceGatewayStatModuleStatArgs) ToGetGatewayStatsDeviceGatewayStatModuleStatOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatModuleStatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayStatsDeviceGatewayStatModuleStatOutput)
}

// GetGatewayStatsDeviceGatewayStatModuleStatArrayInput is an input type that accepts GetGatewayStatsDeviceGatewayStatModuleStatArray and GetGatewayStatsDeviceGatewayStatModuleStatArrayOutput values.
// You can construct a concrete instance of `GetGatewayStatsDeviceGatewayStatModuleStatArrayInput` via:
//
//	GetGatewayStatsDeviceGatewayStatModuleStatArray{ GetGatewayStatsDeviceGatewayStatModuleStatArgs{...} }
type GetGatewayStatsDeviceGatewayStatModuleStatArrayInput interface {
	pulumi.Input

	ToGetGatewayStatsDeviceGatewayStatModuleStatArrayOutput() GetGatewayStatsDeviceGatewayStatModuleStatArrayOutput
	ToGetGatewayStatsDeviceGatewayStatModuleStatArrayOutputWithContext(context.Context) GetGatewayStatsDeviceGatewayStatModuleStatArrayOutput
}

type GetGatewayStatsDeviceGatewayStatModuleStatArray []GetGatewayStatsDeviceGatewayStatModuleStatInput

func (GetGatewayStatsDeviceGatewayStatModuleStatArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayStatsDeviceGatewayStatModuleStat)(nil)).Elem()
}

func (i GetGatewayStatsDeviceGatewayStatModuleStatArray) ToGetGatewayStatsDeviceGatewayStatModuleStatArrayOutput() GetGatewayStatsDeviceGatewayStatModuleStatArrayOutput {
	return i.ToGetGatewayStatsDeviceGatewayStatModuleStatArrayOutputWithContext(context.Background())
}

func (i GetGatewayStatsDeviceGatewayStatModuleStatArray) ToGetGatewayStatsDeviceGatewayStatModuleStatArrayOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatModuleStatArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayStatsDeviceGatewayStatModuleStatArrayOutput)
}

type GetGatewayStatsDeviceGatewayStatModuleStatOutput struct{ *pulumi.OutputState }

func (GetGatewayStatsDeviceGatewayStatModuleStatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatModuleStat)(nil)).Elem()
}

func (o GetGatewayStatsDeviceGatewayStatModuleStatOutput) ToGetGatewayStatsDeviceGatewayStatModuleStatOutput() GetGatewayStatsDeviceGatewayStatModuleStatOutput {
	return o
}

func (o GetGatewayStatsDeviceGatewayStatModuleStatOutput) ToGetGatewayStatsDeviceGatewayStatModuleStatOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatModuleStatOutput {
	return o
}

func (o GetGatewayStatsDeviceGatewayStatModuleStatOutput) BackupVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatModuleStat) string { return v.BackupVersion }).(pulumi.StringOutput)
}

func (o GetGatewayStatsDeviceGatewayStatModuleStatOutput) BiosVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatModuleStat) string { return v.BiosVersion }).(pulumi.StringOutput)
}

func (o GetGatewayStatsDeviceGatewayStatModuleStatOutput) CpldVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatModuleStat) string { return v.CpldVersion }).(pulumi.StringOutput)
}

func (o GetGatewayStatsDeviceGatewayStatModuleStatOutput) Fans() GetGatewayStatsDeviceGatewayStatModuleStatFanArrayOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatModuleStat) []GetGatewayStatsDeviceGatewayStatModuleStatFan {
		return v.Fans
	}).(GetGatewayStatsDeviceGatewayStatModuleStatFanArrayOutput)
}

func (o GetGatewayStatsDeviceGatewayStatModuleStatOutput) FpgaVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatModuleStat) string { return v.FpgaVersion }).(pulumi.StringOutput)
}

// Last seen timestamp
func (o GetGatewayStatsDeviceGatewayStatModuleStatOutput) LastSeen() pulumi.Float64Output {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatModuleStat) float64 { return v.LastSeen }).(pulumi.Float64Output)
}

func (o GetGatewayStatsDeviceGatewayStatModuleStatOutput) Locating() pulumi.BoolOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatModuleStat) bool { return v.Locating }).(pulumi.BoolOutput)
}

func (o GetGatewayStatsDeviceGatewayStatModuleStatOutput) Mac() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatModuleStat) string { return v.Mac }).(pulumi.StringOutput)
}

func (o GetGatewayStatsDeviceGatewayStatModuleStatOutput) Model() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatModuleStat) string { return v.Model }).(pulumi.StringOutput)
}

func (o GetGatewayStatsDeviceGatewayStatModuleStatOutput) OpticsCpldVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatModuleStat) string { return v.OpticsCpldVersion }).(pulumi.StringOutput)
}

func (o GetGatewayStatsDeviceGatewayStatModuleStatOutput) PendingVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatModuleStat) string { return v.PendingVersion }).(pulumi.StringOutput)
}

func (o GetGatewayStatsDeviceGatewayStatModuleStatOutput) Poe() GetGatewayStatsDeviceGatewayStatModuleStatPoeOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatModuleStat) GetGatewayStatsDeviceGatewayStatModuleStatPoe {
		return v.Poe
	}).(GetGatewayStatsDeviceGatewayStatModuleStatPoeOutput)
}

func (o GetGatewayStatsDeviceGatewayStatModuleStatOutput) PoeVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatModuleStat) string { return v.PoeVersion }).(pulumi.StringOutput)
}

func (o GetGatewayStatsDeviceGatewayStatModuleStatOutput) PowerCpldVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatModuleStat) string { return v.PowerCpldVersion }).(pulumi.StringOutput)
}

func (o GetGatewayStatsDeviceGatewayStatModuleStatOutput) Psuses() GetGatewayStatsDeviceGatewayStatModuleStatPsusArrayOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatModuleStat) []GetGatewayStatsDeviceGatewayStatModuleStatPsus {
		return v.Psuses
	}).(GetGatewayStatsDeviceGatewayStatModuleStatPsusArrayOutput)
}

func (o GetGatewayStatsDeviceGatewayStatModuleStatOutput) ReFpgaVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatModuleStat) string { return v.ReFpgaVersion }).(pulumi.StringOutput)
}

func (o GetGatewayStatsDeviceGatewayStatModuleStatOutput) RecoveryVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatModuleStat) string { return v.RecoveryVersion }).(pulumi.StringOutput)
}

func (o GetGatewayStatsDeviceGatewayStatModuleStatOutput) Serial() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatModuleStat) string { return v.Serial }).(pulumi.StringOutput)
}

func (o GetGatewayStatsDeviceGatewayStatModuleStatOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatModuleStat) string { return v.Status }).(pulumi.StringOutput)
}

func (o GetGatewayStatsDeviceGatewayStatModuleStatOutput) Temperatures() GetGatewayStatsDeviceGatewayStatModuleStatTemperatureArrayOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatModuleStat) []GetGatewayStatsDeviceGatewayStatModuleStatTemperature {
		return v.Temperatures
	}).(GetGatewayStatsDeviceGatewayStatModuleStatTemperatureArrayOutput)
}

func (o GetGatewayStatsDeviceGatewayStatModuleStatOutput) TmcFpgaVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatModuleStat) string { return v.TmcFpgaVersion }).(pulumi.StringOutput)
}

func (o GetGatewayStatsDeviceGatewayStatModuleStatOutput) UbootVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatModuleStat) string { return v.UbootVersion }).(pulumi.StringOutput)
}

func (o GetGatewayStatsDeviceGatewayStatModuleStatOutput) Uptime() pulumi.IntOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatModuleStat) int { return v.Uptime }).(pulumi.IntOutput)
}

func (o GetGatewayStatsDeviceGatewayStatModuleStatOutput) VcLinks() GetGatewayStatsDeviceGatewayStatModuleStatVcLinkArrayOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatModuleStat) []GetGatewayStatsDeviceGatewayStatModuleStatVcLink {
		return v.VcLinks
	}).(GetGatewayStatsDeviceGatewayStatModuleStatVcLinkArrayOutput)
}

func (o GetGatewayStatsDeviceGatewayStatModuleStatOutput) VcMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatModuleStat) string { return v.VcMode }).(pulumi.StringOutput)
}

// enum: `master`, `backup`, `linecard`
func (o GetGatewayStatsDeviceGatewayStatModuleStatOutput) VcRole() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatModuleStat) string { return v.VcRole }).(pulumi.StringOutput)
}

func (o GetGatewayStatsDeviceGatewayStatModuleStatOutput) VcState() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatModuleStat) string { return v.VcState }).(pulumi.StringOutput)
}

func (o GetGatewayStatsDeviceGatewayStatModuleStatOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatModuleStat) string { return v.Version }).(pulumi.StringOutput)
}

type GetGatewayStatsDeviceGatewayStatModuleStatArrayOutput struct{ *pulumi.OutputState }

func (GetGatewayStatsDeviceGatewayStatModuleStatArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayStatsDeviceGatewayStatModuleStat)(nil)).Elem()
}

func (o GetGatewayStatsDeviceGatewayStatModuleStatArrayOutput) ToGetGatewayStatsDeviceGatewayStatModuleStatArrayOutput() GetGatewayStatsDeviceGatewayStatModuleStatArrayOutput {
	return o
}

func (o GetGatewayStatsDeviceGatewayStatModuleStatArrayOutput) ToGetGatewayStatsDeviceGatewayStatModuleStatArrayOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatModuleStatArrayOutput {
	return o
}

func (o GetGatewayStatsDeviceGatewayStatModuleStatArrayOutput) Index(i pulumi.IntInput) GetGatewayStatsDeviceGatewayStatModuleStatOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGatewayStatsDeviceGatewayStatModuleStat {
		return vs[0].([]GetGatewayStatsDeviceGatewayStatModuleStat)[vs[1].(int)]
	}).(GetGatewayStatsDeviceGatewayStatModuleStatOutput)
}

type GetGatewayStatsDeviceGatewayStatModuleStatFan struct {
	Airflow string `pulumi:"airflow"`
	Name    string `pulumi:"name"`
	Status  string `pulumi:"status"`
}

// GetGatewayStatsDeviceGatewayStatModuleStatFanInput is an input type that accepts GetGatewayStatsDeviceGatewayStatModuleStatFanArgs and GetGatewayStatsDeviceGatewayStatModuleStatFanOutput values.
// You can construct a concrete instance of `GetGatewayStatsDeviceGatewayStatModuleStatFanInput` via:
//
//	GetGatewayStatsDeviceGatewayStatModuleStatFanArgs{...}
type GetGatewayStatsDeviceGatewayStatModuleStatFanInput interface {
	pulumi.Input

	ToGetGatewayStatsDeviceGatewayStatModuleStatFanOutput() GetGatewayStatsDeviceGatewayStatModuleStatFanOutput
	ToGetGatewayStatsDeviceGatewayStatModuleStatFanOutputWithContext(context.Context) GetGatewayStatsDeviceGatewayStatModuleStatFanOutput
}

type GetGatewayStatsDeviceGatewayStatModuleStatFanArgs struct {
	Airflow pulumi.StringInput `pulumi:"airflow"`
	Name    pulumi.StringInput `pulumi:"name"`
	Status  pulumi.StringInput `pulumi:"status"`
}

func (GetGatewayStatsDeviceGatewayStatModuleStatFanArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatModuleStatFan)(nil)).Elem()
}

func (i GetGatewayStatsDeviceGatewayStatModuleStatFanArgs) ToGetGatewayStatsDeviceGatewayStatModuleStatFanOutput() GetGatewayStatsDeviceGatewayStatModuleStatFanOutput {
	return i.ToGetGatewayStatsDeviceGatewayStatModuleStatFanOutputWithContext(context.Background())
}

func (i GetGatewayStatsDeviceGatewayStatModuleStatFanArgs) ToGetGatewayStatsDeviceGatewayStatModuleStatFanOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatModuleStatFanOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayStatsDeviceGatewayStatModuleStatFanOutput)
}

// GetGatewayStatsDeviceGatewayStatModuleStatFanArrayInput is an input type that accepts GetGatewayStatsDeviceGatewayStatModuleStatFanArray and GetGatewayStatsDeviceGatewayStatModuleStatFanArrayOutput values.
// You can construct a concrete instance of `GetGatewayStatsDeviceGatewayStatModuleStatFanArrayInput` via:
//
//	GetGatewayStatsDeviceGatewayStatModuleStatFanArray{ GetGatewayStatsDeviceGatewayStatModuleStatFanArgs{...} }
type GetGatewayStatsDeviceGatewayStatModuleStatFanArrayInput interface {
	pulumi.Input

	ToGetGatewayStatsDeviceGatewayStatModuleStatFanArrayOutput() GetGatewayStatsDeviceGatewayStatModuleStatFanArrayOutput
	ToGetGatewayStatsDeviceGatewayStatModuleStatFanArrayOutputWithContext(context.Context) GetGatewayStatsDeviceGatewayStatModuleStatFanArrayOutput
}

type GetGatewayStatsDeviceGatewayStatModuleStatFanArray []GetGatewayStatsDeviceGatewayStatModuleStatFanInput

func (GetGatewayStatsDeviceGatewayStatModuleStatFanArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayStatsDeviceGatewayStatModuleStatFan)(nil)).Elem()
}

func (i GetGatewayStatsDeviceGatewayStatModuleStatFanArray) ToGetGatewayStatsDeviceGatewayStatModuleStatFanArrayOutput() GetGatewayStatsDeviceGatewayStatModuleStatFanArrayOutput {
	return i.ToGetGatewayStatsDeviceGatewayStatModuleStatFanArrayOutputWithContext(context.Background())
}

func (i GetGatewayStatsDeviceGatewayStatModuleStatFanArray) ToGetGatewayStatsDeviceGatewayStatModuleStatFanArrayOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatModuleStatFanArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayStatsDeviceGatewayStatModuleStatFanArrayOutput)
}

type GetGatewayStatsDeviceGatewayStatModuleStatFanOutput struct{ *pulumi.OutputState }

func (GetGatewayStatsDeviceGatewayStatModuleStatFanOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatModuleStatFan)(nil)).Elem()
}

func (o GetGatewayStatsDeviceGatewayStatModuleStatFanOutput) ToGetGatewayStatsDeviceGatewayStatModuleStatFanOutput() GetGatewayStatsDeviceGatewayStatModuleStatFanOutput {
	return o
}

func (o GetGatewayStatsDeviceGatewayStatModuleStatFanOutput) ToGetGatewayStatsDeviceGatewayStatModuleStatFanOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatModuleStatFanOutput {
	return o
}

func (o GetGatewayStatsDeviceGatewayStatModuleStatFanOutput) Airflow() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatModuleStatFan) string { return v.Airflow }).(pulumi.StringOutput)
}

func (o GetGatewayStatsDeviceGatewayStatModuleStatFanOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatModuleStatFan) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetGatewayStatsDeviceGatewayStatModuleStatFanOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatModuleStatFan) string { return v.Status }).(pulumi.StringOutput)
}

type GetGatewayStatsDeviceGatewayStatModuleStatFanArrayOutput struct{ *pulumi.OutputState }

func (GetGatewayStatsDeviceGatewayStatModuleStatFanArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayStatsDeviceGatewayStatModuleStatFan)(nil)).Elem()
}

func (o GetGatewayStatsDeviceGatewayStatModuleStatFanArrayOutput) ToGetGatewayStatsDeviceGatewayStatModuleStatFanArrayOutput() GetGatewayStatsDeviceGatewayStatModuleStatFanArrayOutput {
	return o
}

func (o GetGatewayStatsDeviceGatewayStatModuleStatFanArrayOutput) ToGetGatewayStatsDeviceGatewayStatModuleStatFanArrayOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatModuleStatFanArrayOutput {
	return o
}

func (o GetGatewayStatsDeviceGatewayStatModuleStatFanArrayOutput) Index(i pulumi.IntInput) GetGatewayStatsDeviceGatewayStatModuleStatFanOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGatewayStatsDeviceGatewayStatModuleStatFan {
		return vs[0].([]GetGatewayStatsDeviceGatewayStatModuleStatFan)[vs[1].(int)]
	}).(GetGatewayStatsDeviceGatewayStatModuleStatFanOutput)
}

type GetGatewayStatsDeviceGatewayStatModuleStatPoe struct {
	MaxPower  float64 `pulumi:"maxPower"`
	PowerDraw float64 `pulumi:"powerDraw"`
}

// GetGatewayStatsDeviceGatewayStatModuleStatPoeInput is an input type that accepts GetGatewayStatsDeviceGatewayStatModuleStatPoeArgs and GetGatewayStatsDeviceGatewayStatModuleStatPoeOutput values.
// You can construct a concrete instance of `GetGatewayStatsDeviceGatewayStatModuleStatPoeInput` via:
//
//	GetGatewayStatsDeviceGatewayStatModuleStatPoeArgs{...}
type GetGatewayStatsDeviceGatewayStatModuleStatPoeInput interface {
	pulumi.Input

	ToGetGatewayStatsDeviceGatewayStatModuleStatPoeOutput() GetGatewayStatsDeviceGatewayStatModuleStatPoeOutput
	ToGetGatewayStatsDeviceGatewayStatModuleStatPoeOutputWithContext(context.Context) GetGatewayStatsDeviceGatewayStatModuleStatPoeOutput
}

type GetGatewayStatsDeviceGatewayStatModuleStatPoeArgs struct {
	MaxPower  pulumi.Float64Input `pulumi:"maxPower"`
	PowerDraw pulumi.Float64Input `pulumi:"powerDraw"`
}

func (GetGatewayStatsDeviceGatewayStatModuleStatPoeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatModuleStatPoe)(nil)).Elem()
}

func (i GetGatewayStatsDeviceGatewayStatModuleStatPoeArgs) ToGetGatewayStatsDeviceGatewayStatModuleStatPoeOutput() GetGatewayStatsDeviceGatewayStatModuleStatPoeOutput {
	return i.ToGetGatewayStatsDeviceGatewayStatModuleStatPoeOutputWithContext(context.Background())
}

func (i GetGatewayStatsDeviceGatewayStatModuleStatPoeArgs) ToGetGatewayStatsDeviceGatewayStatModuleStatPoeOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatModuleStatPoeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayStatsDeviceGatewayStatModuleStatPoeOutput)
}

type GetGatewayStatsDeviceGatewayStatModuleStatPoeOutput struct{ *pulumi.OutputState }

func (GetGatewayStatsDeviceGatewayStatModuleStatPoeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatModuleStatPoe)(nil)).Elem()
}

func (o GetGatewayStatsDeviceGatewayStatModuleStatPoeOutput) ToGetGatewayStatsDeviceGatewayStatModuleStatPoeOutput() GetGatewayStatsDeviceGatewayStatModuleStatPoeOutput {
	return o
}

func (o GetGatewayStatsDeviceGatewayStatModuleStatPoeOutput) ToGetGatewayStatsDeviceGatewayStatModuleStatPoeOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatModuleStatPoeOutput {
	return o
}

func (o GetGatewayStatsDeviceGatewayStatModuleStatPoeOutput) MaxPower() pulumi.Float64Output {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatModuleStatPoe) float64 { return v.MaxPower }).(pulumi.Float64Output)
}

func (o GetGatewayStatsDeviceGatewayStatModuleStatPoeOutput) PowerDraw() pulumi.Float64Output {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatModuleStatPoe) float64 { return v.PowerDraw }).(pulumi.Float64Output)
}

type GetGatewayStatsDeviceGatewayStatModuleStatPsus struct {
	Name   string `pulumi:"name"`
	Status string `pulumi:"status"`
}

// GetGatewayStatsDeviceGatewayStatModuleStatPsusInput is an input type that accepts GetGatewayStatsDeviceGatewayStatModuleStatPsusArgs and GetGatewayStatsDeviceGatewayStatModuleStatPsusOutput values.
// You can construct a concrete instance of `GetGatewayStatsDeviceGatewayStatModuleStatPsusInput` via:
//
//	GetGatewayStatsDeviceGatewayStatModuleStatPsusArgs{...}
type GetGatewayStatsDeviceGatewayStatModuleStatPsusInput interface {
	pulumi.Input

	ToGetGatewayStatsDeviceGatewayStatModuleStatPsusOutput() GetGatewayStatsDeviceGatewayStatModuleStatPsusOutput
	ToGetGatewayStatsDeviceGatewayStatModuleStatPsusOutputWithContext(context.Context) GetGatewayStatsDeviceGatewayStatModuleStatPsusOutput
}

type GetGatewayStatsDeviceGatewayStatModuleStatPsusArgs struct {
	Name   pulumi.StringInput `pulumi:"name"`
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetGatewayStatsDeviceGatewayStatModuleStatPsusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatModuleStatPsus)(nil)).Elem()
}

func (i GetGatewayStatsDeviceGatewayStatModuleStatPsusArgs) ToGetGatewayStatsDeviceGatewayStatModuleStatPsusOutput() GetGatewayStatsDeviceGatewayStatModuleStatPsusOutput {
	return i.ToGetGatewayStatsDeviceGatewayStatModuleStatPsusOutputWithContext(context.Background())
}

func (i GetGatewayStatsDeviceGatewayStatModuleStatPsusArgs) ToGetGatewayStatsDeviceGatewayStatModuleStatPsusOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatModuleStatPsusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayStatsDeviceGatewayStatModuleStatPsusOutput)
}

// GetGatewayStatsDeviceGatewayStatModuleStatPsusArrayInput is an input type that accepts GetGatewayStatsDeviceGatewayStatModuleStatPsusArray and GetGatewayStatsDeviceGatewayStatModuleStatPsusArrayOutput values.
// You can construct a concrete instance of `GetGatewayStatsDeviceGatewayStatModuleStatPsusArrayInput` via:
//
//	GetGatewayStatsDeviceGatewayStatModuleStatPsusArray{ GetGatewayStatsDeviceGatewayStatModuleStatPsusArgs{...} }
type GetGatewayStatsDeviceGatewayStatModuleStatPsusArrayInput interface {
	pulumi.Input

	ToGetGatewayStatsDeviceGatewayStatModuleStatPsusArrayOutput() GetGatewayStatsDeviceGatewayStatModuleStatPsusArrayOutput
	ToGetGatewayStatsDeviceGatewayStatModuleStatPsusArrayOutputWithContext(context.Context) GetGatewayStatsDeviceGatewayStatModuleStatPsusArrayOutput
}

type GetGatewayStatsDeviceGatewayStatModuleStatPsusArray []GetGatewayStatsDeviceGatewayStatModuleStatPsusInput

func (GetGatewayStatsDeviceGatewayStatModuleStatPsusArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayStatsDeviceGatewayStatModuleStatPsus)(nil)).Elem()
}

func (i GetGatewayStatsDeviceGatewayStatModuleStatPsusArray) ToGetGatewayStatsDeviceGatewayStatModuleStatPsusArrayOutput() GetGatewayStatsDeviceGatewayStatModuleStatPsusArrayOutput {
	return i.ToGetGatewayStatsDeviceGatewayStatModuleStatPsusArrayOutputWithContext(context.Background())
}

func (i GetGatewayStatsDeviceGatewayStatModuleStatPsusArray) ToGetGatewayStatsDeviceGatewayStatModuleStatPsusArrayOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatModuleStatPsusArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayStatsDeviceGatewayStatModuleStatPsusArrayOutput)
}

type GetGatewayStatsDeviceGatewayStatModuleStatPsusOutput struct{ *pulumi.OutputState }

func (GetGatewayStatsDeviceGatewayStatModuleStatPsusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatModuleStatPsus)(nil)).Elem()
}

func (o GetGatewayStatsDeviceGatewayStatModuleStatPsusOutput) ToGetGatewayStatsDeviceGatewayStatModuleStatPsusOutput() GetGatewayStatsDeviceGatewayStatModuleStatPsusOutput {
	return o
}

func (o GetGatewayStatsDeviceGatewayStatModuleStatPsusOutput) ToGetGatewayStatsDeviceGatewayStatModuleStatPsusOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatModuleStatPsusOutput {
	return o
}

func (o GetGatewayStatsDeviceGatewayStatModuleStatPsusOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatModuleStatPsus) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetGatewayStatsDeviceGatewayStatModuleStatPsusOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatModuleStatPsus) string { return v.Status }).(pulumi.StringOutput)
}

type GetGatewayStatsDeviceGatewayStatModuleStatPsusArrayOutput struct{ *pulumi.OutputState }

func (GetGatewayStatsDeviceGatewayStatModuleStatPsusArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayStatsDeviceGatewayStatModuleStatPsus)(nil)).Elem()
}

func (o GetGatewayStatsDeviceGatewayStatModuleStatPsusArrayOutput) ToGetGatewayStatsDeviceGatewayStatModuleStatPsusArrayOutput() GetGatewayStatsDeviceGatewayStatModuleStatPsusArrayOutput {
	return o
}

func (o GetGatewayStatsDeviceGatewayStatModuleStatPsusArrayOutput) ToGetGatewayStatsDeviceGatewayStatModuleStatPsusArrayOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatModuleStatPsusArrayOutput {
	return o
}

func (o GetGatewayStatsDeviceGatewayStatModuleStatPsusArrayOutput) Index(i pulumi.IntInput) GetGatewayStatsDeviceGatewayStatModuleStatPsusOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGatewayStatsDeviceGatewayStatModuleStatPsus {
		return vs[0].([]GetGatewayStatsDeviceGatewayStatModuleStatPsus)[vs[1].(int)]
	}).(GetGatewayStatsDeviceGatewayStatModuleStatPsusOutput)
}

type GetGatewayStatsDeviceGatewayStatModuleStatTemperature struct {
	Celsius float64 `pulumi:"celsius"`
	Name    string  `pulumi:"name"`
	Status  string  `pulumi:"status"`
}

// GetGatewayStatsDeviceGatewayStatModuleStatTemperatureInput is an input type that accepts GetGatewayStatsDeviceGatewayStatModuleStatTemperatureArgs and GetGatewayStatsDeviceGatewayStatModuleStatTemperatureOutput values.
// You can construct a concrete instance of `GetGatewayStatsDeviceGatewayStatModuleStatTemperatureInput` via:
//
//	GetGatewayStatsDeviceGatewayStatModuleStatTemperatureArgs{...}
type GetGatewayStatsDeviceGatewayStatModuleStatTemperatureInput interface {
	pulumi.Input

	ToGetGatewayStatsDeviceGatewayStatModuleStatTemperatureOutput() GetGatewayStatsDeviceGatewayStatModuleStatTemperatureOutput
	ToGetGatewayStatsDeviceGatewayStatModuleStatTemperatureOutputWithContext(context.Context) GetGatewayStatsDeviceGatewayStatModuleStatTemperatureOutput
}

type GetGatewayStatsDeviceGatewayStatModuleStatTemperatureArgs struct {
	Celsius pulumi.Float64Input `pulumi:"celsius"`
	Name    pulumi.StringInput  `pulumi:"name"`
	Status  pulumi.StringInput  `pulumi:"status"`
}

func (GetGatewayStatsDeviceGatewayStatModuleStatTemperatureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatModuleStatTemperature)(nil)).Elem()
}

func (i GetGatewayStatsDeviceGatewayStatModuleStatTemperatureArgs) ToGetGatewayStatsDeviceGatewayStatModuleStatTemperatureOutput() GetGatewayStatsDeviceGatewayStatModuleStatTemperatureOutput {
	return i.ToGetGatewayStatsDeviceGatewayStatModuleStatTemperatureOutputWithContext(context.Background())
}

func (i GetGatewayStatsDeviceGatewayStatModuleStatTemperatureArgs) ToGetGatewayStatsDeviceGatewayStatModuleStatTemperatureOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatModuleStatTemperatureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayStatsDeviceGatewayStatModuleStatTemperatureOutput)
}

// GetGatewayStatsDeviceGatewayStatModuleStatTemperatureArrayInput is an input type that accepts GetGatewayStatsDeviceGatewayStatModuleStatTemperatureArray and GetGatewayStatsDeviceGatewayStatModuleStatTemperatureArrayOutput values.
// You can construct a concrete instance of `GetGatewayStatsDeviceGatewayStatModuleStatTemperatureArrayInput` via:
//
//	GetGatewayStatsDeviceGatewayStatModuleStatTemperatureArray{ GetGatewayStatsDeviceGatewayStatModuleStatTemperatureArgs{...} }
type GetGatewayStatsDeviceGatewayStatModuleStatTemperatureArrayInput interface {
	pulumi.Input

	ToGetGatewayStatsDeviceGatewayStatModuleStatTemperatureArrayOutput() GetGatewayStatsDeviceGatewayStatModuleStatTemperatureArrayOutput
	ToGetGatewayStatsDeviceGatewayStatModuleStatTemperatureArrayOutputWithContext(context.Context) GetGatewayStatsDeviceGatewayStatModuleStatTemperatureArrayOutput
}

type GetGatewayStatsDeviceGatewayStatModuleStatTemperatureArray []GetGatewayStatsDeviceGatewayStatModuleStatTemperatureInput

func (GetGatewayStatsDeviceGatewayStatModuleStatTemperatureArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayStatsDeviceGatewayStatModuleStatTemperature)(nil)).Elem()
}

func (i GetGatewayStatsDeviceGatewayStatModuleStatTemperatureArray) ToGetGatewayStatsDeviceGatewayStatModuleStatTemperatureArrayOutput() GetGatewayStatsDeviceGatewayStatModuleStatTemperatureArrayOutput {
	return i.ToGetGatewayStatsDeviceGatewayStatModuleStatTemperatureArrayOutputWithContext(context.Background())
}

func (i GetGatewayStatsDeviceGatewayStatModuleStatTemperatureArray) ToGetGatewayStatsDeviceGatewayStatModuleStatTemperatureArrayOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatModuleStatTemperatureArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayStatsDeviceGatewayStatModuleStatTemperatureArrayOutput)
}

type GetGatewayStatsDeviceGatewayStatModuleStatTemperatureOutput struct{ *pulumi.OutputState }

func (GetGatewayStatsDeviceGatewayStatModuleStatTemperatureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatModuleStatTemperature)(nil)).Elem()
}

func (o GetGatewayStatsDeviceGatewayStatModuleStatTemperatureOutput) ToGetGatewayStatsDeviceGatewayStatModuleStatTemperatureOutput() GetGatewayStatsDeviceGatewayStatModuleStatTemperatureOutput {
	return o
}

func (o GetGatewayStatsDeviceGatewayStatModuleStatTemperatureOutput) ToGetGatewayStatsDeviceGatewayStatModuleStatTemperatureOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatModuleStatTemperatureOutput {
	return o
}

func (o GetGatewayStatsDeviceGatewayStatModuleStatTemperatureOutput) Celsius() pulumi.Float64Output {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatModuleStatTemperature) float64 { return v.Celsius }).(pulumi.Float64Output)
}

func (o GetGatewayStatsDeviceGatewayStatModuleStatTemperatureOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatModuleStatTemperature) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetGatewayStatsDeviceGatewayStatModuleStatTemperatureOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatModuleStatTemperature) string { return v.Status }).(pulumi.StringOutput)
}

type GetGatewayStatsDeviceGatewayStatModuleStatTemperatureArrayOutput struct{ *pulumi.OutputState }

func (GetGatewayStatsDeviceGatewayStatModuleStatTemperatureArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayStatsDeviceGatewayStatModuleStatTemperature)(nil)).Elem()
}

func (o GetGatewayStatsDeviceGatewayStatModuleStatTemperatureArrayOutput) ToGetGatewayStatsDeviceGatewayStatModuleStatTemperatureArrayOutput() GetGatewayStatsDeviceGatewayStatModuleStatTemperatureArrayOutput {
	return o
}

func (o GetGatewayStatsDeviceGatewayStatModuleStatTemperatureArrayOutput) ToGetGatewayStatsDeviceGatewayStatModuleStatTemperatureArrayOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatModuleStatTemperatureArrayOutput {
	return o
}

func (o GetGatewayStatsDeviceGatewayStatModuleStatTemperatureArrayOutput) Index(i pulumi.IntInput) GetGatewayStatsDeviceGatewayStatModuleStatTemperatureOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGatewayStatsDeviceGatewayStatModuleStatTemperature {
		return vs[0].([]GetGatewayStatsDeviceGatewayStatModuleStatTemperature)[vs[1].(int)]
	}).(GetGatewayStatsDeviceGatewayStatModuleStatTemperatureOutput)
}

type GetGatewayStatsDeviceGatewayStatModuleStatVcLink struct {
	NeighborModuleIdx int    `pulumi:"neighborModuleIdx"`
	NeighborPortId    string `pulumi:"neighborPortId"`
	PortId            string `pulumi:"portId"`
}

// GetGatewayStatsDeviceGatewayStatModuleStatVcLinkInput is an input type that accepts GetGatewayStatsDeviceGatewayStatModuleStatVcLinkArgs and GetGatewayStatsDeviceGatewayStatModuleStatVcLinkOutput values.
// You can construct a concrete instance of `GetGatewayStatsDeviceGatewayStatModuleStatVcLinkInput` via:
//
//	GetGatewayStatsDeviceGatewayStatModuleStatVcLinkArgs{...}
type GetGatewayStatsDeviceGatewayStatModuleStatVcLinkInput interface {
	pulumi.Input

	ToGetGatewayStatsDeviceGatewayStatModuleStatVcLinkOutput() GetGatewayStatsDeviceGatewayStatModuleStatVcLinkOutput
	ToGetGatewayStatsDeviceGatewayStatModuleStatVcLinkOutputWithContext(context.Context) GetGatewayStatsDeviceGatewayStatModuleStatVcLinkOutput
}

type GetGatewayStatsDeviceGatewayStatModuleStatVcLinkArgs struct {
	NeighborModuleIdx pulumi.IntInput    `pulumi:"neighborModuleIdx"`
	NeighborPortId    pulumi.StringInput `pulumi:"neighborPortId"`
	PortId            pulumi.StringInput `pulumi:"portId"`
}

func (GetGatewayStatsDeviceGatewayStatModuleStatVcLinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatModuleStatVcLink)(nil)).Elem()
}

func (i GetGatewayStatsDeviceGatewayStatModuleStatVcLinkArgs) ToGetGatewayStatsDeviceGatewayStatModuleStatVcLinkOutput() GetGatewayStatsDeviceGatewayStatModuleStatVcLinkOutput {
	return i.ToGetGatewayStatsDeviceGatewayStatModuleStatVcLinkOutputWithContext(context.Background())
}

func (i GetGatewayStatsDeviceGatewayStatModuleStatVcLinkArgs) ToGetGatewayStatsDeviceGatewayStatModuleStatVcLinkOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatModuleStatVcLinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayStatsDeviceGatewayStatModuleStatVcLinkOutput)
}

// GetGatewayStatsDeviceGatewayStatModuleStatVcLinkArrayInput is an input type that accepts GetGatewayStatsDeviceGatewayStatModuleStatVcLinkArray and GetGatewayStatsDeviceGatewayStatModuleStatVcLinkArrayOutput values.
// You can construct a concrete instance of `GetGatewayStatsDeviceGatewayStatModuleStatVcLinkArrayInput` via:
//
//	GetGatewayStatsDeviceGatewayStatModuleStatVcLinkArray{ GetGatewayStatsDeviceGatewayStatModuleStatVcLinkArgs{...} }
type GetGatewayStatsDeviceGatewayStatModuleStatVcLinkArrayInput interface {
	pulumi.Input

	ToGetGatewayStatsDeviceGatewayStatModuleStatVcLinkArrayOutput() GetGatewayStatsDeviceGatewayStatModuleStatVcLinkArrayOutput
	ToGetGatewayStatsDeviceGatewayStatModuleStatVcLinkArrayOutputWithContext(context.Context) GetGatewayStatsDeviceGatewayStatModuleStatVcLinkArrayOutput
}

type GetGatewayStatsDeviceGatewayStatModuleStatVcLinkArray []GetGatewayStatsDeviceGatewayStatModuleStatVcLinkInput

func (GetGatewayStatsDeviceGatewayStatModuleStatVcLinkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayStatsDeviceGatewayStatModuleStatVcLink)(nil)).Elem()
}

func (i GetGatewayStatsDeviceGatewayStatModuleStatVcLinkArray) ToGetGatewayStatsDeviceGatewayStatModuleStatVcLinkArrayOutput() GetGatewayStatsDeviceGatewayStatModuleStatVcLinkArrayOutput {
	return i.ToGetGatewayStatsDeviceGatewayStatModuleStatVcLinkArrayOutputWithContext(context.Background())
}

func (i GetGatewayStatsDeviceGatewayStatModuleStatVcLinkArray) ToGetGatewayStatsDeviceGatewayStatModuleStatVcLinkArrayOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatModuleStatVcLinkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayStatsDeviceGatewayStatModuleStatVcLinkArrayOutput)
}

type GetGatewayStatsDeviceGatewayStatModuleStatVcLinkOutput struct{ *pulumi.OutputState }

func (GetGatewayStatsDeviceGatewayStatModuleStatVcLinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatModuleStatVcLink)(nil)).Elem()
}

func (o GetGatewayStatsDeviceGatewayStatModuleStatVcLinkOutput) ToGetGatewayStatsDeviceGatewayStatModuleStatVcLinkOutput() GetGatewayStatsDeviceGatewayStatModuleStatVcLinkOutput {
	return o
}

func (o GetGatewayStatsDeviceGatewayStatModuleStatVcLinkOutput) ToGetGatewayStatsDeviceGatewayStatModuleStatVcLinkOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatModuleStatVcLinkOutput {
	return o
}

func (o GetGatewayStatsDeviceGatewayStatModuleStatVcLinkOutput) NeighborModuleIdx() pulumi.IntOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatModuleStatVcLink) int { return v.NeighborModuleIdx }).(pulumi.IntOutput)
}

func (o GetGatewayStatsDeviceGatewayStatModuleStatVcLinkOutput) NeighborPortId() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatModuleStatVcLink) string { return v.NeighborPortId }).(pulumi.StringOutput)
}

func (o GetGatewayStatsDeviceGatewayStatModuleStatVcLinkOutput) PortId() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatModuleStatVcLink) string { return v.PortId }).(pulumi.StringOutput)
}

type GetGatewayStatsDeviceGatewayStatModuleStatVcLinkArrayOutput struct{ *pulumi.OutputState }

func (GetGatewayStatsDeviceGatewayStatModuleStatVcLinkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayStatsDeviceGatewayStatModuleStatVcLink)(nil)).Elem()
}

func (o GetGatewayStatsDeviceGatewayStatModuleStatVcLinkArrayOutput) ToGetGatewayStatsDeviceGatewayStatModuleStatVcLinkArrayOutput() GetGatewayStatsDeviceGatewayStatModuleStatVcLinkArrayOutput {
	return o
}

func (o GetGatewayStatsDeviceGatewayStatModuleStatVcLinkArrayOutput) ToGetGatewayStatsDeviceGatewayStatModuleStatVcLinkArrayOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatModuleStatVcLinkArrayOutput {
	return o
}

func (o GetGatewayStatsDeviceGatewayStatModuleStatVcLinkArrayOutput) Index(i pulumi.IntInput) GetGatewayStatsDeviceGatewayStatModuleStatVcLinkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGatewayStatsDeviceGatewayStatModuleStatVcLink {
		return vs[0].([]GetGatewayStatsDeviceGatewayStatModuleStatVcLink)[vs[1].(int)]
	}).(GetGatewayStatsDeviceGatewayStatModuleStatVcLinkOutput)
}

type GetGatewayStatsDeviceGatewayStatPort struct {
	// Indicates if interface is active/inactive
	Active bool `pulumi:"active"`
	// if `up`==`true` and has Authenticator role. enum: `authenticated`, `authenticating`, `held`, `init`
	AuthState string `pulumi:"authState"`
	// Indicates if interface is disabled
	Disabled bool `pulumi:"disabled"`
	ForSite  bool `pulumi:"forSite"`
	// Indicates full or half duplex
	FullDuplex bool `pulumi:"fullDuplex"`
	// Last sampled jitter of the interface
	Jitter float64 `pulumi:"jitter"`
	// Last sampled latency of the interface
	Latency float64 `pulumi:"latency"`
	// Last sampled loss of the interface
	Loss float64 `pulumi:"loss"`
	// LTE ICCID value, Check for null/empty
	LteIccid string `pulumi:"lteIccid"`
	// LTE IMEI value, Check for null/empty
	LteImei string `pulumi:"lteImei"`
	// LTE IMSI value, Check for null/empty
	LteImsi string `pulumi:"lteImsi"`
	// Number of mac addresses in the forwarding table
	MacCount int `pulumi:"macCount"`
	// Limit on number of dynamically learned macs
	MacLimit int `pulumi:"macLimit"`
	// chassis identifier of the chassis type listed
	NeighborMac string `pulumi:"neighborMac"`
	// Description supplied by the system on the interface E.g. "GigabitEthernet2/0/39"
	NeighborPortDesc string `pulumi:"neighborPortDesc"`
	// Name supplied by the system on the interface E.g. neighbor system name E.g. "Kumar-Acc-SW.mist.local"
	NeighborSystemName string `pulumi:"neighborSystemName"`
	// Is the POE configured not be disabled.
	PoeDisabled bool `pulumi:"poeDisabled"`
	// enum: `802.3af`, `802.3at`, `802.3bt`
	PoeMode string `pulumi:"poeMode"`
	// Is the device attached to POE
	PoeOn  bool   `pulumi:"poeOn"`
	PortId string `pulumi:"portId"`
	// Interface mac address
	PortMac string `pulumi:"portMac"`
	// gateway port usage. enum: `lan`
	PortUsage string `pulumi:"portUsage"`
	// Amount of power being used by the interface at the time the command is executed. Unit in watts.
	PowerDraw float64 `pulumi:"powerDraw"`
	// Broadcast input packets
	RxBcastPkts int `pulumi:"rxBcastPkts"`
	// Rate of receiving traffic, bits/seconds, last known
	RxBps int `pulumi:"rxBps"`
	// Amount of traffic received since connection
	RxBytes int `pulumi:"rxBytes"`
	// Input errors
	RxErrors int `pulumi:"rxErrors"`
	// Multicast input packets
	RxMcastPkts int `pulumi:"rxMcastPkts"`
	// Amount of packets received since connection
	RxPkts int `pulumi:"rxPkts"`
	// Port speed
	Speed int `pulumi:"speed"`
	// if `up`==`true`. enum: `alternate`, `backup`, `designated`, `root`, `root-prevented`
	StpRole string `pulumi:"stpRole"`
	// if `up`==`true`. enum: `blocking`, `disabled`, `forwarding`, `learning`, `listening`
	StpState string `pulumi:"stpState"`
	// Broadcast output packets
	TxBcastPkts int `pulumi:"txBcastPkts"`
	// Rate of transmitting traffic, bits/seconds, last known
	TxBps int `pulumi:"txBps"`
	// Amount of traffic sent since connection
	TxBytes int `pulumi:"txBytes"`
	// Output errors
	TxErrors int `pulumi:"txErrors"`
	// Multicast output packets
	TxMcastPkts int `pulumi:"txMcastPkts"`
	// Amount of packets sent since connection
	TxPkts int `pulumi:"txPkts"`
	// device type. enum: `ap`, `ble`, `gateway`, `mxedge`, `nac`, `switch`
	Type string `pulumi:"type"`
	// Indicates if interface is unconfigured
	Unconfigured bool `pulumi:"unconfigured"`
	// Indicates if interface is up
	Up bool `pulumi:"up"`
	// Optic Slot ModelName, Check for null/empty
	XcvrModel string `pulumi:"xcvrModel"`
	// Optic Slot Partnumber, Check for null/empty
	XcvrPartNumber string `pulumi:"xcvrPartNumber"`
	// Optic Slot SerialNumber, Check for null/empty
	XcvrSerial string `pulumi:"xcvrSerial"`
}

// GetGatewayStatsDeviceGatewayStatPortInput is an input type that accepts GetGatewayStatsDeviceGatewayStatPortArgs and GetGatewayStatsDeviceGatewayStatPortOutput values.
// You can construct a concrete instance of `GetGatewayStatsDeviceGatewayStatPortInput` via:
//
//	GetGatewayStatsDeviceGatewayStatPortArgs{...}
type GetGatewayStatsDeviceGatewayStatPortInput interface {
	pulumi.Input

	ToGetGatewayStatsDeviceGatewayStatPortOutput() GetGatewayStatsDeviceGatewayStatPortOutput
	ToGetGatewayStatsDeviceGatewayStatPortOutputWithContext(context.Context) GetGatewayStatsDeviceGatewayStatPortOutput
}

type GetGatewayStatsDeviceGatewayStatPortArgs struct {
	// Indicates if interface is active/inactive
	Active pulumi.BoolInput `pulumi:"active"`
	// if `up`==`true` and has Authenticator role. enum: `authenticated`, `authenticating`, `held`, `init`
	AuthState pulumi.StringInput `pulumi:"authState"`
	// Indicates if interface is disabled
	Disabled pulumi.BoolInput `pulumi:"disabled"`
	ForSite  pulumi.BoolInput `pulumi:"forSite"`
	// Indicates full or half duplex
	FullDuplex pulumi.BoolInput `pulumi:"fullDuplex"`
	// Last sampled jitter of the interface
	Jitter pulumi.Float64Input `pulumi:"jitter"`
	// Last sampled latency of the interface
	Latency pulumi.Float64Input `pulumi:"latency"`
	// Last sampled loss of the interface
	Loss pulumi.Float64Input `pulumi:"loss"`
	// LTE ICCID value, Check for null/empty
	LteIccid pulumi.StringInput `pulumi:"lteIccid"`
	// LTE IMEI value, Check for null/empty
	LteImei pulumi.StringInput `pulumi:"lteImei"`
	// LTE IMSI value, Check for null/empty
	LteImsi pulumi.StringInput `pulumi:"lteImsi"`
	// Number of mac addresses in the forwarding table
	MacCount pulumi.IntInput `pulumi:"macCount"`
	// Limit on number of dynamically learned macs
	MacLimit pulumi.IntInput `pulumi:"macLimit"`
	// chassis identifier of the chassis type listed
	NeighborMac pulumi.StringInput `pulumi:"neighborMac"`
	// Description supplied by the system on the interface E.g. "GigabitEthernet2/0/39"
	NeighborPortDesc pulumi.StringInput `pulumi:"neighborPortDesc"`
	// Name supplied by the system on the interface E.g. neighbor system name E.g. "Kumar-Acc-SW.mist.local"
	NeighborSystemName pulumi.StringInput `pulumi:"neighborSystemName"`
	// Is the POE configured not be disabled.
	PoeDisabled pulumi.BoolInput `pulumi:"poeDisabled"`
	// enum: `802.3af`, `802.3at`, `802.3bt`
	PoeMode pulumi.StringInput `pulumi:"poeMode"`
	// Is the device attached to POE
	PoeOn  pulumi.BoolInput   `pulumi:"poeOn"`
	PortId pulumi.StringInput `pulumi:"portId"`
	// Interface mac address
	PortMac pulumi.StringInput `pulumi:"portMac"`
	// gateway port usage. enum: `lan`
	PortUsage pulumi.StringInput `pulumi:"portUsage"`
	// Amount of power being used by the interface at the time the command is executed. Unit in watts.
	PowerDraw pulumi.Float64Input `pulumi:"powerDraw"`
	// Broadcast input packets
	RxBcastPkts pulumi.IntInput `pulumi:"rxBcastPkts"`
	// Rate of receiving traffic, bits/seconds, last known
	RxBps pulumi.IntInput `pulumi:"rxBps"`
	// Amount of traffic received since connection
	RxBytes pulumi.IntInput `pulumi:"rxBytes"`
	// Input errors
	RxErrors pulumi.IntInput `pulumi:"rxErrors"`
	// Multicast input packets
	RxMcastPkts pulumi.IntInput `pulumi:"rxMcastPkts"`
	// Amount of packets received since connection
	RxPkts pulumi.IntInput `pulumi:"rxPkts"`
	// Port speed
	Speed pulumi.IntInput `pulumi:"speed"`
	// if `up`==`true`. enum: `alternate`, `backup`, `designated`, `root`, `root-prevented`
	StpRole pulumi.StringInput `pulumi:"stpRole"`
	// if `up`==`true`. enum: `blocking`, `disabled`, `forwarding`, `learning`, `listening`
	StpState pulumi.StringInput `pulumi:"stpState"`
	// Broadcast output packets
	TxBcastPkts pulumi.IntInput `pulumi:"txBcastPkts"`
	// Rate of transmitting traffic, bits/seconds, last known
	TxBps pulumi.IntInput `pulumi:"txBps"`
	// Amount of traffic sent since connection
	TxBytes pulumi.IntInput `pulumi:"txBytes"`
	// Output errors
	TxErrors pulumi.IntInput `pulumi:"txErrors"`
	// Multicast output packets
	TxMcastPkts pulumi.IntInput `pulumi:"txMcastPkts"`
	// Amount of packets sent since connection
	TxPkts pulumi.IntInput `pulumi:"txPkts"`
	// device type. enum: `ap`, `ble`, `gateway`, `mxedge`, `nac`, `switch`
	Type pulumi.StringInput `pulumi:"type"`
	// Indicates if interface is unconfigured
	Unconfigured pulumi.BoolInput `pulumi:"unconfigured"`
	// Indicates if interface is up
	Up pulumi.BoolInput `pulumi:"up"`
	// Optic Slot ModelName, Check for null/empty
	XcvrModel pulumi.StringInput `pulumi:"xcvrModel"`
	// Optic Slot Partnumber, Check for null/empty
	XcvrPartNumber pulumi.StringInput `pulumi:"xcvrPartNumber"`
	// Optic Slot SerialNumber, Check for null/empty
	XcvrSerial pulumi.StringInput `pulumi:"xcvrSerial"`
}

func (GetGatewayStatsDeviceGatewayStatPortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatPort)(nil)).Elem()
}

func (i GetGatewayStatsDeviceGatewayStatPortArgs) ToGetGatewayStatsDeviceGatewayStatPortOutput() GetGatewayStatsDeviceGatewayStatPortOutput {
	return i.ToGetGatewayStatsDeviceGatewayStatPortOutputWithContext(context.Background())
}

func (i GetGatewayStatsDeviceGatewayStatPortArgs) ToGetGatewayStatsDeviceGatewayStatPortOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatPortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayStatsDeviceGatewayStatPortOutput)
}

// GetGatewayStatsDeviceGatewayStatPortArrayInput is an input type that accepts GetGatewayStatsDeviceGatewayStatPortArray and GetGatewayStatsDeviceGatewayStatPortArrayOutput values.
// You can construct a concrete instance of `GetGatewayStatsDeviceGatewayStatPortArrayInput` via:
//
//	GetGatewayStatsDeviceGatewayStatPortArray{ GetGatewayStatsDeviceGatewayStatPortArgs{...} }
type GetGatewayStatsDeviceGatewayStatPortArrayInput interface {
	pulumi.Input

	ToGetGatewayStatsDeviceGatewayStatPortArrayOutput() GetGatewayStatsDeviceGatewayStatPortArrayOutput
	ToGetGatewayStatsDeviceGatewayStatPortArrayOutputWithContext(context.Context) GetGatewayStatsDeviceGatewayStatPortArrayOutput
}

type GetGatewayStatsDeviceGatewayStatPortArray []GetGatewayStatsDeviceGatewayStatPortInput

func (GetGatewayStatsDeviceGatewayStatPortArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayStatsDeviceGatewayStatPort)(nil)).Elem()
}

func (i GetGatewayStatsDeviceGatewayStatPortArray) ToGetGatewayStatsDeviceGatewayStatPortArrayOutput() GetGatewayStatsDeviceGatewayStatPortArrayOutput {
	return i.ToGetGatewayStatsDeviceGatewayStatPortArrayOutputWithContext(context.Background())
}

func (i GetGatewayStatsDeviceGatewayStatPortArray) ToGetGatewayStatsDeviceGatewayStatPortArrayOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatPortArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayStatsDeviceGatewayStatPortArrayOutput)
}

type GetGatewayStatsDeviceGatewayStatPortOutput struct{ *pulumi.OutputState }

func (GetGatewayStatsDeviceGatewayStatPortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatPort)(nil)).Elem()
}

func (o GetGatewayStatsDeviceGatewayStatPortOutput) ToGetGatewayStatsDeviceGatewayStatPortOutput() GetGatewayStatsDeviceGatewayStatPortOutput {
	return o
}

func (o GetGatewayStatsDeviceGatewayStatPortOutput) ToGetGatewayStatsDeviceGatewayStatPortOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatPortOutput {
	return o
}

// Indicates if interface is active/inactive
func (o GetGatewayStatsDeviceGatewayStatPortOutput) Active() pulumi.BoolOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatPort) bool { return v.Active }).(pulumi.BoolOutput)
}

// if `up`==`true` and has Authenticator role. enum: `authenticated`, `authenticating`, `held`, `init`
func (o GetGatewayStatsDeviceGatewayStatPortOutput) AuthState() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatPort) string { return v.AuthState }).(pulumi.StringOutput)
}

// Indicates if interface is disabled
func (o GetGatewayStatsDeviceGatewayStatPortOutput) Disabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatPort) bool { return v.Disabled }).(pulumi.BoolOutput)
}

func (o GetGatewayStatsDeviceGatewayStatPortOutput) ForSite() pulumi.BoolOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatPort) bool { return v.ForSite }).(pulumi.BoolOutput)
}

// Indicates full or half duplex
func (o GetGatewayStatsDeviceGatewayStatPortOutput) FullDuplex() pulumi.BoolOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatPort) bool { return v.FullDuplex }).(pulumi.BoolOutput)
}

// Last sampled jitter of the interface
func (o GetGatewayStatsDeviceGatewayStatPortOutput) Jitter() pulumi.Float64Output {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatPort) float64 { return v.Jitter }).(pulumi.Float64Output)
}

// Last sampled latency of the interface
func (o GetGatewayStatsDeviceGatewayStatPortOutput) Latency() pulumi.Float64Output {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatPort) float64 { return v.Latency }).(pulumi.Float64Output)
}

// Last sampled loss of the interface
func (o GetGatewayStatsDeviceGatewayStatPortOutput) Loss() pulumi.Float64Output {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatPort) float64 { return v.Loss }).(pulumi.Float64Output)
}

// LTE ICCID value, Check for null/empty
func (o GetGatewayStatsDeviceGatewayStatPortOutput) LteIccid() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatPort) string { return v.LteIccid }).(pulumi.StringOutput)
}

// LTE IMEI value, Check for null/empty
func (o GetGatewayStatsDeviceGatewayStatPortOutput) LteImei() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatPort) string { return v.LteImei }).(pulumi.StringOutput)
}

// LTE IMSI value, Check for null/empty
func (o GetGatewayStatsDeviceGatewayStatPortOutput) LteImsi() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatPort) string { return v.LteImsi }).(pulumi.StringOutput)
}

// Number of mac addresses in the forwarding table
func (o GetGatewayStatsDeviceGatewayStatPortOutput) MacCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatPort) int { return v.MacCount }).(pulumi.IntOutput)
}

// Limit on number of dynamically learned macs
func (o GetGatewayStatsDeviceGatewayStatPortOutput) MacLimit() pulumi.IntOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatPort) int { return v.MacLimit }).(pulumi.IntOutput)
}

// chassis identifier of the chassis type listed
func (o GetGatewayStatsDeviceGatewayStatPortOutput) NeighborMac() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatPort) string { return v.NeighborMac }).(pulumi.StringOutput)
}

// Description supplied by the system on the interface E.g. "GigabitEthernet2/0/39"
func (o GetGatewayStatsDeviceGatewayStatPortOutput) NeighborPortDesc() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatPort) string { return v.NeighborPortDesc }).(pulumi.StringOutput)
}

// Name supplied by the system on the interface E.g. neighbor system name E.g. "Kumar-Acc-SW.mist.local"
func (o GetGatewayStatsDeviceGatewayStatPortOutput) NeighborSystemName() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatPort) string { return v.NeighborSystemName }).(pulumi.StringOutput)
}

// Is the POE configured not be disabled.
func (o GetGatewayStatsDeviceGatewayStatPortOutput) PoeDisabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatPort) bool { return v.PoeDisabled }).(pulumi.BoolOutput)
}

// enum: `802.3af`, `802.3at`, `802.3bt`
func (o GetGatewayStatsDeviceGatewayStatPortOutput) PoeMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatPort) string { return v.PoeMode }).(pulumi.StringOutput)
}

// Is the device attached to POE
func (o GetGatewayStatsDeviceGatewayStatPortOutput) PoeOn() pulumi.BoolOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatPort) bool { return v.PoeOn }).(pulumi.BoolOutput)
}

func (o GetGatewayStatsDeviceGatewayStatPortOutput) PortId() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatPort) string { return v.PortId }).(pulumi.StringOutput)
}

// Interface mac address
func (o GetGatewayStatsDeviceGatewayStatPortOutput) PortMac() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatPort) string { return v.PortMac }).(pulumi.StringOutput)
}

// gateway port usage. enum: `lan`
func (o GetGatewayStatsDeviceGatewayStatPortOutput) PortUsage() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatPort) string { return v.PortUsage }).(pulumi.StringOutput)
}

// Amount of power being used by the interface at the time the command is executed. Unit in watts.
func (o GetGatewayStatsDeviceGatewayStatPortOutput) PowerDraw() pulumi.Float64Output {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatPort) float64 { return v.PowerDraw }).(pulumi.Float64Output)
}

// Broadcast input packets
func (o GetGatewayStatsDeviceGatewayStatPortOutput) RxBcastPkts() pulumi.IntOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatPort) int { return v.RxBcastPkts }).(pulumi.IntOutput)
}

// Rate of receiving traffic, bits/seconds, last known
func (o GetGatewayStatsDeviceGatewayStatPortOutput) RxBps() pulumi.IntOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatPort) int { return v.RxBps }).(pulumi.IntOutput)
}

// Amount of traffic received since connection
func (o GetGatewayStatsDeviceGatewayStatPortOutput) RxBytes() pulumi.IntOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatPort) int { return v.RxBytes }).(pulumi.IntOutput)
}

// Input errors
func (o GetGatewayStatsDeviceGatewayStatPortOutput) RxErrors() pulumi.IntOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatPort) int { return v.RxErrors }).(pulumi.IntOutput)
}

// Multicast input packets
func (o GetGatewayStatsDeviceGatewayStatPortOutput) RxMcastPkts() pulumi.IntOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatPort) int { return v.RxMcastPkts }).(pulumi.IntOutput)
}

// Amount of packets received since connection
func (o GetGatewayStatsDeviceGatewayStatPortOutput) RxPkts() pulumi.IntOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatPort) int { return v.RxPkts }).(pulumi.IntOutput)
}

// Port speed
func (o GetGatewayStatsDeviceGatewayStatPortOutput) Speed() pulumi.IntOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatPort) int { return v.Speed }).(pulumi.IntOutput)
}

// if `up`==`true`. enum: `alternate`, `backup`, `designated`, `root`, `root-prevented`
func (o GetGatewayStatsDeviceGatewayStatPortOutput) StpRole() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatPort) string { return v.StpRole }).(pulumi.StringOutput)
}

// if `up`==`true`. enum: `blocking`, `disabled`, `forwarding`, `learning`, `listening`
func (o GetGatewayStatsDeviceGatewayStatPortOutput) StpState() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatPort) string { return v.StpState }).(pulumi.StringOutput)
}

// Broadcast output packets
func (o GetGatewayStatsDeviceGatewayStatPortOutput) TxBcastPkts() pulumi.IntOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatPort) int { return v.TxBcastPkts }).(pulumi.IntOutput)
}

// Rate of transmitting traffic, bits/seconds, last known
func (o GetGatewayStatsDeviceGatewayStatPortOutput) TxBps() pulumi.IntOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatPort) int { return v.TxBps }).(pulumi.IntOutput)
}

// Amount of traffic sent since connection
func (o GetGatewayStatsDeviceGatewayStatPortOutput) TxBytes() pulumi.IntOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatPort) int { return v.TxBytes }).(pulumi.IntOutput)
}

// Output errors
func (o GetGatewayStatsDeviceGatewayStatPortOutput) TxErrors() pulumi.IntOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatPort) int { return v.TxErrors }).(pulumi.IntOutput)
}

// Multicast output packets
func (o GetGatewayStatsDeviceGatewayStatPortOutput) TxMcastPkts() pulumi.IntOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatPort) int { return v.TxMcastPkts }).(pulumi.IntOutput)
}

// Amount of packets sent since connection
func (o GetGatewayStatsDeviceGatewayStatPortOutput) TxPkts() pulumi.IntOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatPort) int { return v.TxPkts }).(pulumi.IntOutput)
}

// device type. enum: `ap`, `ble`, `gateway`, `mxedge`, `nac`, `switch`
func (o GetGatewayStatsDeviceGatewayStatPortOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatPort) string { return v.Type }).(pulumi.StringOutput)
}

// Indicates if interface is unconfigured
func (o GetGatewayStatsDeviceGatewayStatPortOutput) Unconfigured() pulumi.BoolOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatPort) bool { return v.Unconfigured }).(pulumi.BoolOutput)
}

// Indicates if interface is up
func (o GetGatewayStatsDeviceGatewayStatPortOutput) Up() pulumi.BoolOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatPort) bool { return v.Up }).(pulumi.BoolOutput)
}

// Optic Slot ModelName, Check for null/empty
func (o GetGatewayStatsDeviceGatewayStatPortOutput) XcvrModel() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatPort) string { return v.XcvrModel }).(pulumi.StringOutput)
}

// Optic Slot Partnumber, Check for null/empty
func (o GetGatewayStatsDeviceGatewayStatPortOutput) XcvrPartNumber() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatPort) string { return v.XcvrPartNumber }).(pulumi.StringOutput)
}

// Optic Slot SerialNumber, Check for null/empty
func (o GetGatewayStatsDeviceGatewayStatPortOutput) XcvrSerial() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatPort) string { return v.XcvrSerial }).(pulumi.StringOutput)
}

type GetGatewayStatsDeviceGatewayStatPortArrayOutput struct{ *pulumi.OutputState }

func (GetGatewayStatsDeviceGatewayStatPortArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayStatsDeviceGatewayStatPort)(nil)).Elem()
}

func (o GetGatewayStatsDeviceGatewayStatPortArrayOutput) ToGetGatewayStatsDeviceGatewayStatPortArrayOutput() GetGatewayStatsDeviceGatewayStatPortArrayOutput {
	return o
}

func (o GetGatewayStatsDeviceGatewayStatPortArrayOutput) ToGetGatewayStatsDeviceGatewayStatPortArrayOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatPortArrayOutput {
	return o
}

func (o GetGatewayStatsDeviceGatewayStatPortArrayOutput) Index(i pulumi.IntInput) GetGatewayStatsDeviceGatewayStatPortOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGatewayStatsDeviceGatewayStatPort {
		return vs[0].([]GetGatewayStatsDeviceGatewayStatPort)[vs[1].(int)]
	}).(GetGatewayStatsDeviceGatewayStatPortOutput)
}

type GetGatewayStatsDeviceGatewayStatRouteSummaryStats struct {
	FibRoutes                 int `pulumi:"fibRoutes"`
	MaxUnicastRoutesSupported int `pulumi:"maxUnicastRoutesSupported"`
	RibRoutes                 int `pulumi:"ribRoutes"`
	TotalRoutes               int `pulumi:"totalRoutes"`
}

// GetGatewayStatsDeviceGatewayStatRouteSummaryStatsInput is an input type that accepts GetGatewayStatsDeviceGatewayStatRouteSummaryStatsArgs and GetGatewayStatsDeviceGatewayStatRouteSummaryStatsOutput values.
// You can construct a concrete instance of `GetGatewayStatsDeviceGatewayStatRouteSummaryStatsInput` via:
//
//	GetGatewayStatsDeviceGatewayStatRouteSummaryStatsArgs{...}
type GetGatewayStatsDeviceGatewayStatRouteSummaryStatsInput interface {
	pulumi.Input

	ToGetGatewayStatsDeviceGatewayStatRouteSummaryStatsOutput() GetGatewayStatsDeviceGatewayStatRouteSummaryStatsOutput
	ToGetGatewayStatsDeviceGatewayStatRouteSummaryStatsOutputWithContext(context.Context) GetGatewayStatsDeviceGatewayStatRouteSummaryStatsOutput
}

type GetGatewayStatsDeviceGatewayStatRouteSummaryStatsArgs struct {
	FibRoutes                 pulumi.IntInput `pulumi:"fibRoutes"`
	MaxUnicastRoutesSupported pulumi.IntInput `pulumi:"maxUnicastRoutesSupported"`
	RibRoutes                 pulumi.IntInput `pulumi:"ribRoutes"`
	TotalRoutes               pulumi.IntInput `pulumi:"totalRoutes"`
}

func (GetGatewayStatsDeviceGatewayStatRouteSummaryStatsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatRouteSummaryStats)(nil)).Elem()
}

func (i GetGatewayStatsDeviceGatewayStatRouteSummaryStatsArgs) ToGetGatewayStatsDeviceGatewayStatRouteSummaryStatsOutput() GetGatewayStatsDeviceGatewayStatRouteSummaryStatsOutput {
	return i.ToGetGatewayStatsDeviceGatewayStatRouteSummaryStatsOutputWithContext(context.Background())
}

func (i GetGatewayStatsDeviceGatewayStatRouteSummaryStatsArgs) ToGetGatewayStatsDeviceGatewayStatRouteSummaryStatsOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatRouteSummaryStatsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayStatsDeviceGatewayStatRouteSummaryStatsOutput)
}

type GetGatewayStatsDeviceGatewayStatRouteSummaryStatsOutput struct{ *pulumi.OutputState }

func (GetGatewayStatsDeviceGatewayStatRouteSummaryStatsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatRouteSummaryStats)(nil)).Elem()
}

func (o GetGatewayStatsDeviceGatewayStatRouteSummaryStatsOutput) ToGetGatewayStatsDeviceGatewayStatRouteSummaryStatsOutput() GetGatewayStatsDeviceGatewayStatRouteSummaryStatsOutput {
	return o
}

func (o GetGatewayStatsDeviceGatewayStatRouteSummaryStatsOutput) ToGetGatewayStatsDeviceGatewayStatRouteSummaryStatsOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatRouteSummaryStatsOutput {
	return o
}

func (o GetGatewayStatsDeviceGatewayStatRouteSummaryStatsOutput) FibRoutes() pulumi.IntOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatRouteSummaryStats) int { return v.FibRoutes }).(pulumi.IntOutput)
}

func (o GetGatewayStatsDeviceGatewayStatRouteSummaryStatsOutput) MaxUnicastRoutesSupported() pulumi.IntOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatRouteSummaryStats) int { return v.MaxUnicastRoutesSupported }).(pulumi.IntOutput)
}

func (o GetGatewayStatsDeviceGatewayStatRouteSummaryStatsOutput) RibRoutes() pulumi.IntOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatRouteSummaryStats) int { return v.RibRoutes }).(pulumi.IntOutput)
}

func (o GetGatewayStatsDeviceGatewayStatRouteSummaryStatsOutput) TotalRoutes() pulumi.IntOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatRouteSummaryStats) int { return v.TotalRoutes }).(pulumi.IntOutput)
}

type GetGatewayStatsDeviceGatewayStatService2Stat struct {
	AshVersion          string `pulumi:"ashVersion"`
	CiaVersion          string `pulumi:"ciaVersion"`
	EmberVersion        string `pulumi:"emberVersion"`
	IpsecClientVersion  string `pulumi:"ipsecClientVersion"`
	MistAgentVersion    string `pulumi:"mistAgentVersion"`
	PackageVersion      string `pulumi:"packageVersion"`
	TestingToolsVersion string `pulumi:"testingToolsVersion"`
	WheeljackVersion    string `pulumi:"wheeljackVersion"`
}

// GetGatewayStatsDeviceGatewayStatService2StatInput is an input type that accepts GetGatewayStatsDeviceGatewayStatService2StatArgs and GetGatewayStatsDeviceGatewayStatService2StatOutput values.
// You can construct a concrete instance of `GetGatewayStatsDeviceGatewayStatService2StatInput` via:
//
//	GetGatewayStatsDeviceGatewayStatService2StatArgs{...}
type GetGatewayStatsDeviceGatewayStatService2StatInput interface {
	pulumi.Input

	ToGetGatewayStatsDeviceGatewayStatService2StatOutput() GetGatewayStatsDeviceGatewayStatService2StatOutput
	ToGetGatewayStatsDeviceGatewayStatService2StatOutputWithContext(context.Context) GetGatewayStatsDeviceGatewayStatService2StatOutput
}

type GetGatewayStatsDeviceGatewayStatService2StatArgs struct {
	AshVersion          pulumi.StringInput `pulumi:"ashVersion"`
	CiaVersion          pulumi.StringInput `pulumi:"ciaVersion"`
	EmberVersion        pulumi.StringInput `pulumi:"emberVersion"`
	IpsecClientVersion  pulumi.StringInput `pulumi:"ipsecClientVersion"`
	MistAgentVersion    pulumi.StringInput `pulumi:"mistAgentVersion"`
	PackageVersion      pulumi.StringInput `pulumi:"packageVersion"`
	TestingToolsVersion pulumi.StringInput `pulumi:"testingToolsVersion"`
	WheeljackVersion    pulumi.StringInput `pulumi:"wheeljackVersion"`
}

func (GetGatewayStatsDeviceGatewayStatService2StatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatService2Stat)(nil)).Elem()
}

func (i GetGatewayStatsDeviceGatewayStatService2StatArgs) ToGetGatewayStatsDeviceGatewayStatService2StatOutput() GetGatewayStatsDeviceGatewayStatService2StatOutput {
	return i.ToGetGatewayStatsDeviceGatewayStatService2StatOutputWithContext(context.Background())
}

func (i GetGatewayStatsDeviceGatewayStatService2StatArgs) ToGetGatewayStatsDeviceGatewayStatService2StatOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatService2StatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayStatsDeviceGatewayStatService2StatOutput)
}

// GetGatewayStatsDeviceGatewayStatService2StatMapInput is an input type that accepts GetGatewayStatsDeviceGatewayStatService2StatMap and GetGatewayStatsDeviceGatewayStatService2StatMapOutput values.
// You can construct a concrete instance of `GetGatewayStatsDeviceGatewayStatService2StatMapInput` via:
//
//	GetGatewayStatsDeviceGatewayStatService2StatMap{ "key": GetGatewayStatsDeviceGatewayStatService2StatArgs{...} }
type GetGatewayStatsDeviceGatewayStatService2StatMapInput interface {
	pulumi.Input

	ToGetGatewayStatsDeviceGatewayStatService2StatMapOutput() GetGatewayStatsDeviceGatewayStatService2StatMapOutput
	ToGetGatewayStatsDeviceGatewayStatService2StatMapOutputWithContext(context.Context) GetGatewayStatsDeviceGatewayStatService2StatMapOutput
}

type GetGatewayStatsDeviceGatewayStatService2StatMap map[string]GetGatewayStatsDeviceGatewayStatService2StatInput

func (GetGatewayStatsDeviceGatewayStatService2StatMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]GetGatewayStatsDeviceGatewayStatService2Stat)(nil)).Elem()
}

func (i GetGatewayStatsDeviceGatewayStatService2StatMap) ToGetGatewayStatsDeviceGatewayStatService2StatMapOutput() GetGatewayStatsDeviceGatewayStatService2StatMapOutput {
	return i.ToGetGatewayStatsDeviceGatewayStatService2StatMapOutputWithContext(context.Background())
}

func (i GetGatewayStatsDeviceGatewayStatService2StatMap) ToGetGatewayStatsDeviceGatewayStatService2StatMapOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatService2StatMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayStatsDeviceGatewayStatService2StatMapOutput)
}

type GetGatewayStatsDeviceGatewayStatService2StatOutput struct{ *pulumi.OutputState }

func (GetGatewayStatsDeviceGatewayStatService2StatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatService2Stat)(nil)).Elem()
}

func (o GetGatewayStatsDeviceGatewayStatService2StatOutput) ToGetGatewayStatsDeviceGatewayStatService2StatOutput() GetGatewayStatsDeviceGatewayStatService2StatOutput {
	return o
}

func (o GetGatewayStatsDeviceGatewayStatService2StatOutput) ToGetGatewayStatsDeviceGatewayStatService2StatOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatService2StatOutput {
	return o
}

func (o GetGatewayStatsDeviceGatewayStatService2StatOutput) AshVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatService2Stat) string { return v.AshVersion }).(pulumi.StringOutput)
}

func (o GetGatewayStatsDeviceGatewayStatService2StatOutput) CiaVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatService2Stat) string { return v.CiaVersion }).(pulumi.StringOutput)
}

func (o GetGatewayStatsDeviceGatewayStatService2StatOutput) EmberVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatService2Stat) string { return v.EmberVersion }).(pulumi.StringOutput)
}

func (o GetGatewayStatsDeviceGatewayStatService2StatOutput) IpsecClientVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatService2Stat) string { return v.IpsecClientVersion }).(pulumi.StringOutput)
}

func (o GetGatewayStatsDeviceGatewayStatService2StatOutput) MistAgentVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatService2Stat) string { return v.MistAgentVersion }).(pulumi.StringOutput)
}

func (o GetGatewayStatsDeviceGatewayStatService2StatOutput) PackageVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatService2Stat) string { return v.PackageVersion }).(pulumi.StringOutput)
}

func (o GetGatewayStatsDeviceGatewayStatService2StatOutput) TestingToolsVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatService2Stat) string { return v.TestingToolsVersion }).(pulumi.StringOutput)
}

func (o GetGatewayStatsDeviceGatewayStatService2StatOutput) WheeljackVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatService2Stat) string { return v.WheeljackVersion }).(pulumi.StringOutput)
}

type GetGatewayStatsDeviceGatewayStatService2StatMapOutput struct{ *pulumi.OutputState }

func (GetGatewayStatsDeviceGatewayStatService2StatMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]GetGatewayStatsDeviceGatewayStatService2Stat)(nil)).Elem()
}

func (o GetGatewayStatsDeviceGatewayStatService2StatMapOutput) ToGetGatewayStatsDeviceGatewayStatService2StatMapOutput() GetGatewayStatsDeviceGatewayStatService2StatMapOutput {
	return o
}

func (o GetGatewayStatsDeviceGatewayStatService2StatMapOutput) ToGetGatewayStatsDeviceGatewayStatService2StatMapOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatService2StatMapOutput {
	return o
}

func (o GetGatewayStatsDeviceGatewayStatService2StatMapOutput) MapIndex(k pulumi.StringInput) GetGatewayStatsDeviceGatewayStatService2StatOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) GetGatewayStatsDeviceGatewayStatService2Stat {
		return vs[0].(map[string]GetGatewayStatsDeviceGatewayStatService2Stat)[vs[1].(string)]
	}).(GetGatewayStatsDeviceGatewayStatService2StatOutput)
}

type GetGatewayStatsDeviceGatewayStatServiceStat struct {
	AshVersion          string `pulumi:"ashVersion"`
	CiaVersion          string `pulumi:"ciaVersion"`
	EmberVersion        string `pulumi:"emberVersion"`
	IpsecClientVersion  string `pulumi:"ipsecClientVersion"`
	MistAgentVersion    string `pulumi:"mistAgentVersion"`
	PackageVersion      string `pulumi:"packageVersion"`
	TestingToolsVersion string `pulumi:"testingToolsVersion"`
	WheeljackVersion    string `pulumi:"wheeljackVersion"`
}

// GetGatewayStatsDeviceGatewayStatServiceStatInput is an input type that accepts GetGatewayStatsDeviceGatewayStatServiceStatArgs and GetGatewayStatsDeviceGatewayStatServiceStatOutput values.
// You can construct a concrete instance of `GetGatewayStatsDeviceGatewayStatServiceStatInput` via:
//
//	GetGatewayStatsDeviceGatewayStatServiceStatArgs{...}
type GetGatewayStatsDeviceGatewayStatServiceStatInput interface {
	pulumi.Input

	ToGetGatewayStatsDeviceGatewayStatServiceStatOutput() GetGatewayStatsDeviceGatewayStatServiceStatOutput
	ToGetGatewayStatsDeviceGatewayStatServiceStatOutputWithContext(context.Context) GetGatewayStatsDeviceGatewayStatServiceStatOutput
}

type GetGatewayStatsDeviceGatewayStatServiceStatArgs struct {
	AshVersion          pulumi.StringInput `pulumi:"ashVersion"`
	CiaVersion          pulumi.StringInput `pulumi:"ciaVersion"`
	EmberVersion        pulumi.StringInput `pulumi:"emberVersion"`
	IpsecClientVersion  pulumi.StringInput `pulumi:"ipsecClientVersion"`
	MistAgentVersion    pulumi.StringInput `pulumi:"mistAgentVersion"`
	PackageVersion      pulumi.StringInput `pulumi:"packageVersion"`
	TestingToolsVersion pulumi.StringInput `pulumi:"testingToolsVersion"`
	WheeljackVersion    pulumi.StringInput `pulumi:"wheeljackVersion"`
}

func (GetGatewayStatsDeviceGatewayStatServiceStatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatServiceStat)(nil)).Elem()
}

func (i GetGatewayStatsDeviceGatewayStatServiceStatArgs) ToGetGatewayStatsDeviceGatewayStatServiceStatOutput() GetGatewayStatsDeviceGatewayStatServiceStatOutput {
	return i.ToGetGatewayStatsDeviceGatewayStatServiceStatOutputWithContext(context.Background())
}

func (i GetGatewayStatsDeviceGatewayStatServiceStatArgs) ToGetGatewayStatsDeviceGatewayStatServiceStatOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatServiceStatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayStatsDeviceGatewayStatServiceStatOutput)
}

// GetGatewayStatsDeviceGatewayStatServiceStatMapInput is an input type that accepts GetGatewayStatsDeviceGatewayStatServiceStatMap and GetGatewayStatsDeviceGatewayStatServiceStatMapOutput values.
// You can construct a concrete instance of `GetGatewayStatsDeviceGatewayStatServiceStatMapInput` via:
//
//	GetGatewayStatsDeviceGatewayStatServiceStatMap{ "key": GetGatewayStatsDeviceGatewayStatServiceStatArgs{...} }
type GetGatewayStatsDeviceGatewayStatServiceStatMapInput interface {
	pulumi.Input

	ToGetGatewayStatsDeviceGatewayStatServiceStatMapOutput() GetGatewayStatsDeviceGatewayStatServiceStatMapOutput
	ToGetGatewayStatsDeviceGatewayStatServiceStatMapOutputWithContext(context.Context) GetGatewayStatsDeviceGatewayStatServiceStatMapOutput
}

type GetGatewayStatsDeviceGatewayStatServiceStatMap map[string]GetGatewayStatsDeviceGatewayStatServiceStatInput

func (GetGatewayStatsDeviceGatewayStatServiceStatMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]GetGatewayStatsDeviceGatewayStatServiceStat)(nil)).Elem()
}

func (i GetGatewayStatsDeviceGatewayStatServiceStatMap) ToGetGatewayStatsDeviceGatewayStatServiceStatMapOutput() GetGatewayStatsDeviceGatewayStatServiceStatMapOutput {
	return i.ToGetGatewayStatsDeviceGatewayStatServiceStatMapOutputWithContext(context.Background())
}

func (i GetGatewayStatsDeviceGatewayStatServiceStatMap) ToGetGatewayStatsDeviceGatewayStatServiceStatMapOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatServiceStatMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayStatsDeviceGatewayStatServiceStatMapOutput)
}

type GetGatewayStatsDeviceGatewayStatServiceStatOutput struct{ *pulumi.OutputState }

func (GetGatewayStatsDeviceGatewayStatServiceStatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatServiceStat)(nil)).Elem()
}

func (o GetGatewayStatsDeviceGatewayStatServiceStatOutput) ToGetGatewayStatsDeviceGatewayStatServiceStatOutput() GetGatewayStatsDeviceGatewayStatServiceStatOutput {
	return o
}

func (o GetGatewayStatsDeviceGatewayStatServiceStatOutput) ToGetGatewayStatsDeviceGatewayStatServiceStatOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatServiceStatOutput {
	return o
}

func (o GetGatewayStatsDeviceGatewayStatServiceStatOutput) AshVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatServiceStat) string { return v.AshVersion }).(pulumi.StringOutput)
}

func (o GetGatewayStatsDeviceGatewayStatServiceStatOutput) CiaVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatServiceStat) string { return v.CiaVersion }).(pulumi.StringOutput)
}

func (o GetGatewayStatsDeviceGatewayStatServiceStatOutput) EmberVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatServiceStat) string { return v.EmberVersion }).(pulumi.StringOutput)
}

func (o GetGatewayStatsDeviceGatewayStatServiceStatOutput) IpsecClientVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatServiceStat) string { return v.IpsecClientVersion }).(pulumi.StringOutput)
}

func (o GetGatewayStatsDeviceGatewayStatServiceStatOutput) MistAgentVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatServiceStat) string { return v.MistAgentVersion }).(pulumi.StringOutput)
}

func (o GetGatewayStatsDeviceGatewayStatServiceStatOutput) PackageVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatServiceStat) string { return v.PackageVersion }).(pulumi.StringOutput)
}

func (o GetGatewayStatsDeviceGatewayStatServiceStatOutput) TestingToolsVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatServiceStat) string { return v.TestingToolsVersion }).(pulumi.StringOutput)
}

func (o GetGatewayStatsDeviceGatewayStatServiceStatOutput) WheeljackVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatServiceStat) string { return v.WheeljackVersion }).(pulumi.StringOutput)
}

type GetGatewayStatsDeviceGatewayStatServiceStatMapOutput struct{ *pulumi.OutputState }

func (GetGatewayStatsDeviceGatewayStatServiceStatMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]GetGatewayStatsDeviceGatewayStatServiceStat)(nil)).Elem()
}

func (o GetGatewayStatsDeviceGatewayStatServiceStatMapOutput) ToGetGatewayStatsDeviceGatewayStatServiceStatMapOutput() GetGatewayStatsDeviceGatewayStatServiceStatMapOutput {
	return o
}

func (o GetGatewayStatsDeviceGatewayStatServiceStatMapOutput) ToGetGatewayStatsDeviceGatewayStatServiceStatMapOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatServiceStatMapOutput {
	return o
}

func (o GetGatewayStatsDeviceGatewayStatServiceStatMapOutput) MapIndex(k pulumi.StringInput) GetGatewayStatsDeviceGatewayStatServiceStatOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) GetGatewayStatsDeviceGatewayStatServiceStat {
		return vs[0].(map[string]GetGatewayStatsDeviceGatewayStatServiceStat)[vs[1].(string)]
	}).(GetGatewayStatsDeviceGatewayStatServiceStatOutput)
}

type GetGatewayStatsDeviceGatewayStatServiceStatus struct {
	AppidInstallResult    string `pulumi:"appidInstallResult"`
	AppidInstallTimestamp string `pulumi:"appidInstallTimestamp"`
	AppidStatus           string `pulumi:"appidStatus"`
	AppidVersion          int    `pulumi:"appidVersion"`
	EwfStatus             string `pulumi:"ewfStatus"`
	IdpInstallResult      string `pulumi:"idpInstallResult"`
	IdpInstallTimestamp   string `pulumi:"idpInstallTimestamp"`
	IdpPolicy             string `pulumi:"idpPolicy"`
	IdpStatus             string `pulumi:"idpStatus"`
	IdpUpdateTimestamp    string `pulumi:"idpUpdateTimestamp"`
}

// GetGatewayStatsDeviceGatewayStatServiceStatusInput is an input type that accepts GetGatewayStatsDeviceGatewayStatServiceStatusArgs and GetGatewayStatsDeviceGatewayStatServiceStatusOutput values.
// You can construct a concrete instance of `GetGatewayStatsDeviceGatewayStatServiceStatusInput` via:
//
//	GetGatewayStatsDeviceGatewayStatServiceStatusArgs{...}
type GetGatewayStatsDeviceGatewayStatServiceStatusInput interface {
	pulumi.Input

	ToGetGatewayStatsDeviceGatewayStatServiceStatusOutput() GetGatewayStatsDeviceGatewayStatServiceStatusOutput
	ToGetGatewayStatsDeviceGatewayStatServiceStatusOutputWithContext(context.Context) GetGatewayStatsDeviceGatewayStatServiceStatusOutput
}

type GetGatewayStatsDeviceGatewayStatServiceStatusArgs struct {
	AppidInstallResult    pulumi.StringInput `pulumi:"appidInstallResult"`
	AppidInstallTimestamp pulumi.StringInput `pulumi:"appidInstallTimestamp"`
	AppidStatus           pulumi.StringInput `pulumi:"appidStatus"`
	AppidVersion          pulumi.IntInput    `pulumi:"appidVersion"`
	EwfStatus             pulumi.StringInput `pulumi:"ewfStatus"`
	IdpInstallResult      pulumi.StringInput `pulumi:"idpInstallResult"`
	IdpInstallTimestamp   pulumi.StringInput `pulumi:"idpInstallTimestamp"`
	IdpPolicy             pulumi.StringInput `pulumi:"idpPolicy"`
	IdpStatus             pulumi.StringInput `pulumi:"idpStatus"`
	IdpUpdateTimestamp    pulumi.StringInput `pulumi:"idpUpdateTimestamp"`
}

func (GetGatewayStatsDeviceGatewayStatServiceStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatServiceStatus)(nil)).Elem()
}

func (i GetGatewayStatsDeviceGatewayStatServiceStatusArgs) ToGetGatewayStatsDeviceGatewayStatServiceStatusOutput() GetGatewayStatsDeviceGatewayStatServiceStatusOutput {
	return i.ToGetGatewayStatsDeviceGatewayStatServiceStatusOutputWithContext(context.Background())
}

func (i GetGatewayStatsDeviceGatewayStatServiceStatusArgs) ToGetGatewayStatsDeviceGatewayStatServiceStatusOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatServiceStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayStatsDeviceGatewayStatServiceStatusOutput)
}

type GetGatewayStatsDeviceGatewayStatServiceStatusOutput struct{ *pulumi.OutputState }

func (GetGatewayStatsDeviceGatewayStatServiceStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatServiceStatus)(nil)).Elem()
}

func (o GetGatewayStatsDeviceGatewayStatServiceStatusOutput) ToGetGatewayStatsDeviceGatewayStatServiceStatusOutput() GetGatewayStatsDeviceGatewayStatServiceStatusOutput {
	return o
}

func (o GetGatewayStatsDeviceGatewayStatServiceStatusOutput) ToGetGatewayStatsDeviceGatewayStatServiceStatusOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatServiceStatusOutput {
	return o
}

func (o GetGatewayStatsDeviceGatewayStatServiceStatusOutput) AppidInstallResult() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatServiceStatus) string { return v.AppidInstallResult }).(pulumi.StringOutput)
}

func (o GetGatewayStatsDeviceGatewayStatServiceStatusOutput) AppidInstallTimestamp() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatServiceStatus) string { return v.AppidInstallTimestamp }).(pulumi.StringOutput)
}

func (o GetGatewayStatsDeviceGatewayStatServiceStatusOutput) AppidStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatServiceStatus) string { return v.AppidStatus }).(pulumi.StringOutput)
}

func (o GetGatewayStatsDeviceGatewayStatServiceStatusOutput) AppidVersion() pulumi.IntOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatServiceStatus) int { return v.AppidVersion }).(pulumi.IntOutput)
}

func (o GetGatewayStatsDeviceGatewayStatServiceStatusOutput) EwfStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatServiceStatus) string { return v.EwfStatus }).(pulumi.StringOutput)
}

func (o GetGatewayStatsDeviceGatewayStatServiceStatusOutput) IdpInstallResult() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatServiceStatus) string { return v.IdpInstallResult }).(pulumi.StringOutput)
}

func (o GetGatewayStatsDeviceGatewayStatServiceStatusOutput) IdpInstallTimestamp() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatServiceStatus) string { return v.IdpInstallTimestamp }).(pulumi.StringOutput)
}

func (o GetGatewayStatsDeviceGatewayStatServiceStatusOutput) IdpPolicy() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatServiceStatus) string { return v.IdpPolicy }).(pulumi.StringOutput)
}

func (o GetGatewayStatsDeviceGatewayStatServiceStatusOutput) IdpStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatServiceStatus) string { return v.IdpStatus }).(pulumi.StringOutput)
}

func (o GetGatewayStatsDeviceGatewayStatServiceStatusOutput) IdpUpdateTimestamp() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatServiceStatus) string { return v.IdpUpdateTimestamp }).(pulumi.StringOutput)
}

type GetGatewayStatsDeviceGatewayStatSpu2Stat struct {
	SpuCpu            int `pulumi:"spuCpu"`
	SpuCurrentSession int `pulumi:"spuCurrentSession"`
	SpuMaxSession     int `pulumi:"spuMaxSession"`
	SpuMemory         int `pulumi:"spuMemory"`
	SpuPendingSession int `pulumi:"spuPendingSession"`
	SpuValidSession   int `pulumi:"spuValidSession"`
}

// GetGatewayStatsDeviceGatewayStatSpu2StatInput is an input type that accepts GetGatewayStatsDeviceGatewayStatSpu2StatArgs and GetGatewayStatsDeviceGatewayStatSpu2StatOutput values.
// You can construct a concrete instance of `GetGatewayStatsDeviceGatewayStatSpu2StatInput` via:
//
//	GetGatewayStatsDeviceGatewayStatSpu2StatArgs{...}
type GetGatewayStatsDeviceGatewayStatSpu2StatInput interface {
	pulumi.Input

	ToGetGatewayStatsDeviceGatewayStatSpu2StatOutput() GetGatewayStatsDeviceGatewayStatSpu2StatOutput
	ToGetGatewayStatsDeviceGatewayStatSpu2StatOutputWithContext(context.Context) GetGatewayStatsDeviceGatewayStatSpu2StatOutput
}

type GetGatewayStatsDeviceGatewayStatSpu2StatArgs struct {
	SpuCpu            pulumi.IntInput `pulumi:"spuCpu"`
	SpuCurrentSession pulumi.IntInput `pulumi:"spuCurrentSession"`
	SpuMaxSession     pulumi.IntInput `pulumi:"spuMaxSession"`
	SpuMemory         pulumi.IntInput `pulumi:"spuMemory"`
	SpuPendingSession pulumi.IntInput `pulumi:"spuPendingSession"`
	SpuValidSession   pulumi.IntInput `pulumi:"spuValidSession"`
}

func (GetGatewayStatsDeviceGatewayStatSpu2StatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatSpu2Stat)(nil)).Elem()
}

func (i GetGatewayStatsDeviceGatewayStatSpu2StatArgs) ToGetGatewayStatsDeviceGatewayStatSpu2StatOutput() GetGatewayStatsDeviceGatewayStatSpu2StatOutput {
	return i.ToGetGatewayStatsDeviceGatewayStatSpu2StatOutputWithContext(context.Background())
}

func (i GetGatewayStatsDeviceGatewayStatSpu2StatArgs) ToGetGatewayStatsDeviceGatewayStatSpu2StatOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatSpu2StatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayStatsDeviceGatewayStatSpu2StatOutput)
}

// GetGatewayStatsDeviceGatewayStatSpu2StatArrayInput is an input type that accepts GetGatewayStatsDeviceGatewayStatSpu2StatArray and GetGatewayStatsDeviceGatewayStatSpu2StatArrayOutput values.
// You can construct a concrete instance of `GetGatewayStatsDeviceGatewayStatSpu2StatArrayInput` via:
//
//	GetGatewayStatsDeviceGatewayStatSpu2StatArray{ GetGatewayStatsDeviceGatewayStatSpu2StatArgs{...} }
type GetGatewayStatsDeviceGatewayStatSpu2StatArrayInput interface {
	pulumi.Input

	ToGetGatewayStatsDeviceGatewayStatSpu2StatArrayOutput() GetGatewayStatsDeviceGatewayStatSpu2StatArrayOutput
	ToGetGatewayStatsDeviceGatewayStatSpu2StatArrayOutputWithContext(context.Context) GetGatewayStatsDeviceGatewayStatSpu2StatArrayOutput
}

type GetGatewayStatsDeviceGatewayStatSpu2StatArray []GetGatewayStatsDeviceGatewayStatSpu2StatInput

func (GetGatewayStatsDeviceGatewayStatSpu2StatArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayStatsDeviceGatewayStatSpu2Stat)(nil)).Elem()
}

func (i GetGatewayStatsDeviceGatewayStatSpu2StatArray) ToGetGatewayStatsDeviceGatewayStatSpu2StatArrayOutput() GetGatewayStatsDeviceGatewayStatSpu2StatArrayOutput {
	return i.ToGetGatewayStatsDeviceGatewayStatSpu2StatArrayOutputWithContext(context.Background())
}

func (i GetGatewayStatsDeviceGatewayStatSpu2StatArray) ToGetGatewayStatsDeviceGatewayStatSpu2StatArrayOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatSpu2StatArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayStatsDeviceGatewayStatSpu2StatArrayOutput)
}

type GetGatewayStatsDeviceGatewayStatSpu2StatOutput struct{ *pulumi.OutputState }

func (GetGatewayStatsDeviceGatewayStatSpu2StatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatSpu2Stat)(nil)).Elem()
}

func (o GetGatewayStatsDeviceGatewayStatSpu2StatOutput) ToGetGatewayStatsDeviceGatewayStatSpu2StatOutput() GetGatewayStatsDeviceGatewayStatSpu2StatOutput {
	return o
}

func (o GetGatewayStatsDeviceGatewayStatSpu2StatOutput) ToGetGatewayStatsDeviceGatewayStatSpu2StatOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatSpu2StatOutput {
	return o
}

func (o GetGatewayStatsDeviceGatewayStatSpu2StatOutput) SpuCpu() pulumi.IntOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatSpu2Stat) int { return v.SpuCpu }).(pulumi.IntOutput)
}

func (o GetGatewayStatsDeviceGatewayStatSpu2StatOutput) SpuCurrentSession() pulumi.IntOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatSpu2Stat) int { return v.SpuCurrentSession }).(pulumi.IntOutput)
}

func (o GetGatewayStatsDeviceGatewayStatSpu2StatOutput) SpuMaxSession() pulumi.IntOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatSpu2Stat) int { return v.SpuMaxSession }).(pulumi.IntOutput)
}

func (o GetGatewayStatsDeviceGatewayStatSpu2StatOutput) SpuMemory() pulumi.IntOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatSpu2Stat) int { return v.SpuMemory }).(pulumi.IntOutput)
}

func (o GetGatewayStatsDeviceGatewayStatSpu2StatOutput) SpuPendingSession() pulumi.IntOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatSpu2Stat) int { return v.SpuPendingSession }).(pulumi.IntOutput)
}

func (o GetGatewayStatsDeviceGatewayStatSpu2StatOutput) SpuValidSession() pulumi.IntOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatSpu2Stat) int { return v.SpuValidSession }).(pulumi.IntOutput)
}

type GetGatewayStatsDeviceGatewayStatSpu2StatArrayOutput struct{ *pulumi.OutputState }

func (GetGatewayStatsDeviceGatewayStatSpu2StatArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayStatsDeviceGatewayStatSpu2Stat)(nil)).Elem()
}

func (o GetGatewayStatsDeviceGatewayStatSpu2StatArrayOutput) ToGetGatewayStatsDeviceGatewayStatSpu2StatArrayOutput() GetGatewayStatsDeviceGatewayStatSpu2StatArrayOutput {
	return o
}

func (o GetGatewayStatsDeviceGatewayStatSpu2StatArrayOutput) ToGetGatewayStatsDeviceGatewayStatSpu2StatArrayOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatSpu2StatArrayOutput {
	return o
}

func (o GetGatewayStatsDeviceGatewayStatSpu2StatArrayOutput) Index(i pulumi.IntInput) GetGatewayStatsDeviceGatewayStatSpu2StatOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGatewayStatsDeviceGatewayStatSpu2Stat {
		return vs[0].([]GetGatewayStatsDeviceGatewayStatSpu2Stat)[vs[1].(int)]
	}).(GetGatewayStatsDeviceGatewayStatSpu2StatOutput)
}

type GetGatewayStatsDeviceGatewayStatSpuStat struct {
	SpuCpu            int `pulumi:"spuCpu"`
	SpuCurrentSession int `pulumi:"spuCurrentSession"`
	SpuMaxSession     int `pulumi:"spuMaxSession"`
	SpuMemory         int `pulumi:"spuMemory"`
	SpuPendingSession int `pulumi:"spuPendingSession"`
	SpuValidSession   int `pulumi:"spuValidSession"`
}

// GetGatewayStatsDeviceGatewayStatSpuStatInput is an input type that accepts GetGatewayStatsDeviceGatewayStatSpuStatArgs and GetGatewayStatsDeviceGatewayStatSpuStatOutput values.
// You can construct a concrete instance of `GetGatewayStatsDeviceGatewayStatSpuStatInput` via:
//
//	GetGatewayStatsDeviceGatewayStatSpuStatArgs{...}
type GetGatewayStatsDeviceGatewayStatSpuStatInput interface {
	pulumi.Input

	ToGetGatewayStatsDeviceGatewayStatSpuStatOutput() GetGatewayStatsDeviceGatewayStatSpuStatOutput
	ToGetGatewayStatsDeviceGatewayStatSpuStatOutputWithContext(context.Context) GetGatewayStatsDeviceGatewayStatSpuStatOutput
}

type GetGatewayStatsDeviceGatewayStatSpuStatArgs struct {
	SpuCpu            pulumi.IntInput `pulumi:"spuCpu"`
	SpuCurrentSession pulumi.IntInput `pulumi:"spuCurrentSession"`
	SpuMaxSession     pulumi.IntInput `pulumi:"spuMaxSession"`
	SpuMemory         pulumi.IntInput `pulumi:"spuMemory"`
	SpuPendingSession pulumi.IntInput `pulumi:"spuPendingSession"`
	SpuValidSession   pulumi.IntInput `pulumi:"spuValidSession"`
}

func (GetGatewayStatsDeviceGatewayStatSpuStatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatSpuStat)(nil)).Elem()
}

func (i GetGatewayStatsDeviceGatewayStatSpuStatArgs) ToGetGatewayStatsDeviceGatewayStatSpuStatOutput() GetGatewayStatsDeviceGatewayStatSpuStatOutput {
	return i.ToGetGatewayStatsDeviceGatewayStatSpuStatOutputWithContext(context.Background())
}

func (i GetGatewayStatsDeviceGatewayStatSpuStatArgs) ToGetGatewayStatsDeviceGatewayStatSpuStatOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatSpuStatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayStatsDeviceGatewayStatSpuStatOutput)
}

// GetGatewayStatsDeviceGatewayStatSpuStatArrayInput is an input type that accepts GetGatewayStatsDeviceGatewayStatSpuStatArray and GetGatewayStatsDeviceGatewayStatSpuStatArrayOutput values.
// You can construct a concrete instance of `GetGatewayStatsDeviceGatewayStatSpuStatArrayInput` via:
//
//	GetGatewayStatsDeviceGatewayStatSpuStatArray{ GetGatewayStatsDeviceGatewayStatSpuStatArgs{...} }
type GetGatewayStatsDeviceGatewayStatSpuStatArrayInput interface {
	pulumi.Input

	ToGetGatewayStatsDeviceGatewayStatSpuStatArrayOutput() GetGatewayStatsDeviceGatewayStatSpuStatArrayOutput
	ToGetGatewayStatsDeviceGatewayStatSpuStatArrayOutputWithContext(context.Context) GetGatewayStatsDeviceGatewayStatSpuStatArrayOutput
}

type GetGatewayStatsDeviceGatewayStatSpuStatArray []GetGatewayStatsDeviceGatewayStatSpuStatInput

func (GetGatewayStatsDeviceGatewayStatSpuStatArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayStatsDeviceGatewayStatSpuStat)(nil)).Elem()
}

func (i GetGatewayStatsDeviceGatewayStatSpuStatArray) ToGetGatewayStatsDeviceGatewayStatSpuStatArrayOutput() GetGatewayStatsDeviceGatewayStatSpuStatArrayOutput {
	return i.ToGetGatewayStatsDeviceGatewayStatSpuStatArrayOutputWithContext(context.Background())
}

func (i GetGatewayStatsDeviceGatewayStatSpuStatArray) ToGetGatewayStatsDeviceGatewayStatSpuStatArrayOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatSpuStatArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayStatsDeviceGatewayStatSpuStatArrayOutput)
}

type GetGatewayStatsDeviceGatewayStatSpuStatOutput struct{ *pulumi.OutputState }

func (GetGatewayStatsDeviceGatewayStatSpuStatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatSpuStat)(nil)).Elem()
}

func (o GetGatewayStatsDeviceGatewayStatSpuStatOutput) ToGetGatewayStatsDeviceGatewayStatSpuStatOutput() GetGatewayStatsDeviceGatewayStatSpuStatOutput {
	return o
}

func (o GetGatewayStatsDeviceGatewayStatSpuStatOutput) ToGetGatewayStatsDeviceGatewayStatSpuStatOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatSpuStatOutput {
	return o
}

func (o GetGatewayStatsDeviceGatewayStatSpuStatOutput) SpuCpu() pulumi.IntOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatSpuStat) int { return v.SpuCpu }).(pulumi.IntOutput)
}

func (o GetGatewayStatsDeviceGatewayStatSpuStatOutput) SpuCurrentSession() pulumi.IntOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatSpuStat) int { return v.SpuCurrentSession }).(pulumi.IntOutput)
}

func (o GetGatewayStatsDeviceGatewayStatSpuStatOutput) SpuMaxSession() pulumi.IntOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatSpuStat) int { return v.SpuMaxSession }).(pulumi.IntOutput)
}

func (o GetGatewayStatsDeviceGatewayStatSpuStatOutput) SpuMemory() pulumi.IntOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatSpuStat) int { return v.SpuMemory }).(pulumi.IntOutput)
}

func (o GetGatewayStatsDeviceGatewayStatSpuStatOutput) SpuPendingSession() pulumi.IntOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatSpuStat) int { return v.SpuPendingSession }).(pulumi.IntOutput)
}

func (o GetGatewayStatsDeviceGatewayStatSpuStatOutput) SpuValidSession() pulumi.IntOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatSpuStat) int { return v.SpuValidSession }).(pulumi.IntOutput)
}

type GetGatewayStatsDeviceGatewayStatSpuStatArrayOutput struct{ *pulumi.OutputState }

func (GetGatewayStatsDeviceGatewayStatSpuStatArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayStatsDeviceGatewayStatSpuStat)(nil)).Elem()
}

func (o GetGatewayStatsDeviceGatewayStatSpuStatArrayOutput) ToGetGatewayStatsDeviceGatewayStatSpuStatArrayOutput() GetGatewayStatsDeviceGatewayStatSpuStatArrayOutput {
	return o
}

func (o GetGatewayStatsDeviceGatewayStatSpuStatArrayOutput) ToGetGatewayStatsDeviceGatewayStatSpuStatArrayOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatSpuStatArrayOutput {
	return o
}

func (o GetGatewayStatsDeviceGatewayStatSpuStatArrayOutput) Index(i pulumi.IntInput) GetGatewayStatsDeviceGatewayStatSpuStatOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGatewayStatsDeviceGatewayStatSpuStat {
		return vs[0].([]GetGatewayStatsDeviceGatewayStatSpuStat)[vs[1].(int)]
	}).(GetGatewayStatsDeviceGatewayStatSpuStatOutput)
}

type GetGatewayStatsDeviceGatewayStatTunnel struct {
	// Authentication algorithm
	AuthAlgo string `pulumi:"authAlgo"`
	// Encryption algorithm
	EncryptAlgo string `pulumi:"encryptAlgo"`
	// IKE version
	IkeVersion string `pulumi:"ikeVersion"`
	// IP Address
	Ip string `pulumi:"ip"`
	// Reason of why the tunnel is down
	LastEvent string `pulumi:"lastEvent"`
	// Indicates when the port was last flapped
	LastFlapped float64 `pulumi:"lastFlapped"`
	// Node0/node1
	Node string `pulumi:"node"`
	// Peer host
	PeerHost string `pulumi:"peerHost"`
	// Peer ip address
	PeerIp string `pulumi:"peerIp"`
	// enum: `primary`, `secondary`
	Priority string `pulumi:"priority"`
	// enum: `gre`, `ipsec`
	Protocol string `pulumi:"protocol"`
	// Amount of traffic received since connection
	RxBytes int `pulumi:"rxBytes"`
	// Amount of packets received since connection
	RxPkts int `pulumi:"rxPkts"`
	// Mist Tunnel Name
	TunnelName string `pulumi:"tunnelName"`
	// Amount of traffic sent since connection
	TxBytes int `pulumi:"txBytes"`
	// Amount of packets sent since connection
	TxPkts int  `pulumi:"txPkts"`
	Up     bool `pulumi:"up"`
	// Duration from first (or last) SA was established
	Uptime int `pulumi:"uptime"`
	// WAN interface name
	WanName string `pulumi:"wanName"`
}

// GetGatewayStatsDeviceGatewayStatTunnelInput is an input type that accepts GetGatewayStatsDeviceGatewayStatTunnelArgs and GetGatewayStatsDeviceGatewayStatTunnelOutput values.
// You can construct a concrete instance of `GetGatewayStatsDeviceGatewayStatTunnelInput` via:
//
//	GetGatewayStatsDeviceGatewayStatTunnelArgs{...}
type GetGatewayStatsDeviceGatewayStatTunnelInput interface {
	pulumi.Input

	ToGetGatewayStatsDeviceGatewayStatTunnelOutput() GetGatewayStatsDeviceGatewayStatTunnelOutput
	ToGetGatewayStatsDeviceGatewayStatTunnelOutputWithContext(context.Context) GetGatewayStatsDeviceGatewayStatTunnelOutput
}

type GetGatewayStatsDeviceGatewayStatTunnelArgs struct {
	// Authentication algorithm
	AuthAlgo pulumi.StringInput `pulumi:"authAlgo"`
	// Encryption algorithm
	EncryptAlgo pulumi.StringInput `pulumi:"encryptAlgo"`
	// IKE version
	IkeVersion pulumi.StringInput `pulumi:"ikeVersion"`
	// IP Address
	Ip pulumi.StringInput `pulumi:"ip"`
	// Reason of why the tunnel is down
	LastEvent pulumi.StringInput `pulumi:"lastEvent"`
	// Indicates when the port was last flapped
	LastFlapped pulumi.Float64Input `pulumi:"lastFlapped"`
	// Node0/node1
	Node pulumi.StringInput `pulumi:"node"`
	// Peer host
	PeerHost pulumi.StringInput `pulumi:"peerHost"`
	// Peer ip address
	PeerIp pulumi.StringInput `pulumi:"peerIp"`
	// enum: `primary`, `secondary`
	Priority pulumi.StringInput `pulumi:"priority"`
	// enum: `gre`, `ipsec`
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// Amount of traffic received since connection
	RxBytes pulumi.IntInput `pulumi:"rxBytes"`
	// Amount of packets received since connection
	RxPkts pulumi.IntInput `pulumi:"rxPkts"`
	// Mist Tunnel Name
	TunnelName pulumi.StringInput `pulumi:"tunnelName"`
	// Amount of traffic sent since connection
	TxBytes pulumi.IntInput `pulumi:"txBytes"`
	// Amount of packets sent since connection
	TxPkts pulumi.IntInput  `pulumi:"txPkts"`
	Up     pulumi.BoolInput `pulumi:"up"`
	// Duration from first (or last) SA was established
	Uptime pulumi.IntInput `pulumi:"uptime"`
	// WAN interface name
	WanName pulumi.StringInput `pulumi:"wanName"`
}

func (GetGatewayStatsDeviceGatewayStatTunnelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatTunnel)(nil)).Elem()
}

func (i GetGatewayStatsDeviceGatewayStatTunnelArgs) ToGetGatewayStatsDeviceGatewayStatTunnelOutput() GetGatewayStatsDeviceGatewayStatTunnelOutput {
	return i.ToGetGatewayStatsDeviceGatewayStatTunnelOutputWithContext(context.Background())
}

func (i GetGatewayStatsDeviceGatewayStatTunnelArgs) ToGetGatewayStatsDeviceGatewayStatTunnelOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatTunnelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayStatsDeviceGatewayStatTunnelOutput)
}

// GetGatewayStatsDeviceGatewayStatTunnelArrayInput is an input type that accepts GetGatewayStatsDeviceGatewayStatTunnelArray and GetGatewayStatsDeviceGatewayStatTunnelArrayOutput values.
// You can construct a concrete instance of `GetGatewayStatsDeviceGatewayStatTunnelArrayInput` via:
//
//	GetGatewayStatsDeviceGatewayStatTunnelArray{ GetGatewayStatsDeviceGatewayStatTunnelArgs{...} }
type GetGatewayStatsDeviceGatewayStatTunnelArrayInput interface {
	pulumi.Input

	ToGetGatewayStatsDeviceGatewayStatTunnelArrayOutput() GetGatewayStatsDeviceGatewayStatTunnelArrayOutput
	ToGetGatewayStatsDeviceGatewayStatTunnelArrayOutputWithContext(context.Context) GetGatewayStatsDeviceGatewayStatTunnelArrayOutput
}

type GetGatewayStatsDeviceGatewayStatTunnelArray []GetGatewayStatsDeviceGatewayStatTunnelInput

func (GetGatewayStatsDeviceGatewayStatTunnelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayStatsDeviceGatewayStatTunnel)(nil)).Elem()
}

func (i GetGatewayStatsDeviceGatewayStatTunnelArray) ToGetGatewayStatsDeviceGatewayStatTunnelArrayOutput() GetGatewayStatsDeviceGatewayStatTunnelArrayOutput {
	return i.ToGetGatewayStatsDeviceGatewayStatTunnelArrayOutputWithContext(context.Background())
}

func (i GetGatewayStatsDeviceGatewayStatTunnelArray) ToGetGatewayStatsDeviceGatewayStatTunnelArrayOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatTunnelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayStatsDeviceGatewayStatTunnelArrayOutput)
}

type GetGatewayStatsDeviceGatewayStatTunnelOutput struct{ *pulumi.OutputState }

func (GetGatewayStatsDeviceGatewayStatTunnelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatTunnel)(nil)).Elem()
}

func (o GetGatewayStatsDeviceGatewayStatTunnelOutput) ToGetGatewayStatsDeviceGatewayStatTunnelOutput() GetGatewayStatsDeviceGatewayStatTunnelOutput {
	return o
}

func (o GetGatewayStatsDeviceGatewayStatTunnelOutput) ToGetGatewayStatsDeviceGatewayStatTunnelOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatTunnelOutput {
	return o
}

// Authentication algorithm
func (o GetGatewayStatsDeviceGatewayStatTunnelOutput) AuthAlgo() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatTunnel) string { return v.AuthAlgo }).(pulumi.StringOutput)
}

// Encryption algorithm
func (o GetGatewayStatsDeviceGatewayStatTunnelOutput) EncryptAlgo() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatTunnel) string { return v.EncryptAlgo }).(pulumi.StringOutput)
}

// IKE version
func (o GetGatewayStatsDeviceGatewayStatTunnelOutput) IkeVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatTunnel) string { return v.IkeVersion }).(pulumi.StringOutput)
}

// IP Address
func (o GetGatewayStatsDeviceGatewayStatTunnelOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatTunnel) string { return v.Ip }).(pulumi.StringOutput)
}

// Reason of why the tunnel is down
func (o GetGatewayStatsDeviceGatewayStatTunnelOutput) LastEvent() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatTunnel) string { return v.LastEvent }).(pulumi.StringOutput)
}

// Indicates when the port was last flapped
func (o GetGatewayStatsDeviceGatewayStatTunnelOutput) LastFlapped() pulumi.Float64Output {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatTunnel) float64 { return v.LastFlapped }).(pulumi.Float64Output)
}

// Node0/node1
func (o GetGatewayStatsDeviceGatewayStatTunnelOutput) Node() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatTunnel) string { return v.Node }).(pulumi.StringOutput)
}

// Peer host
func (o GetGatewayStatsDeviceGatewayStatTunnelOutput) PeerHost() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatTunnel) string { return v.PeerHost }).(pulumi.StringOutput)
}

// Peer ip address
func (o GetGatewayStatsDeviceGatewayStatTunnelOutput) PeerIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatTunnel) string { return v.PeerIp }).(pulumi.StringOutput)
}

// enum: `primary`, `secondary`
func (o GetGatewayStatsDeviceGatewayStatTunnelOutput) Priority() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatTunnel) string { return v.Priority }).(pulumi.StringOutput)
}

// enum: `gre`, `ipsec`
func (o GetGatewayStatsDeviceGatewayStatTunnelOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatTunnel) string { return v.Protocol }).(pulumi.StringOutput)
}

// Amount of traffic received since connection
func (o GetGatewayStatsDeviceGatewayStatTunnelOutput) RxBytes() pulumi.IntOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatTunnel) int { return v.RxBytes }).(pulumi.IntOutput)
}

// Amount of packets received since connection
func (o GetGatewayStatsDeviceGatewayStatTunnelOutput) RxPkts() pulumi.IntOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatTunnel) int { return v.RxPkts }).(pulumi.IntOutput)
}

// Mist Tunnel Name
func (o GetGatewayStatsDeviceGatewayStatTunnelOutput) TunnelName() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatTunnel) string { return v.TunnelName }).(pulumi.StringOutput)
}

// Amount of traffic sent since connection
func (o GetGatewayStatsDeviceGatewayStatTunnelOutput) TxBytes() pulumi.IntOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatTunnel) int { return v.TxBytes }).(pulumi.IntOutput)
}

// Amount of packets sent since connection
func (o GetGatewayStatsDeviceGatewayStatTunnelOutput) TxPkts() pulumi.IntOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatTunnel) int { return v.TxPkts }).(pulumi.IntOutput)
}

func (o GetGatewayStatsDeviceGatewayStatTunnelOutput) Up() pulumi.BoolOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatTunnel) bool { return v.Up }).(pulumi.BoolOutput)
}

// Duration from first (or last) SA was established
func (o GetGatewayStatsDeviceGatewayStatTunnelOutput) Uptime() pulumi.IntOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatTunnel) int { return v.Uptime }).(pulumi.IntOutput)
}

// WAN interface name
func (o GetGatewayStatsDeviceGatewayStatTunnelOutput) WanName() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatTunnel) string { return v.WanName }).(pulumi.StringOutput)
}

type GetGatewayStatsDeviceGatewayStatTunnelArrayOutput struct{ *pulumi.OutputState }

func (GetGatewayStatsDeviceGatewayStatTunnelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayStatsDeviceGatewayStatTunnel)(nil)).Elem()
}

func (o GetGatewayStatsDeviceGatewayStatTunnelArrayOutput) ToGetGatewayStatsDeviceGatewayStatTunnelArrayOutput() GetGatewayStatsDeviceGatewayStatTunnelArrayOutput {
	return o
}

func (o GetGatewayStatsDeviceGatewayStatTunnelArrayOutput) ToGetGatewayStatsDeviceGatewayStatTunnelArrayOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatTunnelArrayOutput {
	return o
}

func (o GetGatewayStatsDeviceGatewayStatTunnelArrayOutput) Index(i pulumi.IntInput) GetGatewayStatsDeviceGatewayStatTunnelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGatewayStatsDeviceGatewayStatTunnel {
		return vs[0].([]GetGatewayStatsDeviceGatewayStatTunnel)[vs[1].(int)]
	}).(GetGatewayStatsDeviceGatewayStatTunnelOutput)
}

type GetGatewayStatsDeviceGatewayStatVpnPeer struct {
	// Redundancy status of the associated interface
	IsActive bool `pulumi:"isActive"`
	// Last seen timestamp
	LastSeen float64 `pulumi:"lastSeen"`
	Latency  float64 `pulumi:"latency"`
	Mos      float64 `pulumi:"mos"`
	Mtu      int     `pulumi:"mtu"`
	// Peer router mac address
	PeerMac string `pulumi:"peerMac"`
	// Peer router device interface
	PeerPortId     string `pulumi:"peerPortId"`
	PeerRouterName string `pulumi:"peerRouterName"`
	PeerSiteId     string `pulumi:"peerSiteId"`
	// Router device interface
	PortId     string `pulumi:"portId"`
	RouterName string `pulumi:"routerName"`
	// `ipsec`for SRX, `svr` for 128T
	Type   string `pulumi:"type"`
	Up     bool   `pulumi:"up"`
	Uptime int    `pulumi:"uptime"`
}

// GetGatewayStatsDeviceGatewayStatVpnPeerInput is an input type that accepts GetGatewayStatsDeviceGatewayStatVpnPeerArgs and GetGatewayStatsDeviceGatewayStatVpnPeerOutput values.
// You can construct a concrete instance of `GetGatewayStatsDeviceGatewayStatVpnPeerInput` via:
//
//	GetGatewayStatsDeviceGatewayStatVpnPeerArgs{...}
type GetGatewayStatsDeviceGatewayStatVpnPeerInput interface {
	pulumi.Input

	ToGetGatewayStatsDeviceGatewayStatVpnPeerOutput() GetGatewayStatsDeviceGatewayStatVpnPeerOutput
	ToGetGatewayStatsDeviceGatewayStatVpnPeerOutputWithContext(context.Context) GetGatewayStatsDeviceGatewayStatVpnPeerOutput
}

type GetGatewayStatsDeviceGatewayStatVpnPeerArgs struct {
	// Redundancy status of the associated interface
	IsActive pulumi.BoolInput `pulumi:"isActive"`
	// Last seen timestamp
	LastSeen pulumi.Float64Input `pulumi:"lastSeen"`
	Latency  pulumi.Float64Input `pulumi:"latency"`
	Mos      pulumi.Float64Input `pulumi:"mos"`
	Mtu      pulumi.IntInput     `pulumi:"mtu"`
	// Peer router mac address
	PeerMac pulumi.StringInput `pulumi:"peerMac"`
	// Peer router device interface
	PeerPortId     pulumi.StringInput `pulumi:"peerPortId"`
	PeerRouterName pulumi.StringInput `pulumi:"peerRouterName"`
	PeerSiteId     pulumi.StringInput `pulumi:"peerSiteId"`
	// Router device interface
	PortId     pulumi.StringInput `pulumi:"portId"`
	RouterName pulumi.StringInput `pulumi:"routerName"`
	// `ipsec`for SRX, `svr` for 128T
	Type   pulumi.StringInput `pulumi:"type"`
	Up     pulumi.BoolInput   `pulumi:"up"`
	Uptime pulumi.IntInput    `pulumi:"uptime"`
}

func (GetGatewayStatsDeviceGatewayStatVpnPeerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatVpnPeer)(nil)).Elem()
}

func (i GetGatewayStatsDeviceGatewayStatVpnPeerArgs) ToGetGatewayStatsDeviceGatewayStatVpnPeerOutput() GetGatewayStatsDeviceGatewayStatVpnPeerOutput {
	return i.ToGetGatewayStatsDeviceGatewayStatVpnPeerOutputWithContext(context.Background())
}

func (i GetGatewayStatsDeviceGatewayStatVpnPeerArgs) ToGetGatewayStatsDeviceGatewayStatVpnPeerOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatVpnPeerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayStatsDeviceGatewayStatVpnPeerOutput)
}

// GetGatewayStatsDeviceGatewayStatVpnPeerArrayInput is an input type that accepts GetGatewayStatsDeviceGatewayStatVpnPeerArray and GetGatewayStatsDeviceGatewayStatVpnPeerArrayOutput values.
// You can construct a concrete instance of `GetGatewayStatsDeviceGatewayStatVpnPeerArrayInput` via:
//
//	GetGatewayStatsDeviceGatewayStatVpnPeerArray{ GetGatewayStatsDeviceGatewayStatVpnPeerArgs{...} }
type GetGatewayStatsDeviceGatewayStatVpnPeerArrayInput interface {
	pulumi.Input

	ToGetGatewayStatsDeviceGatewayStatVpnPeerArrayOutput() GetGatewayStatsDeviceGatewayStatVpnPeerArrayOutput
	ToGetGatewayStatsDeviceGatewayStatVpnPeerArrayOutputWithContext(context.Context) GetGatewayStatsDeviceGatewayStatVpnPeerArrayOutput
}

type GetGatewayStatsDeviceGatewayStatVpnPeerArray []GetGatewayStatsDeviceGatewayStatVpnPeerInput

func (GetGatewayStatsDeviceGatewayStatVpnPeerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayStatsDeviceGatewayStatVpnPeer)(nil)).Elem()
}

func (i GetGatewayStatsDeviceGatewayStatVpnPeerArray) ToGetGatewayStatsDeviceGatewayStatVpnPeerArrayOutput() GetGatewayStatsDeviceGatewayStatVpnPeerArrayOutput {
	return i.ToGetGatewayStatsDeviceGatewayStatVpnPeerArrayOutputWithContext(context.Background())
}

func (i GetGatewayStatsDeviceGatewayStatVpnPeerArray) ToGetGatewayStatsDeviceGatewayStatVpnPeerArrayOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatVpnPeerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayStatsDeviceGatewayStatVpnPeerArrayOutput)
}

type GetGatewayStatsDeviceGatewayStatVpnPeerOutput struct{ *pulumi.OutputState }

func (GetGatewayStatsDeviceGatewayStatVpnPeerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatVpnPeer)(nil)).Elem()
}

func (o GetGatewayStatsDeviceGatewayStatVpnPeerOutput) ToGetGatewayStatsDeviceGatewayStatVpnPeerOutput() GetGatewayStatsDeviceGatewayStatVpnPeerOutput {
	return o
}

func (o GetGatewayStatsDeviceGatewayStatVpnPeerOutput) ToGetGatewayStatsDeviceGatewayStatVpnPeerOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatVpnPeerOutput {
	return o
}

// Redundancy status of the associated interface
func (o GetGatewayStatsDeviceGatewayStatVpnPeerOutput) IsActive() pulumi.BoolOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatVpnPeer) bool { return v.IsActive }).(pulumi.BoolOutput)
}

// Last seen timestamp
func (o GetGatewayStatsDeviceGatewayStatVpnPeerOutput) LastSeen() pulumi.Float64Output {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatVpnPeer) float64 { return v.LastSeen }).(pulumi.Float64Output)
}

func (o GetGatewayStatsDeviceGatewayStatVpnPeerOutput) Latency() pulumi.Float64Output {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatVpnPeer) float64 { return v.Latency }).(pulumi.Float64Output)
}

func (o GetGatewayStatsDeviceGatewayStatVpnPeerOutput) Mos() pulumi.Float64Output {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatVpnPeer) float64 { return v.Mos }).(pulumi.Float64Output)
}

func (o GetGatewayStatsDeviceGatewayStatVpnPeerOutput) Mtu() pulumi.IntOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatVpnPeer) int { return v.Mtu }).(pulumi.IntOutput)
}

// Peer router mac address
func (o GetGatewayStatsDeviceGatewayStatVpnPeerOutput) PeerMac() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatVpnPeer) string { return v.PeerMac }).(pulumi.StringOutput)
}

// Peer router device interface
func (o GetGatewayStatsDeviceGatewayStatVpnPeerOutput) PeerPortId() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatVpnPeer) string { return v.PeerPortId }).(pulumi.StringOutput)
}

func (o GetGatewayStatsDeviceGatewayStatVpnPeerOutput) PeerRouterName() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatVpnPeer) string { return v.PeerRouterName }).(pulumi.StringOutput)
}

func (o GetGatewayStatsDeviceGatewayStatVpnPeerOutput) PeerSiteId() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatVpnPeer) string { return v.PeerSiteId }).(pulumi.StringOutput)
}

// Router device interface
func (o GetGatewayStatsDeviceGatewayStatVpnPeerOutput) PortId() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatVpnPeer) string { return v.PortId }).(pulumi.StringOutput)
}

func (o GetGatewayStatsDeviceGatewayStatVpnPeerOutput) RouterName() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatVpnPeer) string { return v.RouterName }).(pulumi.StringOutput)
}

// `ipsec`for SRX, `svr` for 128T
func (o GetGatewayStatsDeviceGatewayStatVpnPeerOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatVpnPeer) string { return v.Type }).(pulumi.StringOutput)
}

func (o GetGatewayStatsDeviceGatewayStatVpnPeerOutput) Up() pulumi.BoolOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatVpnPeer) bool { return v.Up }).(pulumi.BoolOutput)
}

func (o GetGatewayStatsDeviceGatewayStatVpnPeerOutput) Uptime() pulumi.IntOutput {
	return o.ApplyT(func(v GetGatewayStatsDeviceGatewayStatVpnPeer) int { return v.Uptime }).(pulumi.IntOutput)
}

type GetGatewayStatsDeviceGatewayStatVpnPeerArrayOutput struct{ *pulumi.OutputState }

func (GetGatewayStatsDeviceGatewayStatVpnPeerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayStatsDeviceGatewayStatVpnPeer)(nil)).Elem()
}

func (o GetGatewayStatsDeviceGatewayStatVpnPeerArrayOutput) ToGetGatewayStatsDeviceGatewayStatVpnPeerArrayOutput() GetGatewayStatsDeviceGatewayStatVpnPeerArrayOutput {
	return o
}

func (o GetGatewayStatsDeviceGatewayStatVpnPeerArrayOutput) ToGetGatewayStatsDeviceGatewayStatVpnPeerArrayOutputWithContext(ctx context.Context) GetGatewayStatsDeviceGatewayStatVpnPeerArrayOutput {
	return o
}

func (o GetGatewayStatsDeviceGatewayStatVpnPeerArrayOutput) Index(i pulumi.IntInput) GetGatewayStatsDeviceGatewayStatVpnPeerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGatewayStatsDeviceGatewayStatVpnPeer {
		return vs[0].([]GetGatewayStatsDeviceGatewayStatVpnPeer)[vs[1].(int)]
	}).(GetGatewayStatsDeviceGatewayStatVpnPeerOutput)
}

type GetSwitchStatsDeviceSwitchStat struct {
	ApRedundancy  GetSwitchStatsDeviceSwitchStatApRedundancy  `pulumi:"apRedundancy"`
	ArpTableStats GetSwitchStatsDeviceSwitchStatArpTableStats `pulumi:"arpTableStats"`
	CertExpiry    int                                         `pulumi:"certExpiry"`
	Clients       []GetSwitchStatsDeviceSwitchStatClient      `pulumi:"clients"`
	ClientsStats  GetSwitchStatsDeviceSwitchStatClientsStats  `pulumi:"clientsStats"`
	ConfigStatus  string                                      `pulumi:"configStatus"`
	CpuStat       GetSwitchStatsDeviceSwitchStatCpuStat       `pulumi:"cpuStat"`
	// When the object has been created, in epoch
	CreatedTime     float64 `pulumi:"createdTime"`
	DeviceprofileId string  `pulumi:"deviceprofileId"`
	// Property key is the network name
	DhcpdStat           map[string]GetSwitchStatsDeviceSwitchStatDhcpdStat `pulumi:"dhcpdStat"`
	EvpntopoId          string                                             `pulumi:"evpntopoId"`
	FwVersionsOutofsync bool                                               `pulumi:"fwVersionsOutofsync"`
	Fwupdate            GetSwitchStatsDeviceSwitchStatFwupdate             `pulumi:"fwupdate"`
	// Whether the switch supports packet capture
	HasPcap bool `pulumi:"hasPcap"`
	// Hostname reported by the device
	Hostname string `pulumi:"hostname"`
	// Device hardware revision number
	HwRev string `pulumi:"hwRev"`
	// Unique ID of the object instance in the Mist Organization
	Id string `pulumi:"id"`
	// Property key is the interface name
	IfStat map[string]GetSwitchStatsDeviceSwitchStatIfStat `pulumi:"ifStat"`
	Ip     string                                          `pulumi:"ip"`
	IpStat GetSwitchStatsDeviceSwitchStatIpStat            `pulumi:"ipStat"`
	// Last seen timestamp
	LastSeen float64 `pulumi:"lastSeen"`
	// Last trouble code of switch
	LastTrouble   GetSwitchStatsDeviceSwitchStatLastTrouble   `pulumi:"lastTrouble"`
	Mac           string                                      `pulumi:"mac"`
	MacTableStats GetSwitchStatsDeviceSwitchStatMacTableStats `pulumi:"macTableStats"`
	MapId         string                                      `pulumi:"mapId"`
	// Memory usage stat (for virtual chassis, memory usage of master RE)
	MemoryStat GetSwitchStatsDeviceSwitchStatMemoryStat `pulumi:"memoryStat"`
	Model      string                                   `pulumi:"model"`
	// When the object has been modified for the last time, in epoch
	ModifiedTime float64                                    `pulumi:"modifiedTime"`
	ModuleStats  []GetSwitchStatsDeviceSwitchStatModuleStat `pulumi:"moduleStats"`
	// Device name if configured
	Name              string                                               `pulumi:"name"`
	OrgId             string                                               `pulumi:"orgId"`
	Ports             []GetSwitchStatsDeviceSwitchStatPort                 `pulumi:"ports"`
	RouteSummaryStats GetSwitchStatsDeviceSwitchStatRouteSummaryStats      `pulumi:"routeSummaryStats"`
	Serial            string                                               `pulumi:"serial"`
	ServiceStat       map[string]GetSwitchStatsDeviceSwitchStatServiceStat `pulumi:"serviceStat"`
	SiteId            string                                               `pulumi:"siteId"`
	Status            string                                               `pulumi:"status"`
	Uptime            float64                                              `pulumi:"uptime"`
	VcMac             string                                               `pulumi:"vcMac"`
	VcSetupInfo       GetSwitchStatsDeviceSwitchStatVcSetupInfo            `pulumi:"vcSetupInfo"`
	Version           string                                               `pulumi:"version"`
}

// GetSwitchStatsDeviceSwitchStatInput is an input type that accepts GetSwitchStatsDeviceSwitchStatArgs and GetSwitchStatsDeviceSwitchStatOutput values.
// You can construct a concrete instance of `GetSwitchStatsDeviceSwitchStatInput` via:
//
//	GetSwitchStatsDeviceSwitchStatArgs{...}
type GetSwitchStatsDeviceSwitchStatInput interface {
	pulumi.Input

	ToGetSwitchStatsDeviceSwitchStatOutput() GetSwitchStatsDeviceSwitchStatOutput
	ToGetSwitchStatsDeviceSwitchStatOutputWithContext(context.Context) GetSwitchStatsDeviceSwitchStatOutput
}

type GetSwitchStatsDeviceSwitchStatArgs struct {
	ApRedundancy  GetSwitchStatsDeviceSwitchStatApRedundancyInput  `pulumi:"apRedundancy"`
	ArpTableStats GetSwitchStatsDeviceSwitchStatArpTableStatsInput `pulumi:"arpTableStats"`
	CertExpiry    pulumi.IntInput                                  `pulumi:"certExpiry"`
	Clients       GetSwitchStatsDeviceSwitchStatClientArrayInput   `pulumi:"clients"`
	ClientsStats  GetSwitchStatsDeviceSwitchStatClientsStatsInput  `pulumi:"clientsStats"`
	ConfigStatus  pulumi.StringInput                               `pulumi:"configStatus"`
	CpuStat       GetSwitchStatsDeviceSwitchStatCpuStatInput       `pulumi:"cpuStat"`
	// When the object has been created, in epoch
	CreatedTime     pulumi.Float64Input `pulumi:"createdTime"`
	DeviceprofileId pulumi.StringInput  `pulumi:"deviceprofileId"`
	// Property key is the network name
	DhcpdStat           GetSwitchStatsDeviceSwitchStatDhcpdStatMapInput `pulumi:"dhcpdStat"`
	EvpntopoId          pulumi.StringInput                              `pulumi:"evpntopoId"`
	FwVersionsOutofsync pulumi.BoolInput                                `pulumi:"fwVersionsOutofsync"`
	Fwupdate            GetSwitchStatsDeviceSwitchStatFwupdateInput     `pulumi:"fwupdate"`
	// Whether the switch supports packet capture
	HasPcap pulumi.BoolInput `pulumi:"hasPcap"`
	// Hostname reported by the device
	Hostname pulumi.StringInput `pulumi:"hostname"`
	// Device hardware revision number
	HwRev pulumi.StringInput `pulumi:"hwRev"`
	// Unique ID of the object instance in the Mist Organization
	Id pulumi.StringInput `pulumi:"id"`
	// Property key is the interface name
	IfStat GetSwitchStatsDeviceSwitchStatIfStatMapInput `pulumi:"ifStat"`
	Ip     pulumi.StringInput                           `pulumi:"ip"`
	IpStat GetSwitchStatsDeviceSwitchStatIpStatInput    `pulumi:"ipStat"`
	// Last seen timestamp
	LastSeen pulumi.Float64Input `pulumi:"lastSeen"`
	// Last trouble code of switch
	LastTrouble   GetSwitchStatsDeviceSwitchStatLastTroubleInput   `pulumi:"lastTrouble"`
	Mac           pulumi.StringInput                               `pulumi:"mac"`
	MacTableStats GetSwitchStatsDeviceSwitchStatMacTableStatsInput `pulumi:"macTableStats"`
	MapId         pulumi.StringInput                               `pulumi:"mapId"`
	// Memory usage stat (for virtual chassis, memory usage of master RE)
	MemoryStat GetSwitchStatsDeviceSwitchStatMemoryStatInput `pulumi:"memoryStat"`
	Model      pulumi.StringInput                            `pulumi:"model"`
	// When the object has been modified for the last time, in epoch
	ModifiedTime pulumi.Float64Input                                `pulumi:"modifiedTime"`
	ModuleStats  GetSwitchStatsDeviceSwitchStatModuleStatArrayInput `pulumi:"moduleStats"`
	// Device name if configured
	Name              pulumi.StringInput                                   `pulumi:"name"`
	OrgId             pulumi.StringInput                                   `pulumi:"orgId"`
	Ports             GetSwitchStatsDeviceSwitchStatPortArrayInput         `pulumi:"ports"`
	RouteSummaryStats GetSwitchStatsDeviceSwitchStatRouteSummaryStatsInput `pulumi:"routeSummaryStats"`
	Serial            pulumi.StringInput                                   `pulumi:"serial"`
	ServiceStat       GetSwitchStatsDeviceSwitchStatServiceStatMapInput    `pulumi:"serviceStat"`
	SiteId            pulumi.StringInput                                   `pulumi:"siteId"`
	Status            pulumi.StringInput                                   `pulumi:"status"`
	Uptime            pulumi.Float64Input                                  `pulumi:"uptime"`
	VcMac             pulumi.StringInput                                   `pulumi:"vcMac"`
	VcSetupInfo       GetSwitchStatsDeviceSwitchStatVcSetupInfoInput       `pulumi:"vcSetupInfo"`
	Version           pulumi.StringInput                                   `pulumi:"version"`
}

func (GetSwitchStatsDeviceSwitchStatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSwitchStatsDeviceSwitchStat)(nil)).Elem()
}

func (i GetSwitchStatsDeviceSwitchStatArgs) ToGetSwitchStatsDeviceSwitchStatOutput() GetSwitchStatsDeviceSwitchStatOutput {
	return i.ToGetSwitchStatsDeviceSwitchStatOutputWithContext(context.Background())
}

func (i GetSwitchStatsDeviceSwitchStatArgs) ToGetSwitchStatsDeviceSwitchStatOutputWithContext(ctx context.Context) GetSwitchStatsDeviceSwitchStatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSwitchStatsDeviceSwitchStatOutput)
}

// GetSwitchStatsDeviceSwitchStatArrayInput is an input type that accepts GetSwitchStatsDeviceSwitchStatArray and GetSwitchStatsDeviceSwitchStatArrayOutput values.
// You can construct a concrete instance of `GetSwitchStatsDeviceSwitchStatArrayInput` via:
//
//	GetSwitchStatsDeviceSwitchStatArray{ GetSwitchStatsDeviceSwitchStatArgs{...} }
type GetSwitchStatsDeviceSwitchStatArrayInput interface {
	pulumi.Input

	ToGetSwitchStatsDeviceSwitchStatArrayOutput() GetSwitchStatsDeviceSwitchStatArrayOutput
	ToGetSwitchStatsDeviceSwitchStatArrayOutputWithContext(context.Context) GetSwitchStatsDeviceSwitchStatArrayOutput
}

type GetSwitchStatsDeviceSwitchStatArray []GetSwitchStatsDeviceSwitchStatInput

func (GetSwitchStatsDeviceSwitchStatArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSwitchStatsDeviceSwitchStat)(nil)).Elem()
}

func (i GetSwitchStatsDeviceSwitchStatArray) ToGetSwitchStatsDeviceSwitchStatArrayOutput() GetSwitchStatsDeviceSwitchStatArrayOutput {
	return i.ToGetSwitchStatsDeviceSwitchStatArrayOutputWithContext(context.Background())
}

func (i GetSwitchStatsDeviceSwitchStatArray) ToGetSwitchStatsDeviceSwitchStatArrayOutputWithContext(ctx context.Context) GetSwitchStatsDeviceSwitchStatArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSwitchStatsDeviceSwitchStatArrayOutput)
}

type GetSwitchStatsDeviceSwitchStatOutput struct{ *pulumi.OutputState }

func (GetSwitchStatsDeviceSwitchStatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSwitchStatsDeviceSwitchStat)(nil)).Elem()
}

func (o GetSwitchStatsDeviceSwitchStatOutput) ToGetSwitchStatsDeviceSwitchStatOutput() GetSwitchStatsDeviceSwitchStatOutput {
	return o
}

func (o GetSwitchStatsDeviceSwitchStatOutput) ToGetSwitchStatsDeviceSwitchStatOutputWithContext(ctx context.Context) GetSwitchStatsDeviceSwitchStatOutput {
	return o
}

func (o GetSwitchStatsDeviceSwitchStatOutput) ApRedundancy() GetSwitchStatsDeviceSwitchStatApRedundancyOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStat) GetSwitchStatsDeviceSwitchStatApRedundancy {
		return v.ApRedundancy
	}).(GetSwitchStatsDeviceSwitchStatApRedundancyOutput)
}

func (o GetSwitchStatsDeviceSwitchStatOutput) ArpTableStats() GetSwitchStatsDeviceSwitchStatArpTableStatsOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStat) GetSwitchStatsDeviceSwitchStatArpTableStats {
		return v.ArpTableStats
	}).(GetSwitchStatsDeviceSwitchStatArpTableStatsOutput)
}

func (o GetSwitchStatsDeviceSwitchStatOutput) CertExpiry() pulumi.IntOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStat) int { return v.CertExpiry }).(pulumi.IntOutput)
}

func (o GetSwitchStatsDeviceSwitchStatOutput) Clients() GetSwitchStatsDeviceSwitchStatClientArrayOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStat) []GetSwitchStatsDeviceSwitchStatClient { return v.Clients }).(GetSwitchStatsDeviceSwitchStatClientArrayOutput)
}

func (o GetSwitchStatsDeviceSwitchStatOutput) ClientsStats() GetSwitchStatsDeviceSwitchStatClientsStatsOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStat) GetSwitchStatsDeviceSwitchStatClientsStats {
		return v.ClientsStats
	}).(GetSwitchStatsDeviceSwitchStatClientsStatsOutput)
}

func (o GetSwitchStatsDeviceSwitchStatOutput) ConfigStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStat) string { return v.ConfigStatus }).(pulumi.StringOutput)
}

func (o GetSwitchStatsDeviceSwitchStatOutput) CpuStat() GetSwitchStatsDeviceSwitchStatCpuStatOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStat) GetSwitchStatsDeviceSwitchStatCpuStat { return v.CpuStat }).(GetSwitchStatsDeviceSwitchStatCpuStatOutput)
}

// When the object has been created, in epoch
func (o GetSwitchStatsDeviceSwitchStatOutput) CreatedTime() pulumi.Float64Output {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStat) float64 { return v.CreatedTime }).(pulumi.Float64Output)
}

func (o GetSwitchStatsDeviceSwitchStatOutput) DeviceprofileId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStat) string { return v.DeviceprofileId }).(pulumi.StringOutput)
}

// Property key is the network name
func (o GetSwitchStatsDeviceSwitchStatOutput) DhcpdStat() GetSwitchStatsDeviceSwitchStatDhcpdStatMapOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStat) map[string]GetSwitchStatsDeviceSwitchStatDhcpdStat {
		return v.DhcpdStat
	}).(GetSwitchStatsDeviceSwitchStatDhcpdStatMapOutput)
}

func (o GetSwitchStatsDeviceSwitchStatOutput) EvpntopoId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStat) string { return v.EvpntopoId }).(pulumi.StringOutput)
}

func (o GetSwitchStatsDeviceSwitchStatOutput) FwVersionsOutofsync() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStat) bool { return v.FwVersionsOutofsync }).(pulumi.BoolOutput)
}

func (o GetSwitchStatsDeviceSwitchStatOutput) Fwupdate() GetSwitchStatsDeviceSwitchStatFwupdateOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStat) GetSwitchStatsDeviceSwitchStatFwupdate { return v.Fwupdate }).(GetSwitchStatsDeviceSwitchStatFwupdateOutput)
}

// Whether the switch supports packet capture
func (o GetSwitchStatsDeviceSwitchStatOutput) HasPcap() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStat) bool { return v.HasPcap }).(pulumi.BoolOutput)
}

// Hostname reported by the device
func (o GetSwitchStatsDeviceSwitchStatOutput) Hostname() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStat) string { return v.Hostname }).(pulumi.StringOutput)
}

// Device hardware revision number
func (o GetSwitchStatsDeviceSwitchStatOutput) HwRev() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStat) string { return v.HwRev }).(pulumi.StringOutput)
}

// Unique ID of the object instance in the Mist Organization
func (o GetSwitchStatsDeviceSwitchStatOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStat) string { return v.Id }).(pulumi.StringOutput)
}

// Property key is the interface name
func (o GetSwitchStatsDeviceSwitchStatOutput) IfStat() GetSwitchStatsDeviceSwitchStatIfStatMapOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStat) map[string]GetSwitchStatsDeviceSwitchStatIfStat {
		return v.IfStat
	}).(GetSwitchStatsDeviceSwitchStatIfStatMapOutput)
}

func (o GetSwitchStatsDeviceSwitchStatOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStat) string { return v.Ip }).(pulumi.StringOutput)
}

func (o GetSwitchStatsDeviceSwitchStatOutput) IpStat() GetSwitchStatsDeviceSwitchStatIpStatOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStat) GetSwitchStatsDeviceSwitchStatIpStat { return v.IpStat }).(GetSwitchStatsDeviceSwitchStatIpStatOutput)
}

// Last seen timestamp
func (o GetSwitchStatsDeviceSwitchStatOutput) LastSeen() pulumi.Float64Output {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStat) float64 { return v.LastSeen }).(pulumi.Float64Output)
}

// Last trouble code of switch
func (o GetSwitchStatsDeviceSwitchStatOutput) LastTrouble() GetSwitchStatsDeviceSwitchStatLastTroubleOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStat) GetSwitchStatsDeviceSwitchStatLastTrouble { return v.LastTrouble }).(GetSwitchStatsDeviceSwitchStatLastTroubleOutput)
}

func (o GetSwitchStatsDeviceSwitchStatOutput) Mac() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStat) string { return v.Mac }).(pulumi.StringOutput)
}

func (o GetSwitchStatsDeviceSwitchStatOutput) MacTableStats() GetSwitchStatsDeviceSwitchStatMacTableStatsOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStat) GetSwitchStatsDeviceSwitchStatMacTableStats {
		return v.MacTableStats
	}).(GetSwitchStatsDeviceSwitchStatMacTableStatsOutput)
}

func (o GetSwitchStatsDeviceSwitchStatOutput) MapId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStat) string { return v.MapId }).(pulumi.StringOutput)
}

// Memory usage stat (for virtual chassis, memory usage of master RE)
func (o GetSwitchStatsDeviceSwitchStatOutput) MemoryStat() GetSwitchStatsDeviceSwitchStatMemoryStatOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStat) GetSwitchStatsDeviceSwitchStatMemoryStat { return v.MemoryStat }).(GetSwitchStatsDeviceSwitchStatMemoryStatOutput)
}

func (o GetSwitchStatsDeviceSwitchStatOutput) Model() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStat) string { return v.Model }).(pulumi.StringOutput)
}

// When the object has been modified for the last time, in epoch
func (o GetSwitchStatsDeviceSwitchStatOutput) ModifiedTime() pulumi.Float64Output {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStat) float64 { return v.ModifiedTime }).(pulumi.Float64Output)
}

func (o GetSwitchStatsDeviceSwitchStatOutput) ModuleStats() GetSwitchStatsDeviceSwitchStatModuleStatArrayOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStat) []GetSwitchStatsDeviceSwitchStatModuleStat {
		return v.ModuleStats
	}).(GetSwitchStatsDeviceSwitchStatModuleStatArrayOutput)
}

// Device name if configured
func (o GetSwitchStatsDeviceSwitchStatOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStat) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetSwitchStatsDeviceSwitchStatOutput) OrgId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStat) string { return v.OrgId }).(pulumi.StringOutput)
}

func (o GetSwitchStatsDeviceSwitchStatOutput) Ports() GetSwitchStatsDeviceSwitchStatPortArrayOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStat) []GetSwitchStatsDeviceSwitchStatPort { return v.Ports }).(GetSwitchStatsDeviceSwitchStatPortArrayOutput)
}

func (o GetSwitchStatsDeviceSwitchStatOutput) RouteSummaryStats() GetSwitchStatsDeviceSwitchStatRouteSummaryStatsOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStat) GetSwitchStatsDeviceSwitchStatRouteSummaryStats {
		return v.RouteSummaryStats
	}).(GetSwitchStatsDeviceSwitchStatRouteSummaryStatsOutput)
}

func (o GetSwitchStatsDeviceSwitchStatOutput) Serial() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStat) string { return v.Serial }).(pulumi.StringOutput)
}

func (o GetSwitchStatsDeviceSwitchStatOutput) ServiceStat() GetSwitchStatsDeviceSwitchStatServiceStatMapOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStat) map[string]GetSwitchStatsDeviceSwitchStatServiceStat {
		return v.ServiceStat
	}).(GetSwitchStatsDeviceSwitchStatServiceStatMapOutput)
}

func (o GetSwitchStatsDeviceSwitchStatOutput) SiteId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStat) string { return v.SiteId }).(pulumi.StringOutput)
}

func (o GetSwitchStatsDeviceSwitchStatOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStat) string { return v.Status }).(pulumi.StringOutput)
}

func (o GetSwitchStatsDeviceSwitchStatOutput) Uptime() pulumi.Float64Output {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStat) float64 { return v.Uptime }).(pulumi.Float64Output)
}

func (o GetSwitchStatsDeviceSwitchStatOutput) VcMac() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStat) string { return v.VcMac }).(pulumi.StringOutput)
}

func (o GetSwitchStatsDeviceSwitchStatOutput) VcSetupInfo() GetSwitchStatsDeviceSwitchStatVcSetupInfoOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStat) GetSwitchStatsDeviceSwitchStatVcSetupInfo { return v.VcSetupInfo }).(GetSwitchStatsDeviceSwitchStatVcSetupInfoOutput)
}

func (o GetSwitchStatsDeviceSwitchStatOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStat) string { return v.Version }).(pulumi.StringOutput)
}

type GetSwitchStatsDeviceSwitchStatArrayOutput struct{ *pulumi.OutputState }

func (GetSwitchStatsDeviceSwitchStatArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSwitchStatsDeviceSwitchStat)(nil)).Elem()
}

func (o GetSwitchStatsDeviceSwitchStatArrayOutput) ToGetSwitchStatsDeviceSwitchStatArrayOutput() GetSwitchStatsDeviceSwitchStatArrayOutput {
	return o
}

func (o GetSwitchStatsDeviceSwitchStatArrayOutput) ToGetSwitchStatsDeviceSwitchStatArrayOutputWithContext(ctx context.Context) GetSwitchStatsDeviceSwitchStatArrayOutput {
	return o
}

func (o GetSwitchStatsDeviceSwitchStatArrayOutput) Index(i pulumi.IntInput) GetSwitchStatsDeviceSwitchStatOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSwitchStatsDeviceSwitchStat {
		return vs[0].([]GetSwitchStatsDeviceSwitchStat)[vs[1].(int)]
	}).(GetSwitchStatsDeviceSwitchStatOutput)
}

type GetSwitchStatsDeviceSwitchStatApRedundancy struct {
	// For a VC / stacked switches.
	Modules                    map[string]GetSwitchStatsDeviceSwitchStatApRedundancyModules `pulumi:"modules"`
	NumAps                     int                                                          `pulumi:"numAps"`
	NumApsWithSwitchRedundancy int                                                          `pulumi:"numApsWithSwitchRedundancy"`
}

// GetSwitchStatsDeviceSwitchStatApRedundancyInput is an input type that accepts GetSwitchStatsDeviceSwitchStatApRedundancyArgs and GetSwitchStatsDeviceSwitchStatApRedundancyOutput values.
// You can construct a concrete instance of `GetSwitchStatsDeviceSwitchStatApRedundancyInput` via:
//
//	GetSwitchStatsDeviceSwitchStatApRedundancyArgs{...}
type GetSwitchStatsDeviceSwitchStatApRedundancyInput interface {
	pulumi.Input

	ToGetSwitchStatsDeviceSwitchStatApRedundancyOutput() GetSwitchStatsDeviceSwitchStatApRedundancyOutput
	ToGetSwitchStatsDeviceSwitchStatApRedundancyOutputWithContext(context.Context) GetSwitchStatsDeviceSwitchStatApRedundancyOutput
}

type GetSwitchStatsDeviceSwitchStatApRedundancyArgs struct {
	// For a VC / stacked switches.
	Modules                    GetSwitchStatsDeviceSwitchStatApRedundancyModulesMapInput `pulumi:"modules"`
	NumAps                     pulumi.IntInput                                           `pulumi:"numAps"`
	NumApsWithSwitchRedundancy pulumi.IntInput                                           `pulumi:"numApsWithSwitchRedundancy"`
}

func (GetSwitchStatsDeviceSwitchStatApRedundancyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSwitchStatsDeviceSwitchStatApRedundancy)(nil)).Elem()
}

func (i GetSwitchStatsDeviceSwitchStatApRedundancyArgs) ToGetSwitchStatsDeviceSwitchStatApRedundancyOutput() GetSwitchStatsDeviceSwitchStatApRedundancyOutput {
	return i.ToGetSwitchStatsDeviceSwitchStatApRedundancyOutputWithContext(context.Background())
}

func (i GetSwitchStatsDeviceSwitchStatApRedundancyArgs) ToGetSwitchStatsDeviceSwitchStatApRedundancyOutputWithContext(ctx context.Context) GetSwitchStatsDeviceSwitchStatApRedundancyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSwitchStatsDeviceSwitchStatApRedundancyOutput)
}

type GetSwitchStatsDeviceSwitchStatApRedundancyOutput struct{ *pulumi.OutputState }

func (GetSwitchStatsDeviceSwitchStatApRedundancyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSwitchStatsDeviceSwitchStatApRedundancy)(nil)).Elem()
}

func (o GetSwitchStatsDeviceSwitchStatApRedundancyOutput) ToGetSwitchStatsDeviceSwitchStatApRedundancyOutput() GetSwitchStatsDeviceSwitchStatApRedundancyOutput {
	return o
}

func (o GetSwitchStatsDeviceSwitchStatApRedundancyOutput) ToGetSwitchStatsDeviceSwitchStatApRedundancyOutputWithContext(ctx context.Context) GetSwitchStatsDeviceSwitchStatApRedundancyOutput {
	return o
}

// For a VC / stacked switches.
func (o GetSwitchStatsDeviceSwitchStatApRedundancyOutput) Modules() GetSwitchStatsDeviceSwitchStatApRedundancyModulesMapOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatApRedundancy) map[string]GetSwitchStatsDeviceSwitchStatApRedundancyModules {
		return v.Modules
	}).(GetSwitchStatsDeviceSwitchStatApRedundancyModulesMapOutput)
}

func (o GetSwitchStatsDeviceSwitchStatApRedundancyOutput) NumAps() pulumi.IntOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatApRedundancy) int { return v.NumAps }).(pulumi.IntOutput)
}

func (o GetSwitchStatsDeviceSwitchStatApRedundancyOutput) NumApsWithSwitchRedundancy() pulumi.IntOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatApRedundancy) int { return v.NumApsWithSwitchRedundancy }).(pulumi.IntOutput)
}

type GetSwitchStatsDeviceSwitchStatApRedundancyModules struct {
	NumAps                     int `pulumi:"numAps"`
	NumApsWithSwitchRedundancy int `pulumi:"numApsWithSwitchRedundancy"`
}

// GetSwitchStatsDeviceSwitchStatApRedundancyModulesInput is an input type that accepts GetSwitchStatsDeviceSwitchStatApRedundancyModulesArgs and GetSwitchStatsDeviceSwitchStatApRedundancyModulesOutput values.
// You can construct a concrete instance of `GetSwitchStatsDeviceSwitchStatApRedundancyModulesInput` via:
//
//	GetSwitchStatsDeviceSwitchStatApRedundancyModulesArgs{...}
type GetSwitchStatsDeviceSwitchStatApRedundancyModulesInput interface {
	pulumi.Input

	ToGetSwitchStatsDeviceSwitchStatApRedundancyModulesOutput() GetSwitchStatsDeviceSwitchStatApRedundancyModulesOutput
	ToGetSwitchStatsDeviceSwitchStatApRedundancyModulesOutputWithContext(context.Context) GetSwitchStatsDeviceSwitchStatApRedundancyModulesOutput
}

type GetSwitchStatsDeviceSwitchStatApRedundancyModulesArgs struct {
	NumAps                     pulumi.IntInput `pulumi:"numAps"`
	NumApsWithSwitchRedundancy pulumi.IntInput `pulumi:"numApsWithSwitchRedundancy"`
}

func (GetSwitchStatsDeviceSwitchStatApRedundancyModulesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSwitchStatsDeviceSwitchStatApRedundancyModules)(nil)).Elem()
}

func (i GetSwitchStatsDeviceSwitchStatApRedundancyModulesArgs) ToGetSwitchStatsDeviceSwitchStatApRedundancyModulesOutput() GetSwitchStatsDeviceSwitchStatApRedundancyModulesOutput {
	return i.ToGetSwitchStatsDeviceSwitchStatApRedundancyModulesOutputWithContext(context.Background())
}

func (i GetSwitchStatsDeviceSwitchStatApRedundancyModulesArgs) ToGetSwitchStatsDeviceSwitchStatApRedundancyModulesOutputWithContext(ctx context.Context) GetSwitchStatsDeviceSwitchStatApRedundancyModulesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSwitchStatsDeviceSwitchStatApRedundancyModulesOutput)
}

// GetSwitchStatsDeviceSwitchStatApRedundancyModulesMapInput is an input type that accepts GetSwitchStatsDeviceSwitchStatApRedundancyModulesMap and GetSwitchStatsDeviceSwitchStatApRedundancyModulesMapOutput values.
// You can construct a concrete instance of `GetSwitchStatsDeviceSwitchStatApRedundancyModulesMapInput` via:
//
//	GetSwitchStatsDeviceSwitchStatApRedundancyModulesMap{ "key": GetSwitchStatsDeviceSwitchStatApRedundancyModulesArgs{...} }
type GetSwitchStatsDeviceSwitchStatApRedundancyModulesMapInput interface {
	pulumi.Input

	ToGetSwitchStatsDeviceSwitchStatApRedundancyModulesMapOutput() GetSwitchStatsDeviceSwitchStatApRedundancyModulesMapOutput
	ToGetSwitchStatsDeviceSwitchStatApRedundancyModulesMapOutputWithContext(context.Context) GetSwitchStatsDeviceSwitchStatApRedundancyModulesMapOutput
}

type GetSwitchStatsDeviceSwitchStatApRedundancyModulesMap map[string]GetSwitchStatsDeviceSwitchStatApRedundancyModulesInput

func (GetSwitchStatsDeviceSwitchStatApRedundancyModulesMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]GetSwitchStatsDeviceSwitchStatApRedundancyModules)(nil)).Elem()
}

func (i GetSwitchStatsDeviceSwitchStatApRedundancyModulesMap) ToGetSwitchStatsDeviceSwitchStatApRedundancyModulesMapOutput() GetSwitchStatsDeviceSwitchStatApRedundancyModulesMapOutput {
	return i.ToGetSwitchStatsDeviceSwitchStatApRedundancyModulesMapOutputWithContext(context.Background())
}

func (i GetSwitchStatsDeviceSwitchStatApRedundancyModulesMap) ToGetSwitchStatsDeviceSwitchStatApRedundancyModulesMapOutputWithContext(ctx context.Context) GetSwitchStatsDeviceSwitchStatApRedundancyModulesMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSwitchStatsDeviceSwitchStatApRedundancyModulesMapOutput)
}

type GetSwitchStatsDeviceSwitchStatApRedundancyModulesOutput struct{ *pulumi.OutputState }

func (GetSwitchStatsDeviceSwitchStatApRedundancyModulesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSwitchStatsDeviceSwitchStatApRedundancyModules)(nil)).Elem()
}

func (o GetSwitchStatsDeviceSwitchStatApRedundancyModulesOutput) ToGetSwitchStatsDeviceSwitchStatApRedundancyModulesOutput() GetSwitchStatsDeviceSwitchStatApRedundancyModulesOutput {
	return o
}

func (o GetSwitchStatsDeviceSwitchStatApRedundancyModulesOutput) ToGetSwitchStatsDeviceSwitchStatApRedundancyModulesOutputWithContext(ctx context.Context) GetSwitchStatsDeviceSwitchStatApRedundancyModulesOutput {
	return o
}

func (o GetSwitchStatsDeviceSwitchStatApRedundancyModulesOutput) NumAps() pulumi.IntOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatApRedundancyModules) int { return v.NumAps }).(pulumi.IntOutput)
}

func (o GetSwitchStatsDeviceSwitchStatApRedundancyModulesOutput) NumApsWithSwitchRedundancy() pulumi.IntOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatApRedundancyModules) int { return v.NumApsWithSwitchRedundancy }).(pulumi.IntOutput)
}

type GetSwitchStatsDeviceSwitchStatApRedundancyModulesMapOutput struct{ *pulumi.OutputState }

func (GetSwitchStatsDeviceSwitchStatApRedundancyModulesMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]GetSwitchStatsDeviceSwitchStatApRedundancyModules)(nil)).Elem()
}

func (o GetSwitchStatsDeviceSwitchStatApRedundancyModulesMapOutput) ToGetSwitchStatsDeviceSwitchStatApRedundancyModulesMapOutput() GetSwitchStatsDeviceSwitchStatApRedundancyModulesMapOutput {
	return o
}

func (o GetSwitchStatsDeviceSwitchStatApRedundancyModulesMapOutput) ToGetSwitchStatsDeviceSwitchStatApRedundancyModulesMapOutputWithContext(ctx context.Context) GetSwitchStatsDeviceSwitchStatApRedundancyModulesMapOutput {
	return o
}

func (o GetSwitchStatsDeviceSwitchStatApRedundancyModulesMapOutput) MapIndex(k pulumi.StringInput) GetSwitchStatsDeviceSwitchStatApRedundancyModulesOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) GetSwitchStatsDeviceSwitchStatApRedundancyModules {
		return vs[0].(map[string]GetSwitchStatsDeviceSwitchStatApRedundancyModules)[vs[1].(string)]
	}).(GetSwitchStatsDeviceSwitchStatApRedundancyModulesOutput)
}

type GetSwitchStatsDeviceSwitchStatArpTableStats struct {
	ArpTableCount       int `pulumi:"arpTableCount"`
	MaxEntriesSupported int `pulumi:"maxEntriesSupported"`
}

// GetSwitchStatsDeviceSwitchStatArpTableStatsInput is an input type that accepts GetSwitchStatsDeviceSwitchStatArpTableStatsArgs and GetSwitchStatsDeviceSwitchStatArpTableStatsOutput values.
// You can construct a concrete instance of `GetSwitchStatsDeviceSwitchStatArpTableStatsInput` via:
//
//	GetSwitchStatsDeviceSwitchStatArpTableStatsArgs{...}
type GetSwitchStatsDeviceSwitchStatArpTableStatsInput interface {
	pulumi.Input

	ToGetSwitchStatsDeviceSwitchStatArpTableStatsOutput() GetSwitchStatsDeviceSwitchStatArpTableStatsOutput
	ToGetSwitchStatsDeviceSwitchStatArpTableStatsOutputWithContext(context.Context) GetSwitchStatsDeviceSwitchStatArpTableStatsOutput
}

type GetSwitchStatsDeviceSwitchStatArpTableStatsArgs struct {
	ArpTableCount       pulumi.IntInput `pulumi:"arpTableCount"`
	MaxEntriesSupported pulumi.IntInput `pulumi:"maxEntriesSupported"`
}

func (GetSwitchStatsDeviceSwitchStatArpTableStatsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSwitchStatsDeviceSwitchStatArpTableStats)(nil)).Elem()
}

func (i GetSwitchStatsDeviceSwitchStatArpTableStatsArgs) ToGetSwitchStatsDeviceSwitchStatArpTableStatsOutput() GetSwitchStatsDeviceSwitchStatArpTableStatsOutput {
	return i.ToGetSwitchStatsDeviceSwitchStatArpTableStatsOutputWithContext(context.Background())
}

func (i GetSwitchStatsDeviceSwitchStatArpTableStatsArgs) ToGetSwitchStatsDeviceSwitchStatArpTableStatsOutputWithContext(ctx context.Context) GetSwitchStatsDeviceSwitchStatArpTableStatsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSwitchStatsDeviceSwitchStatArpTableStatsOutput)
}

type GetSwitchStatsDeviceSwitchStatArpTableStatsOutput struct{ *pulumi.OutputState }

func (GetSwitchStatsDeviceSwitchStatArpTableStatsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSwitchStatsDeviceSwitchStatArpTableStats)(nil)).Elem()
}

func (o GetSwitchStatsDeviceSwitchStatArpTableStatsOutput) ToGetSwitchStatsDeviceSwitchStatArpTableStatsOutput() GetSwitchStatsDeviceSwitchStatArpTableStatsOutput {
	return o
}

func (o GetSwitchStatsDeviceSwitchStatArpTableStatsOutput) ToGetSwitchStatsDeviceSwitchStatArpTableStatsOutputWithContext(ctx context.Context) GetSwitchStatsDeviceSwitchStatArpTableStatsOutput {
	return o
}

func (o GetSwitchStatsDeviceSwitchStatArpTableStatsOutput) ArpTableCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatArpTableStats) int { return v.ArpTableCount }).(pulumi.IntOutput)
}

func (o GetSwitchStatsDeviceSwitchStatArpTableStatsOutput) MaxEntriesSupported() pulumi.IntOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatArpTableStats) int { return v.MaxEntriesSupported }).(pulumi.IntOutput)
}

type GetSwitchStatsDeviceSwitchStatClient struct {
	DeviceMac string `pulumi:"deviceMac"`
	Hostname  string `pulumi:"hostname"`
	Mac       string `pulumi:"mac"`
	PortId    string `pulumi:"portId"`
}

// GetSwitchStatsDeviceSwitchStatClientInput is an input type that accepts GetSwitchStatsDeviceSwitchStatClientArgs and GetSwitchStatsDeviceSwitchStatClientOutput values.
// You can construct a concrete instance of `GetSwitchStatsDeviceSwitchStatClientInput` via:
//
//	GetSwitchStatsDeviceSwitchStatClientArgs{...}
type GetSwitchStatsDeviceSwitchStatClientInput interface {
	pulumi.Input

	ToGetSwitchStatsDeviceSwitchStatClientOutput() GetSwitchStatsDeviceSwitchStatClientOutput
	ToGetSwitchStatsDeviceSwitchStatClientOutputWithContext(context.Context) GetSwitchStatsDeviceSwitchStatClientOutput
}

type GetSwitchStatsDeviceSwitchStatClientArgs struct {
	DeviceMac pulumi.StringInput `pulumi:"deviceMac"`
	Hostname  pulumi.StringInput `pulumi:"hostname"`
	Mac       pulumi.StringInput `pulumi:"mac"`
	PortId    pulumi.StringInput `pulumi:"portId"`
}

func (GetSwitchStatsDeviceSwitchStatClientArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSwitchStatsDeviceSwitchStatClient)(nil)).Elem()
}

func (i GetSwitchStatsDeviceSwitchStatClientArgs) ToGetSwitchStatsDeviceSwitchStatClientOutput() GetSwitchStatsDeviceSwitchStatClientOutput {
	return i.ToGetSwitchStatsDeviceSwitchStatClientOutputWithContext(context.Background())
}

func (i GetSwitchStatsDeviceSwitchStatClientArgs) ToGetSwitchStatsDeviceSwitchStatClientOutputWithContext(ctx context.Context) GetSwitchStatsDeviceSwitchStatClientOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSwitchStatsDeviceSwitchStatClientOutput)
}

// GetSwitchStatsDeviceSwitchStatClientArrayInput is an input type that accepts GetSwitchStatsDeviceSwitchStatClientArray and GetSwitchStatsDeviceSwitchStatClientArrayOutput values.
// You can construct a concrete instance of `GetSwitchStatsDeviceSwitchStatClientArrayInput` via:
//
//	GetSwitchStatsDeviceSwitchStatClientArray{ GetSwitchStatsDeviceSwitchStatClientArgs{...} }
type GetSwitchStatsDeviceSwitchStatClientArrayInput interface {
	pulumi.Input

	ToGetSwitchStatsDeviceSwitchStatClientArrayOutput() GetSwitchStatsDeviceSwitchStatClientArrayOutput
	ToGetSwitchStatsDeviceSwitchStatClientArrayOutputWithContext(context.Context) GetSwitchStatsDeviceSwitchStatClientArrayOutput
}

type GetSwitchStatsDeviceSwitchStatClientArray []GetSwitchStatsDeviceSwitchStatClientInput

func (GetSwitchStatsDeviceSwitchStatClientArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSwitchStatsDeviceSwitchStatClient)(nil)).Elem()
}

func (i GetSwitchStatsDeviceSwitchStatClientArray) ToGetSwitchStatsDeviceSwitchStatClientArrayOutput() GetSwitchStatsDeviceSwitchStatClientArrayOutput {
	return i.ToGetSwitchStatsDeviceSwitchStatClientArrayOutputWithContext(context.Background())
}

func (i GetSwitchStatsDeviceSwitchStatClientArray) ToGetSwitchStatsDeviceSwitchStatClientArrayOutputWithContext(ctx context.Context) GetSwitchStatsDeviceSwitchStatClientArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSwitchStatsDeviceSwitchStatClientArrayOutput)
}

type GetSwitchStatsDeviceSwitchStatClientOutput struct{ *pulumi.OutputState }

func (GetSwitchStatsDeviceSwitchStatClientOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSwitchStatsDeviceSwitchStatClient)(nil)).Elem()
}

func (o GetSwitchStatsDeviceSwitchStatClientOutput) ToGetSwitchStatsDeviceSwitchStatClientOutput() GetSwitchStatsDeviceSwitchStatClientOutput {
	return o
}

func (o GetSwitchStatsDeviceSwitchStatClientOutput) ToGetSwitchStatsDeviceSwitchStatClientOutputWithContext(ctx context.Context) GetSwitchStatsDeviceSwitchStatClientOutput {
	return o
}

func (o GetSwitchStatsDeviceSwitchStatClientOutput) DeviceMac() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatClient) string { return v.DeviceMac }).(pulumi.StringOutput)
}

func (o GetSwitchStatsDeviceSwitchStatClientOutput) Hostname() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatClient) string { return v.Hostname }).(pulumi.StringOutput)
}

func (o GetSwitchStatsDeviceSwitchStatClientOutput) Mac() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatClient) string { return v.Mac }).(pulumi.StringOutput)
}

func (o GetSwitchStatsDeviceSwitchStatClientOutput) PortId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatClient) string { return v.PortId }).(pulumi.StringOutput)
}

type GetSwitchStatsDeviceSwitchStatClientArrayOutput struct{ *pulumi.OutputState }

func (GetSwitchStatsDeviceSwitchStatClientArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSwitchStatsDeviceSwitchStatClient)(nil)).Elem()
}

func (o GetSwitchStatsDeviceSwitchStatClientArrayOutput) ToGetSwitchStatsDeviceSwitchStatClientArrayOutput() GetSwitchStatsDeviceSwitchStatClientArrayOutput {
	return o
}

func (o GetSwitchStatsDeviceSwitchStatClientArrayOutput) ToGetSwitchStatsDeviceSwitchStatClientArrayOutputWithContext(ctx context.Context) GetSwitchStatsDeviceSwitchStatClientArrayOutput {
	return o
}

func (o GetSwitchStatsDeviceSwitchStatClientArrayOutput) Index(i pulumi.IntInput) GetSwitchStatsDeviceSwitchStatClientOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSwitchStatsDeviceSwitchStatClient {
		return vs[0].([]GetSwitchStatsDeviceSwitchStatClient)[vs[1].(int)]
	}).(GetSwitchStatsDeviceSwitchStatClientOutput)
}

type GetSwitchStatsDeviceSwitchStatClientsStats struct {
	Total GetSwitchStatsDeviceSwitchStatClientsStatsTotal `pulumi:"total"`
}

// GetSwitchStatsDeviceSwitchStatClientsStatsInput is an input type that accepts GetSwitchStatsDeviceSwitchStatClientsStatsArgs and GetSwitchStatsDeviceSwitchStatClientsStatsOutput values.
// You can construct a concrete instance of `GetSwitchStatsDeviceSwitchStatClientsStatsInput` via:
//
//	GetSwitchStatsDeviceSwitchStatClientsStatsArgs{...}
type GetSwitchStatsDeviceSwitchStatClientsStatsInput interface {
	pulumi.Input

	ToGetSwitchStatsDeviceSwitchStatClientsStatsOutput() GetSwitchStatsDeviceSwitchStatClientsStatsOutput
	ToGetSwitchStatsDeviceSwitchStatClientsStatsOutputWithContext(context.Context) GetSwitchStatsDeviceSwitchStatClientsStatsOutput
}

type GetSwitchStatsDeviceSwitchStatClientsStatsArgs struct {
	Total GetSwitchStatsDeviceSwitchStatClientsStatsTotalInput `pulumi:"total"`
}

func (GetSwitchStatsDeviceSwitchStatClientsStatsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSwitchStatsDeviceSwitchStatClientsStats)(nil)).Elem()
}

func (i GetSwitchStatsDeviceSwitchStatClientsStatsArgs) ToGetSwitchStatsDeviceSwitchStatClientsStatsOutput() GetSwitchStatsDeviceSwitchStatClientsStatsOutput {
	return i.ToGetSwitchStatsDeviceSwitchStatClientsStatsOutputWithContext(context.Background())
}

func (i GetSwitchStatsDeviceSwitchStatClientsStatsArgs) ToGetSwitchStatsDeviceSwitchStatClientsStatsOutputWithContext(ctx context.Context) GetSwitchStatsDeviceSwitchStatClientsStatsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSwitchStatsDeviceSwitchStatClientsStatsOutput)
}

type GetSwitchStatsDeviceSwitchStatClientsStatsOutput struct{ *pulumi.OutputState }

func (GetSwitchStatsDeviceSwitchStatClientsStatsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSwitchStatsDeviceSwitchStatClientsStats)(nil)).Elem()
}

func (o GetSwitchStatsDeviceSwitchStatClientsStatsOutput) ToGetSwitchStatsDeviceSwitchStatClientsStatsOutput() GetSwitchStatsDeviceSwitchStatClientsStatsOutput {
	return o
}

func (o GetSwitchStatsDeviceSwitchStatClientsStatsOutput) ToGetSwitchStatsDeviceSwitchStatClientsStatsOutputWithContext(ctx context.Context) GetSwitchStatsDeviceSwitchStatClientsStatsOutput {
	return o
}

func (o GetSwitchStatsDeviceSwitchStatClientsStatsOutput) Total() GetSwitchStatsDeviceSwitchStatClientsStatsTotalOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatClientsStats) GetSwitchStatsDeviceSwitchStatClientsStatsTotal {
		return v.Total
	}).(GetSwitchStatsDeviceSwitchStatClientsStatsTotalOutput)
}

type GetSwitchStatsDeviceSwitchStatClientsStatsTotal struct {
	NumAps          []int `pulumi:"numAps"`
	NumWiredClients int   `pulumi:"numWiredClients"`
}

// GetSwitchStatsDeviceSwitchStatClientsStatsTotalInput is an input type that accepts GetSwitchStatsDeviceSwitchStatClientsStatsTotalArgs and GetSwitchStatsDeviceSwitchStatClientsStatsTotalOutput values.
// You can construct a concrete instance of `GetSwitchStatsDeviceSwitchStatClientsStatsTotalInput` via:
//
//	GetSwitchStatsDeviceSwitchStatClientsStatsTotalArgs{...}
type GetSwitchStatsDeviceSwitchStatClientsStatsTotalInput interface {
	pulumi.Input

	ToGetSwitchStatsDeviceSwitchStatClientsStatsTotalOutput() GetSwitchStatsDeviceSwitchStatClientsStatsTotalOutput
	ToGetSwitchStatsDeviceSwitchStatClientsStatsTotalOutputWithContext(context.Context) GetSwitchStatsDeviceSwitchStatClientsStatsTotalOutput
}

type GetSwitchStatsDeviceSwitchStatClientsStatsTotalArgs struct {
	NumAps          pulumi.IntArrayInput `pulumi:"numAps"`
	NumWiredClients pulumi.IntInput      `pulumi:"numWiredClients"`
}

func (GetSwitchStatsDeviceSwitchStatClientsStatsTotalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSwitchStatsDeviceSwitchStatClientsStatsTotal)(nil)).Elem()
}

func (i GetSwitchStatsDeviceSwitchStatClientsStatsTotalArgs) ToGetSwitchStatsDeviceSwitchStatClientsStatsTotalOutput() GetSwitchStatsDeviceSwitchStatClientsStatsTotalOutput {
	return i.ToGetSwitchStatsDeviceSwitchStatClientsStatsTotalOutputWithContext(context.Background())
}

func (i GetSwitchStatsDeviceSwitchStatClientsStatsTotalArgs) ToGetSwitchStatsDeviceSwitchStatClientsStatsTotalOutputWithContext(ctx context.Context) GetSwitchStatsDeviceSwitchStatClientsStatsTotalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSwitchStatsDeviceSwitchStatClientsStatsTotalOutput)
}

type GetSwitchStatsDeviceSwitchStatClientsStatsTotalOutput struct{ *pulumi.OutputState }

func (GetSwitchStatsDeviceSwitchStatClientsStatsTotalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSwitchStatsDeviceSwitchStatClientsStatsTotal)(nil)).Elem()
}

func (o GetSwitchStatsDeviceSwitchStatClientsStatsTotalOutput) ToGetSwitchStatsDeviceSwitchStatClientsStatsTotalOutput() GetSwitchStatsDeviceSwitchStatClientsStatsTotalOutput {
	return o
}

func (o GetSwitchStatsDeviceSwitchStatClientsStatsTotalOutput) ToGetSwitchStatsDeviceSwitchStatClientsStatsTotalOutputWithContext(ctx context.Context) GetSwitchStatsDeviceSwitchStatClientsStatsTotalOutput {
	return o
}

func (o GetSwitchStatsDeviceSwitchStatClientsStatsTotalOutput) NumAps() pulumi.IntArrayOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatClientsStatsTotal) []int { return v.NumAps }).(pulumi.IntArrayOutput)
}

func (o GetSwitchStatsDeviceSwitchStatClientsStatsTotalOutput) NumWiredClients() pulumi.IntOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatClientsStatsTotal) int { return v.NumWiredClients }).(pulumi.IntOutput)
}

type GetSwitchStatsDeviceSwitchStatCpuStat struct {
	// Percentage of CPU time that is idle
	Idle float64 `pulumi:"idle"`
	// Percentage of CPU time being used by interrupts
	Interrupt float64 `pulumi:"interrupt"`
	// Load averages for the last 1, 5, and 15 minutes
	LoadAvgs []float64 `pulumi:"loadAvgs"`
	// Percentage of CPU time being used by system processes
	System float64 `pulumi:"system"`
	// Percentage of CPU time being used by user processes
	User float64 `pulumi:"user"`
}

// GetSwitchStatsDeviceSwitchStatCpuStatInput is an input type that accepts GetSwitchStatsDeviceSwitchStatCpuStatArgs and GetSwitchStatsDeviceSwitchStatCpuStatOutput values.
// You can construct a concrete instance of `GetSwitchStatsDeviceSwitchStatCpuStatInput` via:
//
//	GetSwitchStatsDeviceSwitchStatCpuStatArgs{...}
type GetSwitchStatsDeviceSwitchStatCpuStatInput interface {
	pulumi.Input

	ToGetSwitchStatsDeviceSwitchStatCpuStatOutput() GetSwitchStatsDeviceSwitchStatCpuStatOutput
	ToGetSwitchStatsDeviceSwitchStatCpuStatOutputWithContext(context.Context) GetSwitchStatsDeviceSwitchStatCpuStatOutput
}

type GetSwitchStatsDeviceSwitchStatCpuStatArgs struct {
	// Percentage of CPU time that is idle
	Idle pulumi.Float64Input `pulumi:"idle"`
	// Percentage of CPU time being used by interrupts
	Interrupt pulumi.Float64Input `pulumi:"interrupt"`
	// Load averages for the last 1, 5, and 15 minutes
	LoadAvgs pulumi.Float64ArrayInput `pulumi:"loadAvgs"`
	// Percentage of CPU time being used by system processes
	System pulumi.Float64Input `pulumi:"system"`
	// Percentage of CPU time being used by user processes
	User pulumi.Float64Input `pulumi:"user"`
}

func (GetSwitchStatsDeviceSwitchStatCpuStatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSwitchStatsDeviceSwitchStatCpuStat)(nil)).Elem()
}

func (i GetSwitchStatsDeviceSwitchStatCpuStatArgs) ToGetSwitchStatsDeviceSwitchStatCpuStatOutput() GetSwitchStatsDeviceSwitchStatCpuStatOutput {
	return i.ToGetSwitchStatsDeviceSwitchStatCpuStatOutputWithContext(context.Background())
}

func (i GetSwitchStatsDeviceSwitchStatCpuStatArgs) ToGetSwitchStatsDeviceSwitchStatCpuStatOutputWithContext(ctx context.Context) GetSwitchStatsDeviceSwitchStatCpuStatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSwitchStatsDeviceSwitchStatCpuStatOutput)
}

type GetSwitchStatsDeviceSwitchStatCpuStatOutput struct{ *pulumi.OutputState }

func (GetSwitchStatsDeviceSwitchStatCpuStatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSwitchStatsDeviceSwitchStatCpuStat)(nil)).Elem()
}

func (o GetSwitchStatsDeviceSwitchStatCpuStatOutput) ToGetSwitchStatsDeviceSwitchStatCpuStatOutput() GetSwitchStatsDeviceSwitchStatCpuStatOutput {
	return o
}

func (o GetSwitchStatsDeviceSwitchStatCpuStatOutput) ToGetSwitchStatsDeviceSwitchStatCpuStatOutputWithContext(ctx context.Context) GetSwitchStatsDeviceSwitchStatCpuStatOutput {
	return o
}

// Percentage of CPU time that is idle
func (o GetSwitchStatsDeviceSwitchStatCpuStatOutput) Idle() pulumi.Float64Output {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatCpuStat) float64 { return v.Idle }).(pulumi.Float64Output)
}

// Percentage of CPU time being used by interrupts
func (o GetSwitchStatsDeviceSwitchStatCpuStatOutput) Interrupt() pulumi.Float64Output {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatCpuStat) float64 { return v.Interrupt }).(pulumi.Float64Output)
}

// Load averages for the last 1, 5, and 15 minutes
func (o GetSwitchStatsDeviceSwitchStatCpuStatOutput) LoadAvgs() pulumi.Float64ArrayOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatCpuStat) []float64 { return v.LoadAvgs }).(pulumi.Float64ArrayOutput)
}

// Percentage of CPU time being used by system processes
func (o GetSwitchStatsDeviceSwitchStatCpuStatOutput) System() pulumi.Float64Output {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatCpuStat) float64 { return v.System }).(pulumi.Float64Output)
}

// Percentage of CPU time being used by user processes
func (o GetSwitchStatsDeviceSwitchStatCpuStatOutput) User() pulumi.Float64Output {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatCpuStat) float64 { return v.User }).(pulumi.Float64Output)
}

type GetSwitchStatsDeviceSwitchStatDhcpdStat struct {
	NumIps    int `pulumi:"numIps"`
	NumLeased int `pulumi:"numLeased"`
}

// GetSwitchStatsDeviceSwitchStatDhcpdStatInput is an input type that accepts GetSwitchStatsDeviceSwitchStatDhcpdStatArgs and GetSwitchStatsDeviceSwitchStatDhcpdStatOutput values.
// You can construct a concrete instance of `GetSwitchStatsDeviceSwitchStatDhcpdStatInput` via:
//
//	GetSwitchStatsDeviceSwitchStatDhcpdStatArgs{...}
type GetSwitchStatsDeviceSwitchStatDhcpdStatInput interface {
	pulumi.Input

	ToGetSwitchStatsDeviceSwitchStatDhcpdStatOutput() GetSwitchStatsDeviceSwitchStatDhcpdStatOutput
	ToGetSwitchStatsDeviceSwitchStatDhcpdStatOutputWithContext(context.Context) GetSwitchStatsDeviceSwitchStatDhcpdStatOutput
}

type GetSwitchStatsDeviceSwitchStatDhcpdStatArgs struct {
	NumIps    pulumi.IntInput `pulumi:"numIps"`
	NumLeased pulumi.IntInput `pulumi:"numLeased"`
}

func (GetSwitchStatsDeviceSwitchStatDhcpdStatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSwitchStatsDeviceSwitchStatDhcpdStat)(nil)).Elem()
}

func (i GetSwitchStatsDeviceSwitchStatDhcpdStatArgs) ToGetSwitchStatsDeviceSwitchStatDhcpdStatOutput() GetSwitchStatsDeviceSwitchStatDhcpdStatOutput {
	return i.ToGetSwitchStatsDeviceSwitchStatDhcpdStatOutputWithContext(context.Background())
}

func (i GetSwitchStatsDeviceSwitchStatDhcpdStatArgs) ToGetSwitchStatsDeviceSwitchStatDhcpdStatOutputWithContext(ctx context.Context) GetSwitchStatsDeviceSwitchStatDhcpdStatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSwitchStatsDeviceSwitchStatDhcpdStatOutput)
}

// GetSwitchStatsDeviceSwitchStatDhcpdStatMapInput is an input type that accepts GetSwitchStatsDeviceSwitchStatDhcpdStatMap and GetSwitchStatsDeviceSwitchStatDhcpdStatMapOutput values.
// You can construct a concrete instance of `GetSwitchStatsDeviceSwitchStatDhcpdStatMapInput` via:
//
//	GetSwitchStatsDeviceSwitchStatDhcpdStatMap{ "key": GetSwitchStatsDeviceSwitchStatDhcpdStatArgs{...} }
type GetSwitchStatsDeviceSwitchStatDhcpdStatMapInput interface {
	pulumi.Input

	ToGetSwitchStatsDeviceSwitchStatDhcpdStatMapOutput() GetSwitchStatsDeviceSwitchStatDhcpdStatMapOutput
	ToGetSwitchStatsDeviceSwitchStatDhcpdStatMapOutputWithContext(context.Context) GetSwitchStatsDeviceSwitchStatDhcpdStatMapOutput
}

type GetSwitchStatsDeviceSwitchStatDhcpdStatMap map[string]GetSwitchStatsDeviceSwitchStatDhcpdStatInput

func (GetSwitchStatsDeviceSwitchStatDhcpdStatMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]GetSwitchStatsDeviceSwitchStatDhcpdStat)(nil)).Elem()
}

func (i GetSwitchStatsDeviceSwitchStatDhcpdStatMap) ToGetSwitchStatsDeviceSwitchStatDhcpdStatMapOutput() GetSwitchStatsDeviceSwitchStatDhcpdStatMapOutput {
	return i.ToGetSwitchStatsDeviceSwitchStatDhcpdStatMapOutputWithContext(context.Background())
}

func (i GetSwitchStatsDeviceSwitchStatDhcpdStatMap) ToGetSwitchStatsDeviceSwitchStatDhcpdStatMapOutputWithContext(ctx context.Context) GetSwitchStatsDeviceSwitchStatDhcpdStatMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSwitchStatsDeviceSwitchStatDhcpdStatMapOutput)
}

type GetSwitchStatsDeviceSwitchStatDhcpdStatOutput struct{ *pulumi.OutputState }

func (GetSwitchStatsDeviceSwitchStatDhcpdStatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSwitchStatsDeviceSwitchStatDhcpdStat)(nil)).Elem()
}

func (o GetSwitchStatsDeviceSwitchStatDhcpdStatOutput) ToGetSwitchStatsDeviceSwitchStatDhcpdStatOutput() GetSwitchStatsDeviceSwitchStatDhcpdStatOutput {
	return o
}

func (o GetSwitchStatsDeviceSwitchStatDhcpdStatOutput) ToGetSwitchStatsDeviceSwitchStatDhcpdStatOutputWithContext(ctx context.Context) GetSwitchStatsDeviceSwitchStatDhcpdStatOutput {
	return o
}

func (o GetSwitchStatsDeviceSwitchStatDhcpdStatOutput) NumIps() pulumi.IntOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatDhcpdStat) int { return v.NumIps }).(pulumi.IntOutput)
}

func (o GetSwitchStatsDeviceSwitchStatDhcpdStatOutput) NumLeased() pulumi.IntOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatDhcpdStat) int { return v.NumLeased }).(pulumi.IntOutput)
}

type GetSwitchStatsDeviceSwitchStatDhcpdStatMapOutput struct{ *pulumi.OutputState }

func (GetSwitchStatsDeviceSwitchStatDhcpdStatMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]GetSwitchStatsDeviceSwitchStatDhcpdStat)(nil)).Elem()
}

func (o GetSwitchStatsDeviceSwitchStatDhcpdStatMapOutput) ToGetSwitchStatsDeviceSwitchStatDhcpdStatMapOutput() GetSwitchStatsDeviceSwitchStatDhcpdStatMapOutput {
	return o
}

func (o GetSwitchStatsDeviceSwitchStatDhcpdStatMapOutput) ToGetSwitchStatsDeviceSwitchStatDhcpdStatMapOutputWithContext(ctx context.Context) GetSwitchStatsDeviceSwitchStatDhcpdStatMapOutput {
	return o
}

func (o GetSwitchStatsDeviceSwitchStatDhcpdStatMapOutput) MapIndex(k pulumi.StringInput) GetSwitchStatsDeviceSwitchStatDhcpdStatOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) GetSwitchStatsDeviceSwitchStatDhcpdStat {
		return vs[0].(map[string]GetSwitchStatsDeviceSwitchStatDhcpdStat)[vs[1].(string)]
	}).(GetSwitchStatsDeviceSwitchStatDhcpdStatOutput)
}

type GetSwitchStatsDeviceSwitchStatFwupdate struct {
	Progress int `pulumi:"progress"`
	// enum: `inprogress`, `failed`, `upgraded`
	Status   string `pulumi:"status"`
	StatusId int    `pulumi:"statusId"`
	// Epoch (seconds)
	Timestamp float64 `pulumi:"timestamp"`
	WillRetry bool    `pulumi:"willRetry"`
}

// GetSwitchStatsDeviceSwitchStatFwupdateInput is an input type that accepts GetSwitchStatsDeviceSwitchStatFwupdateArgs and GetSwitchStatsDeviceSwitchStatFwupdateOutput values.
// You can construct a concrete instance of `GetSwitchStatsDeviceSwitchStatFwupdateInput` via:
//
//	GetSwitchStatsDeviceSwitchStatFwupdateArgs{...}
type GetSwitchStatsDeviceSwitchStatFwupdateInput interface {
	pulumi.Input

	ToGetSwitchStatsDeviceSwitchStatFwupdateOutput() GetSwitchStatsDeviceSwitchStatFwupdateOutput
	ToGetSwitchStatsDeviceSwitchStatFwupdateOutputWithContext(context.Context) GetSwitchStatsDeviceSwitchStatFwupdateOutput
}

type GetSwitchStatsDeviceSwitchStatFwupdateArgs struct {
	Progress pulumi.IntInput `pulumi:"progress"`
	// enum: `inprogress`, `failed`, `upgraded`
	Status   pulumi.StringInput `pulumi:"status"`
	StatusId pulumi.IntInput    `pulumi:"statusId"`
	// Epoch (seconds)
	Timestamp pulumi.Float64Input `pulumi:"timestamp"`
	WillRetry pulumi.BoolInput    `pulumi:"willRetry"`
}

func (GetSwitchStatsDeviceSwitchStatFwupdateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSwitchStatsDeviceSwitchStatFwupdate)(nil)).Elem()
}

func (i GetSwitchStatsDeviceSwitchStatFwupdateArgs) ToGetSwitchStatsDeviceSwitchStatFwupdateOutput() GetSwitchStatsDeviceSwitchStatFwupdateOutput {
	return i.ToGetSwitchStatsDeviceSwitchStatFwupdateOutputWithContext(context.Background())
}

func (i GetSwitchStatsDeviceSwitchStatFwupdateArgs) ToGetSwitchStatsDeviceSwitchStatFwupdateOutputWithContext(ctx context.Context) GetSwitchStatsDeviceSwitchStatFwupdateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSwitchStatsDeviceSwitchStatFwupdateOutput)
}

type GetSwitchStatsDeviceSwitchStatFwupdateOutput struct{ *pulumi.OutputState }

func (GetSwitchStatsDeviceSwitchStatFwupdateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSwitchStatsDeviceSwitchStatFwupdate)(nil)).Elem()
}

func (o GetSwitchStatsDeviceSwitchStatFwupdateOutput) ToGetSwitchStatsDeviceSwitchStatFwupdateOutput() GetSwitchStatsDeviceSwitchStatFwupdateOutput {
	return o
}

func (o GetSwitchStatsDeviceSwitchStatFwupdateOutput) ToGetSwitchStatsDeviceSwitchStatFwupdateOutputWithContext(ctx context.Context) GetSwitchStatsDeviceSwitchStatFwupdateOutput {
	return o
}

func (o GetSwitchStatsDeviceSwitchStatFwupdateOutput) Progress() pulumi.IntOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatFwupdate) int { return v.Progress }).(pulumi.IntOutput)
}

// enum: `inprogress`, `failed`, `upgraded`
func (o GetSwitchStatsDeviceSwitchStatFwupdateOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatFwupdate) string { return v.Status }).(pulumi.StringOutput)
}

func (o GetSwitchStatsDeviceSwitchStatFwupdateOutput) StatusId() pulumi.IntOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatFwupdate) int { return v.StatusId }).(pulumi.IntOutput)
}

// Epoch (seconds)
func (o GetSwitchStatsDeviceSwitchStatFwupdateOutput) Timestamp() pulumi.Float64Output {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatFwupdate) float64 { return v.Timestamp }).(pulumi.Float64Output)
}

func (o GetSwitchStatsDeviceSwitchStatFwupdateOutput) WillRetry() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatFwupdate) bool { return v.WillRetry }).(pulumi.BoolOutput)
}

type GetSwitchStatsDeviceSwitchStatIfStat struct {
	AddressMode     string   `pulumi:"addressMode"`
	Ips             []string `pulumi:"ips"`
	NatAddresses    []string `pulumi:"natAddresses"`
	NetworkName     string   `pulumi:"networkName"`
	PortId          string   `pulumi:"portId"`
	PortUsage       string   `pulumi:"portUsage"`
	RedundancyState string   `pulumi:"redundancyState"`
	// Amount of traffic received since connection
	RxBytes int `pulumi:"rxBytes"`
	// Amount of packets received since connection
	RxPkts    int                                           `pulumi:"rxPkts"`
	ServpInfo GetSwitchStatsDeviceSwitchStatIfStatServpInfo `pulumi:"servpInfo"`
	// Amount of traffic sent since connection
	TxBytes int `pulumi:"txBytes"`
	// Amount of packets sent since connection
	TxPkts  int    `pulumi:"txPkts"`
	Up      bool   `pulumi:"up"`
	Vlan    int    `pulumi:"vlan"`
	WanName string `pulumi:"wanName"`
	WanType string `pulumi:"wanType"`
}

// GetSwitchStatsDeviceSwitchStatIfStatInput is an input type that accepts GetSwitchStatsDeviceSwitchStatIfStatArgs and GetSwitchStatsDeviceSwitchStatIfStatOutput values.
// You can construct a concrete instance of `GetSwitchStatsDeviceSwitchStatIfStatInput` via:
//
//	GetSwitchStatsDeviceSwitchStatIfStatArgs{...}
type GetSwitchStatsDeviceSwitchStatIfStatInput interface {
	pulumi.Input

	ToGetSwitchStatsDeviceSwitchStatIfStatOutput() GetSwitchStatsDeviceSwitchStatIfStatOutput
	ToGetSwitchStatsDeviceSwitchStatIfStatOutputWithContext(context.Context) GetSwitchStatsDeviceSwitchStatIfStatOutput
}

type GetSwitchStatsDeviceSwitchStatIfStatArgs struct {
	AddressMode     pulumi.StringInput      `pulumi:"addressMode"`
	Ips             pulumi.StringArrayInput `pulumi:"ips"`
	NatAddresses    pulumi.StringArrayInput `pulumi:"natAddresses"`
	NetworkName     pulumi.StringInput      `pulumi:"networkName"`
	PortId          pulumi.StringInput      `pulumi:"portId"`
	PortUsage       pulumi.StringInput      `pulumi:"portUsage"`
	RedundancyState pulumi.StringInput      `pulumi:"redundancyState"`
	// Amount of traffic received since connection
	RxBytes pulumi.IntInput `pulumi:"rxBytes"`
	// Amount of packets received since connection
	RxPkts    pulumi.IntInput                                    `pulumi:"rxPkts"`
	ServpInfo GetSwitchStatsDeviceSwitchStatIfStatServpInfoInput `pulumi:"servpInfo"`
	// Amount of traffic sent since connection
	TxBytes pulumi.IntInput `pulumi:"txBytes"`
	// Amount of packets sent since connection
	TxPkts  pulumi.IntInput    `pulumi:"txPkts"`
	Up      pulumi.BoolInput   `pulumi:"up"`
	Vlan    pulumi.IntInput    `pulumi:"vlan"`
	WanName pulumi.StringInput `pulumi:"wanName"`
	WanType pulumi.StringInput `pulumi:"wanType"`
}

func (GetSwitchStatsDeviceSwitchStatIfStatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSwitchStatsDeviceSwitchStatIfStat)(nil)).Elem()
}

func (i GetSwitchStatsDeviceSwitchStatIfStatArgs) ToGetSwitchStatsDeviceSwitchStatIfStatOutput() GetSwitchStatsDeviceSwitchStatIfStatOutput {
	return i.ToGetSwitchStatsDeviceSwitchStatIfStatOutputWithContext(context.Background())
}

func (i GetSwitchStatsDeviceSwitchStatIfStatArgs) ToGetSwitchStatsDeviceSwitchStatIfStatOutputWithContext(ctx context.Context) GetSwitchStatsDeviceSwitchStatIfStatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSwitchStatsDeviceSwitchStatIfStatOutput)
}

// GetSwitchStatsDeviceSwitchStatIfStatMapInput is an input type that accepts GetSwitchStatsDeviceSwitchStatIfStatMap and GetSwitchStatsDeviceSwitchStatIfStatMapOutput values.
// You can construct a concrete instance of `GetSwitchStatsDeviceSwitchStatIfStatMapInput` via:
//
//	GetSwitchStatsDeviceSwitchStatIfStatMap{ "key": GetSwitchStatsDeviceSwitchStatIfStatArgs{...} }
type GetSwitchStatsDeviceSwitchStatIfStatMapInput interface {
	pulumi.Input

	ToGetSwitchStatsDeviceSwitchStatIfStatMapOutput() GetSwitchStatsDeviceSwitchStatIfStatMapOutput
	ToGetSwitchStatsDeviceSwitchStatIfStatMapOutputWithContext(context.Context) GetSwitchStatsDeviceSwitchStatIfStatMapOutput
}

type GetSwitchStatsDeviceSwitchStatIfStatMap map[string]GetSwitchStatsDeviceSwitchStatIfStatInput

func (GetSwitchStatsDeviceSwitchStatIfStatMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]GetSwitchStatsDeviceSwitchStatIfStat)(nil)).Elem()
}

func (i GetSwitchStatsDeviceSwitchStatIfStatMap) ToGetSwitchStatsDeviceSwitchStatIfStatMapOutput() GetSwitchStatsDeviceSwitchStatIfStatMapOutput {
	return i.ToGetSwitchStatsDeviceSwitchStatIfStatMapOutputWithContext(context.Background())
}

func (i GetSwitchStatsDeviceSwitchStatIfStatMap) ToGetSwitchStatsDeviceSwitchStatIfStatMapOutputWithContext(ctx context.Context) GetSwitchStatsDeviceSwitchStatIfStatMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSwitchStatsDeviceSwitchStatIfStatMapOutput)
}

type GetSwitchStatsDeviceSwitchStatIfStatOutput struct{ *pulumi.OutputState }

func (GetSwitchStatsDeviceSwitchStatIfStatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSwitchStatsDeviceSwitchStatIfStat)(nil)).Elem()
}

func (o GetSwitchStatsDeviceSwitchStatIfStatOutput) ToGetSwitchStatsDeviceSwitchStatIfStatOutput() GetSwitchStatsDeviceSwitchStatIfStatOutput {
	return o
}

func (o GetSwitchStatsDeviceSwitchStatIfStatOutput) ToGetSwitchStatsDeviceSwitchStatIfStatOutputWithContext(ctx context.Context) GetSwitchStatsDeviceSwitchStatIfStatOutput {
	return o
}

func (o GetSwitchStatsDeviceSwitchStatIfStatOutput) AddressMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatIfStat) string { return v.AddressMode }).(pulumi.StringOutput)
}

func (o GetSwitchStatsDeviceSwitchStatIfStatOutput) Ips() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatIfStat) []string { return v.Ips }).(pulumi.StringArrayOutput)
}

func (o GetSwitchStatsDeviceSwitchStatIfStatOutput) NatAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatIfStat) []string { return v.NatAddresses }).(pulumi.StringArrayOutput)
}

func (o GetSwitchStatsDeviceSwitchStatIfStatOutput) NetworkName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatIfStat) string { return v.NetworkName }).(pulumi.StringOutput)
}

func (o GetSwitchStatsDeviceSwitchStatIfStatOutput) PortId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatIfStat) string { return v.PortId }).(pulumi.StringOutput)
}

func (o GetSwitchStatsDeviceSwitchStatIfStatOutput) PortUsage() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatIfStat) string { return v.PortUsage }).(pulumi.StringOutput)
}

func (o GetSwitchStatsDeviceSwitchStatIfStatOutput) RedundancyState() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatIfStat) string { return v.RedundancyState }).(pulumi.StringOutput)
}

// Amount of traffic received since connection
func (o GetSwitchStatsDeviceSwitchStatIfStatOutput) RxBytes() pulumi.IntOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatIfStat) int { return v.RxBytes }).(pulumi.IntOutput)
}

// Amount of packets received since connection
func (o GetSwitchStatsDeviceSwitchStatIfStatOutput) RxPkts() pulumi.IntOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatIfStat) int { return v.RxPkts }).(pulumi.IntOutput)
}

func (o GetSwitchStatsDeviceSwitchStatIfStatOutput) ServpInfo() GetSwitchStatsDeviceSwitchStatIfStatServpInfoOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatIfStat) GetSwitchStatsDeviceSwitchStatIfStatServpInfo {
		return v.ServpInfo
	}).(GetSwitchStatsDeviceSwitchStatIfStatServpInfoOutput)
}

// Amount of traffic sent since connection
func (o GetSwitchStatsDeviceSwitchStatIfStatOutput) TxBytes() pulumi.IntOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatIfStat) int { return v.TxBytes }).(pulumi.IntOutput)
}

// Amount of packets sent since connection
func (o GetSwitchStatsDeviceSwitchStatIfStatOutput) TxPkts() pulumi.IntOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatIfStat) int { return v.TxPkts }).(pulumi.IntOutput)
}

func (o GetSwitchStatsDeviceSwitchStatIfStatOutput) Up() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatIfStat) bool { return v.Up }).(pulumi.BoolOutput)
}

func (o GetSwitchStatsDeviceSwitchStatIfStatOutput) Vlan() pulumi.IntOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatIfStat) int { return v.Vlan }).(pulumi.IntOutput)
}

func (o GetSwitchStatsDeviceSwitchStatIfStatOutput) WanName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatIfStat) string { return v.WanName }).(pulumi.StringOutput)
}

func (o GetSwitchStatsDeviceSwitchStatIfStatOutput) WanType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatIfStat) string { return v.WanType }).(pulumi.StringOutput)
}

type GetSwitchStatsDeviceSwitchStatIfStatMapOutput struct{ *pulumi.OutputState }

func (GetSwitchStatsDeviceSwitchStatIfStatMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]GetSwitchStatsDeviceSwitchStatIfStat)(nil)).Elem()
}

func (o GetSwitchStatsDeviceSwitchStatIfStatMapOutput) ToGetSwitchStatsDeviceSwitchStatIfStatMapOutput() GetSwitchStatsDeviceSwitchStatIfStatMapOutput {
	return o
}

func (o GetSwitchStatsDeviceSwitchStatIfStatMapOutput) ToGetSwitchStatsDeviceSwitchStatIfStatMapOutputWithContext(ctx context.Context) GetSwitchStatsDeviceSwitchStatIfStatMapOutput {
	return o
}

func (o GetSwitchStatsDeviceSwitchStatIfStatMapOutput) MapIndex(k pulumi.StringInput) GetSwitchStatsDeviceSwitchStatIfStatOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) GetSwitchStatsDeviceSwitchStatIfStat {
		return vs[0].(map[string]GetSwitchStatsDeviceSwitchStatIfStat)[vs[1].(string)]
	}).(GetSwitchStatsDeviceSwitchStatIfStatOutput)
}

type GetSwitchStatsDeviceSwitchStatIfStatServpInfo struct {
	Asn         string  `pulumi:"asn"`
	City        string  `pulumi:"city"`
	CountryCode string  `pulumi:"countryCode"`
	Latitude    float64 `pulumi:"latitude"`
	Longitude   float64 `pulumi:"longitude"`
	Org         string  `pulumi:"org"`
	RegionCode  string  `pulumi:"regionCode"`
}

// GetSwitchStatsDeviceSwitchStatIfStatServpInfoInput is an input type that accepts GetSwitchStatsDeviceSwitchStatIfStatServpInfoArgs and GetSwitchStatsDeviceSwitchStatIfStatServpInfoOutput values.
// You can construct a concrete instance of `GetSwitchStatsDeviceSwitchStatIfStatServpInfoInput` via:
//
//	GetSwitchStatsDeviceSwitchStatIfStatServpInfoArgs{...}
type GetSwitchStatsDeviceSwitchStatIfStatServpInfoInput interface {
	pulumi.Input

	ToGetSwitchStatsDeviceSwitchStatIfStatServpInfoOutput() GetSwitchStatsDeviceSwitchStatIfStatServpInfoOutput
	ToGetSwitchStatsDeviceSwitchStatIfStatServpInfoOutputWithContext(context.Context) GetSwitchStatsDeviceSwitchStatIfStatServpInfoOutput
}

type GetSwitchStatsDeviceSwitchStatIfStatServpInfoArgs struct {
	Asn         pulumi.StringInput  `pulumi:"asn"`
	City        pulumi.StringInput  `pulumi:"city"`
	CountryCode pulumi.StringInput  `pulumi:"countryCode"`
	Latitude    pulumi.Float64Input `pulumi:"latitude"`
	Longitude   pulumi.Float64Input `pulumi:"longitude"`
	Org         pulumi.StringInput  `pulumi:"org"`
	RegionCode  pulumi.StringInput  `pulumi:"regionCode"`
}

func (GetSwitchStatsDeviceSwitchStatIfStatServpInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSwitchStatsDeviceSwitchStatIfStatServpInfo)(nil)).Elem()
}

func (i GetSwitchStatsDeviceSwitchStatIfStatServpInfoArgs) ToGetSwitchStatsDeviceSwitchStatIfStatServpInfoOutput() GetSwitchStatsDeviceSwitchStatIfStatServpInfoOutput {
	return i.ToGetSwitchStatsDeviceSwitchStatIfStatServpInfoOutputWithContext(context.Background())
}

func (i GetSwitchStatsDeviceSwitchStatIfStatServpInfoArgs) ToGetSwitchStatsDeviceSwitchStatIfStatServpInfoOutputWithContext(ctx context.Context) GetSwitchStatsDeviceSwitchStatIfStatServpInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSwitchStatsDeviceSwitchStatIfStatServpInfoOutput)
}

type GetSwitchStatsDeviceSwitchStatIfStatServpInfoOutput struct{ *pulumi.OutputState }

func (GetSwitchStatsDeviceSwitchStatIfStatServpInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSwitchStatsDeviceSwitchStatIfStatServpInfo)(nil)).Elem()
}

func (o GetSwitchStatsDeviceSwitchStatIfStatServpInfoOutput) ToGetSwitchStatsDeviceSwitchStatIfStatServpInfoOutput() GetSwitchStatsDeviceSwitchStatIfStatServpInfoOutput {
	return o
}

func (o GetSwitchStatsDeviceSwitchStatIfStatServpInfoOutput) ToGetSwitchStatsDeviceSwitchStatIfStatServpInfoOutputWithContext(ctx context.Context) GetSwitchStatsDeviceSwitchStatIfStatServpInfoOutput {
	return o
}

func (o GetSwitchStatsDeviceSwitchStatIfStatServpInfoOutput) Asn() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatIfStatServpInfo) string { return v.Asn }).(pulumi.StringOutput)
}

func (o GetSwitchStatsDeviceSwitchStatIfStatServpInfoOutput) City() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatIfStatServpInfo) string { return v.City }).(pulumi.StringOutput)
}

func (o GetSwitchStatsDeviceSwitchStatIfStatServpInfoOutput) CountryCode() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatIfStatServpInfo) string { return v.CountryCode }).(pulumi.StringOutput)
}

func (o GetSwitchStatsDeviceSwitchStatIfStatServpInfoOutput) Latitude() pulumi.Float64Output {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatIfStatServpInfo) float64 { return v.Latitude }).(pulumi.Float64Output)
}

func (o GetSwitchStatsDeviceSwitchStatIfStatServpInfoOutput) Longitude() pulumi.Float64Output {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatIfStatServpInfo) float64 { return v.Longitude }).(pulumi.Float64Output)
}

func (o GetSwitchStatsDeviceSwitchStatIfStatServpInfoOutput) Org() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatIfStatServpInfo) string { return v.Org }).(pulumi.StringOutput)
}

func (o GetSwitchStatsDeviceSwitchStatIfStatServpInfoOutput) RegionCode() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatIfStatServpInfo) string { return v.RegionCode }).(pulumi.StringOutput)
}

type GetSwitchStatsDeviceSwitchStatIpStat struct {
	DhcpServer  string            `pulumi:"dhcpServer"`
	Dns         []string          `pulumi:"dns"`
	DnsSuffixes []string          `pulumi:"dnsSuffixes"`
	Gateway     string            `pulumi:"gateway"`
	Gateway6    string            `pulumi:"gateway6"`
	Ip          string            `pulumi:"ip"`
	Ip6         string            `pulumi:"ip6"`
	Ips         map[string]string `pulumi:"ips"`
	Netmask     string            `pulumi:"netmask"`
	Netmask6    string            `pulumi:"netmask6"`
}

// GetSwitchStatsDeviceSwitchStatIpStatInput is an input type that accepts GetSwitchStatsDeviceSwitchStatIpStatArgs and GetSwitchStatsDeviceSwitchStatIpStatOutput values.
// You can construct a concrete instance of `GetSwitchStatsDeviceSwitchStatIpStatInput` via:
//
//	GetSwitchStatsDeviceSwitchStatIpStatArgs{...}
type GetSwitchStatsDeviceSwitchStatIpStatInput interface {
	pulumi.Input

	ToGetSwitchStatsDeviceSwitchStatIpStatOutput() GetSwitchStatsDeviceSwitchStatIpStatOutput
	ToGetSwitchStatsDeviceSwitchStatIpStatOutputWithContext(context.Context) GetSwitchStatsDeviceSwitchStatIpStatOutput
}

type GetSwitchStatsDeviceSwitchStatIpStatArgs struct {
	DhcpServer  pulumi.StringInput      `pulumi:"dhcpServer"`
	Dns         pulumi.StringArrayInput `pulumi:"dns"`
	DnsSuffixes pulumi.StringArrayInput `pulumi:"dnsSuffixes"`
	Gateway     pulumi.StringInput      `pulumi:"gateway"`
	Gateway6    pulumi.StringInput      `pulumi:"gateway6"`
	Ip          pulumi.StringInput      `pulumi:"ip"`
	Ip6         pulumi.StringInput      `pulumi:"ip6"`
	Ips         pulumi.StringMapInput   `pulumi:"ips"`
	Netmask     pulumi.StringInput      `pulumi:"netmask"`
	Netmask6    pulumi.StringInput      `pulumi:"netmask6"`
}

func (GetSwitchStatsDeviceSwitchStatIpStatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSwitchStatsDeviceSwitchStatIpStat)(nil)).Elem()
}

func (i GetSwitchStatsDeviceSwitchStatIpStatArgs) ToGetSwitchStatsDeviceSwitchStatIpStatOutput() GetSwitchStatsDeviceSwitchStatIpStatOutput {
	return i.ToGetSwitchStatsDeviceSwitchStatIpStatOutputWithContext(context.Background())
}

func (i GetSwitchStatsDeviceSwitchStatIpStatArgs) ToGetSwitchStatsDeviceSwitchStatIpStatOutputWithContext(ctx context.Context) GetSwitchStatsDeviceSwitchStatIpStatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSwitchStatsDeviceSwitchStatIpStatOutput)
}

type GetSwitchStatsDeviceSwitchStatIpStatOutput struct{ *pulumi.OutputState }

func (GetSwitchStatsDeviceSwitchStatIpStatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSwitchStatsDeviceSwitchStatIpStat)(nil)).Elem()
}

func (o GetSwitchStatsDeviceSwitchStatIpStatOutput) ToGetSwitchStatsDeviceSwitchStatIpStatOutput() GetSwitchStatsDeviceSwitchStatIpStatOutput {
	return o
}

func (o GetSwitchStatsDeviceSwitchStatIpStatOutput) ToGetSwitchStatsDeviceSwitchStatIpStatOutputWithContext(ctx context.Context) GetSwitchStatsDeviceSwitchStatIpStatOutput {
	return o
}

func (o GetSwitchStatsDeviceSwitchStatIpStatOutput) DhcpServer() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatIpStat) string { return v.DhcpServer }).(pulumi.StringOutput)
}

func (o GetSwitchStatsDeviceSwitchStatIpStatOutput) Dns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatIpStat) []string { return v.Dns }).(pulumi.StringArrayOutput)
}

func (o GetSwitchStatsDeviceSwitchStatIpStatOutput) DnsSuffixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatIpStat) []string { return v.DnsSuffixes }).(pulumi.StringArrayOutput)
}

func (o GetSwitchStatsDeviceSwitchStatIpStatOutput) Gateway() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatIpStat) string { return v.Gateway }).(pulumi.StringOutput)
}

func (o GetSwitchStatsDeviceSwitchStatIpStatOutput) Gateway6() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatIpStat) string { return v.Gateway6 }).(pulumi.StringOutput)
}

func (o GetSwitchStatsDeviceSwitchStatIpStatOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatIpStat) string { return v.Ip }).(pulumi.StringOutput)
}

func (o GetSwitchStatsDeviceSwitchStatIpStatOutput) Ip6() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatIpStat) string { return v.Ip6 }).(pulumi.StringOutput)
}

func (o GetSwitchStatsDeviceSwitchStatIpStatOutput) Ips() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatIpStat) map[string]string { return v.Ips }).(pulumi.StringMapOutput)
}

func (o GetSwitchStatsDeviceSwitchStatIpStatOutput) Netmask() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatIpStat) string { return v.Netmask }).(pulumi.StringOutput)
}

func (o GetSwitchStatsDeviceSwitchStatIpStatOutput) Netmask6() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatIpStat) string { return v.Netmask6 }).(pulumi.StringOutput)
}

type GetSwitchStatsDeviceSwitchStatLastTrouble struct {
	// Code definitions list at List Ap Led Definition
	Code string `pulumi:"code"`
	// Epoch (seconds)
	Timestamp float64 `pulumi:"timestamp"`
}

// GetSwitchStatsDeviceSwitchStatLastTroubleInput is an input type that accepts GetSwitchStatsDeviceSwitchStatLastTroubleArgs and GetSwitchStatsDeviceSwitchStatLastTroubleOutput values.
// You can construct a concrete instance of `GetSwitchStatsDeviceSwitchStatLastTroubleInput` via:
//
//	GetSwitchStatsDeviceSwitchStatLastTroubleArgs{...}
type GetSwitchStatsDeviceSwitchStatLastTroubleInput interface {
	pulumi.Input

	ToGetSwitchStatsDeviceSwitchStatLastTroubleOutput() GetSwitchStatsDeviceSwitchStatLastTroubleOutput
	ToGetSwitchStatsDeviceSwitchStatLastTroubleOutputWithContext(context.Context) GetSwitchStatsDeviceSwitchStatLastTroubleOutput
}

type GetSwitchStatsDeviceSwitchStatLastTroubleArgs struct {
	// Code definitions list at List Ap Led Definition
	Code pulumi.StringInput `pulumi:"code"`
	// Epoch (seconds)
	Timestamp pulumi.Float64Input `pulumi:"timestamp"`
}

func (GetSwitchStatsDeviceSwitchStatLastTroubleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSwitchStatsDeviceSwitchStatLastTrouble)(nil)).Elem()
}

func (i GetSwitchStatsDeviceSwitchStatLastTroubleArgs) ToGetSwitchStatsDeviceSwitchStatLastTroubleOutput() GetSwitchStatsDeviceSwitchStatLastTroubleOutput {
	return i.ToGetSwitchStatsDeviceSwitchStatLastTroubleOutputWithContext(context.Background())
}

func (i GetSwitchStatsDeviceSwitchStatLastTroubleArgs) ToGetSwitchStatsDeviceSwitchStatLastTroubleOutputWithContext(ctx context.Context) GetSwitchStatsDeviceSwitchStatLastTroubleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSwitchStatsDeviceSwitchStatLastTroubleOutput)
}

type GetSwitchStatsDeviceSwitchStatLastTroubleOutput struct{ *pulumi.OutputState }

func (GetSwitchStatsDeviceSwitchStatLastTroubleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSwitchStatsDeviceSwitchStatLastTrouble)(nil)).Elem()
}

func (o GetSwitchStatsDeviceSwitchStatLastTroubleOutput) ToGetSwitchStatsDeviceSwitchStatLastTroubleOutput() GetSwitchStatsDeviceSwitchStatLastTroubleOutput {
	return o
}

func (o GetSwitchStatsDeviceSwitchStatLastTroubleOutput) ToGetSwitchStatsDeviceSwitchStatLastTroubleOutputWithContext(ctx context.Context) GetSwitchStatsDeviceSwitchStatLastTroubleOutput {
	return o
}

// Code definitions list at List Ap Led Definition
func (o GetSwitchStatsDeviceSwitchStatLastTroubleOutput) Code() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatLastTrouble) string { return v.Code }).(pulumi.StringOutput)
}

// Epoch (seconds)
func (o GetSwitchStatsDeviceSwitchStatLastTroubleOutput) Timestamp() pulumi.Float64Output {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatLastTrouble) float64 { return v.Timestamp }).(pulumi.Float64Output)
}

type GetSwitchStatsDeviceSwitchStatMacTableStats struct {
	MacTableCount          int `pulumi:"macTableCount"`
	MaxMacEntriesSupported int `pulumi:"maxMacEntriesSupported"`
}

// GetSwitchStatsDeviceSwitchStatMacTableStatsInput is an input type that accepts GetSwitchStatsDeviceSwitchStatMacTableStatsArgs and GetSwitchStatsDeviceSwitchStatMacTableStatsOutput values.
// You can construct a concrete instance of `GetSwitchStatsDeviceSwitchStatMacTableStatsInput` via:
//
//	GetSwitchStatsDeviceSwitchStatMacTableStatsArgs{...}
type GetSwitchStatsDeviceSwitchStatMacTableStatsInput interface {
	pulumi.Input

	ToGetSwitchStatsDeviceSwitchStatMacTableStatsOutput() GetSwitchStatsDeviceSwitchStatMacTableStatsOutput
	ToGetSwitchStatsDeviceSwitchStatMacTableStatsOutputWithContext(context.Context) GetSwitchStatsDeviceSwitchStatMacTableStatsOutput
}

type GetSwitchStatsDeviceSwitchStatMacTableStatsArgs struct {
	MacTableCount          pulumi.IntInput `pulumi:"macTableCount"`
	MaxMacEntriesSupported pulumi.IntInput `pulumi:"maxMacEntriesSupported"`
}

func (GetSwitchStatsDeviceSwitchStatMacTableStatsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSwitchStatsDeviceSwitchStatMacTableStats)(nil)).Elem()
}

func (i GetSwitchStatsDeviceSwitchStatMacTableStatsArgs) ToGetSwitchStatsDeviceSwitchStatMacTableStatsOutput() GetSwitchStatsDeviceSwitchStatMacTableStatsOutput {
	return i.ToGetSwitchStatsDeviceSwitchStatMacTableStatsOutputWithContext(context.Background())
}

func (i GetSwitchStatsDeviceSwitchStatMacTableStatsArgs) ToGetSwitchStatsDeviceSwitchStatMacTableStatsOutputWithContext(ctx context.Context) GetSwitchStatsDeviceSwitchStatMacTableStatsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSwitchStatsDeviceSwitchStatMacTableStatsOutput)
}

type GetSwitchStatsDeviceSwitchStatMacTableStatsOutput struct{ *pulumi.OutputState }

func (GetSwitchStatsDeviceSwitchStatMacTableStatsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSwitchStatsDeviceSwitchStatMacTableStats)(nil)).Elem()
}

func (o GetSwitchStatsDeviceSwitchStatMacTableStatsOutput) ToGetSwitchStatsDeviceSwitchStatMacTableStatsOutput() GetSwitchStatsDeviceSwitchStatMacTableStatsOutput {
	return o
}

func (o GetSwitchStatsDeviceSwitchStatMacTableStatsOutput) ToGetSwitchStatsDeviceSwitchStatMacTableStatsOutputWithContext(ctx context.Context) GetSwitchStatsDeviceSwitchStatMacTableStatsOutput {
	return o
}

func (o GetSwitchStatsDeviceSwitchStatMacTableStatsOutput) MacTableCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatMacTableStats) int { return v.MacTableCount }).(pulumi.IntOutput)
}

func (o GetSwitchStatsDeviceSwitchStatMacTableStatsOutput) MaxMacEntriesSupported() pulumi.IntOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatMacTableStats) int { return v.MaxMacEntriesSupported }).(pulumi.IntOutput)
}

type GetSwitchStatsDeviceSwitchStatMemoryStat struct {
	Usage float64 `pulumi:"usage"`
}

// GetSwitchStatsDeviceSwitchStatMemoryStatInput is an input type that accepts GetSwitchStatsDeviceSwitchStatMemoryStatArgs and GetSwitchStatsDeviceSwitchStatMemoryStatOutput values.
// You can construct a concrete instance of `GetSwitchStatsDeviceSwitchStatMemoryStatInput` via:
//
//	GetSwitchStatsDeviceSwitchStatMemoryStatArgs{...}
type GetSwitchStatsDeviceSwitchStatMemoryStatInput interface {
	pulumi.Input

	ToGetSwitchStatsDeviceSwitchStatMemoryStatOutput() GetSwitchStatsDeviceSwitchStatMemoryStatOutput
	ToGetSwitchStatsDeviceSwitchStatMemoryStatOutputWithContext(context.Context) GetSwitchStatsDeviceSwitchStatMemoryStatOutput
}

type GetSwitchStatsDeviceSwitchStatMemoryStatArgs struct {
	Usage pulumi.Float64Input `pulumi:"usage"`
}

func (GetSwitchStatsDeviceSwitchStatMemoryStatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSwitchStatsDeviceSwitchStatMemoryStat)(nil)).Elem()
}

func (i GetSwitchStatsDeviceSwitchStatMemoryStatArgs) ToGetSwitchStatsDeviceSwitchStatMemoryStatOutput() GetSwitchStatsDeviceSwitchStatMemoryStatOutput {
	return i.ToGetSwitchStatsDeviceSwitchStatMemoryStatOutputWithContext(context.Background())
}

func (i GetSwitchStatsDeviceSwitchStatMemoryStatArgs) ToGetSwitchStatsDeviceSwitchStatMemoryStatOutputWithContext(ctx context.Context) GetSwitchStatsDeviceSwitchStatMemoryStatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSwitchStatsDeviceSwitchStatMemoryStatOutput)
}

type GetSwitchStatsDeviceSwitchStatMemoryStatOutput struct{ *pulumi.OutputState }

func (GetSwitchStatsDeviceSwitchStatMemoryStatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSwitchStatsDeviceSwitchStatMemoryStat)(nil)).Elem()
}

func (o GetSwitchStatsDeviceSwitchStatMemoryStatOutput) ToGetSwitchStatsDeviceSwitchStatMemoryStatOutput() GetSwitchStatsDeviceSwitchStatMemoryStatOutput {
	return o
}

func (o GetSwitchStatsDeviceSwitchStatMemoryStatOutput) ToGetSwitchStatsDeviceSwitchStatMemoryStatOutputWithContext(ctx context.Context) GetSwitchStatsDeviceSwitchStatMemoryStatOutput {
	return o
}

func (o GetSwitchStatsDeviceSwitchStatMemoryStatOutput) Usage() pulumi.Float64Output {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatMemoryStat) float64 { return v.Usage }).(pulumi.Float64Output)
}

type GetSwitchStatsDeviceSwitchStatModuleStat struct {
	BackupVersion string                                          `pulumi:"backupVersion"`
	BiosVersion   string                                          `pulumi:"biosVersion"`
	CpldVersion   string                                          `pulumi:"cpldVersion"`
	CpuStat       GetSwitchStatsDeviceSwitchStatModuleStatCpuStat `pulumi:"cpuStat"`
	// Used to report all error states the device node is running into. An error should always have `type` and `since` fields, and could have some other fields specific to that type.
	Errors      []GetSwitchStatsDeviceSwitchStatModuleStatError `pulumi:"errors"`
	Fans        []GetSwitchStatsDeviceSwitchStatModuleStatFan   `pulumi:"fans"`
	FpcIdx      int                                             `pulumi:"fpcIdx"`
	FpgaVersion string                                          `pulumi:"fpgaVersion"`
	// Last seen timestamp
	LastSeen          float64                                               `pulumi:"lastSeen"`
	Locating          bool                                                  `pulumi:"locating"`
	Mac               string                                                `pulumi:"mac"`
	Model             string                                                `pulumi:"model"`
	OpticsCpldVersion string                                                `pulumi:"opticsCpldVersion"`
	PendingVersion    string                                                `pulumi:"pendingVersion"`
	Pics              []GetSwitchStatsDeviceSwitchStatModuleStatPic         `pulumi:"pics"`
	Poe               GetSwitchStatsDeviceSwitchStatModuleStatPoe           `pulumi:"poe"`
	PoeVersion        string                                                `pulumi:"poeVersion"`
	PowerCpldVersion  string                                                `pulumi:"powerCpldVersion"`
	Psuses            []GetSwitchStatsDeviceSwitchStatModuleStatPsus        `pulumi:"psuses"`
	ReFpgaVersion     string                                                `pulumi:"reFpgaVersion"`
	RecoveryVersion   string                                                `pulumi:"recoveryVersion"`
	Serial            string                                                `pulumi:"serial"`
	Status            string                                                `pulumi:"status"`
	Temperatures      []GetSwitchStatsDeviceSwitchStatModuleStatTemperature `pulumi:"temperatures"`
	TmcFpgaVersion    string                                                `pulumi:"tmcFpgaVersion"`
	Type              string                                                `pulumi:"type"`
	UbootVersion      string                                                `pulumi:"ubootVersion"`
	Uptime            int                                                   `pulumi:"uptime"`
	VcLinks           []GetSwitchStatsDeviceSwitchStatModuleStatVcLink      `pulumi:"vcLinks"`
	VcMode            string                                                `pulumi:"vcMode"`
	// enum: `master`, `backup`, `linecard`
	VcRole  string `pulumi:"vcRole"`
	VcState string `pulumi:"vcState"`
	Version string `pulumi:"version"`
}

// GetSwitchStatsDeviceSwitchStatModuleStatInput is an input type that accepts GetSwitchStatsDeviceSwitchStatModuleStatArgs and GetSwitchStatsDeviceSwitchStatModuleStatOutput values.
// You can construct a concrete instance of `GetSwitchStatsDeviceSwitchStatModuleStatInput` via:
//
//	GetSwitchStatsDeviceSwitchStatModuleStatArgs{...}
type GetSwitchStatsDeviceSwitchStatModuleStatInput interface {
	pulumi.Input

	ToGetSwitchStatsDeviceSwitchStatModuleStatOutput() GetSwitchStatsDeviceSwitchStatModuleStatOutput
	ToGetSwitchStatsDeviceSwitchStatModuleStatOutputWithContext(context.Context) GetSwitchStatsDeviceSwitchStatModuleStatOutput
}

type GetSwitchStatsDeviceSwitchStatModuleStatArgs struct {
	BackupVersion pulumi.StringInput                                   `pulumi:"backupVersion"`
	BiosVersion   pulumi.StringInput                                   `pulumi:"biosVersion"`
	CpldVersion   pulumi.StringInput                                   `pulumi:"cpldVersion"`
	CpuStat       GetSwitchStatsDeviceSwitchStatModuleStatCpuStatInput `pulumi:"cpuStat"`
	// Used to report all error states the device node is running into. An error should always have `type` and `since` fields, and could have some other fields specific to that type.
	Errors      GetSwitchStatsDeviceSwitchStatModuleStatErrorArrayInput `pulumi:"errors"`
	Fans        GetSwitchStatsDeviceSwitchStatModuleStatFanArrayInput   `pulumi:"fans"`
	FpcIdx      pulumi.IntInput                                         `pulumi:"fpcIdx"`
	FpgaVersion pulumi.StringInput                                      `pulumi:"fpgaVersion"`
	// Last seen timestamp
	LastSeen          pulumi.Float64Input                                           `pulumi:"lastSeen"`
	Locating          pulumi.BoolInput                                              `pulumi:"locating"`
	Mac               pulumi.StringInput                                            `pulumi:"mac"`
	Model             pulumi.StringInput                                            `pulumi:"model"`
	OpticsCpldVersion pulumi.StringInput                                            `pulumi:"opticsCpldVersion"`
	PendingVersion    pulumi.StringInput                                            `pulumi:"pendingVersion"`
	Pics              GetSwitchStatsDeviceSwitchStatModuleStatPicArrayInput         `pulumi:"pics"`
	Poe               GetSwitchStatsDeviceSwitchStatModuleStatPoeInput              `pulumi:"poe"`
	PoeVersion        pulumi.StringInput                                            `pulumi:"poeVersion"`
	PowerCpldVersion  pulumi.StringInput                                            `pulumi:"powerCpldVersion"`
	Psuses            GetSwitchStatsDeviceSwitchStatModuleStatPsusArrayInput        `pulumi:"psuses"`
	ReFpgaVersion     pulumi.StringInput                                            `pulumi:"reFpgaVersion"`
	RecoveryVersion   pulumi.StringInput                                            `pulumi:"recoveryVersion"`
	Serial            pulumi.StringInput                                            `pulumi:"serial"`
	Status            pulumi.StringInput                                            `pulumi:"status"`
	Temperatures      GetSwitchStatsDeviceSwitchStatModuleStatTemperatureArrayInput `pulumi:"temperatures"`
	TmcFpgaVersion    pulumi.StringInput                                            `pulumi:"tmcFpgaVersion"`
	Type              pulumi.StringInput                                            `pulumi:"type"`
	UbootVersion      pulumi.StringInput                                            `pulumi:"ubootVersion"`
	Uptime            pulumi.IntInput                                               `pulumi:"uptime"`
	VcLinks           GetSwitchStatsDeviceSwitchStatModuleStatVcLinkArrayInput      `pulumi:"vcLinks"`
	VcMode            pulumi.StringInput                                            `pulumi:"vcMode"`
	// enum: `master`, `backup`, `linecard`
	VcRole  pulumi.StringInput `pulumi:"vcRole"`
	VcState pulumi.StringInput `pulumi:"vcState"`
	Version pulumi.StringInput `pulumi:"version"`
}

func (GetSwitchStatsDeviceSwitchStatModuleStatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSwitchStatsDeviceSwitchStatModuleStat)(nil)).Elem()
}

func (i GetSwitchStatsDeviceSwitchStatModuleStatArgs) ToGetSwitchStatsDeviceSwitchStatModuleStatOutput() GetSwitchStatsDeviceSwitchStatModuleStatOutput {
	return i.ToGetSwitchStatsDeviceSwitchStatModuleStatOutputWithContext(context.Background())
}

func (i GetSwitchStatsDeviceSwitchStatModuleStatArgs) ToGetSwitchStatsDeviceSwitchStatModuleStatOutputWithContext(ctx context.Context) GetSwitchStatsDeviceSwitchStatModuleStatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSwitchStatsDeviceSwitchStatModuleStatOutput)
}

// GetSwitchStatsDeviceSwitchStatModuleStatArrayInput is an input type that accepts GetSwitchStatsDeviceSwitchStatModuleStatArray and GetSwitchStatsDeviceSwitchStatModuleStatArrayOutput values.
// You can construct a concrete instance of `GetSwitchStatsDeviceSwitchStatModuleStatArrayInput` via:
//
//	GetSwitchStatsDeviceSwitchStatModuleStatArray{ GetSwitchStatsDeviceSwitchStatModuleStatArgs{...} }
type GetSwitchStatsDeviceSwitchStatModuleStatArrayInput interface {
	pulumi.Input

	ToGetSwitchStatsDeviceSwitchStatModuleStatArrayOutput() GetSwitchStatsDeviceSwitchStatModuleStatArrayOutput
	ToGetSwitchStatsDeviceSwitchStatModuleStatArrayOutputWithContext(context.Context) GetSwitchStatsDeviceSwitchStatModuleStatArrayOutput
}

type GetSwitchStatsDeviceSwitchStatModuleStatArray []GetSwitchStatsDeviceSwitchStatModuleStatInput

func (GetSwitchStatsDeviceSwitchStatModuleStatArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSwitchStatsDeviceSwitchStatModuleStat)(nil)).Elem()
}

func (i GetSwitchStatsDeviceSwitchStatModuleStatArray) ToGetSwitchStatsDeviceSwitchStatModuleStatArrayOutput() GetSwitchStatsDeviceSwitchStatModuleStatArrayOutput {
	return i.ToGetSwitchStatsDeviceSwitchStatModuleStatArrayOutputWithContext(context.Background())
}

func (i GetSwitchStatsDeviceSwitchStatModuleStatArray) ToGetSwitchStatsDeviceSwitchStatModuleStatArrayOutputWithContext(ctx context.Context) GetSwitchStatsDeviceSwitchStatModuleStatArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSwitchStatsDeviceSwitchStatModuleStatArrayOutput)
}

type GetSwitchStatsDeviceSwitchStatModuleStatOutput struct{ *pulumi.OutputState }

func (GetSwitchStatsDeviceSwitchStatModuleStatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSwitchStatsDeviceSwitchStatModuleStat)(nil)).Elem()
}

func (o GetSwitchStatsDeviceSwitchStatModuleStatOutput) ToGetSwitchStatsDeviceSwitchStatModuleStatOutput() GetSwitchStatsDeviceSwitchStatModuleStatOutput {
	return o
}

func (o GetSwitchStatsDeviceSwitchStatModuleStatOutput) ToGetSwitchStatsDeviceSwitchStatModuleStatOutputWithContext(ctx context.Context) GetSwitchStatsDeviceSwitchStatModuleStatOutput {
	return o
}

func (o GetSwitchStatsDeviceSwitchStatModuleStatOutput) BackupVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatModuleStat) string { return v.BackupVersion }).(pulumi.StringOutput)
}

func (o GetSwitchStatsDeviceSwitchStatModuleStatOutput) BiosVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatModuleStat) string { return v.BiosVersion }).(pulumi.StringOutput)
}

func (o GetSwitchStatsDeviceSwitchStatModuleStatOutput) CpldVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatModuleStat) string { return v.CpldVersion }).(pulumi.StringOutput)
}

func (o GetSwitchStatsDeviceSwitchStatModuleStatOutput) CpuStat() GetSwitchStatsDeviceSwitchStatModuleStatCpuStatOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatModuleStat) GetSwitchStatsDeviceSwitchStatModuleStatCpuStat {
		return v.CpuStat
	}).(GetSwitchStatsDeviceSwitchStatModuleStatCpuStatOutput)
}

// Used to report all error states the device node is running into. An error should always have `type` and `since` fields, and could have some other fields specific to that type.
func (o GetSwitchStatsDeviceSwitchStatModuleStatOutput) Errors() GetSwitchStatsDeviceSwitchStatModuleStatErrorArrayOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatModuleStat) []GetSwitchStatsDeviceSwitchStatModuleStatError {
		return v.Errors
	}).(GetSwitchStatsDeviceSwitchStatModuleStatErrorArrayOutput)
}

func (o GetSwitchStatsDeviceSwitchStatModuleStatOutput) Fans() GetSwitchStatsDeviceSwitchStatModuleStatFanArrayOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatModuleStat) []GetSwitchStatsDeviceSwitchStatModuleStatFan {
		return v.Fans
	}).(GetSwitchStatsDeviceSwitchStatModuleStatFanArrayOutput)
}

func (o GetSwitchStatsDeviceSwitchStatModuleStatOutput) FpcIdx() pulumi.IntOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatModuleStat) int { return v.FpcIdx }).(pulumi.IntOutput)
}

func (o GetSwitchStatsDeviceSwitchStatModuleStatOutput) FpgaVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatModuleStat) string { return v.FpgaVersion }).(pulumi.StringOutput)
}

// Last seen timestamp
func (o GetSwitchStatsDeviceSwitchStatModuleStatOutput) LastSeen() pulumi.Float64Output {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatModuleStat) float64 { return v.LastSeen }).(pulumi.Float64Output)
}

func (o GetSwitchStatsDeviceSwitchStatModuleStatOutput) Locating() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatModuleStat) bool { return v.Locating }).(pulumi.BoolOutput)
}

func (o GetSwitchStatsDeviceSwitchStatModuleStatOutput) Mac() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatModuleStat) string { return v.Mac }).(pulumi.StringOutput)
}

func (o GetSwitchStatsDeviceSwitchStatModuleStatOutput) Model() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatModuleStat) string { return v.Model }).(pulumi.StringOutput)
}

func (o GetSwitchStatsDeviceSwitchStatModuleStatOutput) OpticsCpldVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatModuleStat) string { return v.OpticsCpldVersion }).(pulumi.StringOutput)
}

func (o GetSwitchStatsDeviceSwitchStatModuleStatOutput) PendingVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatModuleStat) string { return v.PendingVersion }).(pulumi.StringOutput)
}

func (o GetSwitchStatsDeviceSwitchStatModuleStatOutput) Pics() GetSwitchStatsDeviceSwitchStatModuleStatPicArrayOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatModuleStat) []GetSwitchStatsDeviceSwitchStatModuleStatPic {
		return v.Pics
	}).(GetSwitchStatsDeviceSwitchStatModuleStatPicArrayOutput)
}

func (o GetSwitchStatsDeviceSwitchStatModuleStatOutput) Poe() GetSwitchStatsDeviceSwitchStatModuleStatPoeOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatModuleStat) GetSwitchStatsDeviceSwitchStatModuleStatPoe {
		return v.Poe
	}).(GetSwitchStatsDeviceSwitchStatModuleStatPoeOutput)
}

func (o GetSwitchStatsDeviceSwitchStatModuleStatOutput) PoeVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatModuleStat) string { return v.PoeVersion }).(pulumi.StringOutput)
}

func (o GetSwitchStatsDeviceSwitchStatModuleStatOutput) PowerCpldVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatModuleStat) string { return v.PowerCpldVersion }).(pulumi.StringOutput)
}

func (o GetSwitchStatsDeviceSwitchStatModuleStatOutput) Psuses() GetSwitchStatsDeviceSwitchStatModuleStatPsusArrayOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatModuleStat) []GetSwitchStatsDeviceSwitchStatModuleStatPsus {
		return v.Psuses
	}).(GetSwitchStatsDeviceSwitchStatModuleStatPsusArrayOutput)
}

func (o GetSwitchStatsDeviceSwitchStatModuleStatOutput) ReFpgaVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatModuleStat) string { return v.ReFpgaVersion }).(pulumi.StringOutput)
}

func (o GetSwitchStatsDeviceSwitchStatModuleStatOutput) RecoveryVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatModuleStat) string { return v.RecoveryVersion }).(pulumi.StringOutput)
}

func (o GetSwitchStatsDeviceSwitchStatModuleStatOutput) Serial() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatModuleStat) string { return v.Serial }).(pulumi.StringOutput)
}

func (o GetSwitchStatsDeviceSwitchStatModuleStatOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatModuleStat) string { return v.Status }).(pulumi.StringOutput)
}

func (o GetSwitchStatsDeviceSwitchStatModuleStatOutput) Temperatures() GetSwitchStatsDeviceSwitchStatModuleStatTemperatureArrayOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatModuleStat) []GetSwitchStatsDeviceSwitchStatModuleStatTemperature {
		return v.Temperatures
	}).(GetSwitchStatsDeviceSwitchStatModuleStatTemperatureArrayOutput)
}

func (o GetSwitchStatsDeviceSwitchStatModuleStatOutput) TmcFpgaVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatModuleStat) string { return v.TmcFpgaVersion }).(pulumi.StringOutput)
}

func (o GetSwitchStatsDeviceSwitchStatModuleStatOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatModuleStat) string { return v.Type }).(pulumi.StringOutput)
}

func (o GetSwitchStatsDeviceSwitchStatModuleStatOutput) UbootVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatModuleStat) string { return v.UbootVersion }).(pulumi.StringOutput)
}

func (o GetSwitchStatsDeviceSwitchStatModuleStatOutput) Uptime() pulumi.IntOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatModuleStat) int { return v.Uptime }).(pulumi.IntOutput)
}

func (o GetSwitchStatsDeviceSwitchStatModuleStatOutput) VcLinks() GetSwitchStatsDeviceSwitchStatModuleStatVcLinkArrayOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatModuleStat) []GetSwitchStatsDeviceSwitchStatModuleStatVcLink {
		return v.VcLinks
	}).(GetSwitchStatsDeviceSwitchStatModuleStatVcLinkArrayOutput)
}

func (o GetSwitchStatsDeviceSwitchStatModuleStatOutput) VcMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatModuleStat) string { return v.VcMode }).(pulumi.StringOutput)
}

// enum: `master`, `backup`, `linecard`
func (o GetSwitchStatsDeviceSwitchStatModuleStatOutput) VcRole() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatModuleStat) string { return v.VcRole }).(pulumi.StringOutput)
}

func (o GetSwitchStatsDeviceSwitchStatModuleStatOutput) VcState() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatModuleStat) string { return v.VcState }).(pulumi.StringOutput)
}

func (o GetSwitchStatsDeviceSwitchStatModuleStatOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatModuleStat) string { return v.Version }).(pulumi.StringOutput)
}

type GetSwitchStatsDeviceSwitchStatModuleStatArrayOutput struct{ *pulumi.OutputState }

func (GetSwitchStatsDeviceSwitchStatModuleStatArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSwitchStatsDeviceSwitchStatModuleStat)(nil)).Elem()
}

func (o GetSwitchStatsDeviceSwitchStatModuleStatArrayOutput) ToGetSwitchStatsDeviceSwitchStatModuleStatArrayOutput() GetSwitchStatsDeviceSwitchStatModuleStatArrayOutput {
	return o
}

func (o GetSwitchStatsDeviceSwitchStatModuleStatArrayOutput) ToGetSwitchStatsDeviceSwitchStatModuleStatArrayOutputWithContext(ctx context.Context) GetSwitchStatsDeviceSwitchStatModuleStatArrayOutput {
	return o
}

func (o GetSwitchStatsDeviceSwitchStatModuleStatArrayOutput) Index(i pulumi.IntInput) GetSwitchStatsDeviceSwitchStatModuleStatOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSwitchStatsDeviceSwitchStatModuleStat {
		return vs[0].([]GetSwitchStatsDeviceSwitchStatModuleStat)[vs[1].(int)]
	}).(GetSwitchStatsDeviceSwitchStatModuleStatOutput)
}

type GetSwitchStatsDeviceSwitchStatModuleStatCpuStat struct {
	// Percentage of CPU time that is idle
	Idle float64 `pulumi:"idle"`
	// Percentage of CPU time being used by interrupts
	Interrupt float64 `pulumi:"interrupt"`
	// Load averages for the last 1, 5, and 15 minutes
	LoadAvgs []float64 `pulumi:"loadAvgs"`
	// Percentage of CPU time being used by system processes
	System float64 `pulumi:"system"`
	// Percentage of CPU time being used by user processes
	User float64 `pulumi:"user"`
}

// GetSwitchStatsDeviceSwitchStatModuleStatCpuStatInput is an input type that accepts GetSwitchStatsDeviceSwitchStatModuleStatCpuStatArgs and GetSwitchStatsDeviceSwitchStatModuleStatCpuStatOutput values.
// You can construct a concrete instance of `GetSwitchStatsDeviceSwitchStatModuleStatCpuStatInput` via:
//
//	GetSwitchStatsDeviceSwitchStatModuleStatCpuStatArgs{...}
type GetSwitchStatsDeviceSwitchStatModuleStatCpuStatInput interface {
	pulumi.Input

	ToGetSwitchStatsDeviceSwitchStatModuleStatCpuStatOutput() GetSwitchStatsDeviceSwitchStatModuleStatCpuStatOutput
	ToGetSwitchStatsDeviceSwitchStatModuleStatCpuStatOutputWithContext(context.Context) GetSwitchStatsDeviceSwitchStatModuleStatCpuStatOutput
}

type GetSwitchStatsDeviceSwitchStatModuleStatCpuStatArgs struct {
	// Percentage of CPU time that is idle
	Idle pulumi.Float64Input `pulumi:"idle"`
	// Percentage of CPU time being used by interrupts
	Interrupt pulumi.Float64Input `pulumi:"interrupt"`
	// Load averages for the last 1, 5, and 15 minutes
	LoadAvgs pulumi.Float64ArrayInput `pulumi:"loadAvgs"`
	// Percentage of CPU time being used by system processes
	System pulumi.Float64Input `pulumi:"system"`
	// Percentage of CPU time being used by user processes
	User pulumi.Float64Input `pulumi:"user"`
}

func (GetSwitchStatsDeviceSwitchStatModuleStatCpuStatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSwitchStatsDeviceSwitchStatModuleStatCpuStat)(nil)).Elem()
}

func (i GetSwitchStatsDeviceSwitchStatModuleStatCpuStatArgs) ToGetSwitchStatsDeviceSwitchStatModuleStatCpuStatOutput() GetSwitchStatsDeviceSwitchStatModuleStatCpuStatOutput {
	return i.ToGetSwitchStatsDeviceSwitchStatModuleStatCpuStatOutputWithContext(context.Background())
}

func (i GetSwitchStatsDeviceSwitchStatModuleStatCpuStatArgs) ToGetSwitchStatsDeviceSwitchStatModuleStatCpuStatOutputWithContext(ctx context.Context) GetSwitchStatsDeviceSwitchStatModuleStatCpuStatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSwitchStatsDeviceSwitchStatModuleStatCpuStatOutput)
}

type GetSwitchStatsDeviceSwitchStatModuleStatCpuStatOutput struct{ *pulumi.OutputState }

func (GetSwitchStatsDeviceSwitchStatModuleStatCpuStatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSwitchStatsDeviceSwitchStatModuleStatCpuStat)(nil)).Elem()
}

func (o GetSwitchStatsDeviceSwitchStatModuleStatCpuStatOutput) ToGetSwitchStatsDeviceSwitchStatModuleStatCpuStatOutput() GetSwitchStatsDeviceSwitchStatModuleStatCpuStatOutput {
	return o
}

func (o GetSwitchStatsDeviceSwitchStatModuleStatCpuStatOutput) ToGetSwitchStatsDeviceSwitchStatModuleStatCpuStatOutputWithContext(ctx context.Context) GetSwitchStatsDeviceSwitchStatModuleStatCpuStatOutput {
	return o
}

// Percentage of CPU time that is idle
func (o GetSwitchStatsDeviceSwitchStatModuleStatCpuStatOutput) Idle() pulumi.Float64Output {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatModuleStatCpuStat) float64 { return v.Idle }).(pulumi.Float64Output)
}

// Percentage of CPU time being used by interrupts
func (o GetSwitchStatsDeviceSwitchStatModuleStatCpuStatOutput) Interrupt() pulumi.Float64Output {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatModuleStatCpuStat) float64 { return v.Interrupt }).(pulumi.Float64Output)
}

// Load averages for the last 1, 5, and 15 minutes
func (o GetSwitchStatsDeviceSwitchStatModuleStatCpuStatOutput) LoadAvgs() pulumi.Float64ArrayOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatModuleStatCpuStat) []float64 { return v.LoadAvgs }).(pulumi.Float64ArrayOutput)
}

// Percentage of CPU time being used by system processes
func (o GetSwitchStatsDeviceSwitchStatModuleStatCpuStatOutput) System() pulumi.Float64Output {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatModuleStatCpuStat) float64 { return v.System }).(pulumi.Float64Output)
}

// Percentage of CPU time being used by user processes
func (o GetSwitchStatsDeviceSwitchStatModuleStatCpuStatOutput) User() pulumi.Float64Output {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatModuleStatCpuStat) float64 { return v.User }).(pulumi.Float64Output)
}

type GetSwitchStatsDeviceSwitchStatModuleStatError struct {
	Feature        string `pulumi:"feature"`
	MinimumVersion string `pulumi:"minimumVersion"`
	Reason         string `pulumi:"reason"`
	Since          int    `pulumi:"since"`
	Type           string `pulumi:"type"`
}

// GetSwitchStatsDeviceSwitchStatModuleStatErrorInput is an input type that accepts GetSwitchStatsDeviceSwitchStatModuleStatErrorArgs and GetSwitchStatsDeviceSwitchStatModuleStatErrorOutput values.
// You can construct a concrete instance of `GetSwitchStatsDeviceSwitchStatModuleStatErrorInput` via:
//
//	GetSwitchStatsDeviceSwitchStatModuleStatErrorArgs{...}
type GetSwitchStatsDeviceSwitchStatModuleStatErrorInput interface {
	pulumi.Input

	ToGetSwitchStatsDeviceSwitchStatModuleStatErrorOutput() GetSwitchStatsDeviceSwitchStatModuleStatErrorOutput
	ToGetSwitchStatsDeviceSwitchStatModuleStatErrorOutputWithContext(context.Context) GetSwitchStatsDeviceSwitchStatModuleStatErrorOutput
}

type GetSwitchStatsDeviceSwitchStatModuleStatErrorArgs struct {
	Feature        pulumi.StringInput `pulumi:"feature"`
	MinimumVersion pulumi.StringInput `pulumi:"minimumVersion"`
	Reason         pulumi.StringInput `pulumi:"reason"`
	Since          pulumi.IntInput    `pulumi:"since"`
	Type           pulumi.StringInput `pulumi:"type"`
}

func (GetSwitchStatsDeviceSwitchStatModuleStatErrorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSwitchStatsDeviceSwitchStatModuleStatError)(nil)).Elem()
}

func (i GetSwitchStatsDeviceSwitchStatModuleStatErrorArgs) ToGetSwitchStatsDeviceSwitchStatModuleStatErrorOutput() GetSwitchStatsDeviceSwitchStatModuleStatErrorOutput {
	return i.ToGetSwitchStatsDeviceSwitchStatModuleStatErrorOutputWithContext(context.Background())
}

func (i GetSwitchStatsDeviceSwitchStatModuleStatErrorArgs) ToGetSwitchStatsDeviceSwitchStatModuleStatErrorOutputWithContext(ctx context.Context) GetSwitchStatsDeviceSwitchStatModuleStatErrorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSwitchStatsDeviceSwitchStatModuleStatErrorOutput)
}

// GetSwitchStatsDeviceSwitchStatModuleStatErrorArrayInput is an input type that accepts GetSwitchStatsDeviceSwitchStatModuleStatErrorArray and GetSwitchStatsDeviceSwitchStatModuleStatErrorArrayOutput values.
// You can construct a concrete instance of `GetSwitchStatsDeviceSwitchStatModuleStatErrorArrayInput` via:
//
//	GetSwitchStatsDeviceSwitchStatModuleStatErrorArray{ GetSwitchStatsDeviceSwitchStatModuleStatErrorArgs{...} }
type GetSwitchStatsDeviceSwitchStatModuleStatErrorArrayInput interface {
	pulumi.Input

	ToGetSwitchStatsDeviceSwitchStatModuleStatErrorArrayOutput() GetSwitchStatsDeviceSwitchStatModuleStatErrorArrayOutput
	ToGetSwitchStatsDeviceSwitchStatModuleStatErrorArrayOutputWithContext(context.Context) GetSwitchStatsDeviceSwitchStatModuleStatErrorArrayOutput
}

type GetSwitchStatsDeviceSwitchStatModuleStatErrorArray []GetSwitchStatsDeviceSwitchStatModuleStatErrorInput

func (GetSwitchStatsDeviceSwitchStatModuleStatErrorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSwitchStatsDeviceSwitchStatModuleStatError)(nil)).Elem()
}

func (i GetSwitchStatsDeviceSwitchStatModuleStatErrorArray) ToGetSwitchStatsDeviceSwitchStatModuleStatErrorArrayOutput() GetSwitchStatsDeviceSwitchStatModuleStatErrorArrayOutput {
	return i.ToGetSwitchStatsDeviceSwitchStatModuleStatErrorArrayOutputWithContext(context.Background())
}

func (i GetSwitchStatsDeviceSwitchStatModuleStatErrorArray) ToGetSwitchStatsDeviceSwitchStatModuleStatErrorArrayOutputWithContext(ctx context.Context) GetSwitchStatsDeviceSwitchStatModuleStatErrorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSwitchStatsDeviceSwitchStatModuleStatErrorArrayOutput)
}

type GetSwitchStatsDeviceSwitchStatModuleStatErrorOutput struct{ *pulumi.OutputState }

func (GetSwitchStatsDeviceSwitchStatModuleStatErrorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSwitchStatsDeviceSwitchStatModuleStatError)(nil)).Elem()
}

func (o GetSwitchStatsDeviceSwitchStatModuleStatErrorOutput) ToGetSwitchStatsDeviceSwitchStatModuleStatErrorOutput() GetSwitchStatsDeviceSwitchStatModuleStatErrorOutput {
	return o
}

func (o GetSwitchStatsDeviceSwitchStatModuleStatErrorOutput) ToGetSwitchStatsDeviceSwitchStatModuleStatErrorOutputWithContext(ctx context.Context) GetSwitchStatsDeviceSwitchStatModuleStatErrorOutput {
	return o
}

func (o GetSwitchStatsDeviceSwitchStatModuleStatErrorOutput) Feature() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatModuleStatError) string { return v.Feature }).(pulumi.StringOutput)
}

func (o GetSwitchStatsDeviceSwitchStatModuleStatErrorOutput) MinimumVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatModuleStatError) string { return v.MinimumVersion }).(pulumi.StringOutput)
}

func (o GetSwitchStatsDeviceSwitchStatModuleStatErrorOutput) Reason() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatModuleStatError) string { return v.Reason }).(pulumi.StringOutput)
}

func (o GetSwitchStatsDeviceSwitchStatModuleStatErrorOutput) Since() pulumi.IntOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatModuleStatError) int { return v.Since }).(pulumi.IntOutput)
}

func (o GetSwitchStatsDeviceSwitchStatModuleStatErrorOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatModuleStatError) string { return v.Type }).(pulumi.StringOutput)
}

type GetSwitchStatsDeviceSwitchStatModuleStatErrorArrayOutput struct{ *pulumi.OutputState }

func (GetSwitchStatsDeviceSwitchStatModuleStatErrorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSwitchStatsDeviceSwitchStatModuleStatError)(nil)).Elem()
}

func (o GetSwitchStatsDeviceSwitchStatModuleStatErrorArrayOutput) ToGetSwitchStatsDeviceSwitchStatModuleStatErrorArrayOutput() GetSwitchStatsDeviceSwitchStatModuleStatErrorArrayOutput {
	return o
}

func (o GetSwitchStatsDeviceSwitchStatModuleStatErrorArrayOutput) ToGetSwitchStatsDeviceSwitchStatModuleStatErrorArrayOutputWithContext(ctx context.Context) GetSwitchStatsDeviceSwitchStatModuleStatErrorArrayOutput {
	return o
}

func (o GetSwitchStatsDeviceSwitchStatModuleStatErrorArrayOutput) Index(i pulumi.IntInput) GetSwitchStatsDeviceSwitchStatModuleStatErrorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSwitchStatsDeviceSwitchStatModuleStatError {
		return vs[0].([]GetSwitchStatsDeviceSwitchStatModuleStatError)[vs[1].(int)]
	}).(GetSwitchStatsDeviceSwitchStatModuleStatErrorOutput)
}

type GetSwitchStatsDeviceSwitchStatModuleStatFan struct {
	Airflow string `pulumi:"airflow"`
	Name    string `pulumi:"name"`
	Status  string `pulumi:"status"`
}

// GetSwitchStatsDeviceSwitchStatModuleStatFanInput is an input type that accepts GetSwitchStatsDeviceSwitchStatModuleStatFanArgs and GetSwitchStatsDeviceSwitchStatModuleStatFanOutput values.
// You can construct a concrete instance of `GetSwitchStatsDeviceSwitchStatModuleStatFanInput` via:
//
//	GetSwitchStatsDeviceSwitchStatModuleStatFanArgs{...}
type GetSwitchStatsDeviceSwitchStatModuleStatFanInput interface {
	pulumi.Input

	ToGetSwitchStatsDeviceSwitchStatModuleStatFanOutput() GetSwitchStatsDeviceSwitchStatModuleStatFanOutput
	ToGetSwitchStatsDeviceSwitchStatModuleStatFanOutputWithContext(context.Context) GetSwitchStatsDeviceSwitchStatModuleStatFanOutput
}

type GetSwitchStatsDeviceSwitchStatModuleStatFanArgs struct {
	Airflow pulumi.StringInput `pulumi:"airflow"`
	Name    pulumi.StringInput `pulumi:"name"`
	Status  pulumi.StringInput `pulumi:"status"`
}

func (GetSwitchStatsDeviceSwitchStatModuleStatFanArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSwitchStatsDeviceSwitchStatModuleStatFan)(nil)).Elem()
}

func (i GetSwitchStatsDeviceSwitchStatModuleStatFanArgs) ToGetSwitchStatsDeviceSwitchStatModuleStatFanOutput() GetSwitchStatsDeviceSwitchStatModuleStatFanOutput {
	return i.ToGetSwitchStatsDeviceSwitchStatModuleStatFanOutputWithContext(context.Background())
}

func (i GetSwitchStatsDeviceSwitchStatModuleStatFanArgs) ToGetSwitchStatsDeviceSwitchStatModuleStatFanOutputWithContext(ctx context.Context) GetSwitchStatsDeviceSwitchStatModuleStatFanOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSwitchStatsDeviceSwitchStatModuleStatFanOutput)
}

// GetSwitchStatsDeviceSwitchStatModuleStatFanArrayInput is an input type that accepts GetSwitchStatsDeviceSwitchStatModuleStatFanArray and GetSwitchStatsDeviceSwitchStatModuleStatFanArrayOutput values.
// You can construct a concrete instance of `GetSwitchStatsDeviceSwitchStatModuleStatFanArrayInput` via:
//
//	GetSwitchStatsDeviceSwitchStatModuleStatFanArray{ GetSwitchStatsDeviceSwitchStatModuleStatFanArgs{...} }
type GetSwitchStatsDeviceSwitchStatModuleStatFanArrayInput interface {
	pulumi.Input

	ToGetSwitchStatsDeviceSwitchStatModuleStatFanArrayOutput() GetSwitchStatsDeviceSwitchStatModuleStatFanArrayOutput
	ToGetSwitchStatsDeviceSwitchStatModuleStatFanArrayOutputWithContext(context.Context) GetSwitchStatsDeviceSwitchStatModuleStatFanArrayOutput
}

type GetSwitchStatsDeviceSwitchStatModuleStatFanArray []GetSwitchStatsDeviceSwitchStatModuleStatFanInput

func (GetSwitchStatsDeviceSwitchStatModuleStatFanArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSwitchStatsDeviceSwitchStatModuleStatFan)(nil)).Elem()
}

func (i GetSwitchStatsDeviceSwitchStatModuleStatFanArray) ToGetSwitchStatsDeviceSwitchStatModuleStatFanArrayOutput() GetSwitchStatsDeviceSwitchStatModuleStatFanArrayOutput {
	return i.ToGetSwitchStatsDeviceSwitchStatModuleStatFanArrayOutputWithContext(context.Background())
}

func (i GetSwitchStatsDeviceSwitchStatModuleStatFanArray) ToGetSwitchStatsDeviceSwitchStatModuleStatFanArrayOutputWithContext(ctx context.Context) GetSwitchStatsDeviceSwitchStatModuleStatFanArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSwitchStatsDeviceSwitchStatModuleStatFanArrayOutput)
}

type GetSwitchStatsDeviceSwitchStatModuleStatFanOutput struct{ *pulumi.OutputState }

func (GetSwitchStatsDeviceSwitchStatModuleStatFanOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSwitchStatsDeviceSwitchStatModuleStatFan)(nil)).Elem()
}

func (o GetSwitchStatsDeviceSwitchStatModuleStatFanOutput) ToGetSwitchStatsDeviceSwitchStatModuleStatFanOutput() GetSwitchStatsDeviceSwitchStatModuleStatFanOutput {
	return o
}

func (o GetSwitchStatsDeviceSwitchStatModuleStatFanOutput) ToGetSwitchStatsDeviceSwitchStatModuleStatFanOutputWithContext(ctx context.Context) GetSwitchStatsDeviceSwitchStatModuleStatFanOutput {
	return o
}

func (o GetSwitchStatsDeviceSwitchStatModuleStatFanOutput) Airflow() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatModuleStatFan) string { return v.Airflow }).(pulumi.StringOutput)
}

func (o GetSwitchStatsDeviceSwitchStatModuleStatFanOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatModuleStatFan) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetSwitchStatsDeviceSwitchStatModuleStatFanOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatModuleStatFan) string { return v.Status }).(pulumi.StringOutput)
}

type GetSwitchStatsDeviceSwitchStatModuleStatFanArrayOutput struct{ *pulumi.OutputState }

func (GetSwitchStatsDeviceSwitchStatModuleStatFanArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSwitchStatsDeviceSwitchStatModuleStatFan)(nil)).Elem()
}

func (o GetSwitchStatsDeviceSwitchStatModuleStatFanArrayOutput) ToGetSwitchStatsDeviceSwitchStatModuleStatFanArrayOutput() GetSwitchStatsDeviceSwitchStatModuleStatFanArrayOutput {
	return o
}

func (o GetSwitchStatsDeviceSwitchStatModuleStatFanArrayOutput) ToGetSwitchStatsDeviceSwitchStatModuleStatFanArrayOutputWithContext(ctx context.Context) GetSwitchStatsDeviceSwitchStatModuleStatFanArrayOutput {
	return o
}

func (o GetSwitchStatsDeviceSwitchStatModuleStatFanArrayOutput) Index(i pulumi.IntInput) GetSwitchStatsDeviceSwitchStatModuleStatFanOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSwitchStatsDeviceSwitchStatModuleStatFan {
		return vs[0].([]GetSwitchStatsDeviceSwitchStatModuleStatFan)[vs[1].(int)]
	}).(GetSwitchStatsDeviceSwitchStatModuleStatFanOutput)
}

type GetSwitchStatsDeviceSwitchStatModuleStatPic struct {
	Index       int                                                    `pulumi:"index"`
	ModelNumber string                                                 `pulumi:"modelNumber"`
	PortGroups  []GetSwitchStatsDeviceSwitchStatModuleStatPicPortGroup `pulumi:"portGroups"`
}

// GetSwitchStatsDeviceSwitchStatModuleStatPicInput is an input type that accepts GetSwitchStatsDeviceSwitchStatModuleStatPicArgs and GetSwitchStatsDeviceSwitchStatModuleStatPicOutput values.
// You can construct a concrete instance of `GetSwitchStatsDeviceSwitchStatModuleStatPicInput` via:
//
//	GetSwitchStatsDeviceSwitchStatModuleStatPicArgs{...}
type GetSwitchStatsDeviceSwitchStatModuleStatPicInput interface {
	pulumi.Input

	ToGetSwitchStatsDeviceSwitchStatModuleStatPicOutput() GetSwitchStatsDeviceSwitchStatModuleStatPicOutput
	ToGetSwitchStatsDeviceSwitchStatModuleStatPicOutputWithContext(context.Context) GetSwitchStatsDeviceSwitchStatModuleStatPicOutput
}

type GetSwitchStatsDeviceSwitchStatModuleStatPicArgs struct {
	Index       pulumi.IntInput                                                `pulumi:"index"`
	ModelNumber pulumi.StringInput                                             `pulumi:"modelNumber"`
	PortGroups  GetSwitchStatsDeviceSwitchStatModuleStatPicPortGroupArrayInput `pulumi:"portGroups"`
}

func (GetSwitchStatsDeviceSwitchStatModuleStatPicArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSwitchStatsDeviceSwitchStatModuleStatPic)(nil)).Elem()
}

func (i GetSwitchStatsDeviceSwitchStatModuleStatPicArgs) ToGetSwitchStatsDeviceSwitchStatModuleStatPicOutput() GetSwitchStatsDeviceSwitchStatModuleStatPicOutput {
	return i.ToGetSwitchStatsDeviceSwitchStatModuleStatPicOutputWithContext(context.Background())
}

func (i GetSwitchStatsDeviceSwitchStatModuleStatPicArgs) ToGetSwitchStatsDeviceSwitchStatModuleStatPicOutputWithContext(ctx context.Context) GetSwitchStatsDeviceSwitchStatModuleStatPicOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSwitchStatsDeviceSwitchStatModuleStatPicOutput)
}

// GetSwitchStatsDeviceSwitchStatModuleStatPicArrayInput is an input type that accepts GetSwitchStatsDeviceSwitchStatModuleStatPicArray and GetSwitchStatsDeviceSwitchStatModuleStatPicArrayOutput values.
// You can construct a concrete instance of `GetSwitchStatsDeviceSwitchStatModuleStatPicArrayInput` via:
//
//	GetSwitchStatsDeviceSwitchStatModuleStatPicArray{ GetSwitchStatsDeviceSwitchStatModuleStatPicArgs{...} }
type GetSwitchStatsDeviceSwitchStatModuleStatPicArrayInput interface {
	pulumi.Input

	ToGetSwitchStatsDeviceSwitchStatModuleStatPicArrayOutput() GetSwitchStatsDeviceSwitchStatModuleStatPicArrayOutput
	ToGetSwitchStatsDeviceSwitchStatModuleStatPicArrayOutputWithContext(context.Context) GetSwitchStatsDeviceSwitchStatModuleStatPicArrayOutput
}

type GetSwitchStatsDeviceSwitchStatModuleStatPicArray []GetSwitchStatsDeviceSwitchStatModuleStatPicInput

func (GetSwitchStatsDeviceSwitchStatModuleStatPicArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSwitchStatsDeviceSwitchStatModuleStatPic)(nil)).Elem()
}

func (i GetSwitchStatsDeviceSwitchStatModuleStatPicArray) ToGetSwitchStatsDeviceSwitchStatModuleStatPicArrayOutput() GetSwitchStatsDeviceSwitchStatModuleStatPicArrayOutput {
	return i.ToGetSwitchStatsDeviceSwitchStatModuleStatPicArrayOutputWithContext(context.Background())
}

func (i GetSwitchStatsDeviceSwitchStatModuleStatPicArray) ToGetSwitchStatsDeviceSwitchStatModuleStatPicArrayOutputWithContext(ctx context.Context) GetSwitchStatsDeviceSwitchStatModuleStatPicArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSwitchStatsDeviceSwitchStatModuleStatPicArrayOutput)
}

type GetSwitchStatsDeviceSwitchStatModuleStatPicOutput struct{ *pulumi.OutputState }

func (GetSwitchStatsDeviceSwitchStatModuleStatPicOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSwitchStatsDeviceSwitchStatModuleStatPic)(nil)).Elem()
}

func (o GetSwitchStatsDeviceSwitchStatModuleStatPicOutput) ToGetSwitchStatsDeviceSwitchStatModuleStatPicOutput() GetSwitchStatsDeviceSwitchStatModuleStatPicOutput {
	return o
}

func (o GetSwitchStatsDeviceSwitchStatModuleStatPicOutput) ToGetSwitchStatsDeviceSwitchStatModuleStatPicOutputWithContext(ctx context.Context) GetSwitchStatsDeviceSwitchStatModuleStatPicOutput {
	return o
}

func (o GetSwitchStatsDeviceSwitchStatModuleStatPicOutput) Index() pulumi.IntOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatModuleStatPic) int { return v.Index }).(pulumi.IntOutput)
}

func (o GetSwitchStatsDeviceSwitchStatModuleStatPicOutput) ModelNumber() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatModuleStatPic) string { return v.ModelNumber }).(pulumi.StringOutput)
}

func (o GetSwitchStatsDeviceSwitchStatModuleStatPicOutput) PortGroups() GetSwitchStatsDeviceSwitchStatModuleStatPicPortGroupArrayOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatModuleStatPic) []GetSwitchStatsDeviceSwitchStatModuleStatPicPortGroup {
		return v.PortGroups
	}).(GetSwitchStatsDeviceSwitchStatModuleStatPicPortGroupArrayOutput)
}

type GetSwitchStatsDeviceSwitchStatModuleStatPicArrayOutput struct{ *pulumi.OutputState }

func (GetSwitchStatsDeviceSwitchStatModuleStatPicArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSwitchStatsDeviceSwitchStatModuleStatPic)(nil)).Elem()
}

func (o GetSwitchStatsDeviceSwitchStatModuleStatPicArrayOutput) ToGetSwitchStatsDeviceSwitchStatModuleStatPicArrayOutput() GetSwitchStatsDeviceSwitchStatModuleStatPicArrayOutput {
	return o
}

func (o GetSwitchStatsDeviceSwitchStatModuleStatPicArrayOutput) ToGetSwitchStatsDeviceSwitchStatModuleStatPicArrayOutputWithContext(ctx context.Context) GetSwitchStatsDeviceSwitchStatModuleStatPicArrayOutput {
	return o
}

func (o GetSwitchStatsDeviceSwitchStatModuleStatPicArrayOutput) Index(i pulumi.IntInput) GetSwitchStatsDeviceSwitchStatModuleStatPicOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSwitchStatsDeviceSwitchStatModuleStatPic {
		return vs[0].([]GetSwitchStatsDeviceSwitchStatModuleStatPic)[vs[1].(int)]
	}).(GetSwitchStatsDeviceSwitchStatModuleStatPicOutput)
}

type GetSwitchStatsDeviceSwitchStatModuleStatPicPortGroup struct {
	Count int    `pulumi:"count"`
	Type  string `pulumi:"type"`
}

// GetSwitchStatsDeviceSwitchStatModuleStatPicPortGroupInput is an input type that accepts GetSwitchStatsDeviceSwitchStatModuleStatPicPortGroupArgs and GetSwitchStatsDeviceSwitchStatModuleStatPicPortGroupOutput values.
// You can construct a concrete instance of `GetSwitchStatsDeviceSwitchStatModuleStatPicPortGroupInput` via:
//
//	GetSwitchStatsDeviceSwitchStatModuleStatPicPortGroupArgs{...}
type GetSwitchStatsDeviceSwitchStatModuleStatPicPortGroupInput interface {
	pulumi.Input

	ToGetSwitchStatsDeviceSwitchStatModuleStatPicPortGroupOutput() GetSwitchStatsDeviceSwitchStatModuleStatPicPortGroupOutput
	ToGetSwitchStatsDeviceSwitchStatModuleStatPicPortGroupOutputWithContext(context.Context) GetSwitchStatsDeviceSwitchStatModuleStatPicPortGroupOutput
}

type GetSwitchStatsDeviceSwitchStatModuleStatPicPortGroupArgs struct {
	Count pulumi.IntInput    `pulumi:"count"`
	Type  pulumi.StringInput `pulumi:"type"`
}

func (GetSwitchStatsDeviceSwitchStatModuleStatPicPortGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSwitchStatsDeviceSwitchStatModuleStatPicPortGroup)(nil)).Elem()
}

func (i GetSwitchStatsDeviceSwitchStatModuleStatPicPortGroupArgs) ToGetSwitchStatsDeviceSwitchStatModuleStatPicPortGroupOutput() GetSwitchStatsDeviceSwitchStatModuleStatPicPortGroupOutput {
	return i.ToGetSwitchStatsDeviceSwitchStatModuleStatPicPortGroupOutputWithContext(context.Background())
}

func (i GetSwitchStatsDeviceSwitchStatModuleStatPicPortGroupArgs) ToGetSwitchStatsDeviceSwitchStatModuleStatPicPortGroupOutputWithContext(ctx context.Context) GetSwitchStatsDeviceSwitchStatModuleStatPicPortGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSwitchStatsDeviceSwitchStatModuleStatPicPortGroupOutput)
}

// GetSwitchStatsDeviceSwitchStatModuleStatPicPortGroupArrayInput is an input type that accepts GetSwitchStatsDeviceSwitchStatModuleStatPicPortGroupArray and GetSwitchStatsDeviceSwitchStatModuleStatPicPortGroupArrayOutput values.
// You can construct a concrete instance of `GetSwitchStatsDeviceSwitchStatModuleStatPicPortGroupArrayInput` via:
//
//	GetSwitchStatsDeviceSwitchStatModuleStatPicPortGroupArray{ GetSwitchStatsDeviceSwitchStatModuleStatPicPortGroupArgs{...} }
type GetSwitchStatsDeviceSwitchStatModuleStatPicPortGroupArrayInput interface {
	pulumi.Input

	ToGetSwitchStatsDeviceSwitchStatModuleStatPicPortGroupArrayOutput() GetSwitchStatsDeviceSwitchStatModuleStatPicPortGroupArrayOutput
	ToGetSwitchStatsDeviceSwitchStatModuleStatPicPortGroupArrayOutputWithContext(context.Context) GetSwitchStatsDeviceSwitchStatModuleStatPicPortGroupArrayOutput
}

type GetSwitchStatsDeviceSwitchStatModuleStatPicPortGroupArray []GetSwitchStatsDeviceSwitchStatModuleStatPicPortGroupInput

func (GetSwitchStatsDeviceSwitchStatModuleStatPicPortGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSwitchStatsDeviceSwitchStatModuleStatPicPortGroup)(nil)).Elem()
}

func (i GetSwitchStatsDeviceSwitchStatModuleStatPicPortGroupArray) ToGetSwitchStatsDeviceSwitchStatModuleStatPicPortGroupArrayOutput() GetSwitchStatsDeviceSwitchStatModuleStatPicPortGroupArrayOutput {
	return i.ToGetSwitchStatsDeviceSwitchStatModuleStatPicPortGroupArrayOutputWithContext(context.Background())
}

func (i GetSwitchStatsDeviceSwitchStatModuleStatPicPortGroupArray) ToGetSwitchStatsDeviceSwitchStatModuleStatPicPortGroupArrayOutputWithContext(ctx context.Context) GetSwitchStatsDeviceSwitchStatModuleStatPicPortGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSwitchStatsDeviceSwitchStatModuleStatPicPortGroupArrayOutput)
}

type GetSwitchStatsDeviceSwitchStatModuleStatPicPortGroupOutput struct{ *pulumi.OutputState }

func (GetSwitchStatsDeviceSwitchStatModuleStatPicPortGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSwitchStatsDeviceSwitchStatModuleStatPicPortGroup)(nil)).Elem()
}

func (o GetSwitchStatsDeviceSwitchStatModuleStatPicPortGroupOutput) ToGetSwitchStatsDeviceSwitchStatModuleStatPicPortGroupOutput() GetSwitchStatsDeviceSwitchStatModuleStatPicPortGroupOutput {
	return o
}

func (o GetSwitchStatsDeviceSwitchStatModuleStatPicPortGroupOutput) ToGetSwitchStatsDeviceSwitchStatModuleStatPicPortGroupOutputWithContext(ctx context.Context) GetSwitchStatsDeviceSwitchStatModuleStatPicPortGroupOutput {
	return o
}

func (o GetSwitchStatsDeviceSwitchStatModuleStatPicPortGroupOutput) Count() pulumi.IntOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatModuleStatPicPortGroup) int { return v.Count }).(pulumi.IntOutput)
}

func (o GetSwitchStatsDeviceSwitchStatModuleStatPicPortGroupOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatModuleStatPicPortGroup) string { return v.Type }).(pulumi.StringOutput)
}

type GetSwitchStatsDeviceSwitchStatModuleStatPicPortGroupArrayOutput struct{ *pulumi.OutputState }

func (GetSwitchStatsDeviceSwitchStatModuleStatPicPortGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSwitchStatsDeviceSwitchStatModuleStatPicPortGroup)(nil)).Elem()
}

func (o GetSwitchStatsDeviceSwitchStatModuleStatPicPortGroupArrayOutput) ToGetSwitchStatsDeviceSwitchStatModuleStatPicPortGroupArrayOutput() GetSwitchStatsDeviceSwitchStatModuleStatPicPortGroupArrayOutput {
	return o
}

func (o GetSwitchStatsDeviceSwitchStatModuleStatPicPortGroupArrayOutput) ToGetSwitchStatsDeviceSwitchStatModuleStatPicPortGroupArrayOutputWithContext(ctx context.Context) GetSwitchStatsDeviceSwitchStatModuleStatPicPortGroupArrayOutput {
	return o
}

func (o GetSwitchStatsDeviceSwitchStatModuleStatPicPortGroupArrayOutput) Index(i pulumi.IntInput) GetSwitchStatsDeviceSwitchStatModuleStatPicPortGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSwitchStatsDeviceSwitchStatModuleStatPicPortGroup {
		return vs[0].([]GetSwitchStatsDeviceSwitchStatModuleStatPicPortGroup)[vs[1].(int)]
	}).(GetSwitchStatsDeviceSwitchStatModuleStatPicPortGroupOutput)
}

type GetSwitchStatsDeviceSwitchStatModuleStatPoe struct {
	MaxPower  float64 `pulumi:"maxPower"`
	PowerDraw float64 `pulumi:"powerDraw"`
}

// GetSwitchStatsDeviceSwitchStatModuleStatPoeInput is an input type that accepts GetSwitchStatsDeviceSwitchStatModuleStatPoeArgs and GetSwitchStatsDeviceSwitchStatModuleStatPoeOutput values.
// You can construct a concrete instance of `GetSwitchStatsDeviceSwitchStatModuleStatPoeInput` via:
//
//	GetSwitchStatsDeviceSwitchStatModuleStatPoeArgs{...}
type GetSwitchStatsDeviceSwitchStatModuleStatPoeInput interface {
	pulumi.Input

	ToGetSwitchStatsDeviceSwitchStatModuleStatPoeOutput() GetSwitchStatsDeviceSwitchStatModuleStatPoeOutput
	ToGetSwitchStatsDeviceSwitchStatModuleStatPoeOutputWithContext(context.Context) GetSwitchStatsDeviceSwitchStatModuleStatPoeOutput
}

type GetSwitchStatsDeviceSwitchStatModuleStatPoeArgs struct {
	MaxPower  pulumi.Float64Input `pulumi:"maxPower"`
	PowerDraw pulumi.Float64Input `pulumi:"powerDraw"`
}

func (GetSwitchStatsDeviceSwitchStatModuleStatPoeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSwitchStatsDeviceSwitchStatModuleStatPoe)(nil)).Elem()
}

func (i GetSwitchStatsDeviceSwitchStatModuleStatPoeArgs) ToGetSwitchStatsDeviceSwitchStatModuleStatPoeOutput() GetSwitchStatsDeviceSwitchStatModuleStatPoeOutput {
	return i.ToGetSwitchStatsDeviceSwitchStatModuleStatPoeOutputWithContext(context.Background())
}

func (i GetSwitchStatsDeviceSwitchStatModuleStatPoeArgs) ToGetSwitchStatsDeviceSwitchStatModuleStatPoeOutputWithContext(ctx context.Context) GetSwitchStatsDeviceSwitchStatModuleStatPoeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSwitchStatsDeviceSwitchStatModuleStatPoeOutput)
}

type GetSwitchStatsDeviceSwitchStatModuleStatPoeOutput struct{ *pulumi.OutputState }

func (GetSwitchStatsDeviceSwitchStatModuleStatPoeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSwitchStatsDeviceSwitchStatModuleStatPoe)(nil)).Elem()
}

func (o GetSwitchStatsDeviceSwitchStatModuleStatPoeOutput) ToGetSwitchStatsDeviceSwitchStatModuleStatPoeOutput() GetSwitchStatsDeviceSwitchStatModuleStatPoeOutput {
	return o
}

func (o GetSwitchStatsDeviceSwitchStatModuleStatPoeOutput) ToGetSwitchStatsDeviceSwitchStatModuleStatPoeOutputWithContext(ctx context.Context) GetSwitchStatsDeviceSwitchStatModuleStatPoeOutput {
	return o
}

func (o GetSwitchStatsDeviceSwitchStatModuleStatPoeOutput) MaxPower() pulumi.Float64Output {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatModuleStatPoe) float64 { return v.MaxPower }).(pulumi.Float64Output)
}

func (o GetSwitchStatsDeviceSwitchStatModuleStatPoeOutput) PowerDraw() pulumi.Float64Output {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatModuleStatPoe) float64 { return v.PowerDraw }).(pulumi.Float64Output)
}

type GetSwitchStatsDeviceSwitchStatModuleStatPsus struct {
	Name   string `pulumi:"name"`
	Status string `pulumi:"status"`
}

// GetSwitchStatsDeviceSwitchStatModuleStatPsusInput is an input type that accepts GetSwitchStatsDeviceSwitchStatModuleStatPsusArgs and GetSwitchStatsDeviceSwitchStatModuleStatPsusOutput values.
// You can construct a concrete instance of `GetSwitchStatsDeviceSwitchStatModuleStatPsusInput` via:
//
//	GetSwitchStatsDeviceSwitchStatModuleStatPsusArgs{...}
type GetSwitchStatsDeviceSwitchStatModuleStatPsusInput interface {
	pulumi.Input

	ToGetSwitchStatsDeviceSwitchStatModuleStatPsusOutput() GetSwitchStatsDeviceSwitchStatModuleStatPsusOutput
	ToGetSwitchStatsDeviceSwitchStatModuleStatPsusOutputWithContext(context.Context) GetSwitchStatsDeviceSwitchStatModuleStatPsusOutput
}

type GetSwitchStatsDeviceSwitchStatModuleStatPsusArgs struct {
	Name   pulumi.StringInput `pulumi:"name"`
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetSwitchStatsDeviceSwitchStatModuleStatPsusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSwitchStatsDeviceSwitchStatModuleStatPsus)(nil)).Elem()
}

func (i GetSwitchStatsDeviceSwitchStatModuleStatPsusArgs) ToGetSwitchStatsDeviceSwitchStatModuleStatPsusOutput() GetSwitchStatsDeviceSwitchStatModuleStatPsusOutput {
	return i.ToGetSwitchStatsDeviceSwitchStatModuleStatPsusOutputWithContext(context.Background())
}

func (i GetSwitchStatsDeviceSwitchStatModuleStatPsusArgs) ToGetSwitchStatsDeviceSwitchStatModuleStatPsusOutputWithContext(ctx context.Context) GetSwitchStatsDeviceSwitchStatModuleStatPsusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSwitchStatsDeviceSwitchStatModuleStatPsusOutput)
}

// GetSwitchStatsDeviceSwitchStatModuleStatPsusArrayInput is an input type that accepts GetSwitchStatsDeviceSwitchStatModuleStatPsusArray and GetSwitchStatsDeviceSwitchStatModuleStatPsusArrayOutput values.
// You can construct a concrete instance of `GetSwitchStatsDeviceSwitchStatModuleStatPsusArrayInput` via:
//
//	GetSwitchStatsDeviceSwitchStatModuleStatPsusArray{ GetSwitchStatsDeviceSwitchStatModuleStatPsusArgs{...} }
type GetSwitchStatsDeviceSwitchStatModuleStatPsusArrayInput interface {
	pulumi.Input

	ToGetSwitchStatsDeviceSwitchStatModuleStatPsusArrayOutput() GetSwitchStatsDeviceSwitchStatModuleStatPsusArrayOutput
	ToGetSwitchStatsDeviceSwitchStatModuleStatPsusArrayOutputWithContext(context.Context) GetSwitchStatsDeviceSwitchStatModuleStatPsusArrayOutput
}

type GetSwitchStatsDeviceSwitchStatModuleStatPsusArray []GetSwitchStatsDeviceSwitchStatModuleStatPsusInput

func (GetSwitchStatsDeviceSwitchStatModuleStatPsusArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSwitchStatsDeviceSwitchStatModuleStatPsus)(nil)).Elem()
}

func (i GetSwitchStatsDeviceSwitchStatModuleStatPsusArray) ToGetSwitchStatsDeviceSwitchStatModuleStatPsusArrayOutput() GetSwitchStatsDeviceSwitchStatModuleStatPsusArrayOutput {
	return i.ToGetSwitchStatsDeviceSwitchStatModuleStatPsusArrayOutputWithContext(context.Background())
}

func (i GetSwitchStatsDeviceSwitchStatModuleStatPsusArray) ToGetSwitchStatsDeviceSwitchStatModuleStatPsusArrayOutputWithContext(ctx context.Context) GetSwitchStatsDeviceSwitchStatModuleStatPsusArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSwitchStatsDeviceSwitchStatModuleStatPsusArrayOutput)
}

type GetSwitchStatsDeviceSwitchStatModuleStatPsusOutput struct{ *pulumi.OutputState }

func (GetSwitchStatsDeviceSwitchStatModuleStatPsusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSwitchStatsDeviceSwitchStatModuleStatPsus)(nil)).Elem()
}

func (o GetSwitchStatsDeviceSwitchStatModuleStatPsusOutput) ToGetSwitchStatsDeviceSwitchStatModuleStatPsusOutput() GetSwitchStatsDeviceSwitchStatModuleStatPsusOutput {
	return o
}

func (o GetSwitchStatsDeviceSwitchStatModuleStatPsusOutput) ToGetSwitchStatsDeviceSwitchStatModuleStatPsusOutputWithContext(ctx context.Context) GetSwitchStatsDeviceSwitchStatModuleStatPsusOutput {
	return o
}

func (o GetSwitchStatsDeviceSwitchStatModuleStatPsusOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatModuleStatPsus) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetSwitchStatsDeviceSwitchStatModuleStatPsusOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatModuleStatPsus) string { return v.Status }).(pulumi.StringOutput)
}

type GetSwitchStatsDeviceSwitchStatModuleStatPsusArrayOutput struct{ *pulumi.OutputState }

func (GetSwitchStatsDeviceSwitchStatModuleStatPsusArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSwitchStatsDeviceSwitchStatModuleStatPsus)(nil)).Elem()
}

func (o GetSwitchStatsDeviceSwitchStatModuleStatPsusArrayOutput) ToGetSwitchStatsDeviceSwitchStatModuleStatPsusArrayOutput() GetSwitchStatsDeviceSwitchStatModuleStatPsusArrayOutput {
	return o
}

func (o GetSwitchStatsDeviceSwitchStatModuleStatPsusArrayOutput) ToGetSwitchStatsDeviceSwitchStatModuleStatPsusArrayOutputWithContext(ctx context.Context) GetSwitchStatsDeviceSwitchStatModuleStatPsusArrayOutput {
	return o
}

func (o GetSwitchStatsDeviceSwitchStatModuleStatPsusArrayOutput) Index(i pulumi.IntInput) GetSwitchStatsDeviceSwitchStatModuleStatPsusOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSwitchStatsDeviceSwitchStatModuleStatPsus {
		return vs[0].([]GetSwitchStatsDeviceSwitchStatModuleStatPsus)[vs[1].(int)]
	}).(GetSwitchStatsDeviceSwitchStatModuleStatPsusOutput)
}

type GetSwitchStatsDeviceSwitchStatModuleStatTemperature struct {
	Celsius float64 `pulumi:"celsius"`
	Name    string  `pulumi:"name"`
	Status  string  `pulumi:"status"`
}

// GetSwitchStatsDeviceSwitchStatModuleStatTemperatureInput is an input type that accepts GetSwitchStatsDeviceSwitchStatModuleStatTemperatureArgs and GetSwitchStatsDeviceSwitchStatModuleStatTemperatureOutput values.
// You can construct a concrete instance of `GetSwitchStatsDeviceSwitchStatModuleStatTemperatureInput` via:
//
//	GetSwitchStatsDeviceSwitchStatModuleStatTemperatureArgs{...}
type GetSwitchStatsDeviceSwitchStatModuleStatTemperatureInput interface {
	pulumi.Input

	ToGetSwitchStatsDeviceSwitchStatModuleStatTemperatureOutput() GetSwitchStatsDeviceSwitchStatModuleStatTemperatureOutput
	ToGetSwitchStatsDeviceSwitchStatModuleStatTemperatureOutputWithContext(context.Context) GetSwitchStatsDeviceSwitchStatModuleStatTemperatureOutput
}

type GetSwitchStatsDeviceSwitchStatModuleStatTemperatureArgs struct {
	Celsius pulumi.Float64Input `pulumi:"celsius"`
	Name    pulumi.StringInput  `pulumi:"name"`
	Status  pulumi.StringInput  `pulumi:"status"`
}

func (GetSwitchStatsDeviceSwitchStatModuleStatTemperatureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSwitchStatsDeviceSwitchStatModuleStatTemperature)(nil)).Elem()
}

func (i GetSwitchStatsDeviceSwitchStatModuleStatTemperatureArgs) ToGetSwitchStatsDeviceSwitchStatModuleStatTemperatureOutput() GetSwitchStatsDeviceSwitchStatModuleStatTemperatureOutput {
	return i.ToGetSwitchStatsDeviceSwitchStatModuleStatTemperatureOutputWithContext(context.Background())
}

func (i GetSwitchStatsDeviceSwitchStatModuleStatTemperatureArgs) ToGetSwitchStatsDeviceSwitchStatModuleStatTemperatureOutputWithContext(ctx context.Context) GetSwitchStatsDeviceSwitchStatModuleStatTemperatureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSwitchStatsDeviceSwitchStatModuleStatTemperatureOutput)
}

// GetSwitchStatsDeviceSwitchStatModuleStatTemperatureArrayInput is an input type that accepts GetSwitchStatsDeviceSwitchStatModuleStatTemperatureArray and GetSwitchStatsDeviceSwitchStatModuleStatTemperatureArrayOutput values.
// You can construct a concrete instance of `GetSwitchStatsDeviceSwitchStatModuleStatTemperatureArrayInput` via:
//
//	GetSwitchStatsDeviceSwitchStatModuleStatTemperatureArray{ GetSwitchStatsDeviceSwitchStatModuleStatTemperatureArgs{...} }
type GetSwitchStatsDeviceSwitchStatModuleStatTemperatureArrayInput interface {
	pulumi.Input

	ToGetSwitchStatsDeviceSwitchStatModuleStatTemperatureArrayOutput() GetSwitchStatsDeviceSwitchStatModuleStatTemperatureArrayOutput
	ToGetSwitchStatsDeviceSwitchStatModuleStatTemperatureArrayOutputWithContext(context.Context) GetSwitchStatsDeviceSwitchStatModuleStatTemperatureArrayOutput
}

type GetSwitchStatsDeviceSwitchStatModuleStatTemperatureArray []GetSwitchStatsDeviceSwitchStatModuleStatTemperatureInput

func (GetSwitchStatsDeviceSwitchStatModuleStatTemperatureArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSwitchStatsDeviceSwitchStatModuleStatTemperature)(nil)).Elem()
}

func (i GetSwitchStatsDeviceSwitchStatModuleStatTemperatureArray) ToGetSwitchStatsDeviceSwitchStatModuleStatTemperatureArrayOutput() GetSwitchStatsDeviceSwitchStatModuleStatTemperatureArrayOutput {
	return i.ToGetSwitchStatsDeviceSwitchStatModuleStatTemperatureArrayOutputWithContext(context.Background())
}

func (i GetSwitchStatsDeviceSwitchStatModuleStatTemperatureArray) ToGetSwitchStatsDeviceSwitchStatModuleStatTemperatureArrayOutputWithContext(ctx context.Context) GetSwitchStatsDeviceSwitchStatModuleStatTemperatureArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSwitchStatsDeviceSwitchStatModuleStatTemperatureArrayOutput)
}

type GetSwitchStatsDeviceSwitchStatModuleStatTemperatureOutput struct{ *pulumi.OutputState }

func (GetSwitchStatsDeviceSwitchStatModuleStatTemperatureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSwitchStatsDeviceSwitchStatModuleStatTemperature)(nil)).Elem()
}

func (o GetSwitchStatsDeviceSwitchStatModuleStatTemperatureOutput) ToGetSwitchStatsDeviceSwitchStatModuleStatTemperatureOutput() GetSwitchStatsDeviceSwitchStatModuleStatTemperatureOutput {
	return o
}

func (o GetSwitchStatsDeviceSwitchStatModuleStatTemperatureOutput) ToGetSwitchStatsDeviceSwitchStatModuleStatTemperatureOutputWithContext(ctx context.Context) GetSwitchStatsDeviceSwitchStatModuleStatTemperatureOutput {
	return o
}

func (o GetSwitchStatsDeviceSwitchStatModuleStatTemperatureOutput) Celsius() pulumi.Float64Output {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatModuleStatTemperature) float64 { return v.Celsius }).(pulumi.Float64Output)
}

func (o GetSwitchStatsDeviceSwitchStatModuleStatTemperatureOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatModuleStatTemperature) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetSwitchStatsDeviceSwitchStatModuleStatTemperatureOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatModuleStatTemperature) string { return v.Status }).(pulumi.StringOutput)
}

type GetSwitchStatsDeviceSwitchStatModuleStatTemperatureArrayOutput struct{ *pulumi.OutputState }

func (GetSwitchStatsDeviceSwitchStatModuleStatTemperatureArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSwitchStatsDeviceSwitchStatModuleStatTemperature)(nil)).Elem()
}

func (o GetSwitchStatsDeviceSwitchStatModuleStatTemperatureArrayOutput) ToGetSwitchStatsDeviceSwitchStatModuleStatTemperatureArrayOutput() GetSwitchStatsDeviceSwitchStatModuleStatTemperatureArrayOutput {
	return o
}

func (o GetSwitchStatsDeviceSwitchStatModuleStatTemperatureArrayOutput) ToGetSwitchStatsDeviceSwitchStatModuleStatTemperatureArrayOutputWithContext(ctx context.Context) GetSwitchStatsDeviceSwitchStatModuleStatTemperatureArrayOutput {
	return o
}

func (o GetSwitchStatsDeviceSwitchStatModuleStatTemperatureArrayOutput) Index(i pulumi.IntInput) GetSwitchStatsDeviceSwitchStatModuleStatTemperatureOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSwitchStatsDeviceSwitchStatModuleStatTemperature {
		return vs[0].([]GetSwitchStatsDeviceSwitchStatModuleStatTemperature)[vs[1].(int)]
	}).(GetSwitchStatsDeviceSwitchStatModuleStatTemperatureOutput)
}

type GetSwitchStatsDeviceSwitchStatModuleStatVcLink struct {
	NeighborModuleIdx int    `pulumi:"neighborModuleIdx"`
	NeighborPortId    string `pulumi:"neighborPortId"`
	PortId            string `pulumi:"portId"`
}

// GetSwitchStatsDeviceSwitchStatModuleStatVcLinkInput is an input type that accepts GetSwitchStatsDeviceSwitchStatModuleStatVcLinkArgs and GetSwitchStatsDeviceSwitchStatModuleStatVcLinkOutput values.
// You can construct a concrete instance of `GetSwitchStatsDeviceSwitchStatModuleStatVcLinkInput` via:
//
//	GetSwitchStatsDeviceSwitchStatModuleStatVcLinkArgs{...}
type GetSwitchStatsDeviceSwitchStatModuleStatVcLinkInput interface {
	pulumi.Input

	ToGetSwitchStatsDeviceSwitchStatModuleStatVcLinkOutput() GetSwitchStatsDeviceSwitchStatModuleStatVcLinkOutput
	ToGetSwitchStatsDeviceSwitchStatModuleStatVcLinkOutputWithContext(context.Context) GetSwitchStatsDeviceSwitchStatModuleStatVcLinkOutput
}

type GetSwitchStatsDeviceSwitchStatModuleStatVcLinkArgs struct {
	NeighborModuleIdx pulumi.IntInput    `pulumi:"neighborModuleIdx"`
	NeighborPortId    pulumi.StringInput `pulumi:"neighborPortId"`
	PortId            pulumi.StringInput `pulumi:"portId"`
}

func (GetSwitchStatsDeviceSwitchStatModuleStatVcLinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSwitchStatsDeviceSwitchStatModuleStatVcLink)(nil)).Elem()
}

func (i GetSwitchStatsDeviceSwitchStatModuleStatVcLinkArgs) ToGetSwitchStatsDeviceSwitchStatModuleStatVcLinkOutput() GetSwitchStatsDeviceSwitchStatModuleStatVcLinkOutput {
	return i.ToGetSwitchStatsDeviceSwitchStatModuleStatVcLinkOutputWithContext(context.Background())
}

func (i GetSwitchStatsDeviceSwitchStatModuleStatVcLinkArgs) ToGetSwitchStatsDeviceSwitchStatModuleStatVcLinkOutputWithContext(ctx context.Context) GetSwitchStatsDeviceSwitchStatModuleStatVcLinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSwitchStatsDeviceSwitchStatModuleStatVcLinkOutput)
}

// GetSwitchStatsDeviceSwitchStatModuleStatVcLinkArrayInput is an input type that accepts GetSwitchStatsDeviceSwitchStatModuleStatVcLinkArray and GetSwitchStatsDeviceSwitchStatModuleStatVcLinkArrayOutput values.
// You can construct a concrete instance of `GetSwitchStatsDeviceSwitchStatModuleStatVcLinkArrayInput` via:
//
//	GetSwitchStatsDeviceSwitchStatModuleStatVcLinkArray{ GetSwitchStatsDeviceSwitchStatModuleStatVcLinkArgs{...} }
type GetSwitchStatsDeviceSwitchStatModuleStatVcLinkArrayInput interface {
	pulumi.Input

	ToGetSwitchStatsDeviceSwitchStatModuleStatVcLinkArrayOutput() GetSwitchStatsDeviceSwitchStatModuleStatVcLinkArrayOutput
	ToGetSwitchStatsDeviceSwitchStatModuleStatVcLinkArrayOutputWithContext(context.Context) GetSwitchStatsDeviceSwitchStatModuleStatVcLinkArrayOutput
}

type GetSwitchStatsDeviceSwitchStatModuleStatVcLinkArray []GetSwitchStatsDeviceSwitchStatModuleStatVcLinkInput

func (GetSwitchStatsDeviceSwitchStatModuleStatVcLinkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSwitchStatsDeviceSwitchStatModuleStatVcLink)(nil)).Elem()
}

func (i GetSwitchStatsDeviceSwitchStatModuleStatVcLinkArray) ToGetSwitchStatsDeviceSwitchStatModuleStatVcLinkArrayOutput() GetSwitchStatsDeviceSwitchStatModuleStatVcLinkArrayOutput {
	return i.ToGetSwitchStatsDeviceSwitchStatModuleStatVcLinkArrayOutputWithContext(context.Background())
}

func (i GetSwitchStatsDeviceSwitchStatModuleStatVcLinkArray) ToGetSwitchStatsDeviceSwitchStatModuleStatVcLinkArrayOutputWithContext(ctx context.Context) GetSwitchStatsDeviceSwitchStatModuleStatVcLinkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSwitchStatsDeviceSwitchStatModuleStatVcLinkArrayOutput)
}

type GetSwitchStatsDeviceSwitchStatModuleStatVcLinkOutput struct{ *pulumi.OutputState }

func (GetSwitchStatsDeviceSwitchStatModuleStatVcLinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSwitchStatsDeviceSwitchStatModuleStatVcLink)(nil)).Elem()
}

func (o GetSwitchStatsDeviceSwitchStatModuleStatVcLinkOutput) ToGetSwitchStatsDeviceSwitchStatModuleStatVcLinkOutput() GetSwitchStatsDeviceSwitchStatModuleStatVcLinkOutput {
	return o
}

func (o GetSwitchStatsDeviceSwitchStatModuleStatVcLinkOutput) ToGetSwitchStatsDeviceSwitchStatModuleStatVcLinkOutputWithContext(ctx context.Context) GetSwitchStatsDeviceSwitchStatModuleStatVcLinkOutput {
	return o
}

func (o GetSwitchStatsDeviceSwitchStatModuleStatVcLinkOutput) NeighborModuleIdx() pulumi.IntOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatModuleStatVcLink) int { return v.NeighborModuleIdx }).(pulumi.IntOutput)
}

func (o GetSwitchStatsDeviceSwitchStatModuleStatVcLinkOutput) NeighborPortId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatModuleStatVcLink) string { return v.NeighborPortId }).(pulumi.StringOutput)
}

func (o GetSwitchStatsDeviceSwitchStatModuleStatVcLinkOutput) PortId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatModuleStatVcLink) string { return v.PortId }).(pulumi.StringOutput)
}

type GetSwitchStatsDeviceSwitchStatModuleStatVcLinkArrayOutput struct{ *pulumi.OutputState }

func (GetSwitchStatsDeviceSwitchStatModuleStatVcLinkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSwitchStatsDeviceSwitchStatModuleStatVcLink)(nil)).Elem()
}

func (o GetSwitchStatsDeviceSwitchStatModuleStatVcLinkArrayOutput) ToGetSwitchStatsDeviceSwitchStatModuleStatVcLinkArrayOutput() GetSwitchStatsDeviceSwitchStatModuleStatVcLinkArrayOutput {
	return o
}

func (o GetSwitchStatsDeviceSwitchStatModuleStatVcLinkArrayOutput) ToGetSwitchStatsDeviceSwitchStatModuleStatVcLinkArrayOutputWithContext(ctx context.Context) GetSwitchStatsDeviceSwitchStatModuleStatVcLinkArrayOutput {
	return o
}

func (o GetSwitchStatsDeviceSwitchStatModuleStatVcLinkArrayOutput) Index(i pulumi.IntInput) GetSwitchStatsDeviceSwitchStatModuleStatVcLinkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSwitchStatsDeviceSwitchStatModuleStatVcLink {
		return vs[0].([]GetSwitchStatsDeviceSwitchStatModuleStatVcLink)[vs[1].(int)]
	}).(GetSwitchStatsDeviceSwitchStatModuleStatVcLinkOutput)
}

type GetSwitchStatsDeviceSwitchStatPort struct {
	// Indicates if interface is active/inactive
	Active bool `pulumi:"active"`
	// if `up`==`true` and has Authenticator role. enum: `authenticated`, `authenticating`, `held`, `init`
	AuthState string `pulumi:"authState"`
	// Indicates if interface is disabled
	Disabled bool `pulumi:"disabled"`
	ForSite  bool `pulumi:"forSite"`
	// Indicates full or half duplex
	FullDuplex bool `pulumi:"fullDuplex"`
	// Last sampled jitter of the interface
	Jitter float64 `pulumi:"jitter"`
	// Indicates when the port was last flapped
	LastFlapped float64 `pulumi:"lastFlapped"`
	// Last sampled latency of the interface
	Latency float64 `pulumi:"latency"`
	// Last sampled loss of the interface
	Loss float64 `pulumi:"loss"`
	// LTE ICCID value, Check for null/empty
	LteIccid string `pulumi:"lteIccid"`
	// LTE IMEI value, Check for null/empty
	LteImei string `pulumi:"lteImei"`
	// LTE IMSI value, Check for null/empty
	LteImsi string `pulumi:"lteImsi"`
	Mac     string `pulumi:"mac"`
	// Number of mac addresses in the forwarding table
	MacCount int `pulumi:"macCount"`
	// Limit on number of dynamically learned macs
	MacLimit int `pulumi:"macLimit"`
	// chassis identifier of the chassis type listed
	NeighborMac string `pulumi:"neighborMac"`
	// Description supplied by the system on the interface E.g. "GigabitEthernet2/0/39"
	NeighborPortDesc string `pulumi:"neighborPortDesc"`
	// Name supplied by the system on the interface E.g. neighbor system name E.g. "Kumar-Acc-SW.mist.local"
	NeighborSystemName string `pulumi:"neighborSystemName"`
	OrgId              string `pulumi:"orgId"`
	// Is the POE disabled
	PoeDisabled bool `pulumi:"poeDisabled"`
	// enum: `802.3af`, `802.3at`, `802.3bt`
	PoeMode string `pulumi:"poeMode"`
	// Is the device attached to POE
	PoeOn  bool   `pulumi:"poeOn"`
	PortId string `pulumi:"portId"`
	// Interface MAC address
	PortMac string `pulumi:"portMac"`
	// gateway port usage. enum: `lan`
	PortUsage string `pulumi:"portUsage"`
	// Amount of power being used by the interface at the time the command is executed. Unit in watts.
	PowerDraw float64 `pulumi:"powerDraw"`
	// Broadcast input packets
	RxBcastPkts int `pulumi:"rxBcastPkts"`
	// Rate of receiving traffic, bits/seconds, last known
	RxBps int `pulumi:"rxBps"`
	// Amount of traffic received since connection
	RxBytes int `pulumi:"rxBytes"`
	// Input errors
	RxErrors int `pulumi:"rxErrors"`
	// Multicast input packets
	RxMcastPkts int `pulumi:"rxMcastPkts"`
	// Amount of packets received since connection
	RxPkts int    `pulumi:"rxPkts"`
	SiteId string `pulumi:"siteId"`
	// Port speed
	Speed int `pulumi:"speed"`
	// if `up`==`true`. enum: `alternate`, `backup`, `designated`, `root`, `root-prevented`
	StpRole string `pulumi:"stpRole"`
	// if `up`==`true`. enum: `blocking`, `disabled`, `forwarding`, `learning`, `listening`
	StpState string `pulumi:"stpState"`
	// Broadcast output packets
	TxBcastPkts int `pulumi:"txBcastPkts"`
	// Rate of transmitting traffic, bits/seconds, last known
	TxBps int `pulumi:"txBps"`
	// Amount of traffic sent since connection
	TxBytes int `pulumi:"txBytes"`
	// Output errors
	TxErrors int `pulumi:"txErrors"`
	// Multicast output packets
	TxMcastPkts int `pulumi:"txMcastPkts"`
	// Amount of packets sent since connection
	TxPkts int `pulumi:"txPkts"`
	// device type. enum: `ap`, `ble`, `gateway`, `mxedge`, `nac`, `switch`
	Type string `pulumi:"type"`
	// Indicates if interface is unconfigured
	Unconfigured bool `pulumi:"unconfigured"`
	// Indicates if interface is up
	Up bool `pulumi:"up"`
	// Optic Slot ModelName, Check for null/empty
	XcvrModel string `pulumi:"xcvrModel"`
	// Optic Slot Partnumber, Check for null/empty
	XcvrPartNumber string `pulumi:"xcvrPartNumber"`
	// Optic Slot SerialNumber, Check for null/empty
	XcvrSerial string `pulumi:"xcvrSerial"`
}

// GetSwitchStatsDeviceSwitchStatPortInput is an input type that accepts GetSwitchStatsDeviceSwitchStatPortArgs and GetSwitchStatsDeviceSwitchStatPortOutput values.
// You can construct a concrete instance of `GetSwitchStatsDeviceSwitchStatPortInput` via:
//
//	GetSwitchStatsDeviceSwitchStatPortArgs{...}
type GetSwitchStatsDeviceSwitchStatPortInput interface {
	pulumi.Input

	ToGetSwitchStatsDeviceSwitchStatPortOutput() GetSwitchStatsDeviceSwitchStatPortOutput
	ToGetSwitchStatsDeviceSwitchStatPortOutputWithContext(context.Context) GetSwitchStatsDeviceSwitchStatPortOutput
}

type GetSwitchStatsDeviceSwitchStatPortArgs struct {
	// Indicates if interface is active/inactive
	Active pulumi.BoolInput `pulumi:"active"`
	// if `up`==`true` and has Authenticator role. enum: `authenticated`, `authenticating`, `held`, `init`
	AuthState pulumi.StringInput `pulumi:"authState"`
	// Indicates if interface is disabled
	Disabled pulumi.BoolInput `pulumi:"disabled"`
	ForSite  pulumi.BoolInput `pulumi:"forSite"`
	// Indicates full or half duplex
	FullDuplex pulumi.BoolInput `pulumi:"fullDuplex"`
	// Last sampled jitter of the interface
	Jitter pulumi.Float64Input `pulumi:"jitter"`
	// Indicates when the port was last flapped
	LastFlapped pulumi.Float64Input `pulumi:"lastFlapped"`
	// Last sampled latency of the interface
	Latency pulumi.Float64Input `pulumi:"latency"`
	// Last sampled loss of the interface
	Loss pulumi.Float64Input `pulumi:"loss"`
	// LTE ICCID value, Check for null/empty
	LteIccid pulumi.StringInput `pulumi:"lteIccid"`
	// LTE IMEI value, Check for null/empty
	LteImei pulumi.StringInput `pulumi:"lteImei"`
	// LTE IMSI value, Check for null/empty
	LteImsi pulumi.StringInput `pulumi:"lteImsi"`
	Mac     pulumi.StringInput `pulumi:"mac"`
	// Number of mac addresses in the forwarding table
	MacCount pulumi.IntInput `pulumi:"macCount"`
	// Limit on number of dynamically learned macs
	MacLimit pulumi.IntInput `pulumi:"macLimit"`
	// chassis identifier of the chassis type listed
	NeighborMac pulumi.StringInput `pulumi:"neighborMac"`
	// Description supplied by the system on the interface E.g. "GigabitEthernet2/0/39"
	NeighborPortDesc pulumi.StringInput `pulumi:"neighborPortDesc"`
	// Name supplied by the system on the interface E.g. neighbor system name E.g. "Kumar-Acc-SW.mist.local"
	NeighborSystemName pulumi.StringInput `pulumi:"neighborSystemName"`
	OrgId              pulumi.StringInput `pulumi:"orgId"`
	// Is the POE disabled
	PoeDisabled pulumi.BoolInput `pulumi:"poeDisabled"`
	// enum: `802.3af`, `802.3at`, `802.3bt`
	PoeMode pulumi.StringInput `pulumi:"poeMode"`
	// Is the device attached to POE
	PoeOn  pulumi.BoolInput   `pulumi:"poeOn"`
	PortId pulumi.StringInput `pulumi:"portId"`
	// Interface MAC address
	PortMac pulumi.StringInput `pulumi:"portMac"`
	// gateway port usage. enum: `lan`
	PortUsage pulumi.StringInput `pulumi:"portUsage"`
	// Amount of power being used by the interface at the time the command is executed. Unit in watts.
	PowerDraw pulumi.Float64Input `pulumi:"powerDraw"`
	// Broadcast input packets
	RxBcastPkts pulumi.IntInput `pulumi:"rxBcastPkts"`
	// Rate of receiving traffic, bits/seconds, last known
	RxBps pulumi.IntInput `pulumi:"rxBps"`
	// Amount of traffic received since connection
	RxBytes pulumi.IntInput `pulumi:"rxBytes"`
	// Input errors
	RxErrors pulumi.IntInput `pulumi:"rxErrors"`
	// Multicast input packets
	RxMcastPkts pulumi.IntInput `pulumi:"rxMcastPkts"`
	// Amount of packets received since connection
	RxPkts pulumi.IntInput    `pulumi:"rxPkts"`
	SiteId pulumi.StringInput `pulumi:"siteId"`
	// Port speed
	Speed pulumi.IntInput `pulumi:"speed"`
	// if `up`==`true`. enum: `alternate`, `backup`, `designated`, `root`, `root-prevented`
	StpRole pulumi.StringInput `pulumi:"stpRole"`
	// if `up`==`true`. enum: `blocking`, `disabled`, `forwarding`, `learning`, `listening`
	StpState pulumi.StringInput `pulumi:"stpState"`
	// Broadcast output packets
	TxBcastPkts pulumi.IntInput `pulumi:"txBcastPkts"`
	// Rate of transmitting traffic, bits/seconds, last known
	TxBps pulumi.IntInput `pulumi:"txBps"`
	// Amount of traffic sent since connection
	TxBytes pulumi.IntInput `pulumi:"txBytes"`
	// Output errors
	TxErrors pulumi.IntInput `pulumi:"txErrors"`
	// Multicast output packets
	TxMcastPkts pulumi.IntInput `pulumi:"txMcastPkts"`
	// Amount of packets sent since connection
	TxPkts pulumi.IntInput `pulumi:"txPkts"`
	// device type. enum: `ap`, `ble`, `gateway`, `mxedge`, `nac`, `switch`
	Type pulumi.StringInput `pulumi:"type"`
	// Indicates if interface is unconfigured
	Unconfigured pulumi.BoolInput `pulumi:"unconfigured"`
	// Indicates if interface is up
	Up pulumi.BoolInput `pulumi:"up"`
	// Optic Slot ModelName, Check for null/empty
	XcvrModel pulumi.StringInput `pulumi:"xcvrModel"`
	// Optic Slot Partnumber, Check for null/empty
	XcvrPartNumber pulumi.StringInput `pulumi:"xcvrPartNumber"`
	// Optic Slot SerialNumber, Check for null/empty
	XcvrSerial pulumi.StringInput `pulumi:"xcvrSerial"`
}

func (GetSwitchStatsDeviceSwitchStatPortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSwitchStatsDeviceSwitchStatPort)(nil)).Elem()
}

func (i GetSwitchStatsDeviceSwitchStatPortArgs) ToGetSwitchStatsDeviceSwitchStatPortOutput() GetSwitchStatsDeviceSwitchStatPortOutput {
	return i.ToGetSwitchStatsDeviceSwitchStatPortOutputWithContext(context.Background())
}

func (i GetSwitchStatsDeviceSwitchStatPortArgs) ToGetSwitchStatsDeviceSwitchStatPortOutputWithContext(ctx context.Context) GetSwitchStatsDeviceSwitchStatPortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSwitchStatsDeviceSwitchStatPortOutput)
}

// GetSwitchStatsDeviceSwitchStatPortArrayInput is an input type that accepts GetSwitchStatsDeviceSwitchStatPortArray and GetSwitchStatsDeviceSwitchStatPortArrayOutput values.
// You can construct a concrete instance of `GetSwitchStatsDeviceSwitchStatPortArrayInput` via:
//
//	GetSwitchStatsDeviceSwitchStatPortArray{ GetSwitchStatsDeviceSwitchStatPortArgs{...} }
type GetSwitchStatsDeviceSwitchStatPortArrayInput interface {
	pulumi.Input

	ToGetSwitchStatsDeviceSwitchStatPortArrayOutput() GetSwitchStatsDeviceSwitchStatPortArrayOutput
	ToGetSwitchStatsDeviceSwitchStatPortArrayOutputWithContext(context.Context) GetSwitchStatsDeviceSwitchStatPortArrayOutput
}

type GetSwitchStatsDeviceSwitchStatPortArray []GetSwitchStatsDeviceSwitchStatPortInput

func (GetSwitchStatsDeviceSwitchStatPortArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSwitchStatsDeviceSwitchStatPort)(nil)).Elem()
}

func (i GetSwitchStatsDeviceSwitchStatPortArray) ToGetSwitchStatsDeviceSwitchStatPortArrayOutput() GetSwitchStatsDeviceSwitchStatPortArrayOutput {
	return i.ToGetSwitchStatsDeviceSwitchStatPortArrayOutputWithContext(context.Background())
}

func (i GetSwitchStatsDeviceSwitchStatPortArray) ToGetSwitchStatsDeviceSwitchStatPortArrayOutputWithContext(ctx context.Context) GetSwitchStatsDeviceSwitchStatPortArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSwitchStatsDeviceSwitchStatPortArrayOutput)
}

type GetSwitchStatsDeviceSwitchStatPortOutput struct{ *pulumi.OutputState }

func (GetSwitchStatsDeviceSwitchStatPortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSwitchStatsDeviceSwitchStatPort)(nil)).Elem()
}

func (o GetSwitchStatsDeviceSwitchStatPortOutput) ToGetSwitchStatsDeviceSwitchStatPortOutput() GetSwitchStatsDeviceSwitchStatPortOutput {
	return o
}

func (o GetSwitchStatsDeviceSwitchStatPortOutput) ToGetSwitchStatsDeviceSwitchStatPortOutputWithContext(ctx context.Context) GetSwitchStatsDeviceSwitchStatPortOutput {
	return o
}

// Indicates if interface is active/inactive
func (o GetSwitchStatsDeviceSwitchStatPortOutput) Active() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatPort) bool { return v.Active }).(pulumi.BoolOutput)
}

// if `up`==`true` and has Authenticator role. enum: `authenticated`, `authenticating`, `held`, `init`
func (o GetSwitchStatsDeviceSwitchStatPortOutput) AuthState() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatPort) string { return v.AuthState }).(pulumi.StringOutput)
}

// Indicates if interface is disabled
func (o GetSwitchStatsDeviceSwitchStatPortOutput) Disabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatPort) bool { return v.Disabled }).(pulumi.BoolOutput)
}

func (o GetSwitchStatsDeviceSwitchStatPortOutput) ForSite() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatPort) bool { return v.ForSite }).(pulumi.BoolOutput)
}

// Indicates full or half duplex
func (o GetSwitchStatsDeviceSwitchStatPortOutput) FullDuplex() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatPort) bool { return v.FullDuplex }).(pulumi.BoolOutput)
}

// Last sampled jitter of the interface
func (o GetSwitchStatsDeviceSwitchStatPortOutput) Jitter() pulumi.Float64Output {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatPort) float64 { return v.Jitter }).(pulumi.Float64Output)
}

// Indicates when the port was last flapped
func (o GetSwitchStatsDeviceSwitchStatPortOutput) LastFlapped() pulumi.Float64Output {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatPort) float64 { return v.LastFlapped }).(pulumi.Float64Output)
}

// Last sampled latency of the interface
func (o GetSwitchStatsDeviceSwitchStatPortOutput) Latency() pulumi.Float64Output {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatPort) float64 { return v.Latency }).(pulumi.Float64Output)
}

// Last sampled loss of the interface
func (o GetSwitchStatsDeviceSwitchStatPortOutput) Loss() pulumi.Float64Output {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatPort) float64 { return v.Loss }).(pulumi.Float64Output)
}

// LTE ICCID value, Check for null/empty
func (o GetSwitchStatsDeviceSwitchStatPortOutput) LteIccid() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatPort) string { return v.LteIccid }).(pulumi.StringOutput)
}

// LTE IMEI value, Check for null/empty
func (o GetSwitchStatsDeviceSwitchStatPortOutput) LteImei() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatPort) string { return v.LteImei }).(pulumi.StringOutput)
}

// LTE IMSI value, Check for null/empty
func (o GetSwitchStatsDeviceSwitchStatPortOutput) LteImsi() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatPort) string { return v.LteImsi }).(pulumi.StringOutput)
}

func (o GetSwitchStatsDeviceSwitchStatPortOutput) Mac() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatPort) string { return v.Mac }).(pulumi.StringOutput)
}

// Number of mac addresses in the forwarding table
func (o GetSwitchStatsDeviceSwitchStatPortOutput) MacCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatPort) int { return v.MacCount }).(pulumi.IntOutput)
}

// Limit on number of dynamically learned macs
func (o GetSwitchStatsDeviceSwitchStatPortOutput) MacLimit() pulumi.IntOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatPort) int { return v.MacLimit }).(pulumi.IntOutput)
}

// chassis identifier of the chassis type listed
func (o GetSwitchStatsDeviceSwitchStatPortOutput) NeighborMac() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatPort) string { return v.NeighborMac }).(pulumi.StringOutput)
}

// Description supplied by the system on the interface E.g. "GigabitEthernet2/0/39"
func (o GetSwitchStatsDeviceSwitchStatPortOutput) NeighborPortDesc() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatPort) string { return v.NeighborPortDesc }).(pulumi.StringOutput)
}

// Name supplied by the system on the interface E.g. neighbor system name E.g. "Kumar-Acc-SW.mist.local"
func (o GetSwitchStatsDeviceSwitchStatPortOutput) NeighborSystemName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatPort) string { return v.NeighborSystemName }).(pulumi.StringOutput)
}

func (o GetSwitchStatsDeviceSwitchStatPortOutput) OrgId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatPort) string { return v.OrgId }).(pulumi.StringOutput)
}

// Is the POE disabled
func (o GetSwitchStatsDeviceSwitchStatPortOutput) PoeDisabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatPort) bool { return v.PoeDisabled }).(pulumi.BoolOutput)
}

// enum: `802.3af`, `802.3at`, `802.3bt`
func (o GetSwitchStatsDeviceSwitchStatPortOutput) PoeMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatPort) string { return v.PoeMode }).(pulumi.StringOutput)
}

// Is the device attached to POE
func (o GetSwitchStatsDeviceSwitchStatPortOutput) PoeOn() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatPort) bool { return v.PoeOn }).(pulumi.BoolOutput)
}

func (o GetSwitchStatsDeviceSwitchStatPortOutput) PortId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatPort) string { return v.PortId }).(pulumi.StringOutput)
}

// Interface MAC address
func (o GetSwitchStatsDeviceSwitchStatPortOutput) PortMac() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatPort) string { return v.PortMac }).(pulumi.StringOutput)
}

// gateway port usage. enum: `lan`
func (o GetSwitchStatsDeviceSwitchStatPortOutput) PortUsage() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatPort) string { return v.PortUsage }).(pulumi.StringOutput)
}

// Amount of power being used by the interface at the time the command is executed. Unit in watts.
func (o GetSwitchStatsDeviceSwitchStatPortOutput) PowerDraw() pulumi.Float64Output {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatPort) float64 { return v.PowerDraw }).(pulumi.Float64Output)
}

// Broadcast input packets
func (o GetSwitchStatsDeviceSwitchStatPortOutput) RxBcastPkts() pulumi.IntOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatPort) int { return v.RxBcastPkts }).(pulumi.IntOutput)
}

// Rate of receiving traffic, bits/seconds, last known
func (o GetSwitchStatsDeviceSwitchStatPortOutput) RxBps() pulumi.IntOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatPort) int { return v.RxBps }).(pulumi.IntOutput)
}

// Amount of traffic received since connection
func (o GetSwitchStatsDeviceSwitchStatPortOutput) RxBytes() pulumi.IntOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatPort) int { return v.RxBytes }).(pulumi.IntOutput)
}

// Input errors
func (o GetSwitchStatsDeviceSwitchStatPortOutput) RxErrors() pulumi.IntOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatPort) int { return v.RxErrors }).(pulumi.IntOutput)
}

// Multicast input packets
func (o GetSwitchStatsDeviceSwitchStatPortOutput) RxMcastPkts() pulumi.IntOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatPort) int { return v.RxMcastPkts }).(pulumi.IntOutput)
}

// Amount of packets received since connection
func (o GetSwitchStatsDeviceSwitchStatPortOutput) RxPkts() pulumi.IntOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatPort) int { return v.RxPkts }).(pulumi.IntOutput)
}

func (o GetSwitchStatsDeviceSwitchStatPortOutput) SiteId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatPort) string { return v.SiteId }).(pulumi.StringOutput)
}

// Port speed
func (o GetSwitchStatsDeviceSwitchStatPortOutput) Speed() pulumi.IntOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatPort) int { return v.Speed }).(pulumi.IntOutput)
}

// if `up`==`true`. enum: `alternate`, `backup`, `designated`, `root`, `root-prevented`
func (o GetSwitchStatsDeviceSwitchStatPortOutput) StpRole() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatPort) string { return v.StpRole }).(pulumi.StringOutput)
}

// if `up`==`true`. enum: `blocking`, `disabled`, `forwarding`, `learning`, `listening`
func (o GetSwitchStatsDeviceSwitchStatPortOutput) StpState() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatPort) string { return v.StpState }).(pulumi.StringOutput)
}

// Broadcast output packets
func (o GetSwitchStatsDeviceSwitchStatPortOutput) TxBcastPkts() pulumi.IntOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatPort) int { return v.TxBcastPkts }).(pulumi.IntOutput)
}

// Rate of transmitting traffic, bits/seconds, last known
func (o GetSwitchStatsDeviceSwitchStatPortOutput) TxBps() pulumi.IntOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatPort) int { return v.TxBps }).(pulumi.IntOutput)
}

// Amount of traffic sent since connection
func (o GetSwitchStatsDeviceSwitchStatPortOutput) TxBytes() pulumi.IntOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatPort) int { return v.TxBytes }).(pulumi.IntOutput)
}

// Output errors
func (o GetSwitchStatsDeviceSwitchStatPortOutput) TxErrors() pulumi.IntOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatPort) int { return v.TxErrors }).(pulumi.IntOutput)
}

// Multicast output packets
func (o GetSwitchStatsDeviceSwitchStatPortOutput) TxMcastPkts() pulumi.IntOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatPort) int { return v.TxMcastPkts }).(pulumi.IntOutput)
}

// Amount of packets sent since connection
func (o GetSwitchStatsDeviceSwitchStatPortOutput) TxPkts() pulumi.IntOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatPort) int { return v.TxPkts }).(pulumi.IntOutput)
}

// device type. enum: `ap`, `ble`, `gateway`, `mxedge`, `nac`, `switch`
func (o GetSwitchStatsDeviceSwitchStatPortOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatPort) string { return v.Type }).(pulumi.StringOutput)
}

// Indicates if interface is unconfigured
func (o GetSwitchStatsDeviceSwitchStatPortOutput) Unconfigured() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatPort) bool { return v.Unconfigured }).(pulumi.BoolOutput)
}

// Indicates if interface is up
func (o GetSwitchStatsDeviceSwitchStatPortOutput) Up() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatPort) bool { return v.Up }).(pulumi.BoolOutput)
}

// Optic Slot ModelName, Check for null/empty
func (o GetSwitchStatsDeviceSwitchStatPortOutput) XcvrModel() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatPort) string { return v.XcvrModel }).(pulumi.StringOutput)
}

// Optic Slot Partnumber, Check for null/empty
func (o GetSwitchStatsDeviceSwitchStatPortOutput) XcvrPartNumber() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatPort) string { return v.XcvrPartNumber }).(pulumi.StringOutput)
}

// Optic Slot SerialNumber, Check for null/empty
func (o GetSwitchStatsDeviceSwitchStatPortOutput) XcvrSerial() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatPort) string { return v.XcvrSerial }).(pulumi.StringOutput)
}

type GetSwitchStatsDeviceSwitchStatPortArrayOutput struct{ *pulumi.OutputState }

func (GetSwitchStatsDeviceSwitchStatPortArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSwitchStatsDeviceSwitchStatPort)(nil)).Elem()
}

func (o GetSwitchStatsDeviceSwitchStatPortArrayOutput) ToGetSwitchStatsDeviceSwitchStatPortArrayOutput() GetSwitchStatsDeviceSwitchStatPortArrayOutput {
	return o
}

func (o GetSwitchStatsDeviceSwitchStatPortArrayOutput) ToGetSwitchStatsDeviceSwitchStatPortArrayOutputWithContext(ctx context.Context) GetSwitchStatsDeviceSwitchStatPortArrayOutput {
	return o
}

func (o GetSwitchStatsDeviceSwitchStatPortArrayOutput) Index(i pulumi.IntInput) GetSwitchStatsDeviceSwitchStatPortOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSwitchStatsDeviceSwitchStatPort {
		return vs[0].([]GetSwitchStatsDeviceSwitchStatPort)[vs[1].(int)]
	}).(GetSwitchStatsDeviceSwitchStatPortOutput)
}

type GetSwitchStatsDeviceSwitchStatRouteSummaryStats struct {
	FibRoutes                 int `pulumi:"fibRoutes"`
	MaxUnicastRoutesSupported int `pulumi:"maxUnicastRoutesSupported"`
	RibRoutes                 int `pulumi:"ribRoutes"`
	TotalRoutes               int `pulumi:"totalRoutes"`
}

// GetSwitchStatsDeviceSwitchStatRouteSummaryStatsInput is an input type that accepts GetSwitchStatsDeviceSwitchStatRouteSummaryStatsArgs and GetSwitchStatsDeviceSwitchStatRouteSummaryStatsOutput values.
// You can construct a concrete instance of `GetSwitchStatsDeviceSwitchStatRouteSummaryStatsInput` via:
//
//	GetSwitchStatsDeviceSwitchStatRouteSummaryStatsArgs{...}
type GetSwitchStatsDeviceSwitchStatRouteSummaryStatsInput interface {
	pulumi.Input

	ToGetSwitchStatsDeviceSwitchStatRouteSummaryStatsOutput() GetSwitchStatsDeviceSwitchStatRouteSummaryStatsOutput
	ToGetSwitchStatsDeviceSwitchStatRouteSummaryStatsOutputWithContext(context.Context) GetSwitchStatsDeviceSwitchStatRouteSummaryStatsOutput
}

type GetSwitchStatsDeviceSwitchStatRouteSummaryStatsArgs struct {
	FibRoutes                 pulumi.IntInput `pulumi:"fibRoutes"`
	MaxUnicastRoutesSupported pulumi.IntInput `pulumi:"maxUnicastRoutesSupported"`
	RibRoutes                 pulumi.IntInput `pulumi:"ribRoutes"`
	TotalRoutes               pulumi.IntInput `pulumi:"totalRoutes"`
}

func (GetSwitchStatsDeviceSwitchStatRouteSummaryStatsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSwitchStatsDeviceSwitchStatRouteSummaryStats)(nil)).Elem()
}

func (i GetSwitchStatsDeviceSwitchStatRouteSummaryStatsArgs) ToGetSwitchStatsDeviceSwitchStatRouteSummaryStatsOutput() GetSwitchStatsDeviceSwitchStatRouteSummaryStatsOutput {
	return i.ToGetSwitchStatsDeviceSwitchStatRouteSummaryStatsOutputWithContext(context.Background())
}

func (i GetSwitchStatsDeviceSwitchStatRouteSummaryStatsArgs) ToGetSwitchStatsDeviceSwitchStatRouteSummaryStatsOutputWithContext(ctx context.Context) GetSwitchStatsDeviceSwitchStatRouteSummaryStatsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSwitchStatsDeviceSwitchStatRouteSummaryStatsOutput)
}

type GetSwitchStatsDeviceSwitchStatRouteSummaryStatsOutput struct{ *pulumi.OutputState }

func (GetSwitchStatsDeviceSwitchStatRouteSummaryStatsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSwitchStatsDeviceSwitchStatRouteSummaryStats)(nil)).Elem()
}

func (o GetSwitchStatsDeviceSwitchStatRouteSummaryStatsOutput) ToGetSwitchStatsDeviceSwitchStatRouteSummaryStatsOutput() GetSwitchStatsDeviceSwitchStatRouteSummaryStatsOutput {
	return o
}

func (o GetSwitchStatsDeviceSwitchStatRouteSummaryStatsOutput) ToGetSwitchStatsDeviceSwitchStatRouteSummaryStatsOutputWithContext(ctx context.Context) GetSwitchStatsDeviceSwitchStatRouteSummaryStatsOutput {
	return o
}

func (o GetSwitchStatsDeviceSwitchStatRouteSummaryStatsOutput) FibRoutes() pulumi.IntOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatRouteSummaryStats) int { return v.FibRoutes }).(pulumi.IntOutput)
}

func (o GetSwitchStatsDeviceSwitchStatRouteSummaryStatsOutput) MaxUnicastRoutesSupported() pulumi.IntOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatRouteSummaryStats) int { return v.MaxUnicastRoutesSupported }).(pulumi.IntOutput)
}

func (o GetSwitchStatsDeviceSwitchStatRouteSummaryStatsOutput) RibRoutes() pulumi.IntOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatRouteSummaryStats) int { return v.RibRoutes }).(pulumi.IntOutput)
}

func (o GetSwitchStatsDeviceSwitchStatRouteSummaryStatsOutput) TotalRoutes() pulumi.IntOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatRouteSummaryStats) int { return v.TotalRoutes }).(pulumi.IntOutput)
}

type GetSwitchStatsDeviceSwitchStatServiceStat struct {
	AshVersion          string `pulumi:"ashVersion"`
	CiaVersion          string `pulumi:"ciaVersion"`
	EmberVersion        string `pulumi:"emberVersion"`
	IpsecClientVersion  string `pulumi:"ipsecClientVersion"`
	MistAgentVersion    string `pulumi:"mistAgentVersion"`
	PackageVersion      string `pulumi:"packageVersion"`
	TestingToolsVersion string `pulumi:"testingToolsVersion"`
	WheeljackVersion    string `pulumi:"wheeljackVersion"`
}

// GetSwitchStatsDeviceSwitchStatServiceStatInput is an input type that accepts GetSwitchStatsDeviceSwitchStatServiceStatArgs and GetSwitchStatsDeviceSwitchStatServiceStatOutput values.
// You can construct a concrete instance of `GetSwitchStatsDeviceSwitchStatServiceStatInput` via:
//
//	GetSwitchStatsDeviceSwitchStatServiceStatArgs{...}
type GetSwitchStatsDeviceSwitchStatServiceStatInput interface {
	pulumi.Input

	ToGetSwitchStatsDeviceSwitchStatServiceStatOutput() GetSwitchStatsDeviceSwitchStatServiceStatOutput
	ToGetSwitchStatsDeviceSwitchStatServiceStatOutputWithContext(context.Context) GetSwitchStatsDeviceSwitchStatServiceStatOutput
}

type GetSwitchStatsDeviceSwitchStatServiceStatArgs struct {
	AshVersion          pulumi.StringInput `pulumi:"ashVersion"`
	CiaVersion          pulumi.StringInput `pulumi:"ciaVersion"`
	EmberVersion        pulumi.StringInput `pulumi:"emberVersion"`
	IpsecClientVersion  pulumi.StringInput `pulumi:"ipsecClientVersion"`
	MistAgentVersion    pulumi.StringInput `pulumi:"mistAgentVersion"`
	PackageVersion      pulumi.StringInput `pulumi:"packageVersion"`
	TestingToolsVersion pulumi.StringInput `pulumi:"testingToolsVersion"`
	WheeljackVersion    pulumi.StringInput `pulumi:"wheeljackVersion"`
}

func (GetSwitchStatsDeviceSwitchStatServiceStatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSwitchStatsDeviceSwitchStatServiceStat)(nil)).Elem()
}

func (i GetSwitchStatsDeviceSwitchStatServiceStatArgs) ToGetSwitchStatsDeviceSwitchStatServiceStatOutput() GetSwitchStatsDeviceSwitchStatServiceStatOutput {
	return i.ToGetSwitchStatsDeviceSwitchStatServiceStatOutputWithContext(context.Background())
}

func (i GetSwitchStatsDeviceSwitchStatServiceStatArgs) ToGetSwitchStatsDeviceSwitchStatServiceStatOutputWithContext(ctx context.Context) GetSwitchStatsDeviceSwitchStatServiceStatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSwitchStatsDeviceSwitchStatServiceStatOutput)
}

// GetSwitchStatsDeviceSwitchStatServiceStatMapInput is an input type that accepts GetSwitchStatsDeviceSwitchStatServiceStatMap and GetSwitchStatsDeviceSwitchStatServiceStatMapOutput values.
// You can construct a concrete instance of `GetSwitchStatsDeviceSwitchStatServiceStatMapInput` via:
//
//	GetSwitchStatsDeviceSwitchStatServiceStatMap{ "key": GetSwitchStatsDeviceSwitchStatServiceStatArgs{...} }
type GetSwitchStatsDeviceSwitchStatServiceStatMapInput interface {
	pulumi.Input

	ToGetSwitchStatsDeviceSwitchStatServiceStatMapOutput() GetSwitchStatsDeviceSwitchStatServiceStatMapOutput
	ToGetSwitchStatsDeviceSwitchStatServiceStatMapOutputWithContext(context.Context) GetSwitchStatsDeviceSwitchStatServiceStatMapOutput
}

type GetSwitchStatsDeviceSwitchStatServiceStatMap map[string]GetSwitchStatsDeviceSwitchStatServiceStatInput

func (GetSwitchStatsDeviceSwitchStatServiceStatMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]GetSwitchStatsDeviceSwitchStatServiceStat)(nil)).Elem()
}

func (i GetSwitchStatsDeviceSwitchStatServiceStatMap) ToGetSwitchStatsDeviceSwitchStatServiceStatMapOutput() GetSwitchStatsDeviceSwitchStatServiceStatMapOutput {
	return i.ToGetSwitchStatsDeviceSwitchStatServiceStatMapOutputWithContext(context.Background())
}

func (i GetSwitchStatsDeviceSwitchStatServiceStatMap) ToGetSwitchStatsDeviceSwitchStatServiceStatMapOutputWithContext(ctx context.Context) GetSwitchStatsDeviceSwitchStatServiceStatMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSwitchStatsDeviceSwitchStatServiceStatMapOutput)
}

type GetSwitchStatsDeviceSwitchStatServiceStatOutput struct{ *pulumi.OutputState }

func (GetSwitchStatsDeviceSwitchStatServiceStatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSwitchStatsDeviceSwitchStatServiceStat)(nil)).Elem()
}

func (o GetSwitchStatsDeviceSwitchStatServiceStatOutput) ToGetSwitchStatsDeviceSwitchStatServiceStatOutput() GetSwitchStatsDeviceSwitchStatServiceStatOutput {
	return o
}

func (o GetSwitchStatsDeviceSwitchStatServiceStatOutput) ToGetSwitchStatsDeviceSwitchStatServiceStatOutputWithContext(ctx context.Context) GetSwitchStatsDeviceSwitchStatServiceStatOutput {
	return o
}

func (o GetSwitchStatsDeviceSwitchStatServiceStatOutput) AshVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatServiceStat) string { return v.AshVersion }).(pulumi.StringOutput)
}

func (o GetSwitchStatsDeviceSwitchStatServiceStatOutput) CiaVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatServiceStat) string { return v.CiaVersion }).(pulumi.StringOutput)
}

func (o GetSwitchStatsDeviceSwitchStatServiceStatOutput) EmberVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatServiceStat) string { return v.EmberVersion }).(pulumi.StringOutput)
}

func (o GetSwitchStatsDeviceSwitchStatServiceStatOutput) IpsecClientVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatServiceStat) string { return v.IpsecClientVersion }).(pulumi.StringOutput)
}

func (o GetSwitchStatsDeviceSwitchStatServiceStatOutput) MistAgentVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatServiceStat) string { return v.MistAgentVersion }).(pulumi.StringOutput)
}

func (o GetSwitchStatsDeviceSwitchStatServiceStatOutput) PackageVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatServiceStat) string { return v.PackageVersion }).(pulumi.StringOutput)
}

func (o GetSwitchStatsDeviceSwitchStatServiceStatOutput) TestingToolsVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatServiceStat) string { return v.TestingToolsVersion }).(pulumi.StringOutput)
}

func (o GetSwitchStatsDeviceSwitchStatServiceStatOutput) WheeljackVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatServiceStat) string { return v.WheeljackVersion }).(pulumi.StringOutput)
}

type GetSwitchStatsDeviceSwitchStatServiceStatMapOutput struct{ *pulumi.OutputState }

func (GetSwitchStatsDeviceSwitchStatServiceStatMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]GetSwitchStatsDeviceSwitchStatServiceStat)(nil)).Elem()
}

func (o GetSwitchStatsDeviceSwitchStatServiceStatMapOutput) ToGetSwitchStatsDeviceSwitchStatServiceStatMapOutput() GetSwitchStatsDeviceSwitchStatServiceStatMapOutput {
	return o
}

func (o GetSwitchStatsDeviceSwitchStatServiceStatMapOutput) ToGetSwitchStatsDeviceSwitchStatServiceStatMapOutputWithContext(ctx context.Context) GetSwitchStatsDeviceSwitchStatServiceStatMapOutput {
	return o
}

func (o GetSwitchStatsDeviceSwitchStatServiceStatMapOutput) MapIndex(k pulumi.StringInput) GetSwitchStatsDeviceSwitchStatServiceStatOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) GetSwitchStatsDeviceSwitchStatServiceStat {
		return vs[0].(map[string]GetSwitchStatsDeviceSwitchStatServiceStat)[vs[1].(string)]
	}).(GetSwitchStatsDeviceSwitchStatServiceStatOutput)
}

type GetSwitchStatsDeviceSwitchStatVcSetupInfo struct {
	ConfigType         string  `pulumi:"configType"`
	CurrentStats       string  `pulumi:"currentStats"`
	ErrMissingDevIdFpc bool    `pulumi:"errMissingDevIdFpc"`
	LastUpdate         float64 `pulumi:"lastUpdate"`
	RequestTime        float64 `pulumi:"requestTime"`
	RequestType        string  `pulumi:"requestType"`
}

// GetSwitchStatsDeviceSwitchStatVcSetupInfoInput is an input type that accepts GetSwitchStatsDeviceSwitchStatVcSetupInfoArgs and GetSwitchStatsDeviceSwitchStatVcSetupInfoOutput values.
// You can construct a concrete instance of `GetSwitchStatsDeviceSwitchStatVcSetupInfoInput` via:
//
//	GetSwitchStatsDeviceSwitchStatVcSetupInfoArgs{...}
type GetSwitchStatsDeviceSwitchStatVcSetupInfoInput interface {
	pulumi.Input

	ToGetSwitchStatsDeviceSwitchStatVcSetupInfoOutput() GetSwitchStatsDeviceSwitchStatVcSetupInfoOutput
	ToGetSwitchStatsDeviceSwitchStatVcSetupInfoOutputWithContext(context.Context) GetSwitchStatsDeviceSwitchStatVcSetupInfoOutput
}

type GetSwitchStatsDeviceSwitchStatVcSetupInfoArgs struct {
	ConfigType         pulumi.StringInput  `pulumi:"configType"`
	CurrentStats       pulumi.StringInput  `pulumi:"currentStats"`
	ErrMissingDevIdFpc pulumi.BoolInput    `pulumi:"errMissingDevIdFpc"`
	LastUpdate         pulumi.Float64Input `pulumi:"lastUpdate"`
	RequestTime        pulumi.Float64Input `pulumi:"requestTime"`
	RequestType        pulumi.StringInput  `pulumi:"requestType"`
}

func (GetSwitchStatsDeviceSwitchStatVcSetupInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSwitchStatsDeviceSwitchStatVcSetupInfo)(nil)).Elem()
}

func (i GetSwitchStatsDeviceSwitchStatVcSetupInfoArgs) ToGetSwitchStatsDeviceSwitchStatVcSetupInfoOutput() GetSwitchStatsDeviceSwitchStatVcSetupInfoOutput {
	return i.ToGetSwitchStatsDeviceSwitchStatVcSetupInfoOutputWithContext(context.Background())
}

func (i GetSwitchStatsDeviceSwitchStatVcSetupInfoArgs) ToGetSwitchStatsDeviceSwitchStatVcSetupInfoOutputWithContext(ctx context.Context) GetSwitchStatsDeviceSwitchStatVcSetupInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSwitchStatsDeviceSwitchStatVcSetupInfoOutput)
}

type GetSwitchStatsDeviceSwitchStatVcSetupInfoOutput struct{ *pulumi.OutputState }

func (GetSwitchStatsDeviceSwitchStatVcSetupInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSwitchStatsDeviceSwitchStatVcSetupInfo)(nil)).Elem()
}

func (o GetSwitchStatsDeviceSwitchStatVcSetupInfoOutput) ToGetSwitchStatsDeviceSwitchStatVcSetupInfoOutput() GetSwitchStatsDeviceSwitchStatVcSetupInfoOutput {
	return o
}

func (o GetSwitchStatsDeviceSwitchStatVcSetupInfoOutput) ToGetSwitchStatsDeviceSwitchStatVcSetupInfoOutputWithContext(ctx context.Context) GetSwitchStatsDeviceSwitchStatVcSetupInfoOutput {
	return o
}

func (o GetSwitchStatsDeviceSwitchStatVcSetupInfoOutput) ConfigType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatVcSetupInfo) string { return v.ConfigType }).(pulumi.StringOutput)
}

func (o GetSwitchStatsDeviceSwitchStatVcSetupInfoOutput) CurrentStats() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatVcSetupInfo) string { return v.CurrentStats }).(pulumi.StringOutput)
}

func (o GetSwitchStatsDeviceSwitchStatVcSetupInfoOutput) ErrMissingDevIdFpc() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatVcSetupInfo) bool { return v.ErrMissingDevIdFpc }).(pulumi.BoolOutput)
}

func (o GetSwitchStatsDeviceSwitchStatVcSetupInfoOutput) LastUpdate() pulumi.Float64Output {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatVcSetupInfo) float64 { return v.LastUpdate }).(pulumi.Float64Output)
}

func (o GetSwitchStatsDeviceSwitchStatVcSetupInfoOutput) RequestTime() pulumi.Float64Output {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatVcSetupInfo) float64 { return v.RequestTime }).(pulumi.Float64Output)
}

func (o GetSwitchStatsDeviceSwitchStatVcSetupInfoOutput) RequestType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchStatsDeviceSwitchStatVcSetupInfo) string { return v.RequestType }).(pulumi.StringOutput)
}

type GetVersionsDeviceVersion struct {
	// Device model (as seen in the device stats)
	Model string `pulumi:"model"`
	// Annotation, stable / beta / alpha. Or it can be empty or nothing which is likely a dev build
	Tag string `pulumi:"tag"`
	// Firmware version
	Version string `pulumi:"version"`
}

// GetVersionsDeviceVersionInput is an input type that accepts GetVersionsDeviceVersionArgs and GetVersionsDeviceVersionOutput values.
// You can construct a concrete instance of `GetVersionsDeviceVersionInput` via:
//
//	GetVersionsDeviceVersionArgs{...}
type GetVersionsDeviceVersionInput interface {
	pulumi.Input

	ToGetVersionsDeviceVersionOutput() GetVersionsDeviceVersionOutput
	ToGetVersionsDeviceVersionOutputWithContext(context.Context) GetVersionsDeviceVersionOutput
}

type GetVersionsDeviceVersionArgs struct {
	// Device model (as seen in the device stats)
	Model pulumi.StringInput `pulumi:"model"`
	// Annotation, stable / beta / alpha. Or it can be empty or nothing which is likely a dev build
	Tag pulumi.StringInput `pulumi:"tag"`
	// Firmware version
	Version pulumi.StringInput `pulumi:"version"`
}

func (GetVersionsDeviceVersionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVersionsDeviceVersion)(nil)).Elem()
}

func (i GetVersionsDeviceVersionArgs) ToGetVersionsDeviceVersionOutput() GetVersionsDeviceVersionOutput {
	return i.ToGetVersionsDeviceVersionOutputWithContext(context.Background())
}

func (i GetVersionsDeviceVersionArgs) ToGetVersionsDeviceVersionOutputWithContext(ctx context.Context) GetVersionsDeviceVersionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVersionsDeviceVersionOutput)
}

// GetVersionsDeviceVersionArrayInput is an input type that accepts GetVersionsDeviceVersionArray and GetVersionsDeviceVersionArrayOutput values.
// You can construct a concrete instance of `GetVersionsDeviceVersionArrayInput` via:
//
//	GetVersionsDeviceVersionArray{ GetVersionsDeviceVersionArgs{...} }
type GetVersionsDeviceVersionArrayInput interface {
	pulumi.Input

	ToGetVersionsDeviceVersionArrayOutput() GetVersionsDeviceVersionArrayOutput
	ToGetVersionsDeviceVersionArrayOutputWithContext(context.Context) GetVersionsDeviceVersionArrayOutput
}

type GetVersionsDeviceVersionArray []GetVersionsDeviceVersionInput

func (GetVersionsDeviceVersionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVersionsDeviceVersion)(nil)).Elem()
}

func (i GetVersionsDeviceVersionArray) ToGetVersionsDeviceVersionArrayOutput() GetVersionsDeviceVersionArrayOutput {
	return i.ToGetVersionsDeviceVersionArrayOutputWithContext(context.Background())
}

func (i GetVersionsDeviceVersionArray) ToGetVersionsDeviceVersionArrayOutputWithContext(ctx context.Context) GetVersionsDeviceVersionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVersionsDeviceVersionArrayOutput)
}

type GetVersionsDeviceVersionOutput struct{ *pulumi.OutputState }

func (GetVersionsDeviceVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVersionsDeviceVersion)(nil)).Elem()
}

func (o GetVersionsDeviceVersionOutput) ToGetVersionsDeviceVersionOutput() GetVersionsDeviceVersionOutput {
	return o
}

func (o GetVersionsDeviceVersionOutput) ToGetVersionsDeviceVersionOutputWithContext(ctx context.Context) GetVersionsDeviceVersionOutput {
	return o
}

// Device model (as seen in the device stats)
func (o GetVersionsDeviceVersionOutput) Model() pulumi.StringOutput {
	return o.ApplyT(func(v GetVersionsDeviceVersion) string { return v.Model }).(pulumi.StringOutput)
}

// Annotation, stable / beta / alpha. Or it can be empty or nothing which is likely a dev build
func (o GetVersionsDeviceVersionOutput) Tag() pulumi.StringOutput {
	return o.ApplyT(func(v GetVersionsDeviceVersion) string { return v.Tag }).(pulumi.StringOutput)
}

// Firmware version
func (o GetVersionsDeviceVersionOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v GetVersionsDeviceVersion) string { return v.Version }).(pulumi.StringOutput)
}

type GetVersionsDeviceVersionArrayOutput struct{ *pulumi.OutputState }

func (GetVersionsDeviceVersionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVersionsDeviceVersion)(nil)).Elem()
}

func (o GetVersionsDeviceVersionArrayOutput) ToGetVersionsDeviceVersionArrayOutput() GetVersionsDeviceVersionArrayOutput {
	return o
}

func (o GetVersionsDeviceVersionArrayOutput) ToGetVersionsDeviceVersionArrayOutputWithContext(ctx context.Context) GetVersionsDeviceVersionArrayOutput {
	return o
}

func (o GetVersionsDeviceVersionArrayOutput) Index(i pulumi.IntInput) GetVersionsDeviceVersionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVersionsDeviceVersion {
		return vs[0].([]GetVersionsDeviceVersion)[vs[1].(int)]
	}).(GetVersionsDeviceVersionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ApAeroscoutInput)(nil)).Elem(), ApAeroscoutArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApAeroscoutPtrInput)(nil)).Elem(), ApAeroscoutArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApBleConfigInput)(nil)).Elem(), ApBleConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApBleConfigPtrInput)(nil)).Elem(), ApBleConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApCentrakInput)(nil)).Elem(), ApCentrakArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApCentrakPtrInput)(nil)).Elem(), ApCentrakArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApClientBridgeInput)(nil)).Elem(), ApClientBridgeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApClientBridgePtrInput)(nil)).Elem(), ApClientBridgeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApClientBridgeAuthInput)(nil)).Elem(), ApClientBridgeAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApClientBridgeAuthPtrInput)(nil)).Elem(), ApClientBridgeAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApEslConfigInput)(nil)).Elem(), ApEslConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApEslConfigPtrInput)(nil)).Elem(), ApEslConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApIpConfigInput)(nil)).Elem(), ApIpConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApIpConfigPtrInput)(nil)).Elem(), ApIpConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApLacpConfigInput)(nil)).Elem(), ApLacpConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApLacpConfigPtrInput)(nil)).Elem(), ApLacpConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApLedInput)(nil)).Elem(), ApLedArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApLedPtrInput)(nil)).Elem(), ApLedArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApMeshInput)(nil)).Elem(), ApMeshArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApMeshPtrInput)(nil)).Elem(), ApMeshArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApPwrConfigInput)(nil)).Elem(), ApPwrConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApPwrConfigPtrInput)(nil)).Elem(), ApPwrConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApRadioConfigInput)(nil)).Elem(), ApRadioConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApRadioConfigPtrInput)(nil)).Elem(), ApRadioConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApRadioConfigBand24Input)(nil)).Elem(), ApRadioConfigBand24Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApRadioConfigBand24PtrInput)(nil)).Elem(), ApRadioConfigBand24Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApRadioConfigBand5Input)(nil)).Elem(), ApRadioConfigBand5Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApRadioConfigBand5PtrInput)(nil)).Elem(), ApRadioConfigBand5Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApRadioConfigBand5On24RadioInput)(nil)).Elem(), ApRadioConfigBand5On24RadioArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApRadioConfigBand5On24RadioPtrInput)(nil)).Elem(), ApRadioConfigBand5On24RadioArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApRadioConfigBand6Input)(nil)).Elem(), ApRadioConfigBand6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApRadioConfigBand6PtrInput)(nil)).Elem(), ApRadioConfigBand6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApUplinkPortConfigInput)(nil)).Elem(), ApUplinkPortConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApUplinkPortConfigPtrInput)(nil)).Elem(), ApUplinkPortConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApUsbConfigInput)(nil)).Elem(), ApUsbConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApUsbConfigPtrInput)(nil)).Elem(), ApUsbConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayBgpConfigInput)(nil)).Elem(), GatewayBgpConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayBgpConfigMapInput)(nil)).Elem(), GatewayBgpConfigMap{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayBgpConfigNeighborsInput)(nil)).Elem(), GatewayBgpConfigNeighborsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayBgpConfigNeighborsMapInput)(nil)).Elem(), GatewayBgpConfigNeighborsMap{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayClusterNodeInput)(nil)).Elem(), GatewayClusterNodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayClusterNodeArrayInput)(nil)).Elem(), GatewayClusterNodeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayDhcpdConfigInput)(nil)).Elem(), GatewayDhcpdConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayDhcpdConfigPtrInput)(nil)).Elem(), GatewayDhcpdConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayDhcpdConfigConfigInput)(nil)).Elem(), GatewayDhcpdConfigConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayDhcpdConfigConfigMapInput)(nil)).Elem(), GatewayDhcpdConfigConfigMap{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayDhcpdConfigConfigFixedBindingsInput)(nil)).Elem(), GatewayDhcpdConfigConfigFixedBindingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayDhcpdConfigConfigFixedBindingsMapInput)(nil)).Elem(), GatewayDhcpdConfigConfigFixedBindingsMap{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayDhcpdConfigConfigOptionsInput)(nil)).Elem(), GatewayDhcpdConfigConfigOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayDhcpdConfigConfigOptionsMapInput)(nil)).Elem(), GatewayDhcpdConfigConfigOptionsMap{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayDhcpdConfigConfigVendorEncapsulatedInput)(nil)).Elem(), GatewayDhcpdConfigConfigVendorEncapsulatedArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayDhcpdConfigConfigVendorEncapsulatedMapInput)(nil)).Elem(), GatewayDhcpdConfigConfigVendorEncapsulatedMap{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayExtraRoutes6Input)(nil)).Elem(), GatewayExtraRoutes6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayExtraRoutes6MapInput)(nil)).Elem(), GatewayExtraRoutes6Map{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayExtraRoutesInput)(nil)).Elem(), GatewayExtraRoutesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayExtraRoutesMapInput)(nil)).Elem(), GatewayExtraRoutesMap{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayIdpProfilesInput)(nil)).Elem(), GatewayIdpProfilesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayIdpProfilesMapInput)(nil)).Elem(), GatewayIdpProfilesMap{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayIdpProfilesOverwriteInput)(nil)).Elem(), GatewayIdpProfilesOverwriteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayIdpProfilesOverwriteArrayInput)(nil)).Elem(), GatewayIdpProfilesOverwriteArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayIdpProfilesOverwriteMatchingInput)(nil)).Elem(), GatewayIdpProfilesOverwriteMatchingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayIdpProfilesOverwriteMatchingPtrInput)(nil)).Elem(), GatewayIdpProfilesOverwriteMatchingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayIpConfigsInput)(nil)).Elem(), GatewayIpConfigsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayIpConfigsMapInput)(nil)).Elem(), GatewayIpConfigsMap{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayNetworkInput)(nil)).Elem(), GatewayNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayNetworkArrayInput)(nil)).Elem(), GatewayNetworkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayNetworkInternalAccessInput)(nil)).Elem(), GatewayNetworkInternalAccessArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayNetworkInternalAccessPtrInput)(nil)).Elem(), GatewayNetworkInternalAccessArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayNetworkInternetAccessInput)(nil)).Elem(), GatewayNetworkInternetAccessArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayNetworkInternetAccessPtrInput)(nil)).Elem(), GatewayNetworkInternetAccessArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayNetworkInternetAccessDestinationNatInput)(nil)).Elem(), GatewayNetworkInternetAccessDestinationNatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayNetworkInternetAccessDestinationNatMapInput)(nil)).Elem(), GatewayNetworkInternetAccessDestinationNatMap{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayNetworkInternetAccessStaticNatInput)(nil)).Elem(), GatewayNetworkInternetAccessStaticNatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayNetworkInternetAccessStaticNatMapInput)(nil)).Elem(), GatewayNetworkInternetAccessStaticNatMap{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayNetworkMulticastInput)(nil)).Elem(), GatewayNetworkMulticastArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayNetworkMulticastPtrInput)(nil)).Elem(), GatewayNetworkMulticastArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayNetworkMulticastGroupsInput)(nil)).Elem(), GatewayNetworkMulticastGroupsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayNetworkMulticastGroupsMapInput)(nil)).Elem(), GatewayNetworkMulticastGroupsMap{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayNetworkTenantsInput)(nil)).Elem(), GatewayNetworkTenantsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayNetworkTenantsMapInput)(nil)).Elem(), GatewayNetworkTenantsMap{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayNetworkVpnAccessInput)(nil)).Elem(), GatewayNetworkVpnAccessArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayNetworkVpnAccessMapInput)(nil)).Elem(), GatewayNetworkVpnAccessMap{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayNetworkVpnAccessDestinationNatInput)(nil)).Elem(), GatewayNetworkVpnAccessDestinationNatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayNetworkVpnAccessDestinationNatMapInput)(nil)).Elem(), GatewayNetworkVpnAccessDestinationNatMap{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayNetworkVpnAccessSourceNatInput)(nil)).Elem(), GatewayNetworkVpnAccessSourceNatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayNetworkVpnAccessSourceNatPtrInput)(nil)).Elem(), GatewayNetworkVpnAccessSourceNatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayNetworkVpnAccessStaticNatInput)(nil)).Elem(), GatewayNetworkVpnAccessStaticNatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayNetworkVpnAccessStaticNatMapInput)(nil)).Elem(), GatewayNetworkVpnAccessStaticNatMap{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayOobIpConfigInput)(nil)).Elem(), GatewayOobIpConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayOobIpConfigPtrInput)(nil)).Elem(), GatewayOobIpConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayOobIpConfigNode1Input)(nil)).Elem(), GatewayOobIpConfigNode1Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayOobIpConfigNode1PtrInput)(nil)).Elem(), GatewayOobIpConfigNode1Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayPathPreferencesInput)(nil)).Elem(), GatewayPathPreferencesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayPathPreferencesMapInput)(nil)).Elem(), GatewayPathPreferencesMap{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayPathPreferencesPathInput)(nil)).Elem(), GatewayPathPreferencesPathArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayPathPreferencesPathArrayInput)(nil)).Elem(), GatewayPathPreferencesPathArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayPortConfigInput)(nil)).Elem(), GatewayPortConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayPortConfigMapInput)(nil)).Elem(), GatewayPortConfigMap{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayPortConfigIpConfigInput)(nil)).Elem(), GatewayPortConfigIpConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayPortConfigIpConfigPtrInput)(nil)).Elem(), GatewayPortConfigIpConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayPortConfigTrafficShapingInput)(nil)).Elem(), GatewayPortConfigTrafficShapingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayPortConfigTrafficShapingPtrInput)(nil)).Elem(), GatewayPortConfigTrafficShapingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayPortConfigVpnPathsInput)(nil)).Elem(), GatewayPortConfigVpnPathsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayPortConfigVpnPathsMapInput)(nil)).Elem(), GatewayPortConfigVpnPathsMap{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayPortConfigVpnPathsTrafficShapingInput)(nil)).Elem(), GatewayPortConfigVpnPathsTrafficShapingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayPortConfigVpnPathsTrafficShapingPtrInput)(nil)).Elem(), GatewayPortConfigVpnPathsTrafficShapingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayPortConfigWanExtraRoutesInput)(nil)).Elem(), GatewayPortConfigWanExtraRoutesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayPortConfigWanExtraRoutesMapInput)(nil)).Elem(), GatewayPortConfigWanExtraRoutesMap{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayPortConfigWanProbeOverrideInput)(nil)).Elem(), GatewayPortConfigWanProbeOverrideArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayPortConfigWanProbeOverridePtrInput)(nil)).Elem(), GatewayPortConfigWanProbeOverrideArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayPortConfigWanSourceNatInput)(nil)).Elem(), GatewayPortConfigWanSourceNatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayPortConfigWanSourceNatPtrInput)(nil)).Elem(), GatewayPortConfigWanSourceNatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayPortMirroringInput)(nil)).Elem(), GatewayPortMirroringArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayPortMirroringPtrInput)(nil)).Elem(), GatewayPortMirroringArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayPortMirroringPortMirrorInput)(nil)).Elem(), GatewayPortMirroringPortMirrorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayPortMirroringPortMirrorPtrInput)(nil)).Elem(), GatewayPortMirroringPortMirrorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRoutingPoliciesInput)(nil)).Elem(), GatewayRoutingPoliciesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRoutingPoliciesMapInput)(nil)).Elem(), GatewayRoutingPoliciesMap{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRoutingPoliciesTermInput)(nil)).Elem(), GatewayRoutingPoliciesTermArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRoutingPoliciesTermArrayInput)(nil)).Elem(), GatewayRoutingPoliciesTermArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRoutingPoliciesTermActionInput)(nil)).Elem(), GatewayRoutingPoliciesTermActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRoutingPoliciesTermActionPtrInput)(nil)).Elem(), GatewayRoutingPoliciesTermActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRoutingPoliciesTermMatchingInput)(nil)).Elem(), GatewayRoutingPoliciesTermMatchingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRoutingPoliciesTermMatchingPtrInput)(nil)).Elem(), GatewayRoutingPoliciesTermMatchingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRoutingPoliciesTermMatchingRouteExistsInput)(nil)).Elem(), GatewayRoutingPoliciesTermMatchingRouteExistsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRoutingPoliciesTermMatchingRouteExistsPtrInput)(nil)).Elem(), GatewayRoutingPoliciesTermMatchingRouteExistsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRoutingPoliciesTermMatchingVpnPathSlaInput)(nil)).Elem(), GatewayRoutingPoliciesTermMatchingVpnPathSlaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRoutingPoliciesTermMatchingVpnPathSlaPtrInput)(nil)).Elem(), GatewayRoutingPoliciesTermMatchingVpnPathSlaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayServicePolicyInput)(nil)).Elem(), GatewayServicePolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayServicePolicyArrayInput)(nil)).Elem(), GatewayServicePolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayServicePolicyAntivirusInput)(nil)).Elem(), GatewayServicePolicyAntivirusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayServicePolicyAntivirusPtrInput)(nil)).Elem(), GatewayServicePolicyAntivirusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayServicePolicyAppqoeInput)(nil)).Elem(), GatewayServicePolicyAppqoeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayServicePolicyAppqoePtrInput)(nil)).Elem(), GatewayServicePolicyAppqoeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayServicePolicyEwfInput)(nil)).Elem(), GatewayServicePolicyEwfArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayServicePolicyEwfArrayInput)(nil)).Elem(), GatewayServicePolicyEwfArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayServicePolicyIdpInput)(nil)).Elem(), GatewayServicePolicyIdpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayServicePolicyIdpPtrInput)(nil)).Elem(), GatewayServicePolicyIdpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayServicePolicySslProxyInput)(nil)).Elem(), GatewayServicePolicySslProxyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayServicePolicySslProxyPtrInput)(nil)).Elem(), GatewayServicePolicySslProxyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayTunnelConfigsInput)(nil)).Elem(), GatewayTunnelConfigsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayTunnelConfigsMapInput)(nil)).Elem(), GatewayTunnelConfigsMap{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayTunnelConfigsAutoProvisionInput)(nil)).Elem(), GatewayTunnelConfigsAutoProvisionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayTunnelConfigsAutoProvisionPtrInput)(nil)).Elem(), GatewayTunnelConfigsAutoProvisionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayTunnelConfigsAutoProvisionLatlngInput)(nil)).Elem(), GatewayTunnelConfigsAutoProvisionLatlngArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayTunnelConfigsAutoProvisionLatlngPtrInput)(nil)).Elem(), GatewayTunnelConfigsAutoProvisionLatlngArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayTunnelConfigsAutoProvisionPrimaryInput)(nil)).Elem(), GatewayTunnelConfigsAutoProvisionPrimaryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayTunnelConfigsAutoProvisionPrimaryPtrInput)(nil)).Elem(), GatewayTunnelConfigsAutoProvisionPrimaryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayTunnelConfigsAutoProvisionSecondaryInput)(nil)).Elem(), GatewayTunnelConfigsAutoProvisionSecondaryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayTunnelConfigsAutoProvisionSecondaryPtrInput)(nil)).Elem(), GatewayTunnelConfigsAutoProvisionSecondaryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayTunnelConfigsIkeProposalInput)(nil)).Elem(), GatewayTunnelConfigsIkeProposalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayTunnelConfigsIkeProposalArrayInput)(nil)).Elem(), GatewayTunnelConfigsIkeProposalArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayTunnelConfigsIpsecProposalInput)(nil)).Elem(), GatewayTunnelConfigsIpsecProposalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayTunnelConfigsIpsecProposalArrayInput)(nil)).Elem(), GatewayTunnelConfigsIpsecProposalArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayTunnelConfigsPrimaryInput)(nil)).Elem(), GatewayTunnelConfigsPrimaryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayTunnelConfigsPrimaryPtrInput)(nil)).Elem(), GatewayTunnelConfigsPrimaryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayTunnelConfigsProbeInput)(nil)).Elem(), GatewayTunnelConfigsProbeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayTunnelConfigsProbePtrInput)(nil)).Elem(), GatewayTunnelConfigsProbeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayTunnelConfigsSecondaryInput)(nil)).Elem(), GatewayTunnelConfigsSecondaryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayTunnelConfigsSecondaryPtrInput)(nil)).Elem(), GatewayTunnelConfigsSecondaryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayTunnelProviderOptionsInput)(nil)).Elem(), GatewayTunnelProviderOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayTunnelProviderOptionsPtrInput)(nil)).Elem(), GatewayTunnelProviderOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayTunnelProviderOptionsJseInput)(nil)).Elem(), GatewayTunnelProviderOptionsJseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayTunnelProviderOptionsJsePtrInput)(nil)).Elem(), GatewayTunnelProviderOptionsJseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayTunnelProviderOptionsZscalerInput)(nil)).Elem(), GatewayTunnelProviderOptionsZscalerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayTunnelProviderOptionsZscalerPtrInput)(nil)).Elem(), GatewayTunnelProviderOptionsZscalerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayTunnelProviderOptionsZscalerSubLocationInput)(nil)).Elem(), GatewayTunnelProviderOptionsZscalerSubLocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayTunnelProviderOptionsZscalerSubLocationArrayInput)(nil)).Elem(), GatewayTunnelProviderOptionsZscalerSubLocationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayVrfConfigInput)(nil)).Elem(), GatewayVrfConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayVrfConfigPtrInput)(nil)).Elem(), GatewayVrfConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayVrfInstancesInput)(nil)).Elem(), GatewayVrfInstancesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayVrfInstancesMapInput)(nil)).Elem(), GatewayVrfInstancesMap{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchAclPolicyInput)(nil)).Elem(), SwitchAclPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchAclPolicyArrayInput)(nil)).Elem(), SwitchAclPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchAclPolicyActionInput)(nil)).Elem(), SwitchAclPolicyActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchAclPolicyActionArrayInput)(nil)).Elem(), SwitchAclPolicyActionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchAclTagsInput)(nil)).Elem(), SwitchAclTagsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchAclTagsMapInput)(nil)).Elem(), SwitchAclTagsMap{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchAclTagsSpecInput)(nil)).Elem(), SwitchAclTagsSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchAclTagsSpecArrayInput)(nil)).Elem(), SwitchAclTagsSpecArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchDhcpSnoopingInput)(nil)).Elem(), SwitchDhcpSnoopingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchDhcpSnoopingPtrInput)(nil)).Elem(), SwitchDhcpSnoopingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchDhcpdConfigInput)(nil)).Elem(), SwitchDhcpdConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchDhcpdConfigPtrInput)(nil)).Elem(), SwitchDhcpdConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchDhcpdConfigConfigInput)(nil)).Elem(), SwitchDhcpdConfigConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchDhcpdConfigConfigMapInput)(nil)).Elem(), SwitchDhcpdConfigConfigMap{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchDhcpdConfigConfigFixedBindingsInput)(nil)).Elem(), SwitchDhcpdConfigConfigFixedBindingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchDhcpdConfigConfigFixedBindingsMapInput)(nil)).Elem(), SwitchDhcpdConfigConfigFixedBindingsMap{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchDhcpdConfigConfigOptionsInput)(nil)).Elem(), SwitchDhcpdConfigConfigOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchDhcpdConfigConfigOptionsMapInput)(nil)).Elem(), SwitchDhcpdConfigConfigOptionsMap{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchDhcpdConfigConfigVendorEncapsulatedInput)(nil)).Elem(), SwitchDhcpdConfigConfigVendorEncapsulatedArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchDhcpdConfigConfigVendorEncapsulatedMapInput)(nil)).Elem(), SwitchDhcpdConfigConfigVendorEncapsulatedMap{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchExtraRoutes6Input)(nil)).Elem(), SwitchExtraRoutes6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchExtraRoutes6MapInput)(nil)).Elem(), SwitchExtraRoutes6Map{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchExtraRoutes6NextQualifiedInput)(nil)).Elem(), SwitchExtraRoutes6NextQualifiedArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchExtraRoutes6NextQualifiedMapInput)(nil)).Elem(), SwitchExtraRoutes6NextQualifiedMap{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchExtraRoutesInput)(nil)).Elem(), SwitchExtraRoutesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchExtraRoutesMapInput)(nil)).Elem(), SwitchExtraRoutesMap{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchExtraRoutesNextQualifiedInput)(nil)).Elem(), SwitchExtraRoutesNextQualifiedArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchExtraRoutesNextQualifiedMapInput)(nil)).Elem(), SwitchExtraRoutesNextQualifiedMap{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchIpConfigInput)(nil)).Elem(), SwitchIpConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchIpConfigPtrInput)(nil)).Elem(), SwitchIpConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchLocalPortConfigInput)(nil)).Elem(), SwitchLocalPortConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchLocalPortConfigMapInput)(nil)).Elem(), SwitchLocalPortConfigMap{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchLocalPortConfigStormControlInput)(nil)).Elem(), SwitchLocalPortConfigStormControlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchLocalPortConfigStormControlPtrInput)(nil)).Elem(), SwitchLocalPortConfigStormControlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchMistNacInput)(nil)).Elem(), SwitchMistNacArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchMistNacPtrInput)(nil)).Elem(), SwitchMistNacArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchNetworksInput)(nil)).Elem(), SwitchNetworksArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchNetworksMapInput)(nil)).Elem(), SwitchNetworksMap{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchOobIpConfigInput)(nil)).Elem(), SwitchOobIpConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchOobIpConfigPtrInput)(nil)).Elem(), SwitchOobIpConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchOspfAreasInput)(nil)).Elem(), SwitchOspfAreasArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchOspfAreasMapInput)(nil)).Elem(), SwitchOspfAreasMap{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchOspfAreasNetworksInput)(nil)).Elem(), SwitchOspfAreasNetworksArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchOspfAreasNetworksMapInput)(nil)).Elem(), SwitchOspfAreasNetworksMap{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchOtherIpConfigsInput)(nil)).Elem(), SwitchOtherIpConfigsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchOtherIpConfigsMapInput)(nil)).Elem(), SwitchOtherIpConfigsMap{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchPortConfigInput)(nil)).Elem(), SwitchPortConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchPortConfigMapInput)(nil)).Elem(), SwitchPortConfigMap{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchPortMirroringInput)(nil)).Elem(), SwitchPortMirroringArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchPortMirroringMapInput)(nil)).Elem(), SwitchPortMirroringMap{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchPortUsagesInput)(nil)).Elem(), SwitchPortUsagesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchPortUsagesMapInput)(nil)).Elem(), SwitchPortUsagesMap{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchPortUsagesRuleInput)(nil)).Elem(), SwitchPortUsagesRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchPortUsagesRuleArrayInput)(nil)).Elem(), SwitchPortUsagesRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchPortUsagesStormControlInput)(nil)).Elem(), SwitchPortUsagesStormControlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchPortUsagesStormControlPtrInput)(nil)).Elem(), SwitchPortUsagesStormControlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchRadiusConfigInput)(nil)).Elem(), SwitchRadiusConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchRadiusConfigPtrInput)(nil)).Elem(), SwitchRadiusConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchRadiusConfigAcctServerInput)(nil)).Elem(), SwitchRadiusConfigAcctServerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchRadiusConfigAcctServerArrayInput)(nil)).Elem(), SwitchRadiusConfigAcctServerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchRadiusConfigAuthServerInput)(nil)).Elem(), SwitchRadiusConfigAuthServerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchRadiusConfigAuthServerArrayInput)(nil)).Elem(), SwitchRadiusConfigAuthServerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchRemoteSyslogInput)(nil)).Elem(), SwitchRemoteSyslogArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchRemoteSyslogPtrInput)(nil)).Elem(), SwitchRemoteSyslogArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchRemoteSyslogArchiveInput)(nil)).Elem(), SwitchRemoteSyslogArchiveArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchRemoteSyslogArchivePtrInput)(nil)).Elem(), SwitchRemoteSyslogArchiveArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchRemoteSyslogConsoleInput)(nil)).Elem(), SwitchRemoteSyslogConsoleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchRemoteSyslogConsolePtrInput)(nil)).Elem(), SwitchRemoteSyslogConsoleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchRemoteSyslogConsoleContentInput)(nil)).Elem(), SwitchRemoteSyslogConsoleContentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchRemoteSyslogConsoleContentArrayInput)(nil)).Elem(), SwitchRemoteSyslogConsoleContentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchRemoteSyslogFileInput)(nil)).Elem(), SwitchRemoteSyslogFileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchRemoteSyslogFileArrayInput)(nil)).Elem(), SwitchRemoteSyslogFileArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchRemoteSyslogFileArchiveInput)(nil)).Elem(), SwitchRemoteSyslogFileArchiveArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchRemoteSyslogFileArchivePtrInput)(nil)).Elem(), SwitchRemoteSyslogFileArchiveArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchRemoteSyslogFileContentInput)(nil)).Elem(), SwitchRemoteSyslogFileContentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchRemoteSyslogFileContentArrayInput)(nil)).Elem(), SwitchRemoteSyslogFileContentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchRemoteSyslogServerInput)(nil)).Elem(), SwitchRemoteSyslogServerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchRemoteSyslogServerArrayInput)(nil)).Elem(), SwitchRemoteSyslogServerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchRemoteSyslogServerContentInput)(nil)).Elem(), SwitchRemoteSyslogServerContentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchRemoteSyslogServerContentArrayInput)(nil)).Elem(), SwitchRemoteSyslogServerContentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchRemoteSyslogUserInput)(nil)).Elem(), SwitchRemoteSyslogUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchRemoteSyslogUserArrayInput)(nil)).Elem(), SwitchRemoteSyslogUserArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchRemoteSyslogUserContentInput)(nil)).Elem(), SwitchRemoteSyslogUserContentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchRemoteSyslogUserContentArrayInput)(nil)).Elem(), SwitchRemoteSyslogUserContentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchSnmpConfigInput)(nil)).Elem(), SwitchSnmpConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchSnmpConfigPtrInput)(nil)).Elem(), SwitchSnmpConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchSnmpConfigClientListInput)(nil)).Elem(), SwitchSnmpConfigClientListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchSnmpConfigClientListArrayInput)(nil)).Elem(), SwitchSnmpConfigClientListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchSnmpConfigTrapGroupInput)(nil)).Elem(), SwitchSnmpConfigTrapGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchSnmpConfigTrapGroupArrayInput)(nil)).Elem(), SwitchSnmpConfigTrapGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchSnmpConfigV2cConfigInput)(nil)).Elem(), SwitchSnmpConfigV2cConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchSnmpConfigV2cConfigArrayInput)(nil)).Elem(), SwitchSnmpConfigV2cConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchSnmpConfigV3ConfigInput)(nil)).Elem(), SwitchSnmpConfigV3ConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchSnmpConfigV3ConfigPtrInput)(nil)).Elem(), SwitchSnmpConfigV3ConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchSnmpConfigV3ConfigNotifyInput)(nil)).Elem(), SwitchSnmpConfigV3ConfigNotifyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchSnmpConfigV3ConfigNotifyArrayInput)(nil)).Elem(), SwitchSnmpConfigV3ConfigNotifyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchSnmpConfigV3ConfigNotifyFilterInput)(nil)).Elem(), SwitchSnmpConfigV3ConfigNotifyFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchSnmpConfigV3ConfigNotifyFilterArrayInput)(nil)).Elem(), SwitchSnmpConfigV3ConfigNotifyFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchSnmpConfigV3ConfigNotifyFilterContentInput)(nil)).Elem(), SwitchSnmpConfigV3ConfigNotifyFilterContentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchSnmpConfigV3ConfigNotifyFilterContentArrayInput)(nil)).Elem(), SwitchSnmpConfigV3ConfigNotifyFilterContentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchSnmpConfigV3ConfigTargetAddressInput)(nil)).Elem(), SwitchSnmpConfigV3ConfigTargetAddressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchSnmpConfigV3ConfigTargetAddressArrayInput)(nil)).Elem(), SwitchSnmpConfigV3ConfigTargetAddressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchSnmpConfigV3ConfigTargetParameterInput)(nil)).Elem(), SwitchSnmpConfigV3ConfigTargetParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchSnmpConfigV3ConfigTargetParameterArrayInput)(nil)).Elem(), SwitchSnmpConfigV3ConfigTargetParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchSnmpConfigV3ConfigUsmInput)(nil)).Elem(), SwitchSnmpConfigV3ConfigUsmArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchSnmpConfigV3ConfigUsmArrayInput)(nil)).Elem(), SwitchSnmpConfigV3ConfigUsmArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchSnmpConfigV3ConfigUsmUserInput)(nil)).Elem(), SwitchSnmpConfigV3ConfigUsmUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchSnmpConfigV3ConfigUsmUserArrayInput)(nil)).Elem(), SwitchSnmpConfigV3ConfigUsmUserArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchSnmpConfigV3ConfigVacmInput)(nil)).Elem(), SwitchSnmpConfigV3ConfigVacmArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchSnmpConfigV3ConfigVacmPtrInput)(nil)).Elem(), SwitchSnmpConfigV3ConfigVacmArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchSnmpConfigV3ConfigVacmAccessInput)(nil)).Elem(), SwitchSnmpConfigV3ConfigVacmAccessArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchSnmpConfigV3ConfigVacmAccessArrayInput)(nil)).Elem(), SwitchSnmpConfigV3ConfigVacmAccessArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchSnmpConfigV3ConfigVacmAccessPrefixListInput)(nil)).Elem(), SwitchSnmpConfigV3ConfigVacmAccessPrefixListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchSnmpConfigV3ConfigVacmAccessPrefixListArrayInput)(nil)).Elem(), SwitchSnmpConfigV3ConfigVacmAccessPrefixListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchSnmpConfigV3ConfigVacmSecurityToGroupInput)(nil)).Elem(), SwitchSnmpConfigV3ConfigVacmSecurityToGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchSnmpConfigV3ConfigVacmSecurityToGroupPtrInput)(nil)).Elem(), SwitchSnmpConfigV3ConfigVacmSecurityToGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchSnmpConfigV3ConfigVacmSecurityToGroupContentInput)(nil)).Elem(), SwitchSnmpConfigV3ConfigVacmSecurityToGroupContentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchSnmpConfigV3ConfigVacmSecurityToGroupContentArrayInput)(nil)).Elem(), SwitchSnmpConfigV3ConfigVacmSecurityToGroupContentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchSnmpConfigViewInput)(nil)).Elem(), SwitchSnmpConfigViewArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchSnmpConfigViewArrayInput)(nil)).Elem(), SwitchSnmpConfigViewArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchStpConfigInput)(nil)).Elem(), SwitchStpConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchStpConfigPtrInput)(nil)).Elem(), SwitchStpConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchSwitchMgmtInput)(nil)).Elem(), SwitchSwitchMgmtArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchSwitchMgmtPtrInput)(nil)).Elem(), SwitchSwitchMgmtArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchSwitchMgmtLocalAccountsInput)(nil)).Elem(), SwitchSwitchMgmtLocalAccountsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchSwitchMgmtLocalAccountsMapInput)(nil)).Elem(), SwitchSwitchMgmtLocalAccountsMap{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchSwitchMgmtProtectReInput)(nil)).Elem(), SwitchSwitchMgmtProtectReArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchSwitchMgmtProtectRePtrInput)(nil)).Elem(), SwitchSwitchMgmtProtectReArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchSwitchMgmtProtectReCustomInput)(nil)).Elem(), SwitchSwitchMgmtProtectReCustomArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchSwitchMgmtProtectReCustomArrayInput)(nil)).Elem(), SwitchSwitchMgmtProtectReCustomArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchSwitchMgmtTacacsInput)(nil)).Elem(), SwitchSwitchMgmtTacacsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchSwitchMgmtTacacsPtrInput)(nil)).Elem(), SwitchSwitchMgmtTacacsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchSwitchMgmtTacacsAcctServerInput)(nil)).Elem(), SwitchSwitchMgmtTacacsAcctServerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchSwitchMgmtTacacsAcctServerArrayInput)(nil)).Elem(), SwitchSwitchMgmtTacacsAcctServerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchSwitchMgmtTacacsTacplusServerInput)(nil)).Elem(), SwitchSwitchMgmtTacacsTacplusServerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchSwitchMgmtTacacsTacplusServerArrayInput)(nil)).Elem(), SwitchSwitchMgmtTacacsTacplusServerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchVirtualChassisInput)(nil)).Elem(), SwitchVirtualChassisArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchVirtualChassisPtrInput)(nil)).Elem(), SwitchVirtualChassisArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchVirtualChassisMemberInput)(nil)).Elem(), SwitchVirtualChassisMemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchVirtualChassisMemberArrayInput)(nil)).Elem(), SwitchVirtualChassisMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchVrfConfigInput)(nil)).Elem(), SwitchVrfConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchVrfConfigPtrInput)(nil)).Elem(), SwitchVrfConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchVrfInstancesInput)(nil)).Elem(), SwitchVrfInstancesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchVrfInstancesMapInput)(nil)).Elem(), SwitchVrfInstancesMap{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchVrfInstancesExtraRoutes6Input)(nil)).Elem(), SwitchVrfInstancesExtraRoutes6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchVrfInstancesExtraRoutes6MapInput)(nil)).Elem(), SwitchVrfInstancesExtraRoutes6Map{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchVrfInstancesExtraRoutesInput)(nil)).Elem(), SwitchVrfInstancesExtraRoutesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchVrfInstancesExtraRoutesMapInput)(nil)).Elem(), SwitchVrfInstancesExtraRoutesMap{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchVrrpConfigInput)(nil)).Elem(), SwitchVrrpConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchVrrpConfigPtrInput)(nil)).Elem(), SwitchVrrpConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchVrrpConfigGroupsInput)(nil)).Elem(), SwitchVrrpConfigGroupsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchVrrpConfigGroupsMapInput)(nil)).Elem(), SwitchVrrpConfigGroupsMap{})
	pulumi.RegisterInputType(reflect.TypeOf((*BaseLatlngInput)(nil)).Elem(), BaseLatlngArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BaseLatlngPtrInput)(nil)).Elem(), BaseLatlngArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApStatsDeviceApStatInput)(nil)).Elem(), GetApStatsDeviceApStatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApStatsDeviceApStatArrayInput)(nil)).Elem(), GetApStatsDeviceApStatArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApStatsDeviceApStatAutoPlacementInput)(nil)).Elem(), GetApStatsDeviceApStatAutoPlacementArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApStatsDeviceApStatAutoPlacementInfoInput)(nil)).Elem(), GetApStatsDeviceApStatAutoPlacementInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApStatsDeviceApStatAutoPlacementInfoProbabilitySurfaceInput)(nil)).Elem(), GetApStatsDeviceApStatAutoPlacementInfoProbabilitySurfaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApStatsDeviceApStatAutoUpgradeStatInput)(nil)).Elem(), GetApStatsDeviceApStatAutoUpgradeStatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApStatsDeviceApStatBleStatInput)(nil)).Elem(), GetApStatsDeviceApStatBleStatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApStatsDeviceApStatEnvStatInput)(nil)).Elem(), GetApStatsDeviceApStatEnvStatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApStatsDeviceApStatEslStatInput)(nil)).Elem(), GetApStatsDeviceApStatEslStatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApStatsDeviceApStatFwupdateInput)(nil)).Elem(), GetApStatsDeviceApStatFwupdateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApStatsDeviceApStatGpsInput)(nil)).Elem(), GetApStatsDeviceApStatGpsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApStatsDeviceApStatIotStatInput)(nil)).Elem(), GetApStatsDeviceApStatIotStatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApStatsDeviceApStatIotStatMapInput)(nil)).Elem(), GetApStatsDeviceApStatIotStatMap{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApStatsDeviceApStatIpConfigInput)(nil)).Elem(), GetApStatsDeviceApStatIpConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApStatsDeviceApStatIpStatInput)(nil)).Elem(), GetApStatsDeviceApStatIpStatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApStatsDeviceApStatL2tpStatInput)(nil)).Elem(), GetApStatsDeviceApStatL2tpStatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApStatsDeviceApStatL2tpStatMapInput)(nil)).Elem(), GetApStatsDeviceApStatL2tpStatMap{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApStatsDeviceApStatL2tpStatSessionInput)(nil)).Elem(), GetApStatsDeviceApStatL2tpStatSessionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApStatsDeviceApStatL2tpStatSessionArrayInput)(nil)).Elem(), GetApStatsDeviceApStatL2tpStatSessionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApStatsDeviceApStatLastTroubleInput)(nil)).Elem(), GetApStatsDeviceApStatLastTroubleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApStatsDeviceApStatLedInput)(nil)).Elem(), GetApStatsDeviceApStatLedArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApStatsDeviceApStatLldpStatInput)(nil)).Elem(), GetApStatsDeviceApStatLldpStatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApStatsDeviceApStatMeshDownlinksInput)(nil)).Elem(), GetApStatsDeviceApStatMeshDownlinksArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApStatsDeviceApStatMeshDownlinksMapInput)(nil)).Elem(), GetApStatsDeviceApStatMeshDownlinksMap{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApStatsDeviceApStatMeshUplinkInput)(nil)).Elem(), GetApStatsDeviceApStatMeshUplinkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApStatsDeviceApStatPortStatInput)(nil)).Elem(), GetApStatsDeviceApStatPortStatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApStatsDeviceApStatPortStatMapInput)(nil)).Elem(), GetApStatsDeviceApStatPortStatMap{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApStatsDeviceApStatRadioStatInput)(nil)).Elem(), GetApStatsDeviceApStatRadioStatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApStatsDeviceApStatRadioStatBand24Input)(nil)).Elem(), GetApStatsDeviceApStatRadioStatBand24Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApStatsDeviceApStatRadioStatBand5Input)(nil)).Elem(), GetApStatsDeviceApStatRadioStatBand5Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApStatsDeviceApStatRadioStatBand6Input)(nil)).Elem(), GetApStatsDeviceApStatRadioStatBand6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApStatsDeviceApStatSwitchRedundancyInput)(nil)).Elem(), GetApStatsDeviceApStatSwitchRedundancyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApStatsDeviceApStatUsbStatInput)(nil)).Elem(), GetApStatsDeviceApStatUsbStatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatInput)(nil)).Elem(), GetGatewayStatsDeviceGatewayStatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatArrayInput)(nil)).Elem(), GetGatewayStatsDeviceGatewayStatArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatApRedundancyInput)(nil)).Elem(), GetGatewayStatsDeviceGatewayStatApRedundancyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatApRedundancyModulesInput)(nil)).Elem(), GetGatewayStatsDeviceGatewayStatApRedundancyModulesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatApRedundancyModulesMapInput)(nil)).Elem(), GetGatewayStatsDeviceGatewayStatApRedundancyModulesMap{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatArpTableStatsInput)(nil)).Elem(), GetGatewayStatsDeviceGatewayStatArpTableStatsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatBgpPeerInput)(nil)).Elem(), GetGatewayStatsDeviceGatewayStatBgpPeerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatBgpPeerArrayInput)(nil)).Elem(), GetGatewayStatsDeviceGatewayStatBgpPeerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatClusterConfigInput)(nil)).Elem(), GetGatewayStatsDeviceGatewayStatClusterConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatClusterConfigControlLinkInfoInput)(nil)).Elem(), GetGatewayStatsDeviceGatewayStatClusterConfigControlLinkInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatClusterConfigEthernetConnectionInput)(nil)).Elem(), GetGatewayStatsDeviceGatewayStatClusterConfigEthernetConnectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatClusterConfigEthernetConnectionArrayInput)(nil)).Elem(), GetGatewayStatsDeviceGatewayStatClusterConfigEthernetConnectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatClusterConfigFabricLinkInfoInput)(nil)).Elem(), GetGatewayStatsDeviceGatewayStatClusterConfigFabricLinkInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatClusterConfigRedundancyGroupInformationInput)(nil)).Elem(), GetGatewayStatsDeviceGatewayStatClusterConfigRedundancyGroupInformationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatClusterConfigRedundancyGroupInformationArrayInput)(nil)).Elem(), GetGatewayStatsDeviceGatewayStatClusterConfigRedundancyGroupInformationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatClusterStatInput)(nil)).Elem(), GetGatewayStatsDeviceGatewayStatClusterStatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatCpu2StatInput)(nil)).Elem(), GetGatewayStatsDeviceGatewayStatCpu2StatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatCpuStatInput)(nil)).Elem(), GetGatewayStatsDeviceGatewayStatCpuStatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatDhcpd2StatInput)(nil)).Elem(), GetGatewayStatsDeviceGatewayStatDhcpd2StatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatDhcpd2StatMapInput)(nil)).Elem(), GetGatewayStatsDeviceGatewayStatDhcpd2StatMap{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatDhcpdStatInput)(nil)).Elem(), GetGatewayStatsDeviceGatewayStatDhcpdStatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatDhcpdStatMapInput)(nil)).Elem(), GetGatewayStatsDeviceGatewayStatDhcpdStatMap{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatFwupdateInput)(nil)).Elem(), GetGatewayStatsDeviceGatewayStatFwupdateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatIf2StatInput)(nil)).Elem(), GetGatewayStatsDeviceGatewayStatIf2StatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatIf2StatMapInput)(nil)).Elem(), GetGatewayStatsDeviceGatewayStatIf2StatMap{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatIf2StatServpInfoInput)(nil)).Elem(), GetGatewayStatsDeviceGatewayStatIf2StatServpInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatIfStatInput)(nil)).Elem(), GetGatewayStatsDeviceGatewayStatIfStatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatIfStatMapInput)(nil)).Elem(), GetGatewayStatsDeviceGatewayStatIfStatMap{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatIfStatServpInfoInput)(nil)).Elem(), GetGatewayStatsDeviceGatewayStatIfStatServpInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatIp2StatInput)(nil)).Elem(), GetGatewayStatsDeviceGatewayStatIp2StatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatIpStatInput)(nil)).Elem(), GetGatewayStatsDeviceGatewayStatIpStatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatMemory2StatInput)(nil)).Elem(), GetGatewayStatsDeviceGatewayStatMemory2StatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatMemoryStatInput)(nil)).Elem(), GetGatewayStatsDeviceGatewayStatMemoryStatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatModule2StatInput)(nil)).Elem(), GetGatewayStatsDeviceGatewayStatModule2StatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatModule2StatArrayInput)(nil)).Elem(), GetGatewayStatsDeviceGatewayStatModule2StatArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatModule2StatFanInput)(nil)).Elem(), GetGatewayStatsDeviceGatewayStatModule2StatFanArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatModule2StatFanArrayInput)(nil)).Elem(), GetGatewayStatsDeviceGatewayStatModule2StatFanArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatModule2StatPoeInput)(nil)).Elem(), GetGatewayStatsDeviceGatewayStatModule2StatPoeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatModule2StatPsusInput)(nil)).Elem(), GetGatewayStatsDeviceGatewayStatModule2StatPsusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatModule2StatPsusArrayInput)(nil)).Elem(), GetGatewayStatsDeviceGatewayStatModule2StatPsusArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatModule2StatTemperatureInput)(nil)).Elem(), GetGatewayStatsDeviceGatewayStatModule2StatTemperatureArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatModule2StatTemperatureArrayInput)(nil)).Elem(), GetGatewayStatsDeviceGatewayStatModule2StatTemperatureArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatModule2StatVcLinkInput)(nil)).Elem(), GetGatewayStatsDeviceGatewayStatModule2StatVcLinkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatModule2StatVcLinkArrayInput)(nil)).Elem(), GetGatewayStatsDeviceGatewayStatModule2StatVcLinkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatModuleStatInput)(nil)).Elem(), GetGatewayStatsDeviceGatewayStatModuleStatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatModuleStatArrayInput)(nil)).Elem(), GetGatewayStatsDeviceGatewayStatModuleStatArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatModuleStatFanInput)(nil)).Elem(), GetGatewayStatsDeviceGatewayStatModuleStatFanArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatModuleStatFanArrayInput)(nil)).Elem(), GetGatewayStatsDeviceGatewayStatModuleStatFanArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatModuleStatPoeInput)(nil)).Elem(), GetGatewayStatsDeviceGatewayStatModuleStatPoeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatModuleStatPsusInput)(nil)).Elem(), GetGatewayStatsDeviceGatewayStatModuleStatPsusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatModuleStatPsusArrayInput)(nil)).Elem(), GetGatewayStatsDeviceGatewayStatModuleStatPsusArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatModuleStatTemperatureInput)(nil)).Elem(), GetGatewayStatsDeviceGatewayStatModuleStatTemperatureArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatModuleStatTemperatureArrayInput)(nil)).Elem(), GetGatewayStatsDeviceGatewayStatModuleStatTemperatureArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatModuleStatVcLinkInput)(nil)).Elem(), GetGatewayStatsDeviceGatewayStatModuleStatVcLinkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatModuleStatVcLinkArrayInput)(nil)).Elem(), GetGatewayStatsDeviceGatewayStatModuleStatVcLinkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatPortInput)(nil)).Elem(), GetGatewayStatsDeviceGatewayStatPortArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatPortArrayInput)(nil)).Elem(), GetGatewayStatsDeviceGatewayStatPortArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatRouteSummaryStatsInput)(nil)).Elem(), GetGatewayStatsDeviceGatewayStatRouteSummaryStatsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatService2StatInput)(nil)).Elem(), GetGatewayStatsDeviceGatewayStatService2StatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatService2StatMapInput)(nil)).Elem(), GetGatewayStatsDeviceGatewayStatService2StatMap{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatServiceStatInput)(nil)).Elem(), GetGatewayStatsDeviceGatewayStatServiceStatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatServiceStatMapInput)(nil)).Elem(), GetGatewayStatsDeviceGatewayStatServiceStatMap{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatServiceStatusInput)(nil)).Elem(), GetGatewayStatsDeviceGatewayStatServiceStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatSpu2StatInput)(nil)).Elem(), GetGatewayStatsDeviceGatewayStatSpu2StatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatSpu2StatArrayInput)(nil)).Elem(), GetGatewayStatsDeviceGatewayStatSpu2StatArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatSpuStatInput)(nil)).Elem(), GetGatewayStatsDeviceGatewayStatSpuStatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatSpuStatArrayInput)(nil)).Elem(), GetGatewayStatsDeviceGatewayStatSpuStatArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatTunnelInput)(nil)).Elem(), GetGatewayStatsDeviceGatewayStatTunnelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatTunnelArrayInput)(nil)).Elem(), GetGatewayStatsDeviceGatewayStatTunnelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatVpnPeerInput)(nil)).Elem(), GetGatewayStatsDeviceGatewayStatVpnPeerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayStatsDeviceGatewayStatVpnPeerArrayInput)(nil)).Elem(), GetGatewayStatsDeviceGatewayStatVpnPeerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSwitchStatsDeviceSwitchStatInput)(nil)).Elem(), GetSwitchStatsDeviceSwitchStatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSwitchStatsDeviceSwitchStatArrayInput)(nil)).Elem(), GetSwitchStatsDeviceSwitchStatArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSwitchStatsDeviceSwitchStatApRedundancyInput)(nil)).Elem(), GetSwitchStatsDeviceSwitchStatApRedundancyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSwitchStatsDeviceSwitchStatApRedundancyModulesInput)(nil)).Elem(), GetSwitchStatsDeviceSwitchStatApRedundancyModulesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSwitchStatsDeviceSwitchStatApRedundancyModulesMapInput)(nil)).Elem(), GetSwitchStatsDeviceSwitchStatApRedundancyModulesMap{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSwitchStatsDeviceSwitchStatArpTableStatsInput)(nil)).Elem(), GetSwitchStatsDeviceSwitchStatArpTableStatsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSwitchStatsDeviceSwitchStatClientInput)(nil)).Elem(), GetSwitchStatsDeviceSwitchStatClientArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSwitchStatsDeviceSwitchStatClientArrayInput)(nil)).Elem(), GetSwitchStatsDeviceSwitchStatClientArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSwitchStatsDeviceSwitchStatClientsStatsInput)(nil)).Elem(), GetSwitchStatsDeviceSwitchStatClientsStatsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSwitchStatsDeviceSwitchStatClientsStatsTotalInput)(nil)).Elem(), GetSwitchStatsDeviceSwitchStatClientsStatsTotalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSwitchStatsDeviceSwitchStatCpuStatInput)(nil)).Elem(), GetSwitchStatsDeviceSwitchStatCpuStatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSwitchStatsDeviceSwitchStatDhcpdStatInput)(nil)).Elem(), GetSwitchStatsDeviceSwitchStatDhcpdStatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSwitchStatsDeviceSwitchStatDhcpdStatMapInput)(nil)).Elem(), GetSwitchStatsDeviceSwitchStatDhcpdStatMap{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSwitchStatsDeviceSwitchStatFwupdateInput)(nil)).Elem(), GetSwitchStatsDeviceSwitchStatFwupdateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSwitchStatsDeviceSwitchStatIfStatInput)(nil)).Elem(), GetSwitchStatsDeviceSwitchStatIfStatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSwitchStatsDeviceSwitchStatIfStatMapInput)(nil)).Elem(), GetSwitchStatsDeviceSwitchStatIfStatMap{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSwitchStatsDeviceSwitchStatIfStatServpInfoInput)(nil)).Elem(), GetSwitchStatsDeviceSwitchStatIfStatServpInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSwitchStatsDeviceSwitchStatIpStatInput)(nil)).Elem(), GetSwitchStatsDeviceSwitchStatIpStatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSwitchStatsDeviceSwitchStatLastTroubleInput)(nil)).Elem(), GetSwitchStatsDeviceSwitchStatLastTroubleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSwitchStatsDeviceSwitchStatMacTableStatsInput)(nil)).Elem(), GetSwitchStatsDeviceSwitchStatMacTableStatsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSwitchStatsDeviceSwitchStatMemoryStatInput)(nil)).Elem(), GetSwitchStatsDeviceSwitchStatMemoryStatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSwitchStatsDeviceSwitchStatModuleStatInput)(nil)).Elem(), GetSwitchStatsDeviceSwitchStatModuleStatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSwitchStatsDeviceSwitchStatModuleStatArrayInput)(nil)).Elem(), GetSwitchStatsDeviceSwitchStatModuleStatArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSwitchStatsDeviceSwitchStatModuleStatCpuStatInput)(nil)).Elem(), GetSwitchStatsDeviceSwitchStatModuleStatCpuStatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSwitchStatsDeviceSwitchStatModuleStatErrorInput)(nil)).Elem(), GetSwitchStatsDeviceSwitchStatModuleStatErrorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSwitchStatsDeviceSwitchStatModuleStatErrorArrayInput)(nil)).Elem(), GetSwitchStatsDeviceSwitchStatModuleStatErrorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSwitchStatsDeviceSwitchStatModuleStatFanInput)(nil)).Elem(), GetSwitchStatsDeviceSwitchStatModuleStatFanArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSwitchStatsDeviceSwitchStatModuleStatFanArrayInput)(nil)).Elem(), GetSwitchStatsDeviceSwitchStatModuleStatFanArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSwitchStatsDeviceSwitchStatModuleStatPicInput)(nil)).Elem(), GetSwitchStatsDeviceSwitchStatModuleStatPicArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSwitchStatsDeviceSwitchStatModuleStatPicArrayInput)(nil)).Elem(), GetSwitchStatsDeviceSwitchStatModuleStatPicArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSwitchStatsDeviceSwitchStatModuleStatPicPortGroupInput)(nil)).Elem(), GetSwitchStatsDeviceSwitchStatModuleStatPicPortGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSwitchStatsDeviceSwitchStatModuleStatPicPortGroupArrayInput)(nil)).Elem(), GetSwitchStatsDeviceSwitchStatModuleStatPicPortGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSwitchStatsDeviceSwitchStatModuleStatPoeInput)(nil)).Elem(), GetSwitchStatsDeviceSwitchStatModuleStatPoeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSwitchStatsDeviceSwitchStatModuleStatPsusInput)(nil)).Elem(), GetSwitchStatsDeviceSwitchStatModuleStatPsusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSwitchStatsDeviceSwitchStatModuleStatPsusArrayInput)(nil)).Elem(), GetSwitchStatsDeviceSwitchStatModuleStatPsusArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSwitchStatsDeviceSwitchStatModuleStatTemperatureInput)(nil)).Elem(), GetSwitchStatsDeviceSwitchStatModuleStatTemperatureArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSwitchStatsDeviceSwitchStatModuleStatTemperatureArrayInput)(nil)).Elem(), GetSwitchStatsDeviceSwitchStatModuleStatTemperatureArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSwitchStatsDeviceSwitchStatModuleStatVcLinkInput)(nil)).Elem(), GetSwitchStatsDeviceSwitchStatModuleStatVcLinkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSwitchStatsDeviceSwitchStatModuleStatVcLinkArrayInput)(nil)).Elem(), GetSwitchStatsDeviceSwitchStatModuleStatVcLinkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSwitchStatsDeviceSwitchStatPortInput)(nil)).Elem(), GetSwitchStatsDeviceSwitchStatPortArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSwitchStatsDeviceSwitchStatPortArrayInput)(nil)).Elem(), GetSwitchStatsDeviceSwitchStatPortArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSwitchStatsDeviceSwitchStatRouteSummaryStatsInput)(nil)).Elem(), GetSwitchStatsDeviceSwitchStatRouteSummaryStatsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSwitchStatsDeviceSwitchStatServiceStatInput)(nil)).Elem(), GetSwitchStatsDeviceSwitchStatServiceStatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSwitchStatsDeviceSwitchStatServiceStatMapInput)(nil)).Elem(), GetSwitchStatsDeviceSwitchStatServiceStatMap{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSwitchStatsDeviceSwitchStatVcSetupInfoInput)(nil)).Elem(), GetSwitchStatsDeviceSwitchStatVcSetupInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVersionsDeviceVersionInput)(nil)).Elem(), GetVersionsDeviceVersionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVersionsDeviceVersionArrayInput)(nil)).Elem(), GetVersionsDeviceVersionArray{})
	pulumi.RegisterOutputType(ApAeroscoutOutput{})
	pulumi.RegisterOutputType(ApAeroscoutPtrOutput{})
	pulumi.RegisterOutputType(ApBleConfigOutput{})
	pulumi.RegisterOutputType(ApBleConfigPtrOutput{})
	pulumi.RegisterOutputType(ApCentrakOutput{})
	pulumi.RegisterOutputType(ApCentrakPtrOutput{})
	pulumi.RegisterOutputType(ApClientBridgeOutput{})
	pulumi.RegisterOutputType(ApClientBridgePtrOutput{})
	pulumi.RegisterOutputType(ApClientBridgeAuthOutput{})
	pulumi.RegisterOutputType(ApClientBridgeAuthPtrOutput{})
	pulumi.RegisterOutputType(ApEslConfigOutput{})
	pulumi.RegisterOutputType(ApEslConfigPtrOutput{})
	pulumi.RegisterOutputType(ApIpConfigOutput{})
	pulumi.RegisterOutputType(ApIpConfigPtrOutput{})
	pulumi.RegisterOutputType(ApLacpConfigOutput{})
	pulumi.RegisterOutputType(ApLacpConfigPtrOutput{})
	pulumi.RegisterOutputType(ApLedOutput{})
	pulumi.RegisterOutputType(ApLedPtrOutput{})
	pulumi.RegisterOutputType(ApMeshOutput{})
	pulumi.RegisterOutputType(ApMeshPtrOutput{})
	pulumi.RegisterOutputType(ApPwrConfigOutput{})
	pulumi.RegisterOutputType(ApPwrConfigPtrOutput{})
	pulumi.RegisterOutputType(ApRadioConfigOutput{})
	pulumi.RegisterOutputType(ApRadioConfigPtrOutput{})
	pulumi.RegisterOutputType(ApRadioConfigBand24Output{})
	pulumi.RegisterOutputType(ApRadioConfigBand24PtrOutput{})
	pulumi.RegisterOutputType(ApRadioConfigBand5Output{})
	pulumi.RegisterOutputType(ApRadioConfigBand5PtrOutput{})
	pulumi.RegisterOutputType(ApRadioConfigBand5On24RadioOutput{})
	pulumi.RegisterOutputType(ApRadioConfigBand5On24RadioPtrOutput{})
	pulumi.RegisterOutputType(ApRadioConfigBand6Output{})
	pulumi.RegisterOutputType(ApRadioConfigBand6PtrOutput{})
	pulumi.RegisterOutputType(ApUplinkPortConfigOutput{})
	pulumi.RegisterOutputType(ApUplinkPortConfigPtrOutput{})
	pulumi.RegisterOutputType(ApUsbConfigOutput{})
	pulumi.RegisterOutputType(ApUsbConfigPtrOutput{})
	pulumi.RegisterOutputType(GatewayBgpConfigOutput{})
	pulumi.RegisterOutputType(GatewayBgpConfigMapOutput{})
	pulumi.RegisterOutputType(GatewayBgpConfigNeighborsOutput{})
	pulumi.RegisterOutputType(GatewayBgpConfigNeighborsMapOutput{})
	pulumi.RegisterOutputType(GatewayClusterNodeOutput{})
	pulumi.RegisterOutputType(GatewayClusterNodeArrayOutput{})
	pulumi.RegisterOutputType(GatewayDhcpdConfigOutput{})
	pulumi.RegisterOutputType(GatewayDhcpdConfigPtrOutput{})
	pulumi.RegisterOutputType(GatewayDhcpdConfigConfigOutput{})
	pulumi.RegisterOutputType(GatewayDhcpdConfigConfigMapOutput{})
	pulumi.RegisterOutputType(GatewayDhcpdConfigConfigFixedBindingsOutput{})
	pulumi.RegisterOutputType(GatewayDhcpdConfigConfigFixedBindingsMapOutput{})
	pulumi.RegisterOutputType(GatewayDhcpdConfigConfigOptionsOutput{})
	pulumi.RegisterOutputType(GatewayDhcpdConfigConfigOptionsMapOutput{})
	pulumi.RegisterOutputType(GatewayDhcpdConfigConfigVendorEncapsulatedOutput{})
	pulumi.RegisterOutputType(GatewayDhcpdConfigConfigVendorEncapsulatedMapOutput{})
	pulumi.RegisterOutputType(GatewayExtraRoutes6Output{})
	pulumi.RegisterOutputType(GatewayExtraRoutes6MapOutput{})
	pulumi.RegisterOutputType(GatewayExtraRoutesOutput{})
	pulumi.RegisterOutputType(GatewayExtraRoutesMapOutput{})
	pulumi.RegisterOutputType(GatewayIdpProfilesOutput{})
	pulumi.RegisterOutputType(GatewayIdpProfilesMapOutput{})
	pulumi.RegisterOutputType(GatewayIdpProfilesOverwriteOutput{})
	pulumi.RegisterOutputType(GatewayIdpProfilesOverwriteArrayOutput{})
	pulumi.RegisterOutputType(GatewayIdpProfilesOverwriteMatchingOutput{})
	pulumi.RegisterOutputType(GatewayIdpProfilesOverwriteMatchingPtrOutput{})
	pulumi.RegisterOutputType(GatewayIpConfigsOutput{})
	pulumi.RegisterOutputType(GatewayIpConfigsMapOutput{})
	pulumi.RegisterOutputType(GatewayNetworkOutput{})
	pulumi.RegisterOutputType(GatewayNetworkArrayOutput{})
	pulumi.RegisterOutputType(GatewayNetworkInternalAccessOutput{})
	pulumi.RegisterOutputType(GatewayNetworkInternalAccessPtrOutput{})
	pulumi.RegisterOutputType(GatewayNetworkInternetAccessOutput{})
	pulumi.RegisterOutputType(GatewayNetworkInternetAccessPtrOutput{})
	pulumi.RegisterOutputType(GatewayNetworkInternetAccessDestinationNatOutput{})
	pulumi.RegisterOutputType(GatewayNetworkInternetAccessDestinationNatMapOutput{})
	pulumi.RegisterOutputType(GatewayNetworkInternetAccessStaticNatOutput{})
	pulumi.RegisterOutputType(GatewayNetworkInternetAccessStaticNatMapOutput{})
	pulumi.RegisterOutputType(GatewayNetworkMulticastOutput{})
	pulumi.RegisterOutputType(GatewayNetworkMulticastPtrOutput{})
	pulumi.RegisterOutputType(GatewayNetworkMulticastGroupsOutput{})
	pulumi.RegisterOutputType(GatewayNetworkMulticastGroupsMapOutput{})
	pulumi.RegisterOutputType(GatewayNetworkTenantsOutput{})
	pulumi.RegisterOutputType(GatewayNetworkTenantsMapOutput{})
	pulumi.RegisterOutputType(GatewayNetworkVpnAccessOutput{})
	pulumi.RegisterOutputType(GatewayNetworkVpnAccessMapOutput{})
	pulumi.RegisterOutputType(GatewayNetworkVpnAccessDestinationNatOutput{})
	pulumi.RegisterOutputType(GatewayNetworkVpnAccessDestinationNatMapOutput{})
	pulumi.RegisterOutputType(GatewayNetworkVpnAccessSourceNatOutput{})
	pulumi.RegisterOutputType(GatewayNetworkVpnAccessSourceNatPtrOutput{})
	pulumi.RegisterOutputType(GatewayNetworkVpnAccessStaticNatOutput{})
	pulumi.RegisterOutputType(GatewayNetworkVpnAccessStaticNatMapOutput{})
	pulumi.RegisterOutputType(GatewayOobIpConfigOutput{})
	pulumi.RegisterOutputType(GatewayOobIpConfigPtrOutput{})
	pulumi.RegisterOutputType(GatewayOobIpConfigNode1Output{})
	pulumi.RegisterOutputType(GatewayOobIpConfigNode1PtrOutput{})
	pulumi.RegisterOutputType(GatewayPathPreferencesOutput{})
	pulumi.RegisterOutputType(GatewayPathPreferencesMapOutput{})
	pulumi.RegisterOutputType(GatewayPathPreferencesPathOutput{})
	pulumi.RegisterOutputType(GatewayPathPreferencesPathArrayOutput{})
	pulumi.RegisterOutputType(GatewayPortConfigOutput{})
	pulumi.RegisterOutputType(GatewayPortConfigMapOutput{})
	pulumi.RegisterOutputType(GatewayPortConfigIpConfigOutput{})
	pulumi.RegisterOutputType(GatewayPortConfigIpConfigPtrOutput{})
	pulumi.RegisterOutputType(GatewayPortConfigTrafficShapingOutput{})
	pulumi.RegisterOutputType(GatewayPortConfigTrafficShapingPtrOutput{})
	pulumi.RegisterOutputType(GatewayPortConfigVpnPathsOutput{})
	pulumi.RegisterOutputType(GatewayPortConfigVpnPathsMapOutput{})
	pulumi.RegisterOutputType(GatewayPortConfigVpnPathsTrafficShapingOutput{})
	pulumi.RegisterOutputType(GatewayPortConfigVpnPathsTrafficShapingPtrOutput{})
	pulumi.RegisterOutputType(GatewayPortConfigWanExtraRoutesOutput{})
	pulumi.RegisterOutputType(GatewayPortConfigWanExtraRoutesMapOutput{})
	pulumi.RegisterOutputType(GatewayPortConfigWanProbeOverrideOutput{})
	pulumi.RegisterOutputType(GatewayPortConfigWanProbeOverridePtrOutput{})
	pulumi.RegisterOutputType(GatewayPortConfigWanSourceNatOutput{})
	pulumi.RegisterOutputType(GatewayPortConfigWanSourceNatPtrOutput{})
	pulumi.RegisterOutputType(GatewayPortMirroringOutput{})
	pulumi.RegisterOutputType(GatewayPortMirroringPtrOutput{})
	pulumi.RegisterOutputType(GatewayPortMirroringPortMirrorOutput{})
	pulumi.RegisterOutputType(GatewayPortMirroringPortMirrorPtrOutput{})
	pulumi.RegisterOutputType(GatewayRoutingPoliciesOutput{})
	pulumi.RegisterOutputType(GatewayRoutingPoliciesMapOutput{})
	pulumi.RegisterOutputType(GatewayRoutingPoliciesTermOutput{})
	pulumi.RegisterOutputType(GatewayRoutingPoliciesTermArrayOutput{})
	pulumi.RegisterOutputType(GatewayRoutingPoliciesTermActionOutput{})
	pulumi.RegisterOutputType(GatewayRoutingPoliciesTermActionPtrOutput{})
	pulumi.RegisterOutputType(GatewayRoutingPoliciesTermMatchingOutput{})
	pulumi.RegisterOutputType(GatewayRoutingPoliciesTermMatchingPtrOutput{})
	pulumi.RegisterOutputType(GatewayRoutingPoliciesTermMatchingRouteExistsOutput{})
	pulumi.RegisterOutputType(GatewayRoutingPoliciesTermMatchingRouteExistsPtrOutput{})
	pulumi.RegisterOutputType(GatewayRoutingPoliciesTermMatchingVpnPathSlaOutput{})
	pulumi.RegisterOutputType(GatewayRoutingPoliciesTermMatchingVpnPathSlaPtrOutput{})
	pulumi.RegisterOutputType(GatewayServicePolicyOutput{})
	pulumi.RegisterOutputType(GatewayServicePolicyArrayOutput{})
	pulumi.RegisterOutputType(GatewayServicePolicyAntivirusOutput{})
	pulumi.RegisterOutputType(GatewayServicePolicyAntivirusPtrOutput{})
	pulumi.RegisterOutputType(GatewayServicePolicyAppqoeOutput{})
	pulumi.RegisterOutputType(GatewayServicePolicyAppqoePtrOutput{})
	pulumi.RegisterOutputType(GatewayServicePolicyEwfOutput{})
	pulumi.RegisterOutputType(GatewayServicePolicyEwfArrayOutput{})
	pulumi.RegisterOutputType(GatewayServicePolicyIdpOutput{})
	pulumi.RegisterOutputType(GatewayServicePolicyIdpPtrOutput{})
	pulumi.RegisterOutputType(GatewayServicePolicySslProxyOutput{})
	pulumi.RegisterOutputType(GatewayServicePolicySslProxyPtrOutput{})
	pulumi.RegisterOutputType(GatewayTunnelConfigsOutput{})
	pulumi.RegisterOutputType(GatewayTunnelConfigsMapOutput{})
	pulumi.RegisterOutputType(GatewayTunnelConfigsAutoProvisionOutput{})
	pulumi.RegisterOutputType(GatewayTunnelConfigsAutoProvisionPtrOutput{})
	pulumi.RegisterOutputType(GatewayTunnelConfigsAutoProvisionLatlngOutput{})
	pulumi.RegisterOutputType(GatewayTunnelConfigsAutoProvisionLatlngPtrOutput{})
	pulumi.RegisterOutputType(GatewayTunnelConfigsAutoProvisionPrimaryOutput{})
	pulumi.RegisterOutputType(GatewayTunnelConfigsAutoProvisionPrimaryPtrOutput{})
	pulumi.RegisterOutputType(GatewayTunnelConfigsAutoProvisionSecondaryOutput{})
	pulumi.RegisterOutputType(GatewayTunnelConfigsAutoProvisionSecondaryPtrOutput{})
	pulumi.RegisterOutputType(GatewayTunnelConfigsIkeProposalOutput{})
	pulumi.RegisterOutputType(GatewayTunnelConfigsIkeProposalArrayOutput{})
	pulumi.RegisterOutputType(GatewayTunnelConfigsIpsecProposalOutput{})
	pulumi.RegisterOutputType(GatewayTunnelConfigsIpsecProposalArrayOutput{})
	pulumi.RegisterOutputType(GatewayTunnelConfigsPrimaryOutput{})
	pulumi.RegisterOutputType(GatewayTunnelConfigsPrimaryPtrOutput{})
	pulumi.RegisterOutputType(GatewayTunnelConfigsProbeOutput{})
	pulumi.RegisterOutputType(GatewayTunnelConfigsProbePtrOutput{})
	pulumi.RegisterOutputType(GatewayTunnelConfigsSecondaryOutput{})
	pulumi.RegisterOutputType(GatewayTunnelConfigsSecondaryPtrOutput{})
	pulumi.RegisterOutputType(GatewayTunnelProviderOptionsOutput{})
	pulumi.RegisterOutputType(GatewayTunnelProviderOptionsPtrOutput{})
	pulumi.RegisterOutputType(GatewayTunnelProviderOptionsJseOutput{})
	pulumi.RegisterOutputType(GatewayTunnelProviderOptionsJsePtrOutput{})
	pulumi.RegisterOutputType(GatewayTunnelProviderOptionsZscalerOutput{})
	pulumi.RegisterOutputType(GatewayTunnelProviderOptionsZscalerPtrOutput{})
	pulumi.RegisterOutputType(GatewayTunnelProviderOptionsZscalerSubLocationOutput{})
	pulumi.RegisterOutputType(GatewayTunnelProviderOptionsZscalerSubLocationArrayOutput{})
	pulumi.RegisterOutputType(GatewayVrfConfigOutput{})
	pulumi.RegisterOutputType(GatewayVrfConfigPtrOutput{})
	pulumi.RegisterOutputType(GatewayVrfInstancesOutput{})
	pulumi.RegisterOutputType(GatewayVrfInstancesMapOutput{})
	pulumi.RegisterOutputType(SwitchAclPolicyOutput{})
	pulumi.RegisterOutputType(SwitchAclPolicyArrayOutput{})
	pulumi.RegisterOutputType(SwitchAclPolicyActionOutput{})
	pulumi.RegisterOutputType(SwitchAclPolicyActionArrayOutput{})
	pulumi.RegisterOutputType(SwitchAclTagsOutput{})
	pulumi.RegisterOutputType(SwitchAclTagsMapOutput{})
	pulumi.RegisterOutputType(SwitchAclTagsSpecOutput{})
	pulumi.RegisterOutputType(SwitchAclTagsSpecArrayOutput{})
	pulumi.RegisterOutputType(SwitchDhcpSnoopingOutput{})
	pulumi.RegisterOutputType(SwitchDhcpSnoopingPtrOutput{})
	pulumi.RegisterOutputType(SwitchDhcpdConfigOutput{})
	pulumi.RegisterOutputType(SwitchDhcpdConfigPtrOutput{})
	pulumi.RegisterOutputType(SwitchDhcpdConfigConfigOutput{})
	pulumi.RegisterOutputType(SwitchDhcpdConfigConfigMapOutput{})
	pulumi.RegisterOutputType(SwitchDhcpdConfigConfigFixedBindingsOutput{})
	pulumi.RegisterOutputType(SwitchDhcpdConfigConfigFixedBindingsMapOutput{})
	pulumi.RegisterOutputType(SwitchDhcpdConfigConfigOptionsOutput{})
	pulumi.RegisterOutputType(SwitchDhcpdConfigConfigOptionsMapOutput{})
	pulumi.RegisterOutputType(SwitchDhcpdConfigConfigVendorEncapsulatedOutput{})
	pulumi.RegisterOutputType(SwitchDhcpdConfigConfigVendorEncapsulatedMapOutput{})
	pulumi.RegisterOutputType(SwitchExtraRoutes6Output{})
	pulumi.RegisterOutputType(SwitchExtraRoutes6MapOutput{})
	pulumi.RegisterOutputType(SwitchExtraRoutes6NextQualifiedOutput{})
	pulumi.RegisterOutputType(SwitchExtraRoutes6NextQualifiedMapOutput{})
	pulumi.RegisterOutputType(SwitchExtraRoutesOutput{})
	pulumi.RegisterOutputType(SwitchExtraRoutesMapOutput{})
	pulumi.RegisterOutputType(SwitchExtraRoutesNextQualifiedOutput{})
	pulumi.RegisterOutputType(SwitchExtraRoutesNextQualifiedMapOutput{})
	pulumi.RegisterOutputType(SwitchIpConfigOutput{})
	pulumi.RegisterOutputType(SwitchIpConfigPtrOutput{})
	pulumi.RegisterOutputType(SwitchLocalPortConfigOutput{})
	pulumi.RegisterOutputType(SwitchLocalPortConfigMapOutput{})
	pulumi.RegisterOutputType(SwitchLocalPortConfigStormControlOutput{})
	pulumi.RegisterOutputType(SwitchLocalPortConfigStormControlPtrOutput{})
	pulumi.RegisterOutputType(SwitchMistNacOutput{})
	pulumi.RegisterOutputType(SwitchMistNacPtrOutput{})
	pulumi.RegisterOutputType(SwitchNetworksOutput{})
	pulumi.RegisterOutputType(SwitchNetworksMapOutput{})
	pulumi.RegisterOutputType(SwitchOobIpConfigOutput{})
	pulumi.RegisterOutputType(SwitchOobIpConfigPtrOutput{})
	pulumi.RegisterOutputType(SwitchOspfAreasOutput{})
	pulumi.RegisterOutputType(SwitchOspfAreasMapOutput{})
	pulumi.RegisterOutputType(SwitchOspfAreasNetworksOutput{})
	pulumi.RegisterOutputType(SwitchOspfAreasNetworksMapOutput{})
	pulumi.RegisterOutputType(SwitchOtherIpConfigsOutput{})
	pulumi.RegisterOutputType(SwitchOtherIpConfigsMapOutput{})
	pulumi.RegisterOutputType(SwitchPortConfigOutput{})
	pulumi.RegisterOutputType(SwitchPortConfigMapOutput{})
	pulumi.RegisterOutputType(SwitchPortMirroringOutput{})
	pulumi.RegisterOutputType(SwitchPortMirroringMapOutput{})
	pulumi.RegisterOutputType(SwitchPortUsagesOutput{})
	pulumi.RegisterOutputType(SwitchPortUsagesMapOutput{})
	pulumi.RegisterOutputType(SwitchPortUsagesRuleOutput{})
	pulumi.RegisterOutputType(SwitchPortUsagesRuleArrayOutput{})
	pulumi.RegisterOutputType(SwitchPortUsagesStormControlOutput{})
	pulumi.RegisterOutputType(SwitchPortUsagesStormControlPtrOutput{})
	pulumi.RegisterOutputType(SwitchRadiusConfigOutput{})
	pulumi.RegisterOutputType(SwitchRadiusConfigPtrOutput{})
	pulumi.RegisterOutputType(SwitchRadiusConfigAcctServerOutput{})
	pulumi.RegisterOutputType(SwitchRadiusConfigAcctServerArrayOutput{})
	pulumi.RegisterOutputType(SwitchRadiusConfigAuthServerOutput{})
	pulumi.RegisterOutputType(SwitchRadiusConfigAuthServerArrayOutput{})
	pulumi.RegisterOutputType(SwitchRemoteSyslogOutput{})
	pulumi.RegisterOutputType(SwitchRemoteSyslogPtrOutput{})
	pulumi.RegisterOutputType(SwitchRemoteSyslogArchiveOutput{})
	pulumi.RegisterOutputType(SwitchRemoteSyslogArchivePtrOutput{})
	pulumi.RegisterOutputType(SwitchRemoteSyslogConsoleOutput{})
	pulumi.RegisterOutputType(SwitchRemoteSyslogConsolePtrOutput{})
	pulumi.RegisterOutputType(SwitchRemoteSyslogConsoleContentOutput{})
	pulumi.RegisterOutputType(SwitchRemoteSyslogConsoleContentArrayOutput{})
	pulumi.RegisterOutputType(SwitchRemoteSyslogFileOutput{})
	pulumi.RegisterOutputType(SwitchRemoteSyslogFileArrayOutput{})
	pulumi.RegisterOutputType(SwitchRemoteSyslogFileArchiveOutput{})
	pulumi.RegisterOutputType(SwitchRemoteSyslogFileArchivePtrOutput{})
	pulumi.RegisterOutputType(SwitchRemoteSyslogFileContentOutput{})
	pulumi.RegisterOutputType(SwitchRemoteSyslogFileContentArrayOutput{})
	pulumi.RegisterOutputType(SwitchRemoteSyslogServerOutput{})
	pulumi.RegisterOutputType(SwitchRemoteSyslogServerArrayOutput{})
	pulumi.RegisterOutputType(SwitchRemoteSyslogServerContentOutput{})
	pulumi.RegisterOutputType(SwitchRemoteSyslogServerContentArrayOutput{})
	pulumi.RegisterOutputType(SwitchRemoteSyslogUserOutput{})
	pulumi.RegisterOutputType(SwitchRemoteSyslogUserArrayOutput{})
	pulumi.RegisterOutputType(SwitchRemoteSyslogUserContentOutput{})
	pulumi.RegisterOutputType(SwitchRemoteSyslogUserContentArrayOutput{})
	pulumi.RegisterOutputType(SwitchSnmpConfigOutput{})
	pulumi.RegisterOutputType(SwitchSnmpConfigPtrOutput{})
	pulumi.RegisterOutputType(SwitchSnmpConfigClientListOutput{})
	pulumi.RegisterOutputType(SwitchSnmpConfigClientListArrayOutput{})
	pulumi.RegisterOutputType(SwitchSnmpConfigTrapGroupOutput{})
	pulumi.RegisterOutputType(SwitchSnmpConfigTrapGroupArrayOutput{})
	pulumi.RegisterOutputType(SwitchSnmpConfigV2cConfigOutput{})
	pulumi.RegisterOutputType(SwitchSnmpConfigV2cConfigArrayOutput{})
	pulumi.RegisterOutputType(SwitchSnmpConfigV3ConfigOutput{})
	pulumi.RegisterOutputType(SwitchSnmpConfigV3ConfigPtrOutput{})
	pulumi.RegisterOutputType(SwitchSnmpConfigV3ConfigNotifyOutput{})
	pulumi.RegisterOutputType(SwitchSnmpConfigV3ConfigNotifyArrayOutput{})
	pulumi.RegisterOutputType(SwitchSnmpConfigV3ConfigNotifyFilterOutput{})
	pulumi.RegisterOutputType(SwitchSnmpConfigV3ConfigNotifyFilterArrayOutput{})
	pulumi.RegisterOutputType(SwitchSnmpConfigV3ConfigNotifyFilterContentOutput{})
	pulumi.RegisterOutputType(SwitchSnmpConfigV3ConfigNotifyFilterContentArrayOutput{})
	pulumi.RegisterOutputType(SwitchSnmpConfigV3ConfigTargetAddressOutput{})
	pulumi.RegisterOutputType(SwitchSnmpConfigV3ConfigTargetAddressArrayOutput{})
	pulumi.RegisterOutputType(SwitchSnmpConfigV3ConfigTargetParameterOutput{})
	pulumi.RegisterOutputType(SwitchSnmpConfigV3ConfigTargetParameterArrayOutput{})
	pulumi.RegisterOutputType(SwitchSnmpConfigV3ConfigUsmOutput{})
	pulumi.RegisterOutputType(SwitchSnmpConfigV3ConfigUsmArrayOutput{})
	pulumi.RegisterOutputType(SwitchSnmpConfigV3ConfigUsmUserOutput{})
	pulumi.RegisterOutputType(SwitchSnmpConfigV3ConfigUsmUserArrayOutput{})
	pulumi.RegisterOutputType(SwitchSnmpConfigV3ConfigVacmOutput{})
	pulumi.RegisterOutputType(SwitchSnmpConfigV3ConfigVacmPtrOutput{})
	pulumi.RegisterOutputType(SwitchSnmpConfigV3ConfigVacmAccessOutput{})
	pulumi.RegisterOutputType(SwitchSnmpConfigV3ConfigVacmAccessArrayOutput{})
	pulumi.RegisterOutputType(SwitchSnmpConfigV3ConfigVacmAccessPrefixListOutput{})
	pulumi.RegisterOutputType(SwitchSnmpConfigV3ConfigVacmAccessPrefixListArrayOutput{})
	pulumi.RegisterOutputType(SwitchSnmpConfigV3ConfigVacmSecurityToGroupOutput{})
	pulumi.RegisterOutputType(SwitchSnmpConfigV3ConfigVacmSecurityToGroupPtrOutput{})
	pulumi.RegisterOutputType(SwitchSnmpConfigV3ConfigVacmSecurityToGroupContentOutput{})
	pulumi.RegisterOutputType(SwitchSnmpConfigV3ConfigVacmSecurityToGroupContentArrayOutput{})
	pulumi.RegisterOutputType(SwitchSnmpConfigViewOutput{})
	pulumi.RegisterOutputType(SwitchSnmpConfigViewArrayOutput{})
	pulumi.RegisterOutputType(SwitchStpConfigOutput{})
	pulumi.RegisterOutputType(SwitchStpConfigPtrOutput{})
	pulumi.RegisterOutputType(SwitchSwitchMgmtOutput{})
	pulumi.RegisterOutputType(SwitchSwitchMgmtPtrOutput{})
	pulumi.RegisterOutputType(SwitchSwitchMgmtLocalAccountsOutput{})
	pulumi.RegisterOutputType(SwitchSwitchMgmtLocalAccountsMapOutput{})
	pulumi.RegisterOutputType(SwitchSwitchMgmtProtectReOutput{})
	pulumi.RegisterOutputType(SwitchSwitchMgmtProtectRePtrOutput{})
	pulumi.RegisterOutputType(SwitchSwitchMgmtProtectReCustomOutput{})
	pulumi.RegisterOutputType(SwitchSwitchMgmtProtectReCustomArrayOutput{})
	pulumi.RegisterOutputType(SwitchSwitchMgmtTacacsOutput{})
	pulumi.RegisterOutputType(SwitchSwitchMgmtTacacsPtrOutput{})
	pulumi.RegisterOutputType(SwitchSwitchMgmtTacacsAcctServerOutput{})
	pulumi.RegisterOutputType(SwitchSwitchMgmtTacacsAcctServerArrayOutput{})
	pulumi.RegisterOutputType(SwitchSwitchMgmtTacacsTacplusServerOutput{})
	pulumi.RegisterOutputType(SwitchSwitchMgmtTacacsTacplusServerArrayOutput{})
	pulumi.RegisterOutputType(SwitchVirtualChassisOutput{})
	pulumi.RegisterOutputType(SwitchVirtualChassisPtrOutput{})
	pulumi.RegisterOutputType(SwitchVirtualChassisMemberOutput{})
	pulumi.RegisterOutputType(SwitchVirtualChassisMemberArrayOutput{})
	pulumi.RegisterOutputType(SwitchVrfConfigOutput{})
	pulumi.RegisterOutputType(SwitchVrfConfigPtrOutput{})
	pulumi.RegisterOutputType(SwitchVrfInstancesOutput{})
	pulumi.RegisterOutputType(SwitchVrfInstancesMapOutput{})
	pulumi.RegisterOutputType(SwitchVrfInstancesExtraRoutes6Output{})
	pulumi.RegisterOutputType(SwitchVrfInstancesExtraRoutes6MapOutput{})
	pulumi.RegisterOutputType(SwitchVrfInstancesExtraRoutesOutput{})
	pulumi.RegisterOutputType(SwitchVrfInstancesExtraRoutesMapOutput{})
	pulumi.RegisterOutputType(SwitchVrrpConfigOutput{})
	pulumi.RegisterOutputType(SwitchVrrpConfigPtrOutput{})
	pulumi.RegisterOutputType(SwitchVrrpConfigGroupsOutput{})
	pulumi.RegisterOutputType(SwitchVrrpConfigGroupsMapOutput{})
	pulumi.RegisterOutputType(BaseLatlngOutput{})
	pulumi.RegisterOutputType(BaseLatlngPtrOutput{})
	pulumi.RegisterOutputType(GetApStatsDeviceApStatOutput{})
	pulumi.RegisterOutputType(GetApStatsDeviceApStatArrayOutput{})
	pulumi.RegisterOutputType(GetApStatsDeviceApStatAutoPlacementOutput{})
	pulumi.RegisterOutputType(GetApStatsDeviceApStatAutoPlacementInfoOutput{})
	pulumi.RegisterOutputType(GetApStatsDeviceApStatAutoPlacementInfoProbabilitySurfaceOutput{})
	pulumi.RegisterOutputType(GetApStatsDeviceApStatAutoUpgradeStatOutput{})
	pulumi.RegisterOutputType(GetApStatsDeviceApStatBleStatOutput{})
	pulumi.RegisterOutputType(GetApStatsDeviceApStatEnvStatOutput{})
	pulumi.RegisterOutputType(GetApStatsDeviceApStatEslStatOutput{})
	pulumi.RegisterOutputType(GetApStatsDeviceApStatFwupdateOutput{})
	pulumi.RegisterOutputType(GetApStatsDeviceApStatGpsOutput{})
	pulumi.RegisterOutputType(GetApStatsDeviceApStatIotStatOutput{})
	pulumi.RegisterOutputType(GetApStatsDeviceApStatIotStatMapOutput{})
	pulumi.RegisterOutputType(GetApStatsDeviceApStatIpConfigOutput{})
	pulumi.RegisterOutputType(GetApStatsDeviceApStatIpStatOutput{})
	pulumi.RegisterOutputType(GetApStatsDeviceApStatL2tpStatOutput{})
	pulumi.RegisterOutputType(GetApStatsDeviceApStatL2tpStatMapOutput{})
	pulumi.RegisterOutputType(GetApStatsDeviceApStatL2tpStatSessionOutput{})
	pulumi.RegisterOutputType(GetApStatsDeviceApStatL2tpStatSessionArrayOutput{})
	pulumi.RegisterOutputType(GetApStatsDeviceApStatLastTroubleOutput{})
	pulumi.RegisterOutputType(GetApStatsDeviceApStatLedOutput{})
	pulumi.RegisterOutputType(GetApStatsDeviceApStatLldpStatOutput{})
	pulumi.RegisterOutputType(GetApStatsDeviceApStatMeshDownlinksOutput{})
	pulumi.RegisterOutputType(GetApStatsDeviceApStatMeshDownlinksMapOutput{})
	pulumi.RegisterOutputType(GetApStatsDeviceApStatMeshUplinkOutput{})
	pulumi.RegisterOutputType(GetApStatsDeviceApStatPortStatOutput{})
	pulumi.RegisterOutputType(GetApStatsDeviceApStatPortStatMapOutput{})
	pulumi.RegisterOutputType(GetApStatsDeviceApStatRadioStatOutput{})
	pulumi.RegisterOutputType(GetApStatsDeviceApStatRadioStatBand24Output{})
	pulumi.RegisterOutputType(GetApStatsDeviceApStatRadioStatBand5Output{})
	pulumi.RegisterOutputType(GetApStatsDeviceApStatRadioStatBand6Output{})
	pulumi.RegisterOutputType(GetApStatsDeviceApStatSwitchRedundancyOutput{})
	pulumi.RegisterOutputType(GetApStatsDeviceApStatUsbStatOutput{})
	pulumi.RegisterOutputType(GetGatewayStatsDeviceGatewayStatOutput{})
	pulumi.RegisterOutputType(GetGatewayStatsDeviceGatewayStatArrayOutput{})
	pulumi.RegisterOutputType(GetGatewayStatsDeviceGatewayStatApRedundancyOutput{})
	pulumi.RegisterOutputType(GetGatewayStatsDeviceGatewayStatApRedundancyModulesOutput{})
	pulumi.RegisterOutputType(GetGatewayStatsDeviceGatewayStatApRedundancyModulesMapOutput{})
	pulumi.RegisterOutputType(GetGatewayStatsDeviceGatewayStatArpTableStatsOutput{})
	pulumi.RegisterOutputType(GetGatewayStatsDeviceGatewayStatBgpPeerOutput{})
	pulumi.RegisterOutputType(GetGatewayStatsDeviceGatewayStatBgpPeerArrayOutput{})
	pulumi.RegisterOutputType(GetGatewayStatsDeviceGatewayStatClusterConfigOutput{})
	pulumi.RegisterOutputType(GetGatewayStatsDeviceGatewayStatClusterConfigControlLinkInfoOutput{})
	pulumi.RegisterOutputType(GetGatewayStatsDeviceGatewayStatClusterConfigEthernetConnectionOutput{})
	pulumi.RegisterOutputType(GetGatewayStatsDeviceGatewayStatClusterConfigEthernetConnectionArrayOutput{})
	pulumi.RegisterOutputType(GetGatewayStatsDeviceGatewayStatClusterConfigFabricLinkInfoOutput{})
	pulumi.RegisterOutputType(GetGatewayStatsDeviceGatewayStatClusterConfigRedundancyGroupInformationOutput{})
	pulumi.RegisterOutputType(GetGatewayStatsDeviceGatewayStatClusterConfigRedundancyGroupInformationArrayOutput{})
	pulumi.RegisterOutputType(GetGatewayStatsDeviceGatewayStatClusterStatOutput{})
	pulumi.RegisterOutputType(GetGatewayStatsDeviceGatewayStatCpu2StatOutput{})
	pulumi.RegisterOutputType(GetGatewayStatsDeviceGatewayStatCpuStatOutput{})
	pulumi.RegisterOutputType(GetGatewayStatsDeviceGatewayStatDhcpd2StatOutput{})
	pulumi.RegisterOutputType(GetGatewayStatsDeviceGatewayStatDhcpd2StatMapOutput{})
	pulumi.RegisterOutputType(GetGatewayStatsDeviceGatewayStatDhcpdStatOutput{})
	pulumi.RegisterOutputType(GetGatewayStatsDeviceGatewayStatDhcpdStatMapOutput{})
	pulumi.RegisterOutputType(GetGatewayStatsDeviceGatewayStatFwupdateOutput{})
	pulumi.RegisterOutputType(GetGatewayStatsDeviceGatewayStatIf2StatOutput{})
	pulumi.RegisterOutputType(GetGatewayStatsDeviceGatewayStatIf2StatMapOutput{})
	pulumi.RegisterOutputType(GetGatewayStatsDeviceGatewayStatIf2StatServpInfoOutput{})
	pulumi.RegisterOutputType(GetGatewayStatsDeviceGatewayStatIfStatOutput{})
	pulumi.RegisterOutputType(GetGatewayStatsDeviceGatewayStatIfStatMapOutput{})
	pulumi.RegisterOutputType(GetGatewayStatsDeviceGatewayStatIfStatServpInfoOutput{})
	pulumi.RegisterOutputType(GetGatewayStatsDeviceGatewayStatIp2StatOutput{})
	pulumi.RegisterOutputType(GetGatewayStatsDeviceGatewayStatIpStatOutput{})
	pulumi.RegisterOutputType(GetGatewayStatsDeviceGatewayStatMemory2StatOutput{})
	pulumi.RegisterOutputType(GetGatewayStatsDeviceGatewayStatMemoryStatOutput{})
	pulumi.RegisterOutputType(GetGatewayStatsDeviceGatewayStatModule2StatOutput{})
	pulumi.RegisterOutputType(GetGatewayStatsDeviceGatewayStatModule2StatArrayOutput{})
	pulumi.RegisterOutputType(GetGatewayStatsDeviceGatewayStatModule2StatFanOutput{})
	pulumi.RegisterOutputType(GetGatewayStatsDeviceGatewayStatModule2StatFanArrayOutput{})
	pulumi.RegisterOutputType(GetGatewayStatsDeviceGatewayStatModule2StatPoeOutput{})
	pulumi.RegisterOutputType(GetGatewayStatsDeviceGatewayStatModule2StatPsusOutput{})
	pulumi.RegisterOutputType(GetGatewayStatsDeviceGatewayStatModule2StatPsusArrayOutput{})
	pulumi.RegisterOutputType(GetGatewayStatsDeviceGatewayStatModule2StatTemperatureOutput{})
	pulumi.RegisterOutputType(GetGatewayStatsDeviceGatewayStatModule2StatTemperatureArrayOutput{})
	pulumi.RegisterOutputType(GetGatewayStatsDeviceGatewayStatModule2StatVcLinkOutput{})
	pulumi.RegisterOutputType(GetGatewayStatsDeviceGatewayStatModule2StatVcLinkArrayOutput{})
	pulumi.RegisterOutputType(GetGatewayStatsDeviceGatewayStatModuleStatOutput{})
	pulumi.RegisterOutputType(GetGatewayStatsDeviceGatewayStatModuleStatArrayOutput{})
	pulumi.RegisterOutputType(GetGatewayStatsDeviceGatewayStatModuleStatFanOutput{})
	pulumi.RegisterOutputType(GetGatewayStatsDeviceGatewayStatModuleStatFanArrayOutput{})
	pulumi.RegisterOutputType(GetGatewayStatsDeviceGatewayStatModuleStatPoeOutput{})
	pulumi.RegisterOutputType(GetGatewayStatsDeviceGatewayStatModuleStatPsusOutput{})
	pulumi.RegisterOutputType(GetGatewayStatsDeviceGatewayStatModuleStatPsusArrayOutput{})
	pulumi.RegisterOutputType(GetGatewayStatsDeviceGatewayStatModuleStatTemperatureOutput{})
	pulumi.RegisterOutputType(GetGatewayStatsDeviceGatewayStatModuleStatTemperatureArrayOutput{})
	pulumi.RegisterOutputType(GetGatewayStatsDeviceGatewayStatModuleStatVcLinkOutput{})
	pulumi.RegisterOutputType(GetGatewayStatsDeviceGatewayStatModuleStatVcLinkArrayOutput{})
	pulumi.RegisterOutputType(GetGatewayStatsDeviceGatewayStatPortOutput{})
	pulumi.RegisterOutputType(GetGatewayStatsDeviceGatewayStatPortArrayOutput{})
	pulumi.RegisterOutputType(GetGatewayStatsDeviceGatewayStatRouteSummaryStatsOutput{})
	pulumi.RegisterOutputType(GetGatewayStatsDeviceGatewayStatService2StatOutput{})
	pulumi.RegisterOutputType(GetGatewayStatsDeviceGatewayStatService2StatMapOutput{})
	pulumi.RegisterOutputType(GetGatewayStatsDeviceGatewayStatServiceStatOutput{})
	pulumi.RegisterOutputType(GetGatewayStatsDeviceGatewayStatServiceStatMapOutput{})
	pulumi.RegisterOutputType(GetGatewayStatsDeviceGatewayStatServiceStatusOutput{})
	pulumi.RegisterOutputType(GetGatewayStatsDeviceGatewayStatSpu2StatOutput{})
	pulumi.RegisterOutputType(GetGatewayStatsDeviceGatewayStatSpu2StatArrayOutput{})
	pulumi.RegisterOutputType(GetGatewayStatsDeviceGatewayStatSpuStatOutput{})
	pulumi.RegisterOutputType(GetGatewayStatsDeviceGatewayStatSpuStatArrayOutput{})
	pulumi.RegisterOutputType(GetGatewayStatsDeviceGatewayStatTunnelOutput{})
	pulumi.RegisterOutputType(GetGatewayStatsDeviceGatewayStatTunnelArrayOutput{})
	pulumi.RegisterOutputType(GetGatewayStatsDeviceGatewayStatVpnPeerOutput{})
	pulumi.RegisterOutputType(GetGatewayStatsDeviceGatewayStatVpnPeerArrayOutput{})
	pulumi.RegisterOutputType(GetSwitchStatsDeviceSwitchStatOutput{})
	pulumi.RegisterOutputType(GetSwitchStatsDeviceSwitchStatArrayOutput{})
	pulumi.RegisterOutputType(GetSwitchStatsDeviceSwitchStatApRedundancyOutput{})
	pulumi.RegisterOutputType(GetSwitchStatsDeviceSwitchStatApRedundancyModulesOutput{})
	pulumi.RegisterOutputType(GetSwitchStatsDeviceSwitchStatApRedundancyModulesMapOutput{})
	pulumi.RegisterOutputType(GetSwitchStatsDeviceSwitchStatArpTableStatsOutput{})
	pulumi.RegisterOutputType(GetSwitchStatsDeviceSwitchStatClientOutput{})
	pulumi.RegisterOutputType(GetSwitchStatsDeviceSwitchStatClientArrayOutput{})
	pulumi.RegisterOutputType(GetSwitchStatsDeviceSwitchStatClientsStatsOutput{})
	pulumi.RegisterOutputType(GetSwitchStatsDeviceSwitchStatClientsStatsTotalOutput{})
	pulumi.RegisterOutputType(GetSwitchStatsDeviceSwitchStatCpuStatOutput{})
	pulumi.RegisterOutputType(GetSwitchStatsDeviceSwitchStatDhcpdStatOutput{})
	pulumi.RegisterOutputType(GetSwitchStatsDeviceSwitchStatDhcpdStatMapOutput{})
	pulumi.RegisterOutputType(GetSwitchStatsDeviceSwitchStatFwupdateOutput{})
	pulumi.RegisterOutputType(GetSwitchStatsDeviceSwitchStatIfStatOutput{})
	pulumi.RegisterOutputType(GetSwitchStatsDeviceSwitchStatIfStatMapOutput{})
	pulumi.RegisterOutputType(GetSwitchStatsDeviceSwitchStatIfStatServpInfoOutput{})
	pulumi.RegisterOutputType(GetSwitchStatsDeviceSwitchStatIpStatOutput{})
	pulumi.RegisterOutputType(GetSwitchStatsDeviceSwitchStatLastTroubleOutput{})
	pulumi.RegisterOutputType(GetSwitchStatsDeviceSwitchStatMacTableStatsOutput{})
	pulumi.RegisterOutputType(GetSwitchStatsDeviceSwitchStatMemoryStatOutput{})
	pulumi.RegisterOutputType(GetSwitchStatsDeviceSwitchStatModuleStatOutput{})
	pulumi.RegisterOutputType(GetSwitchStatsDeviceSwitchStatModuleStatArrayOutput{})
	pulumi.RegisterOutputType(GetSwitchStatsDeviceSwitchStatModuleStatCpuStatOutput{})
	pulumi.RegisterOutputType(GetSwitchStatsDeviceSwitchStatModuleStatErrorOutput{})
	pulumi.RegisterOutputType(GetSwitchStatsDeviceSwitchStatModuleStatErrorArrayOutput{})
	pulumi.RegisterOutputType(GetSwitchStatsDeviceSwitchStatModuleStatFanOutput{})
	pulumi.RegisterOutputType(GetSwitchStatsDeviceSwitchStatModuleStatFanArrayOutput{})
	pulumi.RegisterOutputType(GetSwitchStatsDeviceSwitchStatModuleStatPicOutput{})
	pulumi.RegisterOutputType(GetSwitchStatsDeviceSwitchStatModuleStatPicArrayOutput{})
	pulumi.RegisterOutputType(GetSwitchStatsDeviceSwitchStatModuleStatPicPortGroupOutput{})
	pulumi.RegisterOutputType(GetSwitchStatsDeviceSwitchStatModuleStatPicPortGroupArrayOutput{})
	pulumi.RegisterOutputType(GetSwitchStatsDeviceSwitchStatModuleStatPoeOutput{})
	pulumi.RegisterOutputType(GetSwitchStatsDeviceSwitchStatModuleStatPsusOutput{})
	pulumi.RegisterOutputType(GetSwitchStatsDeviceSwitchStatModuleStatPsusArrayOutput{})
	pulumi.RegisterOutputType(GetSwitchStatsDeviceSwitchStatModuleStatTemperatureOutput{})
	pulumi.RegisterOutputType(GetSwitchStatsDeviceSwitchStatModuleStatTemperatureArrayOutput{})
	pulumi.RegisterOutputType(GetSwitchStatsDeviceSwitchStatModuleStatVcLinkOutput{})
	pulumi.RegisterOutputType(GetSwitchStatsDeviceSwitchStatModuleStatVcLinkArrayOutput{})
	pulumi.RegisterOutputType(GetSwitchStatsDeviceSwitchStatPortOutput{})
	pulumi.RegisterOutputType(GetSwitchStatsDeviceSwitchStatPortArrayOutput{})
	pulumi.RegisterOutputType(GetSwitchStatsDeviceSwitchStatRouteSummaryStatsOutput{})
	pulumi.RegisterOutputType(GetSwitchStatsDeviceSwitchStatServiceStatOutput{})
	pulumi.RegisterOutputType(GetSwitchStatsDeviceSwitchStatServiceStatMapOutput{})
	pulumi.RegisterOutputType(GetSwitchStatsDeviceSwitchStatVcSetupInfoOutput{})
	pulumi.RegisterOutputType(GetVersionsDeviceVersionOutput{})
	pulumi.RegisterOutputType(GetVersionsDeviceVersionArrayOutput{})
}
