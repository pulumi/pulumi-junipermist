// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package org

import (
	"fmt"

	"github.com/blang/semver"
	"github.com/pulumi/pulumi-junipermist/sdk/go/junipermist/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type module struct {
	version semver.Version
}

func (m *module) Version() semver.Version {
	return m.version
}

func (m *module) Construct(ctx *pulumi.Context, name, typ, urn string) (r pulumi.Resource, err error) {
	switch typ {
	case "junipermist:org/base:base":
		r = &Base{}
	case "junipermist:org/deviceprofileAp:DeviceprofileAp":
		r = &DeviceprofileAp{}
	case "junipermist:org/deviceprofileAssign:DeviceprofileAssign":
		r = &DeviceprofileAssign{}
	case "junipermist:org/deviceprofileGateway:DeviceprofileGateway":
		r = &DeviceprofileGateway{}
	case "junipermist:org/gatewaytemplate:Gatewaytemplate":
		r = &Gatewaytemplate{}
	case "junipermist:org/idpprofile:Idpprofile":
		r = &Idpprofile{}
	case "junipermist:org/inventory:Inventory":
		r = &Inventory{}
	case "junipermist:org/nacrule:Nacrule":
		r = &Nacrule{}
	case "junipermist:org/nactag:Nactag":
		r = &Nactag{}
	case "junipermist:org/network:Network":
		r = &Network{}
	case "junipermist:org/networktemplate:Networktemplate":
		r = &Networktemplate{}
	case "junipermist:org/rftemplate:Rftemplate":
		r = &Rftemplate{}
	case "junipermist:org/service:Service":
		r = &Service{}
	case "junipermist:org/servicepolicy:Servicepolicy":
		r = &Servicepolicy{}
	case "junipermist:org/setting:Setting":
		r = &Setting{}
	case "junipermist:org/sitegroup:Sitegroup":
		r = &Sitegroup{}
	case "junipermist:org/vpn:Vpn":
		r = &Vpn{}
	case "junipermist:org/wlan:Wlan":
		r = &Wlan{}
	case "junipermist:org/wlantemplate:Wlantemplate":
		r = &Wlantemplate{}
	case "junipermist:org/wxrule:Wxrule":
		r = &Wxrule{}
	case "junipermist:org/wxtag:Wxtag":
		r = &Wxtag{}
	default:
		return nil, fmt.Errorf("unknown resource type: %s", typ)
	}

	err = ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return
}

func init() {
	version, err := internal.PkgVersion()
	if err != nil {
		version = semver.Version{Major: 1}
	}
	pulumi.RegisterResourceModule(
		"junipermist",
		"org/base",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"junipermist",
		"org/deviceprofileAp",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"junipermist",
		"org/deviceprofileAssign",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"junipermist",
		"org/deviceprofileGateway",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"junipermist",
		"org/gatewaytemplate",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"junipermist",
		"org/idpprofile",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"junipermist",
		"org/inventory",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"junipermist",
		"org/nacrule",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"junipermist",
		"org/nactag",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"junipermist",
		"org/network",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"junipermist",
		"org/networktemplate",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"junipermist",
		"org/rftemplate",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"junipermist",
		"org/service",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"junipermist",
		"org/servicepolicy",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"junipermist",
		"org/setting",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"junipermist",
		"org/sitegroup",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"junipermist",
		"org/vpn",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"junipermist",
		"org/wlan",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"junipermist",
		"org/wlantemplate",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"junipermist",
		"org/wxrule",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"junipermist",
		"org/wxtag",
		&module{version},
	)
}
