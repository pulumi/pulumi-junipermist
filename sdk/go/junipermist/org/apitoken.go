// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package org

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-junipermist/sdk/go/junipermist/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource manages Org API Tokens.
//
// An Org API token is a unique identifier used by an application to authenticate and access the Mist APIs. These tokens are used to authenticate requests made to the API server and ensure secure access to the API. They are not bound to any specific user and provide access to the organization as a whole.
// Organization tokens support different privileges and can only be used for the specific organization they are generated for.
// Rate limiting is done on an individual token basis, so if one token reaches its rate limit, it does not impact other tokens.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-junipermist/sdk/go/junipermist/org"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := org.NewApitoken(ctx, "apitoken_one", &org.ApitokenArgs{
//				OrgId: pulumi.Any(terraformTest.Id),
//				Name:  pulumi.String("apitoken_one"),
//				Privileges: org.ApitokenPrivilegeArray{
//					&org.ApitokenPrivilegeArgs{
//						Scope:   pulumi.String("site"),
//						Role:    pulumi.String("admin"),
//						Site_id: "d7c8364e-xxxx-xxxx-xxxx-37eff0475b03",
//					},
//					&org.ApitokenPrivilegeArgs{
//						Scope:   pulumi.String("site"),
//						Role:    pulumi.String("read"),
//						Site_id: "08f8851b-xxxx-xxxx-xxxx-9ebb5aa62de4",
//					},
//				},
//				SrcIps: pulumi.StringArray{
//					pulumi.String("1.2.3.4/32"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type Apitoken struct {
	pulumi.CustomResourceState

	// email of the token creator / null if creator is deleted
	CreatedBy pulumi.StringOutput `pulumi:"createdBy"`
	Key       pulumi.StringOutput `pulumi:"key"`
	// Name of the token
	Name  pulumi.StringOutput `pulumi:"name"`
	OrgId pulumi.StringOutput `pulumi:"orgId"`
	// List of privileges the token has on the orgs/sites
	Privileges ApitokenPrivilegeArrayOutput `pulumi:"privileges"`
	// List of allowed IP addresses from where the token can be used from. At most 10 IP addresses can be specified, cannot be changed once the API Token is created.
	SrcIps pulumi.StringArrayOutput `pulumi:"srcIps"`
}

// NewApitoken registers a new resource with the given unique name, arguments, and options.
func NewApitoken(ctx *pulumi.Context,
	name string, args *ApitokenArgs, opts ...pulumi.ResourceOption) (*Apitoken, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.OrgId == nil {
		return nil, errors.New("invalid value for required argument 'OrgId'")
	}
	if args.Privileges == nil {
		return nil, errors.New("invalid value for required argument 'Privileges'")
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"key",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Apitoken
	err := ctx.RegisterResource("junipermist:org/apitoken:Apitoken", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetApitoken gets an existing Apitoken resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetApitoken(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ApitokenState, opts ...pulumi.ResourceOption) (*Apitoken, error) {
	var resource Apitoken
	err := ctx.ReadResource("junipermist:org/apitoken:Apitoken", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Apitoken resources.
type apitokenState struct {
	// email of the token creator / null if creator is deleted
	CreatedBy *string `pulumi:"createdBy"`
	Key       *string `pulumi:"key"`
	// Name of the token
	Name  *string `pulumi:"name"`
	OrgId *string `pulumi:"orgId"`
	// List of privileges the token has on the orgs/sites
	Privileges []ApitokenPrivilege `pulumi:"privileges"`
	// List of allowed IP addresses from where the token can be used from. At most 10 IP addresses can be specified, cannot be changed once the API Token is created.
	SrcIps []string `pulumi:"srcIps"`
}

type ApitokenState struct {
	// email of the token creator / null if creator is deleted
	CreatedBy pulumi.StringPtrInput
	Key       pulumi.StringPtrInput
	// Name of the token
	Name  pulumi.StringPtrInput
	OrgId pulumi.StringPtrInput
	// List of privileges the token has on the orgs/sites
	Privileges ApitokenPrivilegeArrayInput
	// List of allowed IP addresses from where the token can be used from. At most 10 IP addresses can be specified, cannot be changed once the API Token is created.
	SrcIps pulumi.StringArrayInput
}

func (ApitokenState) ElementType() reflect.Type {
	return reflect.TypeOf((*apitokenState)(nil)).Elem()
}

type apitokenArgs struct {
	// Name of the token
	Name  *string `pulumi:"name"`
	OrgId string  `pulumi:"orgId"`
	// List of privileges the token has on the orgs/sites
	Privileges []ApitokenPrivilege `pulumi:"privileges"`
	// List of allowed IP addresses from where the token can be used from. At most 10 IP addresses can be specified, cannot be changed once the API Token is created.
	SrcIps []string `pulumi:"srcIps"`
}

// The set of arguments for constructing a Apitoken resource.
type ApitokenArgs struct {
	// Name of the token
	Name  pulumi.StringPtrInput
	OrgId pulumi.StringInput
	// List of privileges the token has on the orgs/sites
	Privileges ApitokenPrivilegeArrayInput
	// List of allowed IP addresses from where the token can be used from. At most 10 IP addresses can be specified, cannot be changed once the API Token is created.
	SrcIps pulumi.StringArrayInput
}

func (ApitokenArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*apitokenArgs)(nil)).Elem()
}

type ApitokenInput interface {
	pulumi.Input

	ToApitokenOutput() ApitokenOutput
	ToApitokenOutputWithContext(ctx context.Context) ApitokenOutput
}

func (*Apitoken) ElementType() reflect.Type {
	return reflect.TypeOf((**Apitoken)(nil)).Elem()
}

func (i *Apitoken) ToApitokenOutput() ApitokenOutput {
	return i.ToApitokenOutputWithContext(context.Background())
}

func (i *Apitoken) ToApitokenOutputWithContext(ctx context.Context) ApitokenOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApitokenOutput)
}

// ApitokenArrayInput is an input type that accepts ApitokenArray and ApitokenArrayOutput values.
// You can construct a concrete instance of `ApitokenArrayInput` via:
//
//	ApitokenArray{ ApitokenArgs{...} }
type ApitokenArrayInput interface {
	pulumi.Input

	ToApitokenArrayOutput() ApitokenArrayOutput
	ToApitokenArrayOutputWithContext(context.Context) ApitokenArrayOutput
}

type ApitokenArray []ApitokenInput

func (ApitokenArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Apitoken)(nil)).Elem()
}

func (i ApitokenArray) ToApitokenArrayOutput() ApitokenArrayOutput {
	return i.ToApitokenArrayOutputWithContext(context.Background())
}

func (i ApitokenArray) ToApitokenArrayOutputWithContext(ctx context.Context) ApitokenArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApitokenArrayOutput)
}

// ApitokenMapInput is an input type that accepts ApitokenMap and ApitokenMapOutput values.
// You can construct a concrete instance of `ApitokenMapInput` via:
//
//	ApitokenMap{ "key": ApitokenArgs{...} }
type ApitokenMapInput interface {
	pulumi.Input

	ToApitokenMapOutput() ApitokenMapOutput
	ToApitokenMapOutputWithContext(context.Context) ApitokenMapOutput
}

type ApitokenMap map[string]ApitokenInput

func (ApitokenMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Apitoken)(nil)).Elem()
}

func (i ApitokenMap) ToApitokenMapOutput() ApitokenMapOutput {
	return i.ToApitokenMapOutputWithContext(context.Background())
}

func (i ApitokenMap) ToApitokenMapOutputWithContext(ctx context.Context) ApitokenMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApitokenMapOutput)
}

type ApitokenOutput struct{ *pulumi.OutputState }

func (ApitokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Apitoken)(nil)).Elem()
}

func (o ApitokenOutput) ToApitokenOutput() ApitokenOutput {
	return o
}

func (o ApitokenOutput) ToApitokenOutputWithContext(ctx context.Context) ApitokenOutput {
	return o
}

// email of the token creator / null if creator is deleted
func (o ApitokenOutput) CreatedBy() pulumi.StringOutput {
	return o.ApplyT(func(v *Apitoken) pulumi.StringOutput { return v.CreatedBy }).(pulumi.StringOutput)
}

func (o ApitokenOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v *Apitoken) pulumi.StringOutput { return v.Key }).(pulumi.StringOutput)
}

// Name of the token
func (o ApitokenOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Apitoken) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o ApitokenOutput) OrgId() pulumi.StringOutput {
	return o.ApplyT(func(v *Apitoken) pulumi.StringOutput { return v.OrgId }).(pulumi.StringOutput)
}

// List of privileges the token has on the orgs/sites
func (o ApitokenOutput) Privileges() ApitokenPrivilegeArrayOutput {
	return o.ApplyT(func(v *Apitoken) ApitokenPrivilegeArrayOutput { return v.Privileges }).(ApitokenPrivilegeArrayOutput)
}

// List of allowed IP addresses from where the token can be used from. At most 10 IP addresses can be specified, cannot be changed once the API Token is created.
func (o ApitokenOutput) SrcIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Apitoken) pulumi.StringArrayOutput { return v.SrcIps }).(pulumi.StringArrayOutput)
}

type ApitokenArrayOutput struct{ *pulumi.OutputState }

func (ApitokenArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Apitoken)(nil)).Elem()
}

func (o ApitokenArrayOutput) ToApitokenArrayOutput() ApitokenArrayOutput {
	return o
}

func (o ApitokenArrayOutput) ToApitokenArrayOutputWithContext(ctx context.Context) ApitokenArrayOutput {
	return o
}

func (o ApitokenArrayOutput) Index(i pulumi.IntInput) ApitokenOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Apitoken {
		return vs[0].([]*Apitoken)[vs[1].(int)]
	}).(ApitokenOutput)
}

type ApitokenMapOutput struct{ *pulumi.OutputState }

func (ApitokenMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Apitoken)(nil)).Elem()
}

func (o ApitokenMapOutput) ToApitokenMapOutput() ApitokenMapOutput {
	return o
}

func (o ApitokenMapOutput) ToApitokenMapOutputWithContext(ctx context.Context) ApitokenMapOutput {
	return o
}

func (o ApitokenMapOutput) MapIndex(k pulumi.StringInput) ApitokenOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Apitoken {
		return vs[0].(map[string]*Apitoken)[vs[1].(string)]
	}).(ApitokenOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ApitokenInput)(nil)).Elem(), &Apitoken{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApitokenArrayInput)(nil)).Elem(), ApitokenArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApitokenMapInput)(nil)).Elem(), ApitokenMap{})
	pulumi.RegisterOutputType(ApitokenOutput{})
	pulumi.RegisterOutputType(ApitokenArrayOutput{})
	pulumi.RegisterOutputType(ApitokenMapOutput{})
}
