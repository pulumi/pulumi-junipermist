// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package org

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-junipermist/sdk/go/junipermist/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Org Evpn Topologies
//
// EVPN allows an alternative but more efficient LAN architecture utilizing VxLAN / MP-BGP to separate the control plane (MAC / IP Learning) from the forwarding plane.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-junipermist/sdk/go/junipermist/org"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := org.GetEvpnTopologies(ctx, &org.GetEvpnTopologiesArgs{
//				OrgId: "15fca2ac-b1a6-47cc-9953-cc6906281550",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetEvpnTopologies(ctx *pulumi.Context, args *GetEvpnTopologiesArgs, opts ...pulumi.InvokeOption) (*GetEvpnTopologiesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetEvpnTopologiesResult
	err := ctx.Invoke("junipermist:org/getEvpnTopologies:getEvpnTopologies", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getEvpnTopologies.
type GetEvpnTopologiesArgs struct {
	OrgId string `pulumi:"orgId"`
}

// A collection of values returned by getEvpnTopologies.
type GetEvpnTopologiesResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id                string                             `pulumi:"id"`
	OrgEvpnTopologies []GetEvpnTopologiesOrgEvpnTopology `pulumi:"orgEvpnTopologies"`
	OrgId             string                             `pulumi:"orgId"`
}

func GetEvpnTopologiesOutput(ctx *pulumi.Context, args GetEvpnTopologiesOutputArgs, opts ...pulumi.InvokeOption) GetEvpnTopologiesResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetEvpnTopologiesResultOutput, error) {
			args := v.(GetEvpnTopologiesArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("junipermist:org/getEvpnTopologies:getEvpnTopologies", args, GetEvpnTopologiesResultOutput{}, options).(GetEvpnTopologiesResultOutput), nil
		}).(GetEvpnTopologiesResultOutput)
}

// A collection of arguments for invoking getEvpnTopologies.
type GetEvpnTopologiesOutputArgs struct {
	OrgId pulumi.StringInput `pulumi:"orgId"`
}

func (GetEvpnTopologiesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEvpnTopologiesArgs)(nil)).Elem()
}

// A collection of values returned by getEvpnTopologies.
type GetEvpnTopologiesResultOutput struct{ *pulumi.OutputState }

func (GetEvpnTopologiesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEvpnTopologiesResult)(nil)).Elem()
}

func (o GetEvpnTopologiesResultOutput) ToGetEvpnTopologiesResultOutput() GetEvpnTopologiesResultOutput {
	return o
}

func (o GetEvpnTopologiesResultOutput) ToGetEvpnTopologiesResultOutputWithContext(ctx context.Context) GetEvpnTopologiesResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetEvpnTopologiesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetEvpnTopologiesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetEvpnTopologiesResultOutput) OrgEvpnTopologies() GetEvpnTopologiesOrgEvpnTopologyArrayOutput {
	return o.ApplyT(func(v GetEvpnTopologiesResult) []GetEvpnTopologiesOrgEvpnTopology { return v.OrgEvpnTopologies }).(GetEvpnTopologiesOrgEvpnTopologyArrayOutput)
}

func (o GetEvpnTopologiesResultOutput) OrgId() pulumi.StringOutput {
	return o.ApplyT(func(v GetEvpnTopologiesResult) string { return v.OrgId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetEvpnTopologiesResultOutput{})
}
