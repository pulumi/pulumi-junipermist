// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.JuniperMist.Outputs
{

    [OutputType]
    public sealed class GetConstWebhooksConstWebhookResult
    {
        /// <summary>
        /// supports single event per message results
        /// </summary>
        public readonly bool AllowsSingleEventPerMessage;
        /// <summary>
        /// Can be used in org webhooks, optional
        /// </summary>
        public readonly bool ForOrg;
        /// <summary>
        /// Supports webhook delivery results /api/v1/:scope/:scope*id/webhooks/:webhook*id/events/search
        /// </summary>
        public readonly bool HasDeliveryResults;
        /// <summary>
        /// Internal topic (not selectable in site/org webhooks)
        /// </summary>
        public readonly bool Internal;
        /// <summary>
        /// Webhook topic name
        /// </summary>
        public readonly string Key;

        [OutputConstructor]
        private GetConstWebhooksConstWebhookResult(
            bool allowsSingleEventPerMessage,

            bool forOrg,

            bool hasDeliveryResults,

            bool @internal,

            string key)
        {
            AllowsSingleEventPerMessage = allowsSingleEventPerMessage;
            ForOrg = forOrg;
            HasDeliveryResults = hasDeliveryResults;
            Internal = @internal;
            Key = key;
        }
    }
}
