// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.JuniperMist.Device.Outputs
{

    [OutputType]
    public sealed class GatewayOobIpConfig
    {
        /// <summary>
        /// if `type`==`static`
        /// </summary>
        public readonly string? Gateway;
        /// <summary>
        /// if `type`==`static`
        /// </summary>
        public readonly string? Ip;
        /// <summary>
        /// if `type`==`static`
        /// </summary>
        public readonly string? Netmask;
        /// <summary>
        /// for HA Cluster, node1 can have different IP Config
        /// </summary>
        public readonly Outputs.GatewayOobIpConfigNode1? Node1;
        /// <summary>
        /// enum: `dhcp`, `static`
        /// </summary>
        public readonly string? Type;
        /// <summary>
        /// if supported on the platform. If enabled, DNS will be using this routing-instance, too
        /// </summary>
        public readonly bool? UseMgmtVrf;
        /// <summary>
        /// for host-out traffic (NTP/TACPLUS/RADIUS/SYSLOG/SNMP), if alternative source network/ip is desired
        /// </summary>
        public readonly bool? UseMgmtVrfForHostOut;
        public readonly string? VlanId;

        [OutputConstructor]
        private GatewayOobIpConfig(
            string? gateway,

            string? ip,

            string? netmask,

            Outputs.GatewayOobIpConfigNode1? node1,

            string? type,

            bool? useMgmtVrf,

            bool? useMgmtVrfForHostOut,

            string? vlanId)
        {
            Gateway = gateway;
            Ip = ip;
            Netmask = netmask;
            Node1 = node1;
            Type = type;
            UseMgmtVrf = useMgmtVrf;
            UseMgmtVrfForHostOut = useMgmtVrfForHostOut;
            VlanId = vlanId;
        }
    }
}
