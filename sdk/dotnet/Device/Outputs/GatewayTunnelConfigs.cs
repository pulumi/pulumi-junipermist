// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.JuniperMist.Device.Outputs
{

    [OutputType]
    public sealed class GatewayTunnelConfigs
    {
        /// <summary>
        /// Auto Provisioning configuration for the tunne. This takes precedence over the `primary` and `secondary` nodes.
        /// </summary>
        public readonly Outputs.GatewayTunnelConfigsAutoProvision? AutoProvision;
        /// <summary>
        /// Only if `provider`==`custom-ipsec`. Must be between 180 and 86400
        /// </summary>
        public readonly int? IkeLifetime;
        /// <summary>
        /// Only if `provider`==`custom-ipsec`. enum: `aggressive`, `main`
        /// </summary>
        public readonly string? IkeMode;
        /// <summary>
        /// If `provider`==`custom-ipsec`
        /// </summary>
        public readonly ImmutableArray<Outputs.GatewayTunnelConfigsIkeProposal> IkeProposals;
        /// <summary>
        /// Only if `provider`==`custom-ipsec`. Must be between 180 and 86400
        /// </summary>
        public readonly int? IpsecLifetime;
        /// <summary>
        /// Only if  `provider`==`custom-ipsec`
        /// </summary>
        public readonly ImmutableArray<Outputs.GatewayTunnelConfigsIpsecProposal> IpsecProposals;
        /// <summary>
        /// Required if `provider`==`zscaler-ipsec`, `provider`==`jse-ipsec` or `provider`==`custom-ipsec`
        /// </summary>
        public readonly string? LocalId;
        /// <summary>
        /// List of Local protected subnet for policy-based IPSec negotiation
        /// </summary>
        public readonly ImmutableArray<string> LocalSubnets;
        /// <summary>
        /// Required if `provider`==`zscaler-gre`, `provider`==`jse-ipsec`. enum: `active-active`, `active-standby`
        /// </summary>
        public readonly string? Mode;
        /// <summary>
        /// If `provider`==`custom-ipsec` or `provider`==`prisma-ipsec`, networks reachable via this tunnel
        /// </summary>
        public readonly ImmutableArray<string> Networks;
        /// <summary>
        /// Only if `provider`==`zscaler-ipsec`, `provider`==`jse-ipsec` or `provider`==`custom-ipsec`
        /// </summary>
        public readonly Outputs.GatewayTunnelConfigsPrimary? Primary;
        /// <summary>
        /// Only if `provider`==`custom-ipsec`
        /// </summary>
        public readonly Outputs.GatewayTunnelConfigsProbe? Probe;
        /// <summary>
        /// Only if `provider`==`custom-ipsec`. enum: `gre`, `ipsec`
        /// </summary>
        public readonly string? Protocol;
        /// <summary>
        /// Only if `auto_provision.enabled`==`false`. enum: `custom-ipsec`, `custom-gre`, `jse-ipsec`, `prisma-ipsec`, `zscaler-gre`, `zscaler-ipsec`
        /// </summary>
        public readonly string? Provider;
        /// <summary>
        /// Required if `provider`==`zscaler-ipsec`, `provider`==`jse-ipsec` or `provider`==`custom-ipsec`
        /// </summary>
        public readonly string? Psk;
        /// <summary>
        /// List of Remote protected subnet for policy-based IPSec negotiation
        /// </summary>
        public readonly ImmutableArray<string> RemoteSubnets;
        /// <summary>
        /// Only if `provider`==`zscaler-ipsec`, `provider`==`jse-ipsec` or `provider`==`custom-ipsec`
        /// </summary>
        public readonly Outputs.GatewayTunnelConfigsSecondary? Secondary;
        /// <summary>
        /// Only if `provider`==`custom-gre` or `provider`==`custom-ipsec`. enum: `1`, `2`
        /// </summary>
        public readonly string? Version;

        [OutputConstructor]
        private GatewayTunnelConfigs(
            Outputs.GatewayTunnelConfigsAutoProvision? autoProvision,

            int? ikeLifetime,

            string? ikeMode,

            ImmutableArray<Outputs.GatewayTunnelConfigsIkeProposal> ikeProposals,

            int? ipsecLifetime,

            ImmutableArray<Outputs.GatewayTunnelConfigsIpsecProposal> ipsecProposals,

            string? localId,

            ImmutableArray<string> localSubnets,

            string? mode,

            ImmutableArray<string> networks,

            Outputs.GatewayTunnelConfigsPrimary? primary,

            Outputs.GatewayTunnelConfigsProbe? probe,

            string? protocol,

            string? provider,

            string? psk,

            ImmutableArray<string> remoteSubnets,

            Outputs.GatewayTunnelConfigsSecondary? secondary,

            string? version)
        {
            AutoProvision = autoProvision;
            IkeLifetime = ikeLifetime;
            IkeMode = ikeMode;
            IkeProposals = ikeProposals;
            IpsecLifetime = ipsecLifetime;
            IpsecProposals = ipsecProposals;
            LocalId = localId;
            LocalSubnets = localSubnets;
            Mode = mode;
            Networks = networks;
            Primary = primary;
            Probe = probe;
            Protocol = protocol;
            Provider = provider;
            Psk = psk;
            RemoteSubnets = remoteSubnets;
            Secondary = secondary;
            Version = version;
        }
    }
}
