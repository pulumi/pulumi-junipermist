// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.JuniperMist.Device.Outputs
{

    [OutputType]
    public sealed class GetGatewayStatsDeviceGatewayStatTunnelResult
    {
        /// <summary>
        /// Authentication algorithm
        /// </summary>
        public readonly string AuthAlgo;
        /// <summary>
        /// Encryption algorithm
        /// </summary>
        public readonly string EncryptAlgo;
        /// <summary>
        /// IKE version
        /// </summary>
        public readonly string IkeVersion;
        /// <summary>
        /// IP Address
        /// </summary>
        public readonly string Ip;
        /// <summary>
        /// Reason of why the tunnel is down
        /// </summary>
        public readonly string LastEvent;
        /// <summary>
        /// Indicates when the port was last flapped
        /// </summary>
        public readonly double LastFlapped;
        /// <summary>
        /// Node0/node1
        /// </summary>
        public readonly string Node;
        /// <summary>
        /// Peer host
        /// </summary>
        public readonly string PeerHost;
        /// <summary>
        /// Peer ip address
        /// </summary>
        public readonly string PeerIp;
        /// <summary>
        /// enum: `Primary`, `Secondary`
        /// </summary>
        public readonly string Priority;
        /// <summary>
        /// enum: `Gre`, `Ipsec`
        /// </summary>
        public readonly string Protocol;
        /// <summary>
        /// Amount of traffic received since connection
        /// </summary>
        public readonly int RxBytes;
        /// <summary>
        /// Amount of packets received since connection
        /// </summary>
        public readonly int RxPkts;
        /// <summary>
        /// Mist Tunnel Name
        /// </summary>
        public readonly string TunnelName;
        /// <summary>
        /// Amount of traffic sent since connection
        /// </summary>
        public readonly int TxBytes;
        /// <summary>
        /// Amount of packets sent since connection
        /// </summary>
        public readonly int TxPkts;
        public readonly bool Up;
        /// <summary>
        /// Duration from first (or last) SA was established
        /// </summary>
        public readonly int Uptime;
        /// <summary>
        /// WAN interface name
        /// </summary>
        public readonly string WanName;

        [OutputConstructor]
        private GetGatewayStatsDeviceGatewayStatTunnelResult(
            string authAlgo,

            string encryptAlgo,

            string ikeVersion,

            string ip,

            string lastEvent,

            double lastFlapped,

            string node,

            string peerHost,

            string peerIp,

            string priority,

            string protocol,

            int rxBytes,

            int rxPkts,

            string tunnelName,

            int txBytes,

            int txPkts,

            bool up,

            int uptime,

            string wanName)
        {
            AuthAlgo = authAlgo;
            EncryptAlgo = encryptAlgo;
            IkeVersion = ikeVersion;
            Ip = ip;
            LastEvent = lastEvent;
            LastFlapped = lastFlapped;
            Node = node;
            PeerHost = peerHost;
            PeerIp = peerIp;
            Priority = priority;
            Protocol = protocol;
            RxBytes = rxBytes;
            RxPkts = rxPkts;
            TunnelName = tunnelName;
            TxBytes = txBytes;
            TxPkts = txPkts;
            Up = up;
            Uptime = uptime;
            WanName = wanName;
        }
    }
}
