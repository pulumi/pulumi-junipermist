// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.JuniperMist.Device.Outputs
{

    [OutputType]
    public sealed class GatewayRoutingPoliciesTermMatching
    {
        /// <summary>
        /// takes regular expression
        /// </summary>
        public readonly ImmutableArray<string> AsPaths;
        public readonly ImmutableArray<string> Communities;
        public readonly ImmutableArray<string> Networks;
        /// <summary>
        /// zero or more criteria/filter can be specified to match the term, all criteria have to be met
        /// </summary>
        public readonly ImmutableArray<string> Prefixes;
        /// <summary>
        /// `direct`, `bgp`, `osp`, `static`, `aggregate`...
        /// </summary>
        public readonly ImmutableArray<string> Protocols;
        public readonly Outputs.GatewayRoutingPoliciesTermMatchingRouteExists? RouteExists;
        /// <summary>
        /// overlay-facing criteria (used for bgp_config where via=vpn)
        /// </summary>
        public readonly ImmutableArray<string> VpnNeighborMacs;
        public readonly Outputs.GatewayRoutingPoliciesTermMatchingVpnPathSla? VpnPathSla;
        /// <summary>
        /// overlay-facing criteria (used for bgp_config where via=vpn). ordered-
        /// </summary>
        public readonly ImmutableArray<string> VpnPaths;

        [OutputConstructor]
        private GatewayRoutingPoliciesTermMatching(
            ImmutableArray<string> asPaths,

            ImmutableArray<string> communities,

            ImmutableArray<string> networks,

            ImmutableArray<string> prefixes,

            ImmutableArray<string> protocols,

            Outputs.GatewayRoutingPoliciesTermMatchingRouteExists? routeExists,

            ImmutableArray<string> vpnNeighborMacs,

            Outputs.GatewayRoutingPoliciesTermMatchingVpnPathSla? vpnPathSla,

            ImmutableArray<string> vpnPaths)
        {
            AsPaths = asPaths;
            Communities = communities;
            Networks = networks;
            Prefixes = prefixes;
            Protocols = protocols;
            RouteExists = routeExists;
            VpnNeighborMacs = vpnNeighborMacs;
            VpnPathSla = vpnPathSla;
            VpnPaths = vpnPaths;
        }
    }
}
