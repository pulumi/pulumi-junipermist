// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.JuniperMist.Device.Outputs
{

    [OutputType]
    public sealed class GetApStatsDeviceApStatLldpStatResult
    {
        public readonly string ChassisId;
        /// <summary>
        /// whether it support LLDP-MED
        /// </summary>
        public readonly bool LldpMedSupported;
        /// <summary>
        /// switch’s management address (if advertised), can be IPv4, IPv6, or MAC
        /// </summary>
        public readonly string MgmtAddr;
        public readonly ImmutableArray<string> MgmtAddrs;
        /// <summary>
        /// ge-0/0/4
        /// </summary>
        public readonly string PortDesc;
        public readonly string PortId;
        /// <summary>
        /// in mW, provided/allocated by PSE
        /// </summary>
        public readonly double PowerAllocated;
        /// <summary>
        /// in mW, total power needed by PD
        /// </summary>
        public readonly double PowerDraw;
        /// <summary>
        /// number of negotiations, if it keeps increasing, we don’t have a stable power
        /// </summary>
        public readonly int PowerRequestCount;
        /// <summary>
        /// in mW, the current power requested by PD
        /// </summary>
        public readonly double PowerRequested;
        /// <summary>
        /// description provided by switch
        /// </summary>
        public readonly string SystemDesc;
        /// <summary>
        /// name of the switch
        /// </summary>
        public readonly string SystemName;

        [OutputConstructor]
        private GetApStatsDeviceApStatLldpStatResult(
            string chassisId,

            bool lldpMedSupported,

            string mgmtAddr,

            ImmutableArray<string> mgmtAddrs,

            string portDesc,

            string portId,

            double powerAllocated,

            double powerDraw,

            int powerRequestCount,

            double powerRequested,

            string systemDesc,

            string systemName)
        {
            ChassisId = chassisId;
            LldpMedSupported = lldpMedSupported;
            MgmtAddr = mgmtAddr;
            MgmtAddrs = mgmtAddrs;
            PortDesc = portDesc;
            PortId = portId;
            PowerAllocated = powerAllocated;
            PowerDraw = powerDraw;
            PowerRequestCount = powerRequestCount;
            PowerRequested = powerRequested;
            SystemDesc = systemDesc;
            SystemName = systemName;
        }
    }
}
