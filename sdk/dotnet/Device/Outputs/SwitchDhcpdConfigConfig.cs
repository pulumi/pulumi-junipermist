// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.JuniperMist.Device.Outputs
{

    [OutputType]
    public sealed class SwitchDhcpdConfigConfig
    {
        /// <summary>
        /// If `Type`==`Server` or `Type6`==`Server` - optional, if not defined, system one will be used
        /// </summary>
        public readonly ImmutableArray<string> DnsServers;
        /// <summary>
        /// If `Type`==`Server` or `Type6`==`Server` - optional, if not defined, system one will be used
        /// </summary>
        public readonly ImmutableArray<string> DnsSuffixes;
        /// <summary>
        /// If `Type`==`Server` or `Type6`==`Server`. Property key is the MAC Address. Format is `[0-9a-f]{12}` (e.g. "5684dae9ac8b")
        /// </summary>
        public readonly ImmutableDictionary<string, Outputs.SwitchDhcpdConfigConfigFixedBindings>? FixedBindings;
        /// <summary>
        /// If `Type`==`Server`  - optional, `Ip` will be used if not provided
        /// </summary>
        public readonly string? Gateway;
        /// <summary>
        /// If `Type`==`Server`
        /// </summary>
        public readonly string? IpEnd;
        /// <summary>
        /// If `Type6`==`Server`
        /// </summary>
        public readonly string? IpEnd6;
        /// <summary>
        /// If `Type`==`Server`
        /// </summary>
        public readonly string? IpStart;
        /// <summary>
        /// If `Type6`==`Server`
        /// </summary>
        public readonly string? IpStart6;
        /// <summary>
        /// In seconds, lease time has to be between 3600 [1hr] - 604800 [1 week], default is 86400 [1 day]
        /// </summary>
        public readonly int? LeaseTime;
        /// <summary>
        /// If `Type`==`Server` or `Type6`==`Server`. Property key is the DHCP option number
        /// </summary>
        public readonly ImmutableDictionary<string, Outputs.SwitchDhcpdConfigConfigOptions>? Options;
        /// <summary>
        /// `ServerIdOverride`==`True` means the device, when acts as DHCP relay and forwards DHCP responses from DHCP server to clients, 
        /// should overwrite the Sever Identifier option (i.e. DHCP option 54) in DHCP responses with its own IP address.
        /// </summary>
        public readonly bool? ServerIdOverride;
        /// <summary>
        /// If `Type`==`Relay`
        /// </summary>
        public readonly ImmutableArray<string> Servers;
        /// <summary>
        /// If `Type6`==`Relay`
        /// </summary>
        public readonly ImmutableArray<string> Servers6s;
        /// <summary>
        /// enum: `None`, `Relay` (DHCP Relay), `Server` (DHCP Server)
        /// </summary>
        public readonly string? Type;
        /// <summary>
        /// enum: `None`, `Relay` (DHCP Relay), `Server` (DHCP Server)
        /// </summary>
        public readonly string? Type6;
        /// <summary>
        /// If `Type`==`Server` or `Type6`==`Server`. Property key is &lt;enterprise number&gt;:&lt;sub option code&gt;, with
        ///   * enterprise number: 1-65535 (https://www.iana.org/assignments/enterprise-numbers/enterprise-numbers)
        ///   * sub option code: 1-255, sub-option code'
        /// </summary>
        public readonly ImmutableDictionary<string, Outputs.SwitchDhcpdConfigConfigVendorEncapsulated>? VendorEncapsulated;

        [OutputConstructor]
        private SwitchDhcpdConfigConfig(
            ImmutableArray<string> dnsServers,

            ImmutableArray<string> dnsSuffixes,

            ImmutableDictionary<string, Outputs.SwitchDhcpdConfigConfigFixedBindings>? fixedBindings,

            string? gateway,

            string? ipEnd,

            string? ipEnd6,

            string? ipStart,

            string? ipStart6,

            int? leaseTime,

            ImmutableDictionary<string, Outputs.SwitchDhcpdConfigConfigOptions>? options,

            bool? serverIdOverride,

            ImmutableArray<string> servers,

            ImmutableArray<string> servers6s,

            string? type,

            string? type6,

            ImmutableDictionary<string, Outputs.SwitchDhcpdConfigConfigVendorEncapsulated>? vendorEncapsulated)
        {
            DnsServers = dnsServers;
            DnsSuffixes = dnsSuffixes;
            FixedBindings = fixedBindings;
            Gateway = gateway;
            IpEnd = ipEnd;
            IpEnd6 = ipEnd6;
            IpStart = ipStart;
            IpStart6 = ipStart6;
            LeaseTime = leaseTime;
            Options = options;
            ServerIdOverride = serverIdOverride;
            Servers = servers;
            Servers6s = servers6s;
            Type = type;
            Type6 = type6;
            VendorEncapsulated = vendorEncapsulated;
        }
    }
}
