// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.JuniperMist.Device.Inputs
{

    public sealed class SwitchOspfAreasNetworksArgs : global::Pulumi.ResourceArgs
    {
        [Input("authKeys")]
        private InputMap<string>? _authKeys;

        /// <summary>
        /// Required if `AuthType`==`Md5`. Property key is the key number
        /// </summary>
        public InputMap<string> AuthKeys
        {
            get => _authKeys ?? (_authKeys = new InputMap<string>());
            set => _authKeys = value;
        }

        /// <summary>
        /// Required if `AuthType`==`Password`, the password, max length is 8
        /// </summary>
        [Input("authPassword")]
        public Input<string>? AuthPassword { get; set; }

        /// <summary>
        /// auth type. enum: `Md5`, `None`, `Password`
        /// </summary>
        [Input("authType")]
        public Input<string>? AuthType { get; set; }

        [Input("bfdMinimumInterval")]
        public Input<int>? BfdMinimumInterval { get; set; }

        [Input("deadInterval")]
        public Input<int>? DeadInterval { get; set; }

        [Input("exportPolicy")]
        public Input<string>? ExportPolicy { get; set; }

        [Input("helloInterval")]
        public Input<int>? HelloInterval { get; set; }

        [Input("importPolicy")]
        public Input<string>? ImportPolicy { get; set; }

        /// <summary>
        /// interface type (nbma = non-broadcast multi-access). enum: `Broadcast`, `Nbma`, `P2mp`, `P2p`
        /// </summary>
        [Input("interfaceType")]
        public Input<string>? InterfaceType { get; set; }

        [Input("metric")]
        public Input<int>? Metric { get; set; }

        /// <summary>
        /// By default, we'll re-advertise all learned OSPF routes toward overlay
        /// </summary>
        [Input("noReadvertiseToOverlay")]
        public Input<bool>? NoReadvertiseToOverlay { get; set; }

        /// <summary>
        /// Whether to send OSPF-Hello
        /// </summary>
        [Input("passive")]
        public Input<bool>? Passive { get; set; }

        public SwitchOspfAreasNetworksArgs()
        {
        }
        public static new SwitchOspfAreasNetworksArgs Empty => new SwitchOspfAreasNetworksArgs();
    }
}
