// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.JuniperMist.Device.Inputs
{

    public sealed class SwitchRadiusConfigGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// how frequently should interim accounting be reported, 60-65535. default is 0 (use one specified in Access-Accept request from RADIUS Server). Very frequent messages can affect the performance of the radius server, 600 and up is recommended when enabled
        /// </summary>
        [Input("acctInterimInterval")]
        public Input<int>? AcctInterimInterval { get; set; }

        [Input("acctServers")]
        private InputList<Inputs.SwitchRadiusConfigAcctServerGetArgs>? _acctServers;
        public InputList<Inputs.SwitchRadiusConfigAcctServerGetArgs> AcctServers
        {
            get => _acctServers ?? (_acctServers = new InputList<Inputs.SwitchRadiusConfigAcctServerGetArgs>());
            set => _acctServers = value;
        }

        [Input("authServers")]
        private InputList<Inputs.SwitchRadiusConfigAuthServerGetArgs>? _authServers;
        public InputList<Inputs.SwitchRadiusConfigAuthServerGetArgs> AuthServers
        {
            get => _authServers ?? (_authServers = new InputList<Inputs.SwitchRadiusConfigAuthServerGetArgs>());
            set => _authServers = value;
        }

        /// <summary>
        /// radius auth session retries
        /// </summary>
        [Input("authServersRetries")]
        public Input<int>? AuthServersRetries { get; set; }

        /// <summary>
        /// radius auth session timeout
        /// </summary>
        [Input("authServersTimeout")]
        public Input<int>? AuthServersTimeout { get; set; }

        /// <summary>
        /// use `network`or `source_ip`. Which network the RADIUS server resides, if there's static IP for this network, we'd use it as source-ip
        /// </summary>
        [Input("network")]
        public Input<string>? Network { get; set; }

        /// <summary>
        /// use `network`or `source_ip`
        /// </summary>
        [Input("sourceIp")]
        public Input<string>? SourceIp { get; set; }

        public SwitchRadiusConfigGetArgs()
        {
        }
        public static new SwitchRadiusConfigGetArgs Empty => new SwitchRadiusConfigGetArgs();
    }
}
