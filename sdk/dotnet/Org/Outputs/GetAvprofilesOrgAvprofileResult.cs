// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.JuniperMist.Org.Outputs
{

    [OutputType]
    public sealed class GetAvprofilesOrgAvprofileResult
    {
        /// <summary>
        /// When the object has been created, in epoch
        /// </summary>
        public readonly double CreatedTime;
        /// <summary>
        /// enum: `block`, `permit`
        /// </summary>
        public readonly string FallbackAction;
        /// <summary>
        /// Unique ID of the object instance in the Mist Organnization
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// In KB
        /// </summary>
        public readonly int MaxFilesize;
        public readonly ImmutableArray<string> MimeWhitelists;
        /// <summary>
        /// When the object has been modified for the last time, in epoch
        /// </summary>
        public readonly double ModifiedTime;
        public readonly string Name;
        public readonly string OrgId;
        /// <summary>
        /// List of protocols to monitor. enum: `ftp`, `http`, `imap`, `pop3`, `smtp`
        /// </summary>
        public readonly ImmutableArray<string> Protocols;
        public readonly ImmutableArray<string> UrlWhitelists;

        [OutputConstructor]
        private GetAvprofilesOrgAvprofileResult(
            double createdTime,

            string fallbackAction,

            string id,

            int maxFilesize,

            ImmutableArray<string> mimeWhitelists,

            double modifiedTime,

            string name,

            string orgId,

            ImmutableArray<string> protocols,

            ImmutableArray<string> urlWhitelists)
        {
            CreatedTime = createdTime;
            FallbackAction = fallbackAction;
            Id = id;
            MaxFilesize = maxFilesize;
            MimeWhitelists = mimeWhitelists;
            ModifiedTime = modifiedTime;
            Name = name;
            OrgId = orgId;
            Protocols = protocols;
            UrlWhitelists = urlWhitelists;
        }
    }
}
