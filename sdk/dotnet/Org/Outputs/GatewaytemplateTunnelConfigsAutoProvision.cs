// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.JuniperMist.Org.Outputs
{

    [OutputType]
    public sealed class GatewaytemplateTunnelConfigsAutoProvision
    {
        /// <summary>
        /// Enable auto provisioning for the tunnel. If enabled, the `primary` and `secondary` nodes will be ignored.
        /// </summary>
        public readonly bool? Enabled;
        /// <summary>
        /// API override for POP selection
        /// </summary>
        public readonly Outputs.GatewaytemplateTunnelConfigsAutoProvisionLatlng? Latlng;
        public readonly Outputs.GatewaytemplateTunnelConfigsAutoProvisionPrimary? Primary;
        /// <summary>
        /// enum: `jse-ipsec`, `zscaler-ipsec`
        /// </summary>
        public readonly string Provider;
        /// <summary>
        /// API override for POP selection in the case user wants to override the auto discovery of remote network location and force the tunnel to use the specified peer location.
        /// </summary>
        public readonly string? Region;
        public readonly Outputs.GatewaytemplateTunnelConfigsAutoProvisionSecondary? Secondary;
        /// <summary>
        /// if `provider`==`prisma-ipsec`. By default, we'll use the location of the site to determine the optimal Remote Network location, optionally, service_connection can be considered, then we'll also consider this along with the site location. Define service_connection if the traffic is to be routed to a specific service connection. This field takes a service connection name that is configured in the Prisma cloud, Prisma Access Setup &gt; Service Connections.
        /// </summary>
        public readonly string? ServiceConnection;

        [OutputConstructor]
        private GatewaytemplateTunnelConfigsAutoProvision(
            bool? enabled,

            Outputs.GatewaytemplateTunnelConfigsAutoProvisionLatlng? latlng,

            Outputs.GatewaytemplateTunnelConfigsAutoProvisionPrimary? primary,

            string provider,

            string? region,

            Outputs.GatewaytemplateTunnelConfigsAutoProvisionSecondary? secondary,

            string? serviceConnection)
        {
            Enabled = enabled;
            Latlng = latlng;
            Primary = primary;
            Provider = provider;
            Region = region;
            Secondary = secondary;
            ServiceConnection = serviceConnection;
        }
    }
}
