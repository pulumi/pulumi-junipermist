// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.JuniperMist.Org.Outputs
{

    [OutputType]
    public sealed class InventoryDevice
    {
        /// <summary>
        /// used to claim the device to the Mist Organization and manage it. Format is `[0-9A-Z]{15}` (e.g `01234ABCDE56789`)
        /// </summary>
        public readonly string? ClaimCode;
        /// <summary>
        /// deviceprofile id if assigned, null if not assigned
        /// </summary>
        public readonly string? DeviceprofileId;
        /// <summary>
        /// hostname reported by the device
        /// </summary>
        public readonly string? Hostname;
        /// <summary>
        /// device id
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// used to managed a device already in the Mist Organization (claimed or adopted devices). Format is `[0-9a-f]{12}` (e.g `5684dae9ac8b`)
        /// </summary>
        public readonly string? Mac;
        /// <summary>
        /// device model
        /// </summary>
        public readonly string? Model;
        public readonly string? OrgId;
        /// <summary>
        /// device serial
        /// </summary>
        public readonly string? Serial;
        /// <summary>
        /// Site ID. Used to assign device to a Site
        /// </summary>
        public readonly string? SiteId;
        /// <summary>
        /// enum: `ap`, `gateway`, `switch`
        /// </summary>
        public readonly string? Type;
        /// <summary>
        /// Unclaim the device from the Mist Organization when removed from the provider inventory. Default is `false`
        /// </summary>
        public readonly bool? UnclaimWhenDestroyed;
        /// <summary>
        /// if `type`==`switch` and device part of a Virtual Chassis, MAC Address of the Virtual Chassis. if `type`==`gateway` and device part of a Cluster, MAC Address of the Cluster
        /// </summary>
        public readonly string? VcMac;

        [OutputConstructor]
        private InventoryDevice(
            string? claimCode,

            string? deviceprofileId,

            string? hostname,

            string? id,

            string? mac,

            string? model,

            string? orgId,

            string? serial,

            string? siteId,

            string? type,

            bool? unclaimWhenDestroyed,

            string? vcMac)
        {
            ClaimCode = claimCode;
            DeviceprofileId = deviceprofileId;
            Hostname = hostname;
            Id = id;
            Mac = mac;
            Model = model;
            OrgId = orgId;
            Serial = serial;
            SiteId = siteId;
            Type = type;
            UnclaimWhenDestroyed = unclaimWhenDestroyed;
            VcMac = vcMac;
        }
    }
}
