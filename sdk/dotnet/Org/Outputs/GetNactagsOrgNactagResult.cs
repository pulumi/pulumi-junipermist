// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.JuniperMist.Org.Outputs
{

    [OutputType]
    public sealed class GetNactagsOrgNactagResult
    {
        /// <summary>
        /// Can be set to true to allow the override by usermac result
        /// </summary>
        public readonly bool AllowUsermacOverride;
        /// <summary>
        /// When the object has been created, in epoch
        /// </summary>
        public readonly double CreatedTime;
        /// <summary>
        /// If `Type`==`EgressVlanNames`, list of egress vlans to return
        /// </summary>
        public readonly ImmutableArray<string> EgressVlanNames;
        public readonly string GbpTag;
        /// <summary>
        /// Unique ID of the object instance in the Mist Organization
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// if `Type`==`Match`. enum: `CertCn`, `CertIssuer`, `CertSan`, `CertSerial`, `CertSub`, `CertTemplate`, `ClientMac`, `IdpRole`, `IngressVlan`, `MdmStatus`, `NasIp`, `RadiusGroup`, `Realm`, `Ssid`, `UserName`, `UsermacLabel`
        /// </summary>
        public readonly string Match;
        /// <summary>
        /// This field is applicable only when `Type`==`Match`
        ///   * `False`: means it is sufficient to match any of the values (i.e., match-any behavior)
        ///   * `True`: means all values should be matched (i.e., match-all behavior)
        /// 
        /// 
        /// Currently it makes sense to set this field to `True` only if the `Match`==`IdpRole` or `Match`==`UsermacLabel`
        /// </summary>
        public readonly bool MatchAll;
        /// <summary>
        /// When the object has been modified for the last time, in epoch
        /// </summary>
        public readonly double ModifiedTime;
        public readonly string Name;
        public readonly string OrgId;
        /// <summary>
        /// If `Type`==`RadiusAttrs`, user can specify a list of one or more standard attributes in the field "RadiusAttrs". 
        /// It is the responsibility of the user to provide a syntactically correct string, otherwise it may not work as expected.
        /// Note that it is allowed to have more than one RadiusAttrs in the result of a given rule.
        /// </summary>
        public readonly ImmutableArray<string> RadiusAttrs;
        /// <summary>
        /// If `Type`==`RadiusGroup`
        /// </summary>
        public readonly string RadiusGroup;
        /// <summary>
        /// If `Type`==`RadiusVendorAttrs`, user can specify a list of one or more vendor-specific attributes in the field "RadiusVendorAttrs". 
        /// It is the responsibility of the user to provide a syntactically correct string, otherwise it may not work as expected.
        /// Note that it is allowed to have more than one RadiusVendorAttrs in the result of a given rule.
        /// </summary>
        public readonly ImmutableArray<string> RadiusVendorAttrs;
        /// <summary>
        /// If `Type`==`session_timeout, in seconds
        /// </summary>
        public readonly int SessionTimeout;
        /// <summary>
        /// enum: `EgressVlanNames`, `GbpTag`, `Match`, `RadiusAttrs`, `RadiusGroup`, `RadiusVendorAttrs`, `SessionTimeout`, `UsernameAttr`, `Vlan`
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// enum: `Automatic`, `Cn`, `Dns`, `Email`, `Upn`
        /// </summary>
        public readonly string UsernameAttr;
        /// <summary>
        /// If `Type`==`Match`
        /// </summary>
        public readonly ImmutableArray<string> Values;
        /// <summary>
        /// If `Type`==`Vlan`
        /// </summary>
        public readonly string Vlan;

        [OutputConstructor]
        private GetNactagsOrgNactagResult(
            bool allowUsermacOverride,

            double createdTime,

            ImmutableArray<string> egressVlanNames,

            string gbpTag,

            string id,

            string match,

            bool matchAll,

            double modifiedTime,

            string name,

            string orgId,

            ImmutableArray<string> radiusAttrs,

            string radiusGroup,

            ImmutableArray<string> radiusVendorAttrs,

            int sessionTimeout,

            string type,

            string usernameAttr,

            ImmutableArray<string> values,

            string vlan)
        {
            AllowUsermacOverride = allowUsermacOverride;
            CreatedTime = createdTime;
            EgressVlanNames = egressVlanNames;
            GbpTag = gbpTag;
            Id = id;
            Match = match;
            MatchAll = matchAll;
            ModifiedTime = modifiedTime;
            Name = name;
            OrgId = orgId;
            RadiusAttrs = radiusAttrs;
            RadiusGroup = radiusGroup;
            RadiusVendorAttrs = radiusVendorAttrs;
            SessionTimeout = sessionTimeout;
            Type = type;
            UsernameAttr = usernameAttr;
            Values = values;
            Vlan = vlan;
        }
    }
}
