// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.JuniperMist.Org.Outputs
{

    [OutputType]
    public sealed class GetEvpnTopologiesOrgEvpnTopologyEvpnOptionsResult
    {
        /// <summary>
        /// optional, for dhcp*relay, unique loopback IPs are required for ERB or IPClos where we can set option-82 server*id-overrides
        /// </summary>
        public readonly string AutoLoopbackSubnet;
        /// <summary>
        /// optional, for dhcp*relay, unique loopback IPs are required for ERB or IPClos where we can set option-82 server*id-overrides
        /// </summary>
        public readonly string AutoLoopbackSubnet6;
        /// <summary>
        /// optional, this generates router_id automatically, if specified, `router_id_prefix` is ignored
        /// </summary>
        public readonly string AutoRouterIdSubnet;
        /// <summary>
        /// optional, this generates router_id automatically, if specified, `router_id_prefix` is ignored
        /// </summary>
        public readonly string AutoRouterIdSubnet6;
        /// <summary>
        /// optional, for ERB or CLOS, you can either use esilag to upstream routers or to also be the virtual-gateway. When `routed_at` != `core`, whether to do virtual-gateway at core as well
        /// </summary>
        public readonly bool CoreAsBorder;
        public readonly Outputs.GetEvpnTopologiesOrgEvpnTopologyEvpnOptionsOverlayResult Overlay;
        /// <summary>
        /// only for by Core-Distribution architecture when `evpn_options.routed_at`==`core`. By default, JUNOS uses 00-00-5e-00-01-01 as the virtual-gateway-address's v4*mac. If enabled, 00-00-5e-00-XX-YY will be used (where XX=vlan*id/256, YY=vlan_id%256)'
        /// </summary>
        public readonly bool PerVlanVgaV4Mac;
        /// <summary>
        /// optional, where virtual-gateway should reside. enum: `core`, `distribution`, `edge`
        /// </summary>
        public readonly string RoutedAt;
        public readonly Outputs.GetEvpnTopologiesOrgEvpnTopologyEvpnOptionsUnderlayResult Underlay;
        /// <summary>
        /// optional, for EX9200 only to seggregate virtual-switches
        /// </summary>
        public readonly ImmutableDictionary<string, Outputs.GetEvpnTopologiesOrgEvpnTopologyEvpnOptionsVsInstancesResult> VsInstances;

        [OutputConstructor]
        private GetEvpnTopologiesOrgEvpnTopologyEvpnOptionsResult(
            string autoLoopbackSubnet,

            string autoLoopbackSubnet6,

            string autoRouterIdSubnet,

            string autoRouterIdSubnet6,

            bool coreAsBorder,

            Outputs.GetEvpnTopologiesOrgEvpnTopologyEvpnOptionsOverlayResult overlay,

            bool perVlanVgaV4Mac,

            string routedAt,

            Outputs.GetEvpnTopologiesOrgEvpnTopologyEvpnOptionsUnderlayResult underlay,

            ImmutableDictionary<string, Outputs.GetEvpnTopologiesOrgEvpnTopologyEvpnOptionsVsInstancesResult> vsInstances)
        {
            AutoLoopbackSubnet = autoLoopbackSubnet;
            AutoLoopbackSubnet6 = autoLoopbackSubnet6;
            AutoRouterIdSubnet = autoRouterIdSubnet;
            AutoRouterIdSubnet6 = autoRouterIdSubnet6;
            CoreAsBorder = coreAsBorder;
            Overlay = overlay;
            PerVlanVgaV4Mac = perVlanVgaV4Mac;
            RoutedAt = routedAt;
            Underlay = underlay;
            VsInstances = vsInstances;
        }
    }
}
