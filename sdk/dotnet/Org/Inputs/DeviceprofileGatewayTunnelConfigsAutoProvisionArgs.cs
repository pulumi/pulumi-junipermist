// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.JuniperMist.Org.Inputs
{

    public sealed class DeviceprofileGatewayTunnelConfigsAutoProvisionArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Enable auto provisioning for the tunnel. If enabled, the `Primary` and `Secondary` nodes will be ignored.
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        /// <summary>
        /// API override for POP selection
        /// </summary>
        [Input("latlng")]
        public Input<Inputs.DeviceprofileGatewayTunnelConfigsAutoProvisionLatlngArgs>? Latlng { get; set; }

        [Input("primary")]
        public Input<Inputs.DeviceprofileGatewayTunnelConfigsAutoProvisionPrimaryArgs>? Primary { get; set; }

        /// <summary>
        /// enum: `jse-ipsec`, `zscaler-ipsec`
        /// </summary>
        [Input("provider", required: true)]
        public Input<string> Provider { get; set; } = null!;

        /// <summary>
        /// API override for POP selection in the case user wants to override the auto discovery of remote network location and force the tunnel to use the specified peer location.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("secondary")]
        public Input<Inputs.DeviceprofileGatewayTunnelConfigsAutoProvisionSecondaryArgs>? Secondary { get; set; }

        /// <summary>
        /// if `Provider`==`prisma-ipsec`. By default, we'll use the location of the site to determine the optimal Remote Network location, optionally, ServiceConnection can be considered, then we'll also consider this along with the site location. Define ServiceConnection if the traffic is to be routed to a specific service connection. This field takes a service connection name that is configured in the Prisma cloud, Prisma Access Setup &gt; Service Connections.
        /// </summary>
        [Input("serviceConnection")]
        public Input<string>? ServiceConnection { get; set; }

        public DeviceprofileGatewayTunnelConfigsAutoProvisionArgs()
        {
        }
        public static new DeviceprofileGatewayTunnelConfigsAutoProvisionArgs Empty => new DeviceprofileGatewayTunnelConfigsAutoProvisionArgs();
    }
}
