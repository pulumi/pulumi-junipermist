// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.JuniperMist.Org
{
    /// <summary>
    /// This resource manages the Org Evpn Topology.
    /// 
    /// EVPN allows an alternative but more efficient LAN architecture utilizing VxLAN / MP-BGP to separate the control plane (MAC / IP Learning) from the forwarding plane.
    /// 
    /// &gt; To create or manage your EVPN Topology with the Mist Provider, please refer to the `How To - EVPN Topology` Guide.
    /// 
    /// ## Import
    /// 
    /// Using `pulumi import`, import `mist_org_evpn_topology` with:
    /// 
    /// EVPN Topology can be imported by specifying the org_id and the evpn_topology_id
    /// 
    /// ```sh
    /// $ pulumi import junipermist:org/evpnTopology:EvpnTopology evpn_one 17b46405-3a6d-4715-8bb4-6bb6d06f316a.d3c42998-9012-4859-9743-6b9bee475309
    /// ```
    /// </summary>
    [JuniperMistResourceType("junipermist:org/evpnTopology:EvpnTopology")]
    public partial class EvpnTopology : global::Pulumi.CustomResource
    {
        /// <summary>
        /// EVPN Options
        /// </summary>
        [Output("evpnOptions")]
        public Output<Outputs.EvpnTopologyEvpnOptions?> EvpnOptions { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("orgId")]
        public Output<string> OrgId { get; private set; } = null!;

        /// <summary>
        /// Property key is the pod number
        /// </summary>
        [Output("podNames")]
        public Output<ImmutableDictionary<string, string>> PodNames { get; private set; } = null!;

        /// <summary>
        /// Property key can be the switch MAC Address
        /// </summary>
        [Output("switches")]
        public Output<ImmutableDictionary<string, Outputs.EvpnTopologySwitches>> Switches { get; private set; } = null!;


        /// <summary>
        /// Create a EvpnTopology resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public EvpnTopology(string name, EvpnTopologyArgs args, CustomResourceOptions? options = null)
            : base("junipermist:org/evpnTopology:EvpnTopology", name, args ?? new EvpnTopologyArgs(), MakeResourceOptions(options, ""))
        {
        }

        private EvpnTopology(string name, Input<string> id, EvpnTopologyState? state = null, CustomResourceOptions? options = null)
            : base("junipermist:org/evpnTopology:EvpnTopology", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumi/pulumi-junipermist",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing EvpnTopology resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static EvpnTopology Get(string name, Input<string> id, EvpnTopologyState? state = null, CustomResourceOptions? options = null)
        {
            return new EvpnTopology(name, id, state, options);
        }
    }

    public sealed class EvpnTopologyArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// EVPN Options
        /// </summary>
        [Input("evpnOptions")]
        public Input<Inputs.EvpnTopologyEvpnOptionsArgs>? EvpnOptions { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("orgId", required: true)]
        public Input<string> OrgId { get; set; } = null!;

        [Input("podNames")]
        private InputMap<string>? _podNames;

        /// <summary>
        /// Property key is the pod number
        /// </summary>
        public InputMap<string> PodNames
        {
            get => _podNames ?? (_podNames = new InputMap<string>());
            set => _podNames = value;
        }

        [Input("switches", required: true)]
        private InputMap<Inputs.EvpnTopologySwitchesArgs>? _switches;

        /// <summary>
        /// Property key can be the switch MAC Address
        /// </summary>
        public InputMap<Inputs.EvpnTopologySwitchesArgs> Switches
        {
            get => _switches ?? (_switches = new InputMap<Inputs.EvpnTopologySwitchesArgs>());
            set => _switches = value;
        }

        public EvpnTopologyArgs()
        {
        }
        public static new EvpnTopologyArgs Empty => new EvpnTopologyArgs();
    }

    public sealed class EvpnTopologyState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// EVPN Options
        /// </summary>
        [Input("evpnOptions")]
        public Input<Inputs.EvpnTopologyEvpnOptionsGetArgs>? EvpnOptions { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("orgId")]
        public Input<string>? OrgId { get; set; }

        [Input("podNames")]
        private InputMap<string>? _podNames;

        /// <summary>
        /// Property key is the pod number
        /// </summary>
        public InputMap<string> PodNames
        {
            get => _podNames ?? (_podNames = new InputMap<string>());
            set => _podNames = value;
        }

        [Input("switches")]
        private InputMap<Inputs.EvpnTopologySwitchesGetArgs>? _switches;

        /// <summary>
        /// Property key can be the switch MAC Address
        /// </summary>
        public InputMap<Inputs.EvpnTopologySwitchesGetArgs> Switches
        {
            get => _switches ?? (_switches = new InputMap<Inputs.EvpnTopologySwitchesGetArgs>());
            set => _switches = value;
        }

        public EvpnTopologyState()
        {
        }
        public static new EvpnTopologyState Empty => new EvpnTopologyState();
    }
}
