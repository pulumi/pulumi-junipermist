// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.JuniperMist.Org
{
    public static class GetIdpprofiles
    {
        /// <summary>
        /// This data source provides the list of WAN Assurance IDP Profiles.
        /// 
        /// An IDP Profile is a configuration setting that defines the behavior and actions of an intrusion detection and prevention (IDP) system. It specifies how the idp system should detect and respond to potential security threats or attacks on a network.
        /// 
        /// The profile includes rules and policies that determine which types of traffic or attacks should be monitored, what actions should be taken when a threat is detected, and any exceptions or exclusions for specific destinations or attack types.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using JuniperMist = Pulumi.JuniperMist;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var idpprofiles = JuniperMist.Org.GetIdpprofiles.Invoke(new()
        ///     {
        ///         OrgId = "15fca2ac-b1a6-47cc-9953-cc6906281550",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetIdpprofilesResult> InvokeAsync(GetIdpprofilesArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetIdpprofilesResult>("junipermist:org/getIdpprofiles:getIdpprofiles", args ?? new GetIdpprofilesArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of WAN Assurance IDP Profiles.
        /// 
        /// An IDP Profile is a configuration setting that defines the behavior and actions of an intrusion detection and prevention (IDP) system. It specifies how the idp system should detect and respond to potential security threats or attacks on a network.
        /// 
        /// The profile includes rules and policies that determine which types of traffic or attacks should be monitored, what actions should be taken when a threat is detected, and any exceptions or exclusions for specific destinations or attack types.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using JuniperMist = Pulumi.JuniperMist;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var idpprofiles = JuniperMist.Org.GetIdpprofiles.Invoke(new()
        ///     {
        ///         OrgId = "15fca2ac-b1a6-47cc-9953-cc6906281550",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetIdpprofilesResult> Invoke(GetIdpprofilesInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetIdpprofilesResult>("junipermist:org/getIdpprofiles:getIdpprofiles", args ?? new GetIdpprofilesInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of WAN Assurance IDP Profiles.
        /// 
        /// An IDP Profile is a configuration setting that defines the behavior and actions of an intrusion detection and prevention (IDP) system. It specifies how the idp system should detect and respond to potential security threats or attacks on a network.
        /// 
        /// The profile includes rules and policies that determine which types of traffic or attacks should be monitored, what actions should be taken when a threat is detected, and any exceptions or exclusions for specific destinations or attack types.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using JuniperMist = Pulumi.JuniperMist;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var idpprofiles = JuniperMist.Org.GetIdpprofiles.Invoke(new()
        ///     {
        ///         OrgId = "15fca2ac-b1a6-47cc-9953-cc6906281550",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetIdpprofilesResult> Invoke(GetIdpprofilesInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetIdpprofilesResult>("junipermist:org/getIdpprofiles:getIdpprofiles", args ?? new GetIdpprofilesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetIdpprofilesArgs : global::Pulumi.InvokeArgs
    {
        [Input("orgId", required: true)]
        public string OrgId { get; set; } = null!;

        public GetIdpprofilesArgs()
        {
        }
        public static new GetIdpprofilesArgs Empty => new GetIdpprofilesArgs();
    }

    public sealed class GetIdpprofilesInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("orgId", required: true)]
        public Input<string> OrgId { get; set; } = null!;

        public GetIdpprofilesInvokeArgs()
        {
        }
        public static new GetIdpprofilesInvokeArgs Empty => new GetIdpprofilesInvokeArgs();
    }


    [OutputType]
    public sealed class GetIdpprofilesResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string OrgId;
        public readonly ImmutableArray<Outputs.GetIdpprofilesOrgIdpprofileResult> OrgIdpprofiles;

        [OutputConstructor]
        private GetIdpprofilesResult(
            string id,

            string orgId,

            ImmutableArray<Outputs.GetIdpprofilesOrgIdpprofileResult> orgIdpprofiles)
        {
            Id = id;
            OrgId = orgId;
            OrgIdpprofiles = orgIdpprofiles;
        }
    }
}
