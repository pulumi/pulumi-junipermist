// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.JuniperMist.Org
{
    public static class GetNetworktemplates
    {
        /// <summary>
        /// This data source provides the list of Org Network Templates (Switch templates).
        /// 
        /// A network template is a predefined configuration that provides a consistent and reusable set of network settings for devices within an organization. It includes various parameters such as ip addressing, vlan configurations, routing protocols, security policies, and other network-specific settings.  
        /// Network templates simplify the deployment and management of switches by ensuring consistent configurations across multiple devices and sites. They help enforce standardization, reduce human error, and streamline troubleshooting and maintenance tasks.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using JuniperMist = Pulumi.JuniperMist;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var templates = JuniperMist.Org.GetNetworktemplates.Invoke(new()
        ///     {
        ///         OrgId = "15fca2ac-b1a6-47cc-9953-cc6906281550",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetNetworktemplatesResult> InvokeAsync(GetNetworktemplatesArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetNetworktemplatesResult>("junipermist:org/getNetworktemplates:getNetworktemplates", args ?? new GetNetworktemplatesArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Org Network Templates (Switch templates).
        /// 
        /// A network template is a predefined configuration that provides a consistent and reusable set of network settings for devices within an organization. It includes various parameters such as ip addressing, vlan configurations, routing protocols, security policies, and other network-specific settings.  
        /// Network templates simplify the deployment and management of switches by ensuring consistent configurations across multiple devices and sites. They help enforce standardization, reduce human error, and streamline troubleshooting and maintenance tasks.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using JuniperMist = Pulumi.JuniperMist;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var templates = JuniperMist.Org.GetNetworktemplates.Invoke(new()
        ///     {
        ///         OrgId = "15fca2ac-b1a6-47cc-9953-cc6906281550",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetNetworktemplatesResult> Invoke(GetNetworktemplatesInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetNetworktemplatesResult>("junipermist:org/getNetworktemplates:getNetworktemplates", args ?? new GetNetworktemplatesInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Org Network Templates (Switch templates).
        /// 
        /// A network template is a predefined configuration that provides a consistent and reusable set of network settings for devices within an organization. It includes various parameters such as ip addressing, vlan configurations, routing protocols, security policies, and other network-specific settings.  
        /// Network templates simplify the deployment and management of switches by ensuring consistent configurations across multiple devices and sites. They help enforce standardization, reduce human error, and streamline troubleshooting and maintenance tasks.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using JuniperMist = Pulumi.JuniperMist;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var templates = JuniperMist.Org.GetNetworktemplates.Invoke(new()
        ///     {
        ///         OrgId = "15fca2ac-b1a6-47cc-9953-cc6906281550",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetNetworktemplatesResult> Invoke(GetNetworktemplatesInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetNetworktemplatesResult>("junipermist:org/getNetworktemplates:getNetworktemplates", args ?? new GetNetworktemplatesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetNetworktemplatesArgs : global::Pulumi.InvokeArgs
    {
        [Input("orgId", required: true)]
        public string OrgId { get; set; } = null!;

        public GetNetworktemplatesArgs()
        {
        }
        public static new GetNetworktemplatesArgs Empty => new GetNetworktemplatesArgs();
    }

    public sealed class GetNetworktemplatesInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("orgId", required: true)]
        public Input<string> OrgId { get; set; } = null!;

        public GetNetworktemplatesInvokeArgs()
        {
        }
        public static new GetNetworktemplatesInvokeArgs Empty => new GetNetworktemplatesInvokeArgs();
    }


    [OutputType]
    public sealed class GetNetworktemplatesResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string OrgId;
        public readonly ImmutableArray<Outputs.GetNetworktemplatesOrgNetworktemplateResult> OrgNetworktemplates;

        [OutputConstructor]
        private GetNetworktemplatesResult(
            string id,

            string orgId,

            ImmutableArray<Outputs.GetNetworktemplatesOrgNetworktemplateResult> orgNetworktemplates)
        {
            Id = id;
            OrgId = orgId;
            OrgNetworktemplates = orgNetworktemplates;
        }
    }
}
