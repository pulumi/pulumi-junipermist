// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.JuniperMist.Org
{
    /// <summary>
    /// This resource manages the Org WLAN Templates.A WLAN template is a collection of WLANs, tunneling policies, and wxlan policies. It is used to create and manage wlan configurations at an organizational level. WLAN templates allow for modular, scalable, and easy-to-manage configuration of ssids and their application to specific sites, site groups, or ap device profiles. They are valuable for automating configuration across multiple sites and profiles, making it easier to scale efficiently.
    /// 
    /// ## Import
    /// 
    /// ```sh
    /// $ pulumi import junipermist:org/wlantemplate:Wlantemplate Using terraform import, import `mist_org_wlantemplate` using the `import` command:
    /// ```
    /// 
    /// Gateway cluster can be imported by specifying the org_id and the wlantemplate_id
    /// 
    /// ```sh
    /// $ pulumi import junipermist:org/wlantemplate:Wlantemplate wlantemplate_one 17b46405-3a6d-4715-8bb4-6bb6d06f316a.d3c42998-9012-4859-9743-6b9bee475309
    /// ```
    /// </summary>
    [JuniperMistResourceType("junipermist:org/wlantemplate:Wlantemplate")]
    public partial class Wlantemplate : global::Pulumi.CustomResource
    {
        /// <summary>
        /// where this template should be applied to, can be org*id, site*ids, sitegroup_ids
        /// </summary>
        [Output("applies")]
        public Output<Outputs.WlantemplateApplies> Applies { get; private set; } = null!;

        /// <summary>
        /// list of Device Profile ids
        /// </summary>
        [Output("deviceprofileIds")]
        public Output<ImmutableArray<string>> DeviceprofileIds { get; private set; } = null!;

        /// <summary>
        /// where this template should not be applied to (takes precedence)
        /// </summary>
        [Output("exceptions")]
        public Output<Outputs.WlantemplateExceptions> Exceptions { get; private set; } = null!;

        /// <summary>
        /// whether to further filter by Device Profile
        /// </summary>
        [Output("filterByDeviceprofile")]
        public Output<bool> FilterByDeviceprofile { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("orgId")]
        public Output<string> OrgId { get; private set; } = null!;


        /// <summary>
        /// Create a Wlantemplate resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Wlantemplate(string name, WlantemplateArgs args, CustomResourceOptions? options = null)
            : base("junipermist:org/wlantemplate:Wlantemplate", name, args ?? new WlantemplateArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Wlantemplate(string name, Input<string> id, WlantemplateState? state = null, CustomResourceOptions? options = null)
            : base("junipermist:org/wlantemplate:Wlantemplate", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumi/pulumi-junipermist",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Wlantemplate resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Wlantemplate Get(string name, Input<string> id, WlantemplateState? state = null, CustomResourceOptions? options = null)
        {
            return new Wlantemplate(name, id, state, options);
        }
    }

    public sealed class WlantemplateArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// where this template should be applied to, can be org*id, site*ids, sitegroup_ids
        /// </summary>
        [Input("applies")]
        public Input<Inputs.WlantemplateAppliesArgs>? Applies { get; set; }

        [Input("deviceprofileIds")]
        private InputList<string>? _deviceprofileIds;

        /// <summary>
        /// list of Device Profile ids
        /// </summary>
        public InputList<string> DeviceprofileIds
        {
            get => _deviceprofileIds ?? (_deviceprofileIds = new InputList<string>());
            set => _deviceprofileIds = value;
        }

        /// <summary>
        /// where this template should not be applied to (takes precedence)
        /// </summary>
        [Input("exceptions")]
        public Input<Inputs.WlantemplateExceptionsArgs>? Exceptions { get; set; }

        /// <summary>
        /// whether to further filter by Device Profile
        /// </summary>
        [Input("filterByDeviceprofile")]
        public Input<bool>? FilterByDeviceprofile { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("orgId", required: true)]
        public Input<string> OrgId { get; set; } = null!;

        public WlantemplateArgs()
        {
        }
        public static new WlantemplateArgs Empty => new WlantemplateArgs();
    }

    public sealed class WlantemplateState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// where this template should be applied to, can be org*id, site*ids, sitegroup_ids
        /// </summary>
        [Input("applies")]
        public Input<Inputs.WlantemplateAppliesGetArgs>? Applies { get; set; }

        [Input("deviceprofileIds")]
        private InputList<string>? _deviceprofileIds;

        /// <summary>
        /// list of Device Profile ids
        /// </summary>
        public InputList<string> DeviceprofileIds
        {
            get => _deviceprofileIds ?? (_deviceprofileIds = new InputList<string>());
            set => _deviceprofileIds = value;
        }

        /// <summary>
        /// where this template should not be applied to (takes precedence)
        /// </summary>
        [Input("exceptions")]
        public Input<Inputs.WlantemplateExceptionsGetArgs>? Exceptions { get; set; }

        /// <summary>
        /// whether to further filter by Device Profile
        /// </summary>
        [Input("filterByDeviceprofile")]
        public Input<bool>? FilterByDeviceprofile { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("orgId")]
        public Input<string>? OrgId { get; set; }

        public WlantemplateState()
        {
        }
        public static new WlantemplateState Empty => new WlantemplateState();
    }
}
