// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.JuniperMist.Org
{
    public static class GetSitegroups
    {
        /// <summary>
        /// This data source provides the list of Org Site Groups (sitegroups).A site group is a feature that allows users to group multiple sites together based on regions, functions, or other parameters for efficient management of devices. Sites can exist in multiple groups simultaneously, and site groups can be used to ensure consistent settings, manage administrator access, and apply specific templates to groups of sites.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using JuniperMist = Pulumi.JuniperMist;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var sitegroups = JuniperMist.Org.GetSitegroups.Invoke(new()
        ///     {
        ///         OrgId = "15fca2ac-b1a6-47cc-9953-cc6906281550",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetSitegroupsResult> InvokeAsync(GetSitegroupsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSitegroupsResult>("junipermist:org/getSitegroups:getSitegroups", args ?? new GetSitegroupsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the list of Org Site Groups (sitegroups).A site group is a feature that allows users to group multiple sites together based on regions, functions, or other parameters for efficient management of devices. Sites can exist in multiple groups simultaneously, and site groups can be used to ensure consistent settings, manage administrator access, and apply specific templates to groups of sites.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using JuniperMist = Pulumi.JuniperMist;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var sitegroups = JuniperMist.Org.GetSitegroups.Invoke(new()
        ///     {
        ///         OrgId = "15fca2ac-b1a6-47cc-9953-cc6906281550",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetSitegroupsResult> Invoke(GetSitegroupsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSitegroupsResult>("junipermist:org/getSitegroups:getSitegroups", args ?? new GetSitegroupsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSitegroupsArgs : global::Pulumi.InvokeArgs
    {
        [Input("orgId", required: true)]
        public string OrgId { get; set; } = null!;

        public GetSitegroupsArgs()
        {
        }
        public static new GetSitegroupsArgs Empty => new GetSitegroupsArgs();
    }

    public sealed class GetSitegroupsInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("orgId", required: true)]
        public Input<string> OrgId { get; set; } = null!;

        public GetSitegroupsInvokeArgs()
        {
        }
        public static new GetSitegroupsInvokeArgs Empty => new GetSitegroupsInvokeArgs();
    }


    [OutputType]
    public sealed class GetSitegroupsResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string OrgId;
        public readonly ImmutableArray<Outputs.GetSitegroupsOrgSitegroupResult> OrgSitegroups;

        [OutputConstructor]
        private GetSitegroupsResult(
            string id,

            string orgId,

            ImmutableArray<Outputs.GetSitegroupsOrgSitegroupResult> orgSitegroups)
        {
            Id = id;
            OrgId = orgId;
            OrgSitegroups = orgSitegroups;
        }
    }
}
