// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.JuniperMist.Org
{
    /// <summary>
    /// This resource manages the Mist Organization.
    /// An organization usually represents a customer - which has inventories, licenses.An Organization can contain multiple sites. A site usually represents a deployment at the same location (a campus, an office).
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using JuniperMist = Pulumi.JuniperMist;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var orgOne = new JuniperMist.Org.Base("org_one", new()
    ///     {
    ///         Name = "Org One",
    ///         AlarmtemplateId = alarmtemplateOne.Id,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Using `pulumi import`, import `mist_org` with:
    /// 
    /// Organization can be imported by specifying the org_id
    /// 
    /// ```sh
    /// $ pulumi import junipermist:org/base:base org_one 17b46405-3a6d-4715-8bb4-6bb6d06f316a
    /// ```
    /// </summary>
    [JuniperMistResourceType("junipermist:org/base:base")]
    public partial class Base : global::Pulumi.CustomResource
    {
        [Output("alarmtemplateId")]
        public Output<string?> AlarmtemplateId { get; private set; } = null!;

        [Output("allowMist")]
        public Output<bool> AllowMist { get; private set; } = null!;

        [Output("mspId")]
        public Output<string> MspId { get; private set; } = null!;

        /// <summary>
        /// logo uploaded by the MSP with advanced tier, only present if provided
        /// </summary>
        [Output("mspLogoUrl")]
        public Output<string?> MspLogoUrl { get; private set; } = null!;

        /// <summary>
        /// name of the msp the org belongs to
        /// </summary>
        [Output("mspName")]
        public Output<string?> MspName { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("orggroupIds")]
        public Output<ImmutableArray<string>> OrggroupIds { get; private set; } = null!;

        [Output("sessionExpiry")]
        public Output<int> SessionExpiry { get; private set; } = null!;


        /// <summary>
        /// Create a Base resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Base(string name, BaseArgs? args = null, CustomResourceOptions? options = null)
            : base("junipermist:org/base:base", name, args ?? new BaseArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Base(string name, Input<string> id, BaseState? state = null, CustomResourceOptions? options = null)
            : base("junipermist:org/base:base", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumi/pulumi-junipermist",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Base resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Base Get(string name, Input<string> id, BaseState? state = null, CustomResourceOptions? options = null)
        {
            return new Base(name, id, state, options);
        }
    }

    public sealed class BaseArgs : global::Pulumi.ResourceArgs
    {
        [Input("alarmtemplateId")]
        public Input<string>? AlarmtemplateId { get; set; }

        [Input("allowMist")]
        public Input<bool>? AllowMist { get; set; }

        /// <summary>
        /// logo uploaded by the MSP with advanced tier, only present if provided
        /// </summary>
        [Input("mspLogoUrl")]
        public Input<string>? MspLogoUrl { get; set; }

        /// <summary>
        /// name of the msp the org belongs to
        /// </summary>
        [Input("mspName")]
        public Input<string>? MspName { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("sessionExpiry")]
        public Input<int>? SessionExpiry { get; set; }

        public BaseArgs()
        {
        }
        public static new BaseArgs Empty => new BaseArgs();
    }

    public sealed class BaseState : global::Pulumi.ResourceArgs
    {
        [Input("alarmtemplateId")]
        public Input<string>? AlarmtemplateId { get; set; }

        [Input("allowMist")]
        public Input<bool>? AllowMist { get; set; }

        [Input("mspId")]
        public Input<string>? MspId { get; set; }

        /// <summary>
        /// logo uploaded by the MSP with advanced tier, only present if provided
        /// </summary>
        [Input("mspLogoUrl")]
        public Input<string>? MspLogoUrl { get; set; }

        /// <summary>
        /// name of the msp the org belongs to
        /// </summary>
        [Input("mspName")]
        public Input<string>? MspName { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("orggroupIds")]
        private InputList<string>? _orggroupIds;
        public InputList<string> OrggroupIds
        {
            get => _orggroupIds ?? (_orggroupIds = new InputList<string>());
            set => _orggroupIds = value;
        }

        [Input("sessionExpiry")]
        public Input<int>? SessionExpiry { get; set; }

        public BaseState()
        {
        }
        public static new BaseState Empty => new BaseState();
    }
}
