// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.JuniperMist.Site.Inputs
{

    public sealed class SettingRogueArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// whether or not rogue detection is enabled
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        /// <summary>
        /// whether or not honeypot detection is enabled
        /// </summary>
        [Input("honeypotEnabled")]
        public Input<bool>? HoneypotEnabled { get; set; }

        /// <summary>
        /// minimum duration for a bssid to be considered rogue
        /// </summary>
        [Input("minDuration")]
        public Input<int>? MinDuration { get; set; }

        /// <summary>
        /// minimum RSSI for an AP to be considered rogue (ignoring APs thatâ€™s far away)
        /// </summary>
        [Input("minRssi")]
        public Input<int>? MinRssi { get; set; }

        [Input("whitelistedBssids")]
        private InputList<string>? _whitelistedBssids;

        /// <summary>
        /// list of BSSIDs to whitelist. Ex: "cc-:8e-:6f-:d4-:bf-:16", "cc-8e-6f-d4-bf-16", "cc-73-*", "cc:82:*"
        /// </summary>
        public InputList<string> WhitelistedBssids
        {
            get => _whitelistedBssids ?? (_whitelistedBssids = new InputList<string>());
            set => _whitelistedBssids = value;
        }

        [Input("whitelistedSsids")]
        private InputList<string>? _whitelistedSsids;

        /// <summary>
        /// list of SSIDs to whitelist
        /// </summary>
        public InputList<string> WhitelistedSsids
        {
            get => _whitelistedSsids ?? (_whitelistedSsids = new InputList<string>());
            set => _whitelistedSsids = value;
        }

        public SettingRogueArgs()
        {
        }
        public static new SettingRogueArgs Empty => new SettingRogueArgs();
    }
}
