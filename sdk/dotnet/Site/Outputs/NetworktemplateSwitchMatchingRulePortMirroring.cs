// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.JuniperMist.Site.Outputs
{

    [OutputType]
    public sealed class NetworktemplateSwitchMatchingRulePortMirroring
    {
        /// <summary>
        /// At least one of the `InputPortIdsIngress`, `InputPortIdsEgress` or `InputNetworksIngress ` should be specified
        /// </summary>
        public readonly ImmutableArray<string> InputNetworksIngresses;
        /// <summary>
        /// At least one of the `InputPortIdsIngress`, `InputPortIdsEgress` or `InputNetworksIngress ` should be specified
        /// </summary>
        public readonly ImmutableArray<string> InputPortIdsEgresses;
        /// <summary>
        /// At least one of the `InputPortIdsIngress`, `InputPortIdsEgress` or `InputNetworksIngress ` should be specified
        /// </summary>
        public readonly ImmutableArray<string> InputPortIdsIngresses;
        /// <summary>
        /// Exactly one of the `OutputIpAddress`, `OutputPortId` or `OutputNetwork` should be provided
        /// </summary>
        public readonly string? OutputIpAddress;
        /// <summary>
        /// Exactly one of the `OutputIpAddress`, `OutputPortId` or `OutputNetwork` should be provided
        /// </summary>
        public readonly string? OutputNetwork;
        /// <summary>
        /// Exactly one of the `OutputIpAddress`, `OutputPortId` or `OutputNetwork` should be provided
        /// </summary>
        public readonly string? OutputPortId;

        [OutputConstructor]
        private NetworktemplateSwitchMatchingRulePortMirroring(
            ImmutableArray<string> inputNetworksIngresses,

            ImmutableArray<string> inputPortIdsEgresses,

            ImmutableArray<string> inputPortIdsIngresses,

            string? outputIpAddress,

            string? outputNetwork,

            string? outputPortId)
        {
            InputNetworksIngresses = inputNetworksIngresses;
            InputPortIdsEgresses = inputPortIdsEgresses;
            InputPortIdsIngresses = inputPortIdsIngresses;
            OutputIpAddress = outputIpAddress;
            OutputNetwork = outputNetwork;
            OutputPortId = outputPortId;
        }
    }
}
