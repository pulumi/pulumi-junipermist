// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.JuniperMist.Site.Outputs
{

    [OutputType]
    public sealed class SettingGatewayMgmt
    {
        /// <summary>
        /// for SSR only, as direct root access is not allowed
        /// </summary>
        public readonly ImmutableArray<string> AdminSshkeys;
        public readonly Outputs.SettingGatewayMgmtAppProbing? AppProbing;
        /// <summary>
        /// consumes uplink bandwidth, requires WA license
        /// </summary>
        public readonly bool? AppUsage;
        public readonly Outputs.SettingGatewayMgmtAutoSignatureUpdate? AutoSignatureUpdate;
        /// <summary>
        /// he rollback timer for commit confirmed
        /// </summary>
        public readonly int? ConfigRevertTimer;
        /// <summary>
        /// for both SSR and SRX disable console port
        /// </summary>
        public readonly bool? DisableConsole;
        /// <summary>
        /// for both SSR and SRX disable management interface
        /// </summary>
        public readonly bool? DisableOob;
        public readonly ImmutableArray<string> ProbeHosts;
        /// <summary>
        /// for SRX only
        /// </summary>
        public readonly string? RootPassword;
        public readonly string? SecurityLogSourceAddress;
        public readonly string? SecurityLogSourceInterface;

        [OutputConstructor]
        private SettingGatewayMgmt(
            ImmutableArray<string> adminSshkeys,

            Outputs.SettingGatewayMgmtAppProbing? appProbing,

            bool? appUsage,

            Outputs.SettingGatewayMgmtAutoSignatureUpdate? autoSignatureUpdate,

            int? configRevertTimer,

            bool? disableConsole,

            bool? disableOob,

            ImmutableArray<string> probeHosts,

            string? rootPassword,

            string? securityLogSourceAddress,

            string? securityLogSourceInterface)
        {
            AdminSshkeys = adminSshkeys;
            AppProbing = appProbing;
            AppUsage = appUsage;
            AutoSignatureUpdate = autoSignatureUpdate;
            ConfigRevertTimer = configRevertTimer;
            DisableConsole = disableConsole;
            DisableOob = disableOob;
            ProbeHosts = probeHosts;
            RootPassword = rootPassword;
            SecurityLogSourceAddress = securityLogSourceAddress;
            SecurityLogSourceInterface = securityLogSourceInterface;
        }
    }
}
