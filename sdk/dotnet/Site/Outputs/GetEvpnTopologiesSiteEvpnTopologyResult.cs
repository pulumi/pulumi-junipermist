// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.JuniperMist.Site.Outputs
{

    [OutputType]
    public sealed class GetEvpnTopologiesSiteEvpnTopologyResult
    {
        /// <summary>
        /// When the object has been created, in epoch
        /// </summary>
        public readonly double CreatedTime;
        /// <summary>
        /// EVPN Options
        /// </summary>
        public readonly Outputs.GetEvpnTopologiesSiteEvpnTopologyEvpnOptionsResult EvpnOptions;
        /// <summary>
        /// Unique ID of the object instance in the Mist Organization
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// When the object has been modified for the last time, in epoch
        /// </summary>
        public readonly double ModifiedTime;
        public readonly string Name;
        /// <summary>
        /// Property key is the pod number
        /// </summary>
        public readonly ImmutableDictionary<string, string> PodNames;
        public readonly string SiteId;

        [OutputConstructor]
        private GetEvpnTopologiesSiteEvpnTopologyResult(
            double createdTime,

            Outputs.GetEvpnTopologiesSiteEvpnTopologyEvpnOptionsResult evpnOptions,

            string id,

            double modifiedTime,

            string name,

            ImmutableDictionary<string, string> podNames,

            string siteId)
        {
            CreatedTime = createdTime;
            EvpnOptions = evpnOptions;
            Id = id;
            ModifiedTime = modifiedTime;
            Name = name;
            PodNames = podNames;
            SiteId = siteId;
        }
    }
}
