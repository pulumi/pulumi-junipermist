// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.JuniperMist.Site.Outputs
{

    [OutputType]
    public sealed class NetworktemplateSwitchMgmt
    {
        /// <summary>
        /// AP_affinity_threshold ap_affinity_threshold can be added as a field under site/setting. By default, this value is set to 12. If the field is set in both site/setting and org/setting, the value from site/setting will be used.
        /// </summary>
        public readonly int? ApAffinityThreshold;
        /// <summary>
        /// Set Banners for switches. Allows markup formatting
        /// </summary>
        public readonly string? CliBanner;
        /// <summary>
        /// Sets timeout for switches
        /// </summary>
        public readonly int? CliIdleTimeout;
        /// <summary>
        /// Rollback timer for commit confirmed
        /// </summary>
        public readonly int? ConfigRevertTimer;
        /// <summary>
        /// Enable to provide the FQDN with DHCP option 81
        /// </summary>
        public readonly bool? DhcpOptionFqdn;
        public readonly bool? DisableOobDownAlarm;
        /// <summary>
        /// Property key is the user name. For Local user authentication
        /// </summary>
        public readonly ImmutableDictionary<string, Outputs.NetworktemplateSwitchMgmtLocalAccounts>? LocalAccounts;
        public readonly string? MxedgeProxyHost;
        public readonly int? MxedgeProxyPort;
        /// <summary>
        /// Restrict inbound-traffic to host
        /// when enabled, all traffic that is not essential to our operation will be dropped 
        /// e.g. ntp / dns / traffic to mist will be allowed by default, if dhcpd is enabled, we'll make sure it works
        /// </summary>
        public readonly Outputs.NetworktemplateSwitchMgmtProtectRe? ProtectRe;
        public readonly string? RootPassword;
        public readonly Outputs.NetworktemplateSwitchMgmtTacacs? Tacacs;
        /// <summary>
        /// To use mxedge as proxy
        /// </summary>
        public readonly bool? UseMxedgeProxy;

        [OutputConstructor]
        private NetworktemplateSwitchMgmt(
            int? apAffinityThreshold,

            string? cliBanner,

            int? cliIdleTimeout,

            int? configRevertTimer,

            bool? dhcpOptionFqdn,

            bool? disableOobDownAlarm,

            ImmutableDictionary<string, Outputs.NetworktemplateSwitchMgmtLocalAccounts>? localAccounts,

            string? mxedgeProxyHost,

            int? mxedgeProxyPort,

            Outputs.NetworktemplateSwitchMgmtProtectRe? protectRe,

            string? rootPassword,

            Outputs.NetworktemplateSwitchMgmtTacacs? tacacs,

            bool? useMxedgeProxy)
        {
            ApAffinityThreshold = apAffinityThreshold;
            CliBanner = cliBanner;
            CliIdleTimeout = cliIdleTimeout;
            ConfigRevertTimer = configRevertTimer;
            DhcpOptionFqdn = dhcpOptionFqdn;
            DisableOobDownAlarm = disableOobDownAlarm;
            LocalAccounts = localAccounts;
            MxedgeProxyHost = mxedgeProxyHost;
            MxedgeProxyPort = mxedgeProxyPort;
            ProtectRe = protectRe;
            RootPassword = rootPassword;
            Tacacs = tacacs;
            UseMxedgeProxy = useMxedgeProxy;
        }
    }
}
